{
  "facile": [
    {
      "nom": "En-tête de fonction multiplier",
      "enonce": "Écrire l'en-tête d'une fonction `multiplier` qui prend en paramètre deux nombres entier et renvoie leur produit.",
      "exemple": "def multiplier(a: int, b: int) -> int:",
      "correction": "def multiplier(a: int, b: int) -> int:"
    },
    {
      "nom": "En-tête de fonction concatenation",
      "enonce": "Écrire l'en-tête d'une fonction `concatenation` qui prend en paramètres deux chaînes de caractères et renvoie leur concaténation.",
      "exemple": "def concatenation(chaine1: str, chaine2: str) -> str:",
      "correction": "def concatenation(chaine1: str, chaine2: str) -> str:"
    },
    {
      "nom": "En-tête de fonction est_pair",
      "enonce": "Écrire l'en-tête d'une fonction `est_pair` qui prend en paramètre un nombre entier et renvoie True si le nombre est pair, False impair.",
      "exemple": "def est_pair(nombre: int) -> bool:",
      "correction": "def est_pair(nombre: int) -> bool:"
    },
    {
      "nom": "En-tête de fonction afficher_somme",
      "enonce": "Écrire l'en-tête d'une fonction `afficher_somme` qui prend en paramètres deux nombres entiers et affiche seulement leur somme.",
      "exemple": "def afficher_somme(a: int, b: int) -> None:",
      "correction": "def afficher_somme(a: int, b: int) -> None:"
    },
    {
      "nom": "En-tête de fonction aire_rectangle",
      "enonce": "Écrire l'en-tête d'une fonction `aire_rectangle` qui prend en paramètres deux nombres réels (float) et renvoie leur produit.",
      "exemple": "def aire_rectangle(longueur: float, largeur: float) -> float:",
      "correction": "def aire_rectangle(longueur: float, largeur: float) -> float:"
    }
  ],
  "moyen": [
    {
      "nom": "Documentation fonction est_voyelle",
      "enonce": "Écrire la spécification de la fonction suivante :\n\n```python\ndef est_voyelle(lettre):\n    if lettre == 'a' or lettre == 'e' or lettre == 'o' or lettre == 'i' or lettre == 'y':\n        return True\n    else :\n        return False\n```",
      "exemple": "Documentation avec paramètres et retour",
      "correction": "def est_voyelle(lettre):\n    '''\n    Paramètres :\n        lettre : str - caractère à tester\n    Retourne :\n        bool - True si la lettre est une voyelle, False sinon\n    Vérifie si un caractère est une voyelle\n    '''"
    },
    {
      "nom": "Documentation fonction mots",
      "enonce": "Écrire la spécification de la fonction suivante :\n\n```python\ndef mots(phrase):\n    compteur = 0\n    for caractere in phrase:\n        if caractere == ' ':\n            compteur = compteur + 1\n    return compteur\n```",
      "exemple": "Documentation avec paramètres et retour",
      "correction": "def mots(phrase):\n    '''\n    Paramètres :\n        phrase : str - chaîne de caractères à analyser\n    Retourne :\n        int - nombre d'espaces dans la phrase\n    Compte le nombre d'espaces dans une phrase\n    '''"
    },
    {
      "nom": "Documentation fonction surface",
      "enonce": "Écrire la spécification de la fonction suivante :\n\n```python\ndef surface(rayon):\n    pi = 3.14159\n    aire = pi * rayon ** 2\n    return aire\n```",
      "exemple": "Documentation avec paramètres et retour",
      "correction": "def surface(rayon):\n    '''\n    Paramètres :\n        rayon : float - rayon du cercle\n    Retourne :\n        float - aire du cercle\n    Calcule l'aire d'un cercle à partir de son rayon\n    '''"
    }
  ],
  "difficile": [
    {
      "nom": "Renommage fonction somme",
      "enonce": "Renommer les variables et les fonctions de l'algorithme suivant pour les rendre plus compréhensibles :\n\n```python\ndef f(l):\n    \"\"\"\n    Calcule la somme des éléments d'une liste de nombres.\n    Paramètres :\n        l (list) : Liste contenant des nombres.\n    Retourne :\n        int : La somme des éléments de la liste.\n    \"\"\"\n    s = 0\n    for i in l:\n        s += i\n    return s\n```",
      "exemple": "Noms de variables et fonction plus explicites",
      "correction": "def calculer_somme_liste(liste_nombres):\n    \"\"\"\n    Calcule la somme des éléments d'une liste de nombres.\n    Paramètres :\n        liste_nombres (list) : Liste contenant des nombres.\n    Retourne :\n        int : La somme des éléments de la liste.\n    \"\"\"\n    somme = 0\n    for nombre in liste_nombres:\n        somme += nombre\n    return somme"
    },
    {
      "nom": "Renommage fonction moyenne",
      "enonce": "Renommer les variables et les fonctions de l'algorithme suivant pour les rendre plus compréhensibles :\n\n```python\ndef m(a, b):\n    \"\"\"\n    Calcule la moyenne de deux nombres.\n    Paramètres :\n        a (int/float) : Le premier nombre.\n        b (int/float) : Le deuxième nombre.\n    Retourne :\n    float : La moyenne des deux nombres.\n    \"\"\"\n    return (a + b) / 2\n```",
      "exemple": "Noms de variables et fonction plus explicites",
      "correction": "def calculer_moyenne(premier_nombre, deuxieme_nombre):\n    \"\"\"\n    Calcule la moyenne de deux nombres.\n    Paramètres :\n        premier_nombre (int/float) : Le premier nombre.\n        deuxieme_nombre (int/float) : Le deuxième nombre.\n    Retourne :\n    float : La moyenne des deux nombres.\n    \"\"\"\n    return (premier_nombre + deuxieme_nombre) / 2"
    },
    {
      "nom": "Renommage fonction périmètre",
      "enonce": "Renommer les variables et les fonctions de l'algorithme suivant pour les rendre plus compréhensibles :\n\n```python\ndef p(l, L):\n    \"\"\"\n    Calcule le périmètre d'un rectangle.\n    Paramètres :\n    l (float) : La longueur du rectangle.\n    L (float) : La largeur du rectangle.\n    Retourne :\n    float : Le périmètre du rectangle.\n    \"\"\"\n    return 2 * (l + L)\n```",
      "exemple": "Noms de variables et fonction plus explicites",
      "correction": "def calculer_perimetre_rectangle(longueur, largeur):\n    \"\"\"\n    Calcule le périmètre d'un rectangle.\n    Paramètres :\n    longueur (float) : La longueur du rectangle.\n    largeur (float) : La largeur du rectangle.\n    Retourne :\n    float : Le périmètre du rectangle.\n    \"\"\"\n    return 2 * (longueur + largeur)"
    }
  ]
}