{
  "title": "Types de données en Python",
  "sections": [
    {
      "level": 2,
      "title": "Les booléens",
      "content": "Le type booléen en Python est utilisé pour représenter des valeurs de vérité. Il n’a que deux valeurs possibles : True (vrai) et False (faux). Les booléens sont souvent utilisés dans les conditions et les boucles pour contrôler le flux d’exécution d’un programme.\n``` python\n    est_jeune = True\n    a_termine_cours = False\n```\nLes opérateurs logiques tels que and, or, et not permettent de combiner ou d’inverser les valeurs booléennes :\n``` python\n    est_jeune_et_a_termine_cours = est_jeune and a_termine_cours \n    est_vrai = not a_termine_cours  \n```"
    },
    {
      "level": 3,
      "title": "Les entiers",
      "content": "Il existe plusieurs types en Python pour définir des nombres.\nIl existe le type **int** qui permet d'instancier des nombres.\nLa syntaxe est assez claire : on veut instancier une variable *a* valant 42.\n```python\n    a = 42\n    b = -54\n```\nOn peut réaliser des opérations sur ce type entier, elles sont répertoriées dans le cours sur les **constructions élémentaires**."
    },
    {
      "level": 3,
      "title": "Les flottants",
      "content": "Pour décrire des nombres réels (à virgule), python associe la valeur à un type appelé **flottant** qui correspond à une écriture à virgule flottante (IEEE754).\n!!!danger\n    Attention, pour rappel, en informatique pour représenter les nombres réels, il y a des arrondis qui sont réalisés.\n    Ainsi, réaliser des opérations mathématiques sur des flottants **est strictement interdit** car les résultats, même s'ils nous paraissent corrects, ne le seront pas forcément pour la machine.\nComme pour les entiers, l'instanciation est triviale.\n```python\npi = 3.14159\nracine_de_deux = 1.4132\n```\n!!! warning Le point\n    Pour décrire un réel, on utilise le point et non la virgule comme habituellement à la main.\n    Cela vient de l'écriture américaine qui utilise les **.** pour les parties entières et décimales et **,** pour les milliers, millions..."
    }
  ],
  "metadata": {
    "level": "premiere",
    "chapter": "",
    "hasStyles": false,
    "cardTypes": []
  }
}