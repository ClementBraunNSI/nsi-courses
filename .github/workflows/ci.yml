name: CI/CD Pipeline
on:
  push:
    branches:
      - master 
      - main
      - develop
    paths:
      - 'site_final/public/courses-html/**/*.html'
      - 'templates/**'
      - 'schemas/**'
      - 'scripts/**'
      - 'docs/**'
      - 'mkdocs.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'site_final/public/courses-html/**/*.html'
      - 'templates/**'
      - 'schemas/**'
      - 'scripts/**'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  validate-exercise-sheets:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'site_final/public/courses-html/') || contains(github.event.head_commit.added, 'site_final/public/courses-html/') || github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install validation dependencies
      run: |
        python -m pip install --upgrade pip
        pip install beautifulsoup4 jsonschema jinja2
        
    - name: Validate exercise sheets structure
      run: |
        echo "üîç Validation de la structure des fiches d'exercices..."
        if [ -f "scripts/validate_exercise_sheets.py" ]; then
          python scripts/validate_exercise_sheets.py site_final/public/courses-html/ validation_report.txt
        else
          echo "‚ö†Ô∏è Script de validation non trouv√©, validation manuelle requise"
        fi
        
    - name: Check for empty sections
      run: |
        echo "üîç V√©rification des sections vides..."
        python -c "
import os
import re
from pathlib import Path

def check_empty_sections(directory):
    empty_sections_found = False
    if not os.path.exists(directory):
        print(f'‚ö†Ô∏è R√©pertoire {directory} non trouv√©')
        return False
        
    for root, dirs, files in os.walk(directory):
        for file in files:
            if file.endswith('.html') and 'Fiche' in file:
                file_path = os.path.join(root, file)
                try:
                    with open(file_path, 'r', encoding='utf-8') as f:
                        content = f.read()
                    
                    empty_indicators = [
                        'Exercices √† venir',
                        '√Ä venir', 
                        'Coming soon',
                        'TODO',
                        'En construction'
                    ]
                    
                    for indicator in empty_indicators:
                        if indicator.lower() in content.lower():
                            print(f'‚ùå Section vide d√©tect√©e dans {file}: {indicator}')
                            empty_sections_found = True
                except Exception as e:
                    print(f'‚ö†Ô∏è Erreur lors de la lecture de {file}: {e}')
    
    return empty_sections_found

if check_empty_sections('site_final/public/courses-html/'):
    print('‚ùå Des sections vides ont √©t√© d√©tect√©es!')
    exit(1)
else:
    print('‚úÖ Aucune section vide d√©tect√©e.')
"
        
    - name: Upload validation report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: validation-report
        path: validation_report.txt
        retention-days: 30

  deploy:
    runs-on: ubuntu-latest
    needs: [validate-exercise-sheets]
    if: always() && (needs.validate-exercise-sheets.result == 'success' || needs.validate-exercise-sheets.result == 'skipped')
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - uses: actions/cache@v4
        with:
          key: ${{ github.ref }}
          path: .cache
      - run: pip install mkdocs-material
      - run: pip install pillow cairosvg
      - run: mkdocs gh-deploy --force